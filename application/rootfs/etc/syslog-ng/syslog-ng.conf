@version: 3.36

# syslog-ng configuration file.
#
# This should behave pretty much like the original syslog on RedHat. But
# it could be configured a lot smarter.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#
# 20000925 gb@sysfive.com
#
# Updated by Frank Crawford (<Frank.Crawford@ac3.com.au>) - 10 Aug 2002
# 	- for Red Hat 7.3
#	- totally do away with klogd
#	- add message "kernel:" as is done with klogd.
#
# Updated by Frank Crawford (<Frank.Crawford@ac3.com.au>) - 22 Aug 2002
#	- use the log_prefix option as per Balazs Scheidler's email
#
# Updated by Jose Pedro Oliveira (<jpo at di.uminho.pt>) - 05 Apr 2003
#	- corrected filters 'f_filter2' and 'f_filter6'
#     these filters were only allowing messages of one specific
#     priority level; they should be allowing messages from that
#     priority and upper levels.
#
# Updated by Jose Pedro Oliveira (<jpo at di.uminho.pt>) - 25 Jan 2005
#   - Don't sync the d_mail destination
#
# Updated by Jose Pedro Oliveira (<jpo at di.uminho.pt>) - 01 Feb 2005
#   - /proc/kmsg is a file not a pipe.
#     (https://lists.balabit.hu/pipermail/syslog-ng/2005-February/006963.html)
#
@include "extern.conf"
@include "remotelog.conf"

options {
    flush_lines (0);
    time_reopen (10);
    log_fifo_size (1000);
    chain_hostnames (no);
    use_dns (no);
    use_fqdn (no);
    create_dirs (yes);
    dir_perm (0755);
    keep_hostname (yes);
    ts_format (iso);
};

source s_sys {
      unix-stream ("/dev/log");
      internal();
};

source s_kern {
    file ("/proc/kmsg" program_override("kernel"));
};

template t_common { template("${MSG}\n"); };

# kern_log
filter f_kern_error   { facility(kern) and level(warn..emerg); };
log { source(s_kern); filter(f_kern_error); destination(d_kern); };

# security_log
filter f_auth   { facility(auth,authpriv) and level(info..emerg); };
log { source(s_sys); filter(f_auth); destination(d_pme_security); };

# dfm_debug_log
filter f_pme_debug   { facility(local0) and level(debug); };
log { source(s_sys); filter(f_pme_debug); destination(d_pme_dfm_debug); };

# remote_log
destination d_pme_test { file("/var/log/pme/remote_log" ); };
filter f_syslog_test { facility(local0) and level(info..emerg) ; };
log { source(s_sys); filter(f_syslog_test); destination(d_pme_test); };

# app_debug_log_all
destination d_app_debug { file("/var/log/pme/app_debug_log_all" template(t_common)); };
filter f_app_debug { facility(local1) and level(error) ; };
log { source(s_sys); filter(f_app_debug); destination(d_app_debug); };

# fdm_output
destination d_fdm_output { file("/var/log/pme/fdm_output" template(t_common)); };
filter f_fdm_output { facility(local2) and level(error) ; };
log { source(s_sys); filter(f_fdm_output); destination(d_fdm_output); };

# bma_debug_log
destination d_bma_debug_log { file("/var/log/pme/bma_debug_log" template(t_common)); };
filter f_bma_debug_log { facility(local4) and level(error) ; };
log { source(s_sys); filter(f_bma_debug_log); destination(d_bma_debug_log); };

# syslog_ng_check
destination d_test_dfm_debug { file("/dev/shm/syslog_ng_check" perm(0640)); };
filter f_test_debug   { facility(local6) and level(debug); };
log { source(s_sys); filter(f_test_debug); destination(d_test_dfm_debug); };