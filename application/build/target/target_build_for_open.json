[
    {
        "work_name": "work.download_source",
        "subworks": [
            {
                "work_name": "work.opensouce.download_opensource",
                "class_name": "WorkDownloadOpensourceCode",
                "path": "works.opensource.work_download_open_source"
            },
            {
                "work_name": "work.opensouce.download_vendor",
                "class_name": "WorkDownloadVendor",
                "path": "works.opensource.work_download_vendor",
                "wait": ["work.opensouce.download_opensource"]
            }
        ],
        "wait": ["work.download_tools"]
    },
    {
        "work_name": "work.platform.getfirmware.vpp",
        "class_name": "WorkGetFirmware",
        "path": "works.platforms.work_get_firmware",
        "work_config": {
            "artfactory": "vpp",
            "from_source": true
        },
        "wait": ["work.dependency.buildtools"]
    },
    {
        "work_name": "all_platforms",
        "target_include": "target_all_platforms"
    },
    {
        "work_name": "work.download_tools",
        "subworks": [
            {
                "work_name": "work.dependency.download",
                "class_name": "WorkDownloadDependency",
                "path": "works.dependency.work_download_dependency",
                "wait": ["all_platforms", "work.dependency.buildtools"]
            },
            {
                "work_name": "work.dependency.buildtools",
                "class_name": "WorkDownloadBuildTools",
                "path": "works.dependency.work_download_buildtools"
            }
        ]
    },
    {
        "work_name": "work.build_for_open.copy_for_open",
        "class_name": "WorkCopyForOpen",
        "path": "works.build_for_open.work_copy_for_open",
        "subworks": [
            {
                "work_name": "work.build_for_open.cut_common_dependency",
                "class_name": "WorkCutCommonDependencyForOpen",
                "path": "works.build_for_open.work_cut_common_dependency_for_open"
            }
        ],
        "wait": ["work.download_source", "work.download_tools", "work.platform.getfirmware.vpp"]
    },
    {
        "work_name": "work.dependency.set_env_for_compile_arm",
        "class_name": "WorkSetEnvForCompileArm",
        "path": "works.dependency.work_set_env_for_compile_arm",
        "wait": ["work.download_tools"]
    },
    {
        "work_name": "work.build.build_app_prepare",
        "class_name": "WorkBuildAppPrepare",
        "path": "works.build.work_build_app_prepare",
        "subworks": [
            {
                "work_name": "work.build.build_kernel_module",
                "class_name": "WorkBuildKernelModule",
                "path": "works.build.work_build_kernel_module"
            },
            {
                "work_name": "work.build.cfg",
                "class_name": "WorkBuildCfg",
                "path": "works.build.work_build_cfg"
            },
            {
                "work_name": "work.build.build_app_pre_ro",
                "class_name": "WorkBuildApp",
                "path": "works.build.work_build_app",
                "target_config": {"build_type": "release"},
                "wait": ["work.build.cfg"],
                "subworks":[
                    {
                        "work_name": "work.build.cfg",
                        "remark": "install",
                        "class_name": "WorkBuildCfg",
                        "path": "works.build.work_build_cfg"
                    }
                ]
            },
            {
                "work_name": "work.build.build_app_pre_rw",
                "class_name": "WorkBuildApp",
                "path": "works.build.work_build_app",
                "target_config": {"build_type": "debug"},
                "wait": ["work.build.cfg"],
                "subworks":[
                    {
                        "work_name": "work.build.cfg",
                        "remark": "install",
                        "class_name": "WorkBuildCfg",
                        "path": "works.build.work_build_cfg"
                    }
                ]
            },
            {
                "work_name": "work.build.build_app_pre_dft_sep",
                "class_name": "WorkBuildApp",
                "path": "works.build.work_build_app",
                "target_config": {"build_type": "dft_separation"},
                "wait": ["work.build.cfg"],
                "subworks":[
                    {
                        "work_name": "work.build.cfg",
                        "remark": "install",
                        "class_name": "WorkBuildCfg",
                        "path": "works.build.work_build_cfg"
                    }
                ]
            }
        ],
        "wait": ["work.dependency.set_env_for_compile_arm", "work.download_source", "work.platform.getfirmware.vpp"]
    },
    {
        "work_name": "work.build.build_rust",
        "class_name": "WorkBuildRust",
        "path": "works.build.work_build_rust",
        "wait": ["work.dependency.set_env_for_compile_arm"]
    },
    {
        "work_name": "work.build.java",
        "class_name": "WorkBuildJava",
        "path": "works.build.work_build_java",
        "wait": ["work.dependency.download"]
    },
    {
        "work_name": "work.build.tinyui",
        "class_name": "WorkBuildTinyUI",
        "path": "works.build.work_build_tinyui"
    },
    {
        "work_name": "work.build_for_open.copy_binary_and_build_open",
        "class_name": "WorkCopyBinaryAndBuildOpen",
        "path": "works.build_for_open.work_copy_binary_and_build_open",
        "wait": ["work.build_for_open.copy_for_open", "work.build.build_app_prepare", "work.build.build_rust", "work.build.java", "work.build.tinyui", "work.platform.getfirmware.vpp"]
    }
]
