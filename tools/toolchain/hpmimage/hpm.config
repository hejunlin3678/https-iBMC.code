//格式：变量名=变量值
//变量名以及其先后顺序不允许有任何修改，变量值如果为16进制需要加上0x
//所有注释前面必须加上//
//没条有效行的长度最大值为250

//==============生成的镜像名称===========================
image_name                       =           image.hpm
//==============升级镜像头记录===========================
//Image Capabilities. 镜像文件的能力。
//[7:4]: 保留，填0 
//[3]: 升级时对业务的影响。 0=升级当前镜像时，对底板、其他FRU都不产生影响。1=升级当前镜像时，对底板、其他FRU可能会产生影响。 
//[2]: 人工回滚 0=当前镜像支持人工回滚 1=当前镜像不支持人工回滚 
//[1]: 自动回滚 0=当前镜像支持自动回滚 1=当前镜像不支持自动回滚 
//[0]: 自检 0=当前镜像支持自检 1=当前镜像不支持自检 自检能力是指加载完成后，能够通过自检测试检查镜像的有效性。
format_version                   =          0
device_id                        =          1
manufacture_id                   =          0x07DB
product_id                       =          0xaa81
image_capabilities               =          03
components                       =          05
selftest_timeout                 =          12
rollback_timeout                 =          12
inaccessibility_timeout          =          12
earliest_compatible_revision     =          1.00
firmware_revision                =          1.07
auxiliary_firmware_revision      =          0x0000aa01
//版本辅助信息在文件中占用4字节，对应一个4字节长的16进制数，第一节对应这个数的低8位，其余类推。

//OEM数据:描述记录组成的链表，总长度为oem_data_length。每一个OEM数据描述记录都描述了一些供应商特定的信息，
//升级代理在升级过程中可以用到，如果没有，置oem_data_length为0。     
//oem data限长，只能放在一行里描述                                
//End of List/Version. 尾记录标志/版本 [7]: 1表示是最后一条记录。 [6:0]: 格式版本号
oem_length                       =          0
//第一条记录(只有在oem_length不为0，才有下面的5条配置,oem_data_length为一条记录的总长度)
//oem_length = 所有oem_data_length的长度
//oem_data_length = 8 + (oem_data的长度)

//descriptor_type_id               =          0
//end_of_list                      =          0x00
//oem_data_length                  =          12
//manufacture_id                   =          0
//oem_data                         =          abcd
//如果不止一条重复上面5步设置，数据必须为字符串

//===============升级操作记录========================
//Upgrade action type.升级操作类型。 
//00h = Backup component(s) 备份部件,如果不需要备份部件，action为0xff 
//01h = Prepare component(s) 准备部件，如果不需要准备部件，action为0xff 
//02h = Upload firmware image 上传软件镜像
backup_action                  =         0xff  
backup_components              =         0
prepare_action                 =         1
prepare_components             =         0x5

//上传软件镜像1
//版本辅助信息在文件中占用4字节，对应一个4字节长的16进制数，第一节对应这个数的低8位，其余类推。
//firmware_description为字符串
//file_name为这个镜像文件的文件名，这个文件必须和这个配置文件放在同一目录下
//这个镜像文件的文件路径从这个congfig文件的路径获取
//file_number表示这个部件里包含的文件个数
//firmware_description描述软件镜像的字符串，要适合显示给用户。最长21字节
//upload_components是掩码，相应bit代表相应的部件，比如值为8代表部件4，1代表部件1

upload_action                  =         2
upload_components              =         1
firmware_version               =         1.07
auxiliary_firmware_revision    =         0x00000000
firmware_description           =         IPMC
file_number                    =         1
file_path                      =         /data/ipmc.cramfs
file_name                      =         ipmc.cramfs

upload_action                  =         2
upload_components              =         4
firmware_version               =         1.07
auxiliary_firmware_revision    =         0x00000000
firmware_description           =         APP
file_number                    =         1
file_path                      =         /data/app.tar.gz
file_name                      =         app.tar.gz
//...........
//上传软件镜像n，重复上面设置
