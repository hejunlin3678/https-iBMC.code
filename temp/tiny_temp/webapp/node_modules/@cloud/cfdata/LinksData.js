"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinksData = void 0;
var CfLinks_1 = require("./interface/CfLinks");
var UtilService_1 = require("./service/UtilService");
var UserData_1 = require("./UserData");
var FrameworkService_1 = require("./service/FrameworkService");
var LinksData = /** @class */ (function () {
    function LinksData() {
    }
    LinksData.getLinks = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!!LinksData.cfLinks) return [3 /*break*/, 2];
                        return [4 /*yield*/, LinksData.initAllLinks()];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2: return [2 /*return*/, LinksData.cfLinks];
                }
            });
        });
    };
    // 初始化链接信息
    LinksData.initAllLinks = function () {
        return __awaiter(this, void 0, void 0, function () {
            var cfRegion, options, data, links, key, index;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        LinksData.cfLinks = new CfLinks_1.CfLinks();
                        cfRegion = UtilService_1.UtilService.getUrlParameter('region', true) || '';
                        options = {
                            region: UserData_1.UserData.getProjectRegionId(cfRegion),
                        };
                        // 判断有无cf2Links的全局变量，没有则调用/rest/silvan/rest/v1.0/links的接口
                        if (!LinksData.linksPromise) {
                            LinksData.linksPromise = FrameworkService_1.FrameworkService.getLinks(options);
                        }
                        return [4 /*yield*/, LinksData.linksPromise];
                    case 1:
                        data = _a.sent();
                        try {
                            if (data && data.links) {
                                links = {};
                                key = '';
                                for (index = 0; index < data.links.length; index++) {
                                    key = data.links[index].key + '_' + data.links[index].type;
                                    links[key] = data.links[index].href;
                                }
                                LinksData.cfLinks.doubleAuthenticate = links.doubleAuthenticate_identity;
                                LinksData.cfLinks.links = links;
                                LinksData.cfLinks.linksInterfaceFlag = true;
                                LinksData.cfLinks.link_user_center = links.user_center_common + '/';
                                LinksData.cfLinks.userCenterLink = links.user_center_common;
                                if (LinksData.cfLinks.links.ImperfectPaymentInfo_userCenter) {
                                    LinksData.cfLinks.BindingsLink = LinksData.cfLinks.links.ImperfectPaymentInfo_userCenter;
                                }
                                // 企业的二级菜单中的第一个链接作为企业自身的链接
                                LinksData.cfLinks.enterpriseSecMenuFirstLink = links.organizationAndAccount_common
                                    ? links.organizationAndAccount_common
                                    : links.projectManagement_common
                                        ? links.projectManagement_common
                                        : '';
                            }
                        }
                        catch (e) {
                            LinksData.cfLinks.cfLinksInterfaceFailFlag = true;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    return LinksData;
}());
exports.LinksData = LinksData;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGlua3NEYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0xpbmtzRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwrQ0FBOEM7QUFDOUMscURBQW9EO0FBQ3BELHVDQUFzQztBQUN0QywrREFBOEQ7QUFFOUQ7SUFBQTtJQW9EQSxDQUFDO0lBaER1QixrQkFBUSxHQUE1Qjs7Ozs7NkJBQ1EsQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFsQix3QkFBa0I7d0JBQ2xCLHFCQUFNLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBQTs7d0JBQTlCLFNBQThCLENBQUM7OzRCQUVuQyxzQkFBTyxTQUFTLENBQUMsT0FBTyxFQUFDOzs7O0tBQzVCO0lBRUQsVUFBVTtJQUNHLHNCQUFZLEdBQXpCOzs7Ozs7d0JBQ0ksU0FBUyxDQUFDLE9BQU8sR0FBRyxJQUFJLGlCQUFPLEVBQUUsQ0FBQzt3QkFDOUIsUUFBUSxHQUFHLHlCQUFXLENBQUMsZUFBZSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7d0JBQzdELE9BQU8sR0FBRzs0QkFDVixNQUFNLEVBQUUsbUJBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxRQUFRLENBQUM7eUJBQ2hELENBQUM7d0JBQ0YseURBQXlEO3dCQUN6RCxJQUFJLENBQUMsU0FBUyxDQUFDLFlBQVksRUFBRTs0QkFDekIsU0FBUyxDQUFDLFlBQVksR0FBRyxtQ0FBZ0IsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7eUJBQy9EO3dCQUNZLHFCQUFNLFNBQVMsQ0FBQyxZQUFZLEVBQUE7O3dCQUFuQyxJQUFJLEdBQUcsU0FBNEI7d0JBRXpDLElBQUk7NEJBQ0EsSUFBSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtnQ0FDaEIsS0FBSyxHQUFHLEVBQUUsQ0FBQztnQ0FDWCxHQUFHLEdBQUcsRUFBRSxDQUFDO2dDQUNiLEtBQVMsS0FBSyxHQUFHLENBQUMsRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEVBQUU7b0NBQ3BELEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUM7b0NBQzNELEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLElBQUksQ0FBQztpQ0FDdkM7Z0NBQ0QsU0FBUyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsR0FBSSxLQUFhLENBQUMsMkJBQTJCLENBQUM7Z0NBQ2xGLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztnQ0FDaEMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsR0FBRyxJQUFJLENBQUM7Z0NBQzVDLFNBQVMsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLEdBQUksS0FBYSxDQUFDLGtCQUFrQixHQUFHLEdBQUcsQ0FBQztnQ0FDN0UsU0FBUyxDQUFDLE9BQU8sQ0FBQyxjQUFjLEdBQUksS0FBYSxDQUFDLGtCQUFrQixDQUFDO2dDQUNyRSxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLCtCQUErQixFQUFFO29DQUN6RCxTQUFTLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQywrQkFBK0IsQ0FBQztpQ0FDNUY7Z0NBRUQsMEJBQTBCO2dDQUMxQixTQUFTLENBQUMsT0FBTyxDQUFDLDBCQUEwQixHQUFJLEtBQWEsQ0FBQyw2QkFBNkI7b0NBQ3ZGLENBQUMsQ0FBRSxLQUFhLENBQUMsNkJBQTZCO29DQUM5QyxDQUFDLENBQUUsS0FBYSxDQUFDLHdCQUF3Qjt3Q0FDckMsQ0FBQyxDQUFFLEtBQWEsQ0FBQyx3QkFBd0I7d0NBQ3pDLENBQUMsQ0FBQyxFQUFFLENBQUM7NkJBQ2hCO3lCQUNKO3dCQUFDLE9BQU8sQ0FBQyxFQUFFOzRCQUNSLFNBQVMsQ0FBQyxPQUFPLENBQUMsd0JBQXdCLEdBQUcsSUFBSSxDQUFDO3lCQUNyRDs7Ozs7S0FDSjtJQUNMLGdCQUFDO0FBQUQsQ0FBQyxBQXBERCxJQW9EQztBQXBEWSw4QkFBUyJ9