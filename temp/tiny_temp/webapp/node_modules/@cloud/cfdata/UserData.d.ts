import { User } from './interface/User';
import { CfUser } from './interface/CfUser';
import { CfRegion } from './interface/CfRegion';
export declare class UserData {
    /**
     * 接收到http后加工处理得到的用户数据
     * cf扩展用户数据
     */
    private static cfUser;
    /**
     * 原始的Http Promise用户数据
     * User promise of user data
     */
    private static userPromise;
    private static simplifiedUserPromise;
    private static originUser;
    static readonly projectNameRegExp: RegExp;
    static readonly userProjectNameRegExp: RegExp;
    /**
     * 获取用户数据
     * @returns user
     */
    static getCfUser(isFreshToken?: boolean): Promise<CfUser>;
    /** 获取me接口数据，并初始化UserData.cfUser */
    static getCfUserSimplified(isFreshToken?: boolean): Promise<any>;
    static updateUserData(data: User, regionName: string): void;
    /**
     * @internal
     * 同步获取用户数据。必须迟一些时候调用，否则返回为空。
     * Gets cf user sync
     * @returns cf user sync
     */
    static getCfUserSync(): CfUser;
    static initCfUserBaseInfo(data: User): void;
    static initCfUserRegion(data: User, regionName: string, regions?: Array<CfRegion>): void;
    static initCfUserRoles(data: User): void;
    /** UserData初始化方法（非me接口部分） */
    static initCfUser(data: User): Promise<void>;
    /**
     * @internal
     * Gets project region id
     * @param projectName
     * @returns
     */
    static getProjectRegionId(projectName: any): any;
    static getRegionNameById(regionId: any, regions: any): any;
    private static cfIsProjectRegionName;
    private static updateUserRoles;
    private static initUserHead;
    static distributorAccoutSetting(userId: any): boolean;
    static isNonsupportRegion(nonsupportRegions: any, regionId: any, supportRegions: any): boolean;
    private static queryBusinessManage;
    private static isAllianceUser;
    private static isFederatedUserInfo;
    /**
     * Refreshs user info
     * @returns
     */
    static refreshUserInfo(): Promise<User>;
    /**
     * Sets support multi project
     * @param isSupportMultiProject
     */
    static setSupportMultiProject(isSupportMultiProject: any): void;
}
