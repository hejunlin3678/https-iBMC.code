"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountData = void 0;
var AccountService_1 = require("./service/AccountService");
var CfAcount_1 = require("./interface/CfAcount");
var UserData_1 = require("./UserData");
var ConfigData_1 = require("./ConfigData");
var UtilService_1 = require("./service/UtilService");
/**
 * @internal
 * 仅
 * Account data
 */
var AccountData = /** @class */ (function () {
    function AccountData() {
    }
    // /**
    //  * Gets cf project
    //  * @returns cf project
    //  */
    AccountData.getCfAcount = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (!AccountData.cfAcount) {
                    // 如果不存在用户数据
                    AccountData.cfAcount = new CfAcount_1.CfAcount();
                }
                return [2 /*return*/, AccountData.cfAcount];
            });
        });
    };
    AccountData.getCfCustomeRestricted = function ( /* data: CfUser */) {
        return __awaiter(this, void 0, void 0, function () {
            var cfUser, restrictedData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(AccountData.cfAcount.cfCustomeRestricted === undefined)) return [3 /*break*/, 3];
                        return [4 /*yield*/, UserData_1.UserData.getCfUser()];
                    case 1:
                        cfUser = _a.sent();
                        if (!(cfUser.userRoles.includes('op_restricted') && ConfigData_1.ConfigData.getUiSwitchConfig().isRestrictedSwitch)) return [3 /*break*/, 3];
                        if (!AccountData.customeRestrictedPromise) {
                            // 未发过http请求
                            AccountData.customeRestrictedPromise = AccountService_1.AccountService.queryCustomeRestricted({
                                customerId: cfUser.domainId,
                            });
                        }
                        return [4 /*yield*/, AccountData.customeRestrictedPromise];
                    case 2:
                        restrictedData = _a.sent();
                        AccountData.cfAcount.cfCustomeRestricted = restrictedData.restrictedInfos;
                        AccountData.cfAcount.cfCustomeRestrictedFlag = true; // 后面去除这个标志位。
                        _a.label = 3;
                    case 3: return [2 /*return*/, AccountData.cfAcount];
                }
            });
        });
    };
    AccountData.getBusinessManage = function ( /* data: CfUser */) {
        return __awaiter(this, void 0, void 0, function () {
            var cfUser, customerManangmentData;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(AccountData.cfAcount.BusinessManagementIsOpen === undefined)) return [3 /*break*/, 4];
                        return [4 /*yield*/, UserData_1.UserData.getCfUser()];
                    case 1:
                        cfUser = _a.sent();
                        if (!ConfigData_1.ConfigData.getUiSwitchConfig().csbGetInterfaceSwitch) return [3 /*break*/, 3];
                        if (!AccountData.customerManangmentPromise) {
                            // 未发过http请求
                            AccountData.customerManangmentPromise = AccountService_1.AccountService.queryCustomerManangment({
                                domainId: cfUser.domainId,
                            });
                        }
                        return [4 /*yield*/, AccountData.customerManangmentPromise];
                    case 2:
                        customerManangmentData = _a.sent();
                        AccountData.cfAcount.workOrder = UtilService_1.UtilService.dealMaxNumber(customerManangmentData.workOrderCount);
                        AccountData.cfAcount.cfUnpayOrderCount = customerManangmentData.orderCount;
                        AccountData.cfAcount.cfUnpayOrderNum = UtilService_1.UtilService.dealMaxNumber(customerManangmentData.orderCount);
                        // 是否需要处理await promise失败，console6.0未处理
                        AccountData.cfAcount.BusinessManagementIsOpen = true; // 打开
                        return [3 /*break*/, 4];
                    case 3:
                        if (cfUser.userRoles.includes('op_gated_eps')) {
                            AccountData.cfAcount.BusinessManagementIsOpen = false; // 关闭
                        }
                        else {
                            AccountData.cfAcount.BusinessManagementIsOpen = true; // 打开
                        }
                        _a.label = 4;
                    case 4: return [2 /*return*/, AccountData.cfAcount];
                }
            });
        });
    };
    AccountData.getAllianceAllianceAccountInfo = function ( /* data: CfUser */) {
        return __awaiter(this, void 0, void 0, function () {
            var cfUser, AllianceAccountInfoData, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(AccountData.cfAcount.cfIsAllianceUser === undefined)) return [3 /*break*/, 5];
                        if (!ConfigData_1.ConfigData.getUiSwitchConfig().isOpenAllianceToken) return [3 /*break*/, 5];
                        if (!!AccountData.allianceAllianceAccountInfoPromise) return [3 /*break*/, 2];
                        return [4 /*yield*/, UserData_1.UserData.getCfUser()];
                    case 1:
                        cfUser = _a.sent();
                        AccountData.allianceAllianceAccountInfoPromise = AccountService_1.AccountService.getAllianceAccountInfo({
                            domainId: cfUser.domainId,
                            siteType: AccountData.cloudAllianceSiteType,
                        });
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, AccountData.allianceAllianceAccountInfoPromise];
                    case 3:
                        AllianceAccountInfoData = _a.sent();
                        if (AllianceAccountInfoData &&
                            AllianceAccountInfoData.xdomains &&
                            AllianceAccountInfoData.xdomains.length > 0) {
                            // 是云联盟用户
                            // 读取SAML的两个接口
                            AccountData.cfAcount.cfIsAllianceUser = true;
                        }
                        else {
                            AccountData.cfAcount.cfIsAllianceUser = false;
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        e_1 = _a.sent();
                        AccountData.cfAcount.cfIsAllianceUser = false;
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/, AccountData.cfAcount];
                }
            });
        });
    };
    AccountData.getFederatedUserInfo = function ( /* data: CfUser */) {
        return __awaiter(this, void 0, void 0, function () {
            var cfUser, federatedUserInfoData, domainsArr, domainsList, e_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(AccountData.cfAcount.cfIsFederatedUsers === undefined)) return [3 /*break*/, 5];
                        if (!!AccountData.getFederatedUserInfoPromise) return [3 /*break*/, 2];
                        return [4 /*yield*/, UserData_1.UserData.getCfUser()];
                    case 1:
                        cfUser = _a.sent();
                        AccountData.getFederatedUserInfoPromise = AccountService_1.AccountService.getFederatedUserInfo(cfUser.domainId);
                        _a.label = 2;
                    case 2:
                        _a.trys.push([2, 4, , 5]);
                        return [4 /*yield*/, AccountData.getFederatedUserInfoPromise];
                    case 3:
                        federatedUserInfoData = _a.sent();
                        if (federatedUserInfoData &&
                            federatedUserInfoData.domains &&
                            federatedUserInfoData.domains.length > 0) {
                            domainsArr = federatedUserInfoData.domains;
                            domainsList = domainsArr.find(function (item) { return item.xfederation_type === 'ALLY_HUAWEICLOUD'; });
                            if (domainsList) {
                                AccountData.cfAcount.cfIsFederatedUsers = true; // 是联邦用户
                            }
                            else {
                                AccountData.cfAcount.cfIsFederatedUsers = false;
                            }
                        }
                        else {
                            AccountData.cfAcount.cfIsFederatedUsers = false;
                        }
                        return [3 /*break*/, 5];
                    case 4:
                        e_2 = _a.sent();
                        AccountData.cfAcount.cfIsFederatedUsers = false;
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/, AccountData.cfAcount];
                }
            });
        });
    };
    AccountData.cloudAllianceSiteType = 3;
    return AccountData;
}());
exports.AccountData = AccountData;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWNjb3VudERhdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQWNjb3VudERhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMkRBQTBEO0FBQzFELGlEQUFnRDtBQUNoRCx1Q0FBc0M7QUFFdEMsMkNBQTBDO0FBQzFDLHFEQUFvRDtBQUVwRDs7OztHQUlHO0FBQ0g7SUFBQTtJQXlJQSxDQUFDO0lBaElHLE1BQU07SUFDTixxQkFBcUI7SUFDckIseUJBQXlCO0lBQ3pCLE1BQU07SUFDYyx1QkFBVyxHQUEvQjs7O2dCQUNJLElBQUksQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFO29CQUN2QixZQUFZO29CQUNaLFdBQVcsQ0FBQyxRQUFRLEdBQUcsSUFBSSxtQkFBUSxFQUFFLENBQUM7aUJBQ3pDO2dCQUVELHNCQUFPLFdBQVcsQ0FBQyxRQUFRLEVBQUM7OztLQUMvQjtJQUVtQixrQ0FBc0IsR0FBMUMsV0FBMkMsa0JBQWtCOzs7Ozs7NkJBQ3JELENBQUEsV0FBVyxDQUFDLFFBQVEsQ0FBQyxtQkFBbUIsS0FBSyxTQUFTLENBQUEsRUFBdEQsd0JBQXNEO3dCQUUvQixxQkFBTSxtQkFBUSxDQUFDLFNBQVMsRUFBRSxFQUFBOzt3QkFBM0MsTUFBTSxHQUFXLFNBQTBCOzZCQUM3QyxDQUFBLE1BQU0sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxJQUFJLHVCQUFVLENBQUMsaUJBQWlCLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQSxFQUEvRix3QkFBK0Y7d0JBQy9GLElBQUksQ0FBQyxXQUFXLENBQUMsd0JBQXdCLEVBQUU7NEJBQ3ZDLFlBQVk7NEJBQ1osV0FBVyxDQUFDLHdCQUF3QixHQUFHLCtCQUFjLENBQUMsc0JBQXNCLENBQUM7Z0NBQ3pFLFVBQVUsRUFBRSxNQUFNLENBQUMsUUFBUTs2QkFDOUIsQ0FBQyxDQUFDO3lCQUNOO3dCQUNzQixx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