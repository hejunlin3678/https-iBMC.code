import { ApiService } from './ApiService';
export declare class AccountService extends ApiService {
    /**
     * 貌似内部外部都没有用
     * Querys besum info
     * @returns
     */
    static queryBESumInfo(): Promise<any>;
    static queryAccountBalance(customerId: any, beId: any): Promise<any>;
    static queryRealNameAuth(params: any): Promise<any>;
    /**
     * @internal
     * Querys custome restricted
     * @param params
     * @returns
     */
    static queryCustomeRestricted(params: any): Promise<any>;
    /**
     * 查询账户冻结场景
     * Querys custom frozen
     * @param params
     * @returns
     */
    static queryCustomFrozen(params: any): Promise<any>;
    /**
     * 需要延时调用，因为依赖selectRegionId
     * Querys custom maintenances
     * @returns
     */
    static queryCustomMaintenances(selectRegionId?: string): Promise<any>;
    /**
     * @internal
     * Querys customer manangment
     * @param options
     * @returns
     */
    static queryCustomerManangment(options: any): Promise<any>;
    /**
     * @internal
     * Gets seller and partner
     * @param customerOptions
     * @returns
     */
    static getSellerAndPartner(customerOptions: any): Promise<any>;
    /**
     * @internal
     * Gets alliance account info
     * @param options
     * @returns
     */
    static getAllianceAccountInfo(options: any): Promise<any>;
    /**
     * @intternal
     * Gets samlresponse
     * @param url
     * @returns
     */
    static getSAMLResponse(url: string): Promise<any>;
    static getOCBToken(samlResponse: any, url: any): Promise<any>;
    /**
     * @internal
     * Gets user waiting renew num
     * @returns
     */
    static getUserWaitingRenewNum(): Promise<any>;
    static getFederatedUserInfo(domainId: any): Promise<any>;
    /**
     * @internal
     * Gets cbc resource statistic
     * @param options
     * @returns
     */
    static getCbcResourceStatistic(options: any): Promise<any>;
}
