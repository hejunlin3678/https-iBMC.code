"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserData = void 0;
var ConfigData_1 = require("./ConfigData");
var RegionData_1 = require("./RegionData");
var CfUser_1 = require("./interface/CfUser");
var UserService_1 = require("./service/UserService");
var AccountService_1 = require("./service/AccountService");
var UtilService_1 = require("./service/UtilService");
var UserData = /** @class */ (function () {
    function UserData() {
    }
    /**
     * 获取用户数据
     * @returns user
     */
    UserData.getCfUser = function (isFreshToken) {
        if (isFreshToken === void 0) { isFreshToken = false; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (isFreshToken)
                            UserData.cfUser = null;
                        if (!!UserData.cfUser) return [3 /*break*/, 3];
                        return [4 /*yield*/, UserData.getCfUserSimplified(isFreshToken)];
                    case 1:
                        _a.sent(); // 获取并初始化me接口相关数据
                        return [4 /*yield*/, UserData.initCfUser(UserData.originUser)];
                    case 2:
                        _a.sent(); // 获取并初始其他user数据
                        _a.label = 3;
                    case 3: return [2 /*return*/, UserData.cfUser];
                }
            });
        });
    };
    /** 获取me接口数据，并初始化UserData.cfUser */
    UserData.getCfUserSimplified = function (isFreshToken) {
        if (isFreshToken === void 0) { isFreshToken = false; }
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (isFreshToken)
                    UserData.cfUser = null;
                if (!UserData.cfUser) {
                    if (!UserData.userPromise || isFreshToken) {
                        // 如果不存在http Promise
                        UserData.userPromise = UserService_1.UserSerivce.getLoginUser(isFreshToken);
                    }
                    if (!UserData.simplifiedUserPromise || isFreshToken) {
                        UserData.simplifiedUserPromise = new Promise(function (resolve) {
                            UserData.userPromise
                                .then(function (user) {
                                UserData.originUser = user;
                                if (!UserData.cfUser) {
                                    UserData.initCfUserBaseInfo(user);
                                    UserData.initCfUserRoles(user);
                                }
                                return resolve(UserData.cfUser);
                            })
                                .catch(function (err) {
                                throw new Error(err);
                            });
                        });
                    }
                    return [2 /*return*/, UserData.simplifiedUserPromise];
                }
                return [2 /*return*/];
            });
        });
    };
    // 更新userdata(切换region后)
    UserData.updateUserData = function (data, regionName) {
        if (!UserData.cfUser)
            UserData.cfUser = new CfUser_1.CfUser();
        UserData.initCfUserBaseInfo(data);
        UserData.initCfUserRegion(data, regionName);
        UserData.initCfUserRoles(data);
    };
    /**
     * @internal
     * 同步获取用户数据。必须迟一些时候调用，否则返回为空。
     * Gets cf user sync
     * @returns cf user sync
     */
    UserData.getCfUserSync = function () {
        return UserData.cfUser;
    };
    UserData.initCfUserBaseInfo = function (data) {
        if (!UserData.cfUser)
            UserData.cfUser = new CfUser_1.CfUser();
        if (!data)
            return;
        UserData.cfUser.userId = data.id;
        UserData.cfUser.username = data.name;
        UserData.cfUser.domainName = data.domainName;
        UserData.cfUser.projectId = data.projectId;
        UserData.cfUser.projectName = data.region;
        UserData.cfUser.domainId = data.domainId;
        var consoleContext = window.getConsoleContext && window.getConsoleContext();
        var consoleDataService = (consoleContext === null || consoleContext === void 0 ? void 0 : consoleContext.get) && consoleContext.get({ name: 'config' });
        if (consoleDataService === null || consoleDataService === void 0 ? void 0 : consoleDataService.set) {
            consoleDataService.set('cfUserId', data.id);
            consoleDataService.set('cfProjectName', data.region);
        }
        UserData.cfUser.userNameTip = data.domainName === data.name ? data.name : data.domainName + '/' + data.name;
        if (data.assumedInfo) {
            UserData.cfUser.assumedInfo = data.assumedInfo;
        }
        UserData.cfUser.xDomainType = data.xDomainType;
        UserData.cfUser.selectRegionId = UserData.getProjectRegionId(UserData.cfUser.projectName);
        UserData.cfUser.isShowDistributorLink = UserData.distributorAccoutSetting(UserData.cfUser.userId); // 分销商入口，用户判断
    };
    UserData.initCfUserRegion = function (data, regionName, regions) {
        if (regions)
            UserData.cfUser.regions = regions;
        UserData.cfUser.regionName = regionName;
        UserData.cfUser.cfForbidChangeRole = UserData.cfIsProjectRegionName(UserData.cfUser.projectName);
        if (data.nonsupportRegions) {
            UserData.cfUser.nonsupportRegions = data.nonsupportRegions;
        }
        if (data.supportRegions) {
            UserData.cfUser.supportRegions = data.supportRegions;
        }
        if (UserData.isNonsupportRegion(UserData.cfUser.nonsupportRegions, UserData.cfUser.projectName, UserData.cfUser.supportRegions)) {
            UserData.cfUser.cfStateNoSupportRegionFlag = true;
        }
        // 默认不支持多project，满足多project条件，会跳不支持页面
        if (!UserData.cfUser.supportMultiProject &&
            !UserData.projectNameRegExp.test(data.region) &&
            UserData.userProjectNameRegExp.test(data.region)) {
            UserData.cfUser.cfStateNoSupportRegionFlag = true;
        }
    };
    UserData.initCfUserRoles = function (data) {
        if (!data)
            return;
        var roles = data.roles || [];
        UserData.cfUser.userRoles = roles;
        UserData.cfUser.isRestrictedUser = roles.includes('op_restricted');
        UserData.cfUser.isHcsMoAgency = false;
        UserData.cfUser.isShowHcsProject = false;
        UserData.cfUser.isShowHcsApproval = false;
        UserData.cfUser.isShowHcsApply = false;
        UserData.cfUser.isVendorSubUser = false;
        UserData.cfUser.isVendorUser = false;
        UserData.cfUser.isSuspendedUser = false;
        UserData.cfUser.cfIsRealNameAuth = false;
        UserData.cfUser.cfIsRestricted = false;
        UserData.cfUser.cfRealNameAuth = false;
        UserData.cfUser.isOldUser = false;
        UserData.cfUser.isPcVendorSubuser = false;
        /**
         * 线下私有云菜单权限控制
         */
        // 如果角色中存在'mo_agency',则表示为线下私有云代维用户
        if (roles.includes('mo_agency')) {
            UserData.cfUser.isHcsMoAgency = true;
        }
        // 如果角色中存在vdc_adm || vdc_readonly || vdc_user，显示我的项目
        if (!UserData.cfUser.isHcsMoAgency &&
            (roles.includes('vdc_adm') || roles.includes('vdc_readonly') || roles.includes('vdc_user'))) {
            UserData.cfUser.isShowHcsProject = true;
        }
        // 如果角色中存在approv_adm || approv_act，显示我的审批
        if (!UserData.cfUser.isHcsMoAgency && (roles.includes('approv_act') || roles.includes('approv_adm'))) {
            UserData.cfUser.isShowHcsApproval = true;
        }
        // 如果角色中存在 vdc_adm || vdc_readonly || vdc_user || res_adm ，显示我的申请
        if (!UserData.cfUser.isHcsMoAgency &&
            (roles.includes('vdc_adm') ||
                roles.includes('vdc_readonly') ||
                roles.includes('vdc_user') ||
                roles.includes('res_adm'))) {
            UserData.cfUser.isShowHcsApply = true;
        }
        if (roles.includes('op_vendor_sub_user')) {
            UserData.cfUser.isVendorSubUser = true;
            UserData.cfUser.isVendorUser = true;
        }
        if (roles.includes('op_vendor')) {
            UserData.cfUser.isVendorUser = true;
        }
        if (roles.includes('op_suspended') &&
            !(roles.includes('op_pc_vendor') ||
                roles.includes('op_vendor') ||
                roles.includes('op_vendor_sub_user') ||
                roles.includes('op_gated_pc_vendor'))) {
            UserData.cfUser.isSuspendedUser = true;
        }
        if (roles.includes('op_unverified')) {
            UserData.cfUser.cfIsRealNameAuth = true;
            if (ConfigData_1.ConfigData.getUiSwitchConfig().realNameAuthSwitch) {
                UserData.cfUser.realNameAuthOk = false;
            }
        }
        else {
            if (ConfigData_1.ConfigData.getUiSwitchConfig().realNameAuthSwitch) {
                UserData.cfUser.realNameAuthOk = true;
            }
        }
        if (roles.includes('op_restricted')) {
            UserData.cfUser.cfIsRestricted = true;
        }
        if (!roles.includes('op_suspended') &&
            ConfigData_1.ConfigData.getUiSwitchConfig().realNameAuthSwitch &&
            roles.includes('op_unverified')) {
            UserData.cfUser.cfRealNameAuth = true;
        }
        if (roles.includes('op_legacy') && ConfigData_1.ConfigData.getUiSwitchConfig().isOldUser) {
            UserData.cfUser.isOldUser = true;
        }
        if (roles.includes('op_gated_pc_vendor_subuser') || roles.includes('op_pc_vendor_subuser')) {
            UserData.cfUser.isPcVendorSubuser = true;
        }
    };
    /** UserData初始化方法（非me接口部分） */
    UserData.initCfUser = function (data) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function () {
            var promisesArray;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (!data)
                            return [2 /*return*/];
                        promisesArray = [];
                        promisesArray.push(new Promise(function (resolve) {
                            RegionData_1.RegionData.getRegions({
                                selfDevelop: !!ConfigData_1.ConfigData.getUiSwitchConfig().ctcRegionTiledDisplay,
                                alliance: true,
                                domainId: data.domainId,
                            }, false)
                                .then(function (regions) {
                                var regionName = UserData.getRegionNameById(UserData.cfUser.selectRegionId, regions);
                                UserData.initCfUserRegion(data, regionName, regions);
                                resolve(regions);
                            })
                                .catch(function () { return resolve(); });
                        }));
                        if (((_a = data.roles) === null || _a === void 0 ? void 0 : _a.includes('op_restricted')) && ConfigData_1.ConfigData.getUiSwitchConfig().isRestrictedSwitch) {
                            promisesArray.push(new Promise(function (resolve) {
                                AccountService_1.AccountService.queryCustomeRestricted({
                                    customerId: UserData.cfUser.domainId,
                                })
                                    .then(function (_a) {
                                    var restrictedInfos = _a.restrictedInfos;
                                    UserData.cfUser.cfCustomeRestricted = restrictedInfos;
                                    UserData.cfUser.cfCustomeRestrictedFlag = true;
                                    resolve(restrictedInfos);
                                })
                                    .catch(function () { return resolve(); });
                            }));
                        }
                        promisesArray.push(new Promise(function (resolve) {
                            UserData.initUserHead()
                                .then(function () { return resolve(); })
                                .catch(function () { return resolve(); });
                        }));
                        if (ConfigData_1.ConfigData.getUiSwitchConfig().csbGetInterfaceSwitch) {
                            promisesArray.push(new Promise(function (resolve) {
                                UserData.queryBusinessManage()
                                    .then(function () {
                                    UserData.cfUser.BusinessManagementIsOpen = true; // 打开
                                    resolve();
                                })
                                    .catch(function () { return resolve(); });
                            }));
                        }
                        else {
                            if ((_b = data.roles) === null || _b === void 0 ? void 0 : _b.includes('op_gated_eps')) {
                                UserData.cfUser.BusinessManagementIsOpen = false; // 关闭
                            }
                            else {
                                UserData.cfUser.BusinessManagementIsOpen = true; // 打开
                            }
                        }
                        if (ConfigData_1.ConfigData.getUiSwitchConfig().isOpenAllianceToken) {
                            promisesArray.push(new Promise(function (resolve) {
                                UserData.isAllianceUser(UserData.cfUser.domainId, UserData.cfUser.cloudAllianceSiteType)
                                    .then(function () { return resolve(); })
                                    .catch(function () { return resolve(); });
                            }));
                        }
                        if (ConfigData_1.ConfigData.getUiSwitchConfig().partnerCloudMaskingService) {
                            promisesArray.push(new Promise(function (resolve) {
                                UserData.isFederatedUserInfo(UserData.cfUser.domainId)
                                    .then(function () { return resolve(); })
                                    .catch(function () { return resolve(); });
                            }));
                        }
                        return [4 /*yield*/, Promise.all(promisesArray)];
                    case 1:
                        _c.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @internal
     * Gets project region id
     * @param projectName
     * @returns
     */
    UserData.getProjectRegionId = function (projectName) {
        if (projectName) {
            if (UserData.projectNameRegExp.test(projectName)) {
                return projectName.match(UserData.projectNameRegExp)[2];
            }
            else if (UserData.userProjectNameRegExp.test(projectName)) {
                return projectName.match(UserData.userProjectNameRegExp)[1];
            }
        }
        return projectName;
    };
    UserData.getRegionNameById = function (regionId, regions) {
        for (var index in regions) {
            if (regionId === regions[index].regionId) {
                return regions[index].displayName;
            }
        }
        return '';
    };
    UserData.cfIsProjectRegionName = function (projectName) {
        var isProject = false;
        var projectArr = (projectName && projectName.split('_')) || [];
        if (projectName && UserData.projectNameRegExp.test(projectName)) {
            if (projectArr[2]) {
                isProject = true;
            }
        }
        else {
            if (projectArr[1]) {
                isProject = true;
            }
        }
        return isProject;
    };
    UserData.updateUserRoles = function (roles /* 这里类型可以更细化 a|b|c */) {
        UserData.cfUser.userRoles = roles || [];
        UserData.cfUser.isRestrictedUser = roles === null || roles === void 0 ? void 0 : roles.includes('op_restricted');
    };
    UserData.initUserHead = function () {
        return __awaiter(this, void 0, void 0, function () {
            var data, error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, UserService_1.UserSerivce.queryIamUser(UserData.cfUser.userId)];
                    case 1:
                        data = _a.sent();
                        if (data) {
                            if (!UserData.cfUser.user_head_href)
                                UserData.cfUser.user_head_href = {};
                            if (data.user && data.user.img_path) {
                                UserData.cfUser.user_head_all = data.user.img_path;
                                if (data.user.img_path.small) {
                                    UserData.cfUser.user_head_href.url = data.user.img_path.small;
                                }
                            }
                        }
                        return [3 /*break*/, 3];
                    case 2:
                        error_1 = _a.sent();
                        console.log('Error: queryIamUser error, ' + error_1);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    UserData.distributorAccoutSetting = function (userId) {
        var distributorAccountMap = [
            '9a37a440718d4c32a73035a37cbed10e',
            'e8e4e1dd4b7c44ae98a17903eefe77db',
            'dc48a6511a3b47b18cf1215217e1f920',
            '32114dbcc3b5472bb6ce062a7bc9bd8b',
            '808a5be279e34b7da7c7f1efd2cd1fc4',
            '1fbff4a735354d18adf61f35a0915f3e',
            '274133e2ba7e4011b8747c144c13adf4',
            '741be7cf7c5942c4bac9fc1edbe77bd2',
            '50bea84220174077b7caf4a4ed787b6b',
            '46eb7941cb2649d79186b1fb4324f5d9',
            'f6c3ec25ae4544a3af063070528e3629',
            '0584dd08fa0025061f7cc01eda926596',
        ];
        return distributorAccountMap.indexOf(userId) > -1;
    };
    UserData.isNonsupportRegion = function (nonsupportRegions, regionId, supportRegions) {
        var result = false;
        var regionName;
        if (!regionId) {
            return false;
        }
        var regionArray = regionId.split('_');
        if (supportRegions && supportRegions.length > 0) {
            result = true;
            // 多project
            if (regionId &&
                (UserData.projectNameRegExp.test(regionId) || UserData.userProjectNameRegExp.test(regionId))) {
                // 特殊情况,DeC开头
                if (UserData.projectNameRegExp.test(regionId)) {
                    // 以DeC开头的，长度肯定不为0，至少包含DeC。长度大于2的情况下，取下标1
                    regionName = regionArray.length >= 2 ? regionArray[1] : regionArray[0];
                    var flag1 = false;
                    var flag2 = false;
                    for (var i = 0; i < supportRegions.length; i++) {
                        // 白名单是否配置DeC
                        if (supportRegions[i] && regionId.indexOf(supportRegions[i]) === 0) {
                            flag1 = true;
                        }
                        // 白名单是否配置region
                        if (supportRegions[i] && regionName === supportRegions[i]) {
                            flag2 = true;
                        }
                        // 以上两项同时成立，DeC project才是支持的project
                        if (flag1 && flag2) {
                            result = false;
                            break;
                        }
                    }
                }
                else {
                    // 普通多project
                    for (var j = 0; j < supportRegions.length; j++) {
                        if (supportRegions[j] && regionId.indexOf(supportRegions[j]) === 0) {
                            result = false;
                            break;
                        }
                    }
                }
            }
            else {
                // 普通region
                result = supportRegions.indexOf(regionId) < 0;
            }
            return result;
        }
        if (nonsupportRegions && nonsupportRegions.length > 0) {
            result = false;
            // 如果是多project
            if (regionId &&
                (UserData.projectNameRegExp.test(regionId) || UserData.userProjectNameRegExp.test(regionId))) {
                // 特殊情况,DeC开头
                if (UserData.projectNameRegExp.test(regionId)) {
                    // 以DeC开头的，长度肯定不为0，至少包含DeC。长度大于2的情况下，取下标1
                    regionName = regionArray.length >= 2 ? regionArray[1] : regionArray[0];
                    for (var k = 0; k < nonsupportRegions.length; k++) {
                        if (nonsupportRegions[k] &&
                            (regionId.indexOf(nonsupportRegions[k]) === 0 || regionName === nonsupportRegions[k])) {
                            result = true;
                            break;
                        }
                    }
                }
                else {
                    // 普通region
                    for (var l = 0; l < nonsupportRegions.length; l++) {
                        if (nonsupportRegions[l] && regionId.indexOf(nonsupportRegions[l]) === 0) {
                            result = true;
                            break;
                        }
                    }
                }
            }
            else {
                result = nonsupportRegions.indexOf(regionId) >= 0;
            }
        }
        return result;
    };
    UserData.queryBusinessManage = function () {
        return __awaiter(this, void 0, void 0, function () {
            var options, _a, workOrderCount, orderCount, error_2;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        options = {
                            domainId: UserData.cfUser.domainId,
                        };
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, AccountService_1.AccountService.queryCustomerManangment(options)];
                    case 2:
                        _a = _b.sent(), workOrderCount = _a.workOrderCount, orderCount = _a.orderCount;
                        UserData.cfUser.workOrder = UtilService_1.UtilService.dealMaxNumber(workOrderCount);
                        UserData.cfUser.cfUnpayOrderCount = orderCount;
                        UserData.cfUser.cfUnpayOrderNum = UtilService_1.UtilService.dealMaxNumber(orderCount);
                        return [3 /*break*/, 4];
                    case 3:
                        error_2 = _b.sent();
                        console.log(error_2);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    UserData.isAllianceUser = function (domainId, site) {
        return __awaiter(this, void 0, void 0, function () {
            var options, data, error_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        options = {
                            domainId: domainId,
                            siteType: site,
                        };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, AccountService_1.AccountService.getAllianceAccountInfo(options)];
                    case 2:
                        data = _a.sent();
                        // 是云联盟用户
                        if (data && data.xdomains && data.xdomains.length > 0) {
                            // 读取SAML的两个接口
                            UserData.cfUser.cfIsAllianceUser = true;
                        }
                        else {
                            UserData.cfUser.cfIsAllianceUser = false;
                        }
                        return [3 /*break*/, 4];
                    case 3:
                        error_3 = _a.sent();
                        UserData.cfUser.cfIsAllianceUser = false;
                        console.log(error_3);
                        return [3 /*break*/, 4];
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    // 是否是联邦用户
    UserData.isFederatedUserInfo = function (domainId) {
        return __awaiter(this, void 0, void 0, function () {
            var data, domainsArr, domainsList, error_4;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, AccountService_1.AccountService.getFederatedUserInfo(domainId)];
                    case 1:
                        data = _a.sent();
                        if (data && data.domains && data.domains.length > 0) {
                            domainsArr = data.domains;
                            domainsList = domainsArr.filter(function (row) { return row.xfederation_type === 'ALLY_HUAWEICLOUD'; });
                            if (domainsList) {
                                UserData.cfUser.cfIsFederatedUsers = true; // 是联邦用户
                            }
                            else {
                                UserData.cfUser.cfIsFederatedUsers = false;
                            }
                        }
                        else {
                            UserData.cfUser.cfIsFederatedUsers = false;
                        }
                        return [3 /*break*/, 3];
                    case 2:
                        error_4 = _a.sent();
                        console.log(error_4);
                        UserData.cfUser.cfIsFederatedUsers = false;
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * Refreshs user info
     * @returns
     */
    UserData.refreshUserInfo = function () {
        var promiseUser = UserService_1.UserSerivce.getLoginUser(true);
        promiseUser.then(function (data) {
            UserData.updateUserRoles(data.roles);
        });
        return promiseUser;
    };
    /**
     * Sets support multi project
     * @param isSupportMultiProject
     */
    UserData.setSupportMultiProject = function (isSupportMultiProject) {
        UserData.getCfUserSync().supportMultiProject = isSupportMultiProject;
        // 旧工程angular路由跳转相关代码，屏蔽不做处理
        // if (UserData.getCfUserSync().projectName !== '') {
        //     // TODO:
        //     //self.userProjectSupportChangeState();
        // } else {
        //     // TODO:
        //     //self.$rootScope.$on('initUser', self.userProjectSupportChangeState);
        // }
    };
    // DeC region的表达式
    UserData.projectNameRegExp = /^(DeC)_([^_]+)_(.+)$/;
    // 用户自定义project的表达式
    UserData.userProjectNameRegExp = /^([^_]+)_(.+)$/;
    return UserData;
}());
exports.UserData = UserData;
//# sourceMappingURL=data:application/json;base64,