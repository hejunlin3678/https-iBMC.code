"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConfig = exports.httpRequest = exports.getUrl = exports.redirect403 = exports.handleRedirect = void 0;
var StorageService_1 = require("../service/StorageService");
var IndexDBService_1 = require("../service/IndexDBService");
var UtilService_1 = require("../service/UtilService");
var FrameData_1 = require("../FrameData");
var MaskComponent_1 = require("../component/MaskComponent");
var TIME_OUT = 30 * 1000; // 默认超时时间30s
function handleRedirect(res) {
    if (res.status === 200) {
        if (res.headers.get('HW-AJAX-REDIRECT')) {
            StorageService_1.StorageService.flushCookie();
            if (res.headers.get('HW-AJAX-REDIRECT') === 'HW-AJAX-REDIRECT') {
                window.location.reload();
            }
            else {
                window.location.href = res.headers.get('HW-AJAX-REDIRECT');
            }
            return false;
        }
    }
    return true;
}
exports.handleRedirect = handleRedirect;
function handleMaintainRegion(res) {
    if (res.status === 200 && res.headers.get('X-Frame-Maintenance')) {
        window.dispatchEvent(new CustomEvent('cfBeingMaintained'));
    }
}
function redirect403(res, isShow403) {
    if (isShow403 === void 0) { isShow403 = true; }
    if (res.status === 403 && res.headers.get('HW-IAM-FORBIDDEN')) {
        var href = window.location.href;
        var hrefTarget = UtilService_1.UtilService.delUrlParameter(href, 'agencyId');
        if (href !== hrefTarget && !res.headers.get('NOT-REFRESH')) {
            window.location.replace(hrefTarget);
            return;
        }
        if (!document.getElementById('console_frame_forbidden_confirm') && isShow403) {
            var cfShowHttp403Modal = new CustomEvent('cfShowHttp403Modal');
            window.dispatchEvent(cfShowHttp403Modal);
        }
    }
}
exports.redirect403 = redirect403;
function dispatch429Event() {
    var cfShowHttp429Message = new CustomEvent('cfShowHttp429Message');
    window.dispatchEvent(cfShowHttp429Message);
}
function queryParams(params) {
    return UtilService_1.UtilService.convertObj2SearchString(params);
}
function getUrl(type, config) {
    var url = Object.prototype.toString.call(config.url) === '[object Object]'
        ? UtilService_1.UtilService.i18nReplace(config.url['s'], config.url['o'])
        : config.url;
    if (['GET'].includes(type) && (config.params || config.query)) {
        var query = config.query ? queryParams(config.query) : queryParams(config.params);
        url += (url.indexOf('?') === -1 ? '?' : '&') + query;
    }
    if (['POST', 'PUT', 'PATCH', 'DELETE'].includes(type) && config.query) {
        url += (url.indexOf('?') === -1 ? '?' : '&') + queryParams(config.query);
    }
    return url;
}
exports.getUrl = getUrl;
// 获取http请求缓存到localstorage的key
function getCacheId(url, config, cacheKey) {
    var urlLastName = url.substring(url.lastIndexOf('/') + 1);
    var originHashObj = { url: url, method: config.method, cacheKey: cacheKey };
    var hashCode = UtilService_1.UtilService.hashCode(JSON.stringify(originHashObj));
    // cf专有
    if (cacheKey && cacheKey.cfApiName) {
        var region = cacheKey.region ? '_' + cacheKey.region : '';
        var locale = cacheKey.locale ? '_' + cacheKey.locale : '';
        var userId = cacheKey.userId ? '_' + cacheKey.userId : '';
        return "cf_" + cacheKey.cfApiName + region + locale + userId;
    }
    return "cf_" + urlLastName + "_" + hashCode;
}
/*
    @params {string} url 请求链接
    @params {obj} config 原生fetch的config对象
    @params {bool} fullResponse 是否返回待响应头数据
    @params {string} realKey 缓存键名
    @params {bool} onlyCache 是否缓存一次数据
    @return {Promise.resolve()} 返回请求结果的Promise对象
*/
function fetchApi(url, config, fullResponse, realKey, MaskComponentObj) {
    var _this = this;
    if (realKey === void 0) { realKey = ''; }
    if (MaskComponentObj === void 0) { MaskComponentObj = null; }
    var mask = config.mask, isShow403 = config.isShow403, dataType = config.dataType;
    var toDeleteProps = [
        'beforeSend',
        'params',
        'query',
        'timeout',
        'mask',
        'targetUrl',
        'isShow403',
        'cacheResult',
        'cacheTimeout',
        'cacheFirst',
        'cacheKey',
        'dataType',
        'cacheVersion',
    ];
    toDeleteProps.forEach(function (prop) { return Object.hasOwnProperty.call(config, prop) && delete config[prop]; });
    return fetch(url, config)
        .then(function (response) { return __awaiter(_this, void 0, void 0, function () {
        var data, _a, error_1, res, data, error_2;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    if (mask && MaskComponentObj)
                        MaskComponent_1.MaskComponent.hide(MaskComponentObj);
                    if (!response.ok) return [3 /*break*/, 17];
                    handleRedirect(response);
                    handleMaintainRegion(response);
                    _b.label = 1;
                case 1:
                    _b.trys.push([1, 15, , 16]);
                    data = void 0;
                    _a = dataType;
                    switch (_a) {
                        case 'text': return [3 /*break*/, 2];
                        case 'blob': return [3 /*break*/, 4];
                        case 'formData': return [3 /*break*/, 6];
                        case 'arrayBuffer': return [3 /*break*/, 8];
                        case 'json': return [3 /*break*/, 10];
                    }
                    return [3 /*break*/, 12];
                case 2: return [4 /*yield*/, response.text()];
                case 3:
                    data = _b.sent();
                    return [3 /*break*/, 14];
                case 4: return [4 /*yield*/, response.blob()];
                case 5:
                    data = _b.sent();
                    return [3 /*break*/, 14];
                case 6: return [4 /*yield*/, response.formData()];
                case 7:
                    data = _b.sent();
                    return [3 /*break*/, 14];
                case 8: return [4 /*yield*/, response.arrayBuffer()];
                case 9:
                    data = _b.sent();
                    return [3 /*break*/, 14];
                case 10: return [4 /*yield*/, response.json()];
                case 11:
                    data = _b.sent();
                    return [3 /*break*/, 14];
                case 12: return [4 /*yield*/, response.json()];
                case 13:
                    data = _b.sent();
                    return [3 /*break*/, 14];
                case 14:
                    response.data = data;
                    if (realKey) {
                        IndexDBService_1.cfApiCacheCtrl.setCache(realKey, fullResponse ? response : data, config);
                    }
                    return [2 /*return*/, Promise.resolve(fullResponse ? response : data)];
                case 15:
                    error_1 = _b.sent();
                    return [2 /*return*/, Promise.resolve(fullResponse ? response : null)];
                case 16: return [3 /*break*/, 24];
                case 17:
                    switch (response.status) {
                        case 403:
                            redirect403(response, isShow403);
                            break;
                        case 429:
                            dispatch429Event();
                            break;
                    }
                    res = {
                        status: response.status,
                        statusText: response.statusText,
                    };
                    _b.label = 18;
                case 18:
                    _b.trys.push([18, 23, , 24]);
                    data = void 0;
                    if (!(dataType === 'text')) return [3 /*break*/, 20];
                    return [4 /*yield*/, response.text()];
                case 19:
                    data = _b.sent();
                    return [3 /*break*/, 22];
                case 20: return [4 /*yield*/, response.json()];
                case 21:
                    data = _b.sent();
                    _b.label = 22;
                case 22:
                    response.data = data;
                    return [2 /*return*/, Promise.reject(fullResponse ? response : __assign(__assign({}, res), { data: data }))];
                case 23:
                    error_2 = _b.sent();
                    return [2 /*return*/, Promise.reject(fullResponse ? response : res)];
                case 24: return [2 /*return*/];
            }
        });
    }); })
        .catch(function (error) {
        if (mask && MaskComponentObj)
            MaskComponent_1.MaskComponent.hide(MaskComponentObj);
        return Promise.reject(error);
    });
}
function httpRequest(url, config, fullResponse) {
    if (fullResponse === void 0) { fullResponse = false; }
    var timeout = config.timeout && !isNaN(config.timeout) ? config.timeout : TIME_OUT;
    var mask = config.mask, cacheResult = config.cacheResult, cacheTimeout = config.cacheTimeout, cacheFirst = config.cacheFirst, cacheKey = config.cacheKey, cacheVersion = config.cacheVersion;
    var cacheId = cacheResult ? getCacheId(url, config, cacheKey) : '';
    var MaskComponentObj;
    var apiTimeOutHandle = null;
    if (mask) {
        MaskComponent_1.MaskComponent.show();
        MaskComponentObj = {
            isMask: true,
            apiTimeOutHandle: apiTimeOutHandle,
        };
    }
    var fetchPromise;
    var timeoutPromise = new Promise(function (_resolve, reject) {
        return (apiTimeOutHandle = setTimeout(function () {
            if (mask && MaskComponentObj)
                MaskComponent_1.MaskComponent.hide(MaskComponentObj);
            apiTimeOutHandle = null;
            return reject(new Error('request timeout'));
        }, timeout));
    });
    var cacheConfig = {
        cacheTimeout: cacheTimeout,
        cacheVersion: cacheVersion,
        noCache: false,
    };
    if (cacheResult && cacheFirst) {
        fetchPromise = IndexDBService_1.cfApiCacheCtrl.getCache(cacheId, cacheVersion).then(function (data) {
            if (data) {
                if (mask && MaskComponentObj)
                    MaskComponent_1.MaskComponent.hide(MaskComponentObj);
                // 如果已经加载完成则直接发起请求
                if (document.readyState === 'complete') {
                    fetchApi(url, config, fullResponse, cacheId, MaskComponentObj);
                }
                else {
                    IndexDBService_1.cfApiCacheCtrl.toFetchList.push({ url: url, config: config, fullResponse: fullResponse, cacheId: cacheId });
                }
                cacheConfig.noCache = true;
                return Promise.resolve(data);
            }
            else {
                return fetchApi(url, config, fullResponse, '', MaskComponentObj);
            }
        });
    }
    else {
        fetchPromise = fetchApi(url, config, fullResponse, '', MaskComponentObj);
    }
    if (cacheResult) {
        var cachePromise = IndexDBService_1.cfApiCacheCtrl.cfCacheApiPromise(fetchPromise, cacheId, cacheConfig);
        return Promise.race([cachePromise, timeoutPromise]);
    }
    return Promise.race([fetchPromise, timeoutPromise]);
}
exports.httpRequest = httpRequest;
function getConfig(type, config) {
    var resConfig = config;
    if (!resConfig.credentials)
        resConfig.credentials = 'same-origin';
    var agencyId = '';
    if (config.url) {
        var url = getUrl(type, config);
        // me接口不需要添加agencyId
        agencyId = /\/rest\/me$/.test(url) ? '' : UtilService_1.UtilService.getUrlParameter('agencyId', true);
    }
    var defaultHeaders = {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/json; charset=UTF-8',
        'X-Language': FrameData_1.FrameData.getLanguage() || '',
        cftk: StorageService_1.StorageService.getCookie((window['app_cookie_prefix'] || '') + 'cftk') || '',
        'cf2-cftk': StorageService_1.StorageService.getCookie((window['app_cookie_prefix'] || '') + 'cf2_cftk') || '',
        AgencyId: agencyId,
        ProjectName: UtilService_1.UtilService.getProjectName(),
        region: UtilService_1.UtilService.getRegion(),
        'X-Requested-With': 'XMLHttpRequest',
    };
    if (config.url)
        resConfig.url = getUrl(type, config);
    resConfig.headers = Object.assign(defaultHeaders, config.headers || {});
    // 文件上传需要去掉 content-type请求头
    if (Object.prototype.toString.call(config.body) === '[object FormData]' ||
        resConfig.headers['Content-Type'] === '') {
        delete resConfig.headers['Content-Type'];
    }
    if (config.targetUrl) {
        Object.assign(resConfig.headers, {
            'X-Request-From': 'Framework',
            'X-CF2-PASSTHROUGH': 'false',
            'X-CF2-TARGET-URL': config.targetUrl,
        });
    }
    switch (type) {
        case 'GET':
            resConfig.method = type;
            break;
        case 'DELETE':
        case 'POST':
        case 'PUT':
        case 'PATCH':
            resConfig.method = type;
            if (!resConfig.body)
                resConfig.body = JSON.stringify(config.params);
            break;
        default:
            break;
    }
    return resConfig;
}
exports.getConfig = getConfig;
function changeCacheDataLater() {
    IndexDBService_1.cfApiCacheCtrl.toFetchList.forEach(function (item) {
        var url = item.url, config = item.config, fullResponse = item.fullResponse, cacheId = item.cacheId;
        fetchApi(url, config, fullResponse, cacheId);
    });
}
// ?时间给多长,是否会对后续客户操作产生性能影响
UtilService_1.UtilService.onload(changeCacheDataLater, 0);
//# sourceMappingURL=data:application/json;base64,