import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { TiFormComponent, TiDominatorComponent, TiDropsearchComponent, TiButtongroupComponent } from '@cloud/tiny3';
/**
 * @ignore
 * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。
 */
import * as ɵngcc0 from '@angular/core';
export interface TpRegionselectOption {
    /**
     * 地区名称
     */
    label: string;
    /**
     * 地区对应序列ID
     */
    id: string;
    /**
     * 当前地区的下级地区列表
     */
    nextLevel?: Array<TpRegionselectOption>;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * @ignore
 * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。
 *
 * regionselect组件提供省、市、县三级区域的选择
 *
 * <example-url>../tinyplus3demo/#/regionselect/regionselect-all</example-url>
 */
export declare class TpRegionselectComponent extends TiFormComponent {
    protected hostRef: ElementRef;
    protected renderer: Renderer2;
    constructor(hostRef: ElementRef, renderer: Renderer2);
    /**
     * 区域选择总数据
     */
    regionselectOption: Array<TpRegionselectOption>;
    /**
     * 无数据时组件下展显示，需服务自行配置
     */
    noDataText: string;
    /**
     * 是否支持搜索
     */
    searchable: boolean;
    /**
     * 区域点击选择之后触发该事件
     */
    readonly change: EventEmitter<any>;
    /**
     * @ignore
     */
    TiDominatorCom: TiDominatorComponent;
    /**
     * @ignore
     */
    dropCom: TiDropsearchComponent;
    /**
     * @ignore
     */
    btnGroupCom: TiButtongroupComponent;
    /**
     * @ignore
     */
    wrapperEle: ElementRef;
    /**
     * @ignore
     */
    buttongroupEle: ElementRef;
    /**
     * @ignore
     */
    labelKey: string;
    /**
     * @ignore
     */
    showText: string;
    /**
     * @ignore
     */
    btnItems: Array<any>;
    /**
     * @ignore
     */
    btnSelected: any;
    /**
     * @ignore
     */
    options: Array<TpRegionselectOption>;
    /**
     * @ignore
     */
    currentmodel: any;
    /**
     * @ignore
     */
    dropshow: boolean;
    private regionArr;
    private hasFoundId;
    private isSpecialZone;
    private isNotLastOne;
    private classifications;
    private classificationLevel;
    private currentClassificationsLength;
    private cfRegionSelectSeparativeSign;
    private originSuggestions;
    private hasadjustWidth;
    private oldSearchable;
    /**
     * @ignore
     */
    writeValue(val: any): void;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    /**
     * @ignore
     */
    onMousedownFn(event: MouseEvent): void;
    /**
     * @ignore
     */
    onBlur(): void;
    /**
     * @ignore
     * 点击关闭或隐藏下拉面板
     */
    onClickFn(event: MouseEvent): void;
    /**
     * @ignore
     * 选择数据之后触发事件
     */
    onSelect(option: any): void;
    private onSelectFn;
    private changeSelectedData;
    private getBtnItems;
    private initSelectedData;
    private getRegionIdArr;
    private getSelectedOption;
    /**
     * @ignore
     */
    btnChangeFn(): void;
    private findIndex;
    private handleOriginSuggestions;
    private changeDropdownSuggestions;
    private changePlaceholder;
    private changeBtnRight;
    /**
     * @ignore
     * 判断是否溢出并获取超出宽度
     */
    getExtraWidth(): number;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpRegionselectComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpRegionselectComponent, "tp-regionselect", never, { "noDataText": "noDataText"; "searchable": "searchable"; "regionselectOption": "regionselectOption"; }, { "change": "change"; }, never, never, false>;
}

//# sourceMappingURL=TpRegionselectComponent.d.ts.map