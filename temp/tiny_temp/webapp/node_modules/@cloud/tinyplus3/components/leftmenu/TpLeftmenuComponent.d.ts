import { ElementRef, EventEmitter } from "@angular/core";
import { TiBaseComponent, TiLeftmenuItem } from '@cloud/tiny3';
import * as ɵngcc0 from '@angular/core';
export interface TpLeftmenuConfig {
    /**
     * 设置服务名称
     */
    serviceName: string;
    /**
     * 控制右侧内容区的刷新
     *
     * 注意：当重复点击当前激活菜单项时，需要刷新右侧内容区，为了实现此功能设置了该接口；
     * 该接口是双向绑定的，当重复点击当前激活菜单项时，reloadState的值会经历 true(上次的值) -> false -> true
     * 的变化过程，开发者给改接口与其右侧区域容器上ngIf接口绑定的是同一个变量，所以ngIf的值也会经历同样的变化，
     * 从而做到右侧内容区的刷新。
     */
    reloadState: boolean;
    /**
     * 是否开启左侧菜单面板可折叠功能，默认开启。
     */
    toggleable?: boolean;
    /**
     * 左侧菜单面板是否为收起状态，用于设置面板收起/展开状态，默认展开。
     */
    collapsed?: boolean;
    /**
     * 左侧菜单面板收起/展开状态改变时向外通知
     */
    collapsedChangeFn?: (collapsed: boolean) => void;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
export interface TpLeftmenuItem extends TiLeftmenuItem {
    /**
     * 菜单项文本内容
     */
    label: string;
    /**
     * 分组或一级菜单项可设置该属性
     */
    children?: Array<TpLeftmenuItem>;
    /**
     * 是否隐藏菜单项
     */
    hide?: boolean;
    /**
     * 是否为分组项
     */
    isGroup?: boolean;
    /**
     * 如果是分组项，是否展开该组
     */
    expanded?: boolean;
}
/**
 * TpLeftmenu组件主要用于左侧导航，是基于Tiny3中的TiLeftmenu组件进行封装的，详细的数据接口说明可参照Tiny3中的TiLeftmenu。
 *
 * <example-url>../tinyplus3demo/#/leftmenu/leftmenu-all</example-url>
 */
export declare class TpLeftmenuComponent extends TiBaseComponent {
    private static readonly CHINESE_REG;
    /**
     * 左侧菜单配置项
     */
    config: TpLeftmenuConfig;
    /**
     * 左侧菜单数据
     *
     * 其中的 href 属性 在v10.0.1 ~ v10.1.3版本存在XSS攻击(url类型)风险，v10.1.4 版本做了安全处理，已不存在安全问题，建议业务尽快升级版本。
     *
     */
    items: Array<TpLeftmenuItem>;
    /**
     * 设置激活菜单项。这个值应该是 TiLeftmenuLevel1 和 TiLeftmenuLevel2 组件的 item 接口传入的值的集合中的一个(item)
     *
     * 此接口是双向绑定的，设置时中括号“[]”和圆括号“()”要同时使用
     */
    active: TpLeftmenuItem;
    /**
     * 激活菜单项改变时向外通知
     */
    readonly activeChange: EventEmitter<TpLeftmenuItem>;
    /**
     * @ignore
     * 底部元素
     */
    leftmenuFoot: ElementRef;
    /**
     * @ignore
     * 模板中使用
     */
    getHeaderTextClass(): string;
    /**
     * @ignore
     * 激活菜单项改变时向外通知
     */
    onActiveChange(item: TpLeftmenuItem): void;
    /**
     * @ignore
     * 触发点击事件
     */
    triggerClick(item: TpLeftmenuItem): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpLeftmenuComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpLeftmenuComponent, "tp-leftmenu", never, { "config": "config"; "items": "items"; "active": "active"; }, { "activeChange": "activeChange"; }, ["leftmenuFoot"], never, false>;
}

//# sourceMappingURL=TpLeftmenuComponent.d.ts.map