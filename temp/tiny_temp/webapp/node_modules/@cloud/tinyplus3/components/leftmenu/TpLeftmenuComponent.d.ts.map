{"version":3,"file":"TpLeftmenuComponent.d.ts","sources":["TpLeftmenuComponent.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter } from \"@angular/core\";\r\nimport { TiBaseComponent, TiLeftmenuItem } from '@cloud/tiny3';\r\nexport interface TpLeftmenuConfig {\r\n    /**\r\n     * 设置服务名称\r\n     */\r\n    serviceName: string;\r\n    /**\r\n     * 控制右侧内容区的刷新\r\n     *\r\n     * 注意：当重复点击当前激活菜单项时，需要刷新右侧内容区，为了实现此功能设置了该接口；\r\n     * 该接口是双向绑定的，当重复点击当前激活菜单项时，reloadState的值会经历 true(上次的值) -> false -> true\r\n     * 的变化过程，开发者给改接口与其右侧区域容器上ngIf接口绑定的是同一个变量，所以ngIf的值也会经历同样的变化，\r\n     * 从而做到右侧内容区的刷新。\r\n     */\r\n    reloadState: boolean;\r\n    /**\r\n     * 是否开启左侧菜单面板可折叠功能，默认开启。\r\n     */\r\n    toggleable?: boolean;\r\n    /**\r\n     * 左侧菜单面板是否为收起状态，用于设置面板收起/展开状态，默认展开。\r\n     */\r\n    collapsed?: boolean;\r\n    /**\r\n     * 左侧菜单面板收起/展开状态改变时向外通知\r\n     */\r\n    collapsedChangeFn?: (collapsed: boolean) => void;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\nexport interface TpLeftmenuItem extends TiLeftmenuItem {\r\n    /**\r\n     * 菜单项文本内容\r\n     */\r\n    label: string;\r\n    /**\r\n     * 分组或一级菜单项可设置该属性\r\n     */\r\n    children?: Array<TpLeftmenuItem>;\r\n    /**\r\n     * 是否隐藏菜单项\r\n     */\r\n    hide?: boolean;\r\n    /**\r\n     * 是否为分组项\r\n     */\r\n    isGroup?: boolean;\r\n    /**\r\n     * 如果是分组项，是否展开该组\r\n     */\r\n    expanded?: boolean;\r\n}\r\n/**\r\n * TpLeftmenu组件主要用于左侧导航，是基于Tiny3中的TiLeftmenu组件进行封装的，详细的数据接口说明可参照Tiny3中的TiLeftmenu。\r\n *\r\n * <example-url>../tinyplus3demo/#/leftmenu/leftmenu-all</example-url>\r\n */\r\nexport declare class TpLeftmenuComponent extends TiBaseComponent {\r\n    private static readonly CHINESE_REG;\r\n    /**\r\n     * 左侧菜单配置项\r\n     */\r\n    config: TpLeftmenuConfig;\r\n    /**\r\n     * 左侧菜单数据\r\n     *\r\n     * 其中的 href 属性 在v10.0.1 ~ v10.1.3版本存在XSS攻击(url类型)风险，v10.1.4 版本做了安全处理，已不存在安全问题，建议业务尽快升级版本。\r\n     *\r\n     */\r\n    items: Array<TpLeftmenuItem>;\r\n    /**\r\n     * 设置激活菜单项。这个值应该是 TiLeftmenuLevel1 和 TiLeftmenuLevel2 组件的 item 接口传入的值的集合中的一个(item)\r\n     *\r\n     * 此接口是双向绑定的，设置时中括号“[]”和圆括号“()”要同时使用\r\n     */\r\n    active: TpLeftmenuItem;\r\n    /**\r\n     * 激活菜单项改变时向外通知\r\n     */\r\n    readonly activeChange: EventEmitter<TpLeftmenuItem>;\r\n    /**\r\n     * @ignore\r\n     * 底部元素\r\n     */\r\n    leftmenuFoot: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 模板中使用\r\n     */\r\n    getHeaderTextClass(): string;\r\n    /**\r\n     * @ignore\r\n     * 激活菜单项改变时向外通知\r\n     */\r\n    onActiveChange(item: TpLeftmenuItem): void;\r\n    /**\r\n     * @ignore\r\n     * 触发点击事件\r\n     */\r\n    triggerClick(item: TpLeftmenuItem): void;\r\n}\r\n"]}