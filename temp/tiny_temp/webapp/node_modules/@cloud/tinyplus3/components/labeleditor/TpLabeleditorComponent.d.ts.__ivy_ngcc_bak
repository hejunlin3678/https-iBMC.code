import { FormControl, ValidatorFn } from '@angular/forms';
import { ChangeDetectorRef, ElementRef, EventEmitter, Renderer2, NgZone } from '@angular/core';
import { TiFormComponent, TiTextareaComponent, TiTextComponent, TiValidationConfig } from '@cloud/tiny3';
/**
 * 可编辑文本组件，主要实现了编辑文本的功能。组件有两种状态：编辑状态和非编辑状态。
 * 在非编辑状态:点击右侧笔图标时，切换到编辑状态。
 * 在编辑状态:点击右侧对号图标时，切换到非编辑状态，
 * 并且将输入框中内容显示在非编辑状态的文本中;
 * 点击右侧叉图标时，切换到非编辑状态，非编辑状态的文本保持之前的不变，用户输入不生效。
 *
 * <example-url>../tinyplus3demo/#/labeleditor/labeleditor-all</example-url>
 */
export declare class TpLabeleditorComponent extends TiFormComponent {
    protected elementRef: ElementRef;
    private changeDetectorRef;
    protected renderer2: Renderer2;
    private zone;
    constructor(elementRef: ElementRef, changeDetectorRef: ChangeDetectorRef, renderer2: Renderer2, zone: NgZone);
    /**
     * 是否超出显示TIP
     */
    autoTip: boolean;
    /**
     * 是否为多行文本编辑
     */
    multiline: boolean;
    /**
     * 用来调整文本框大小，该属性提供了四个属性值:
     *
     * none(不可调整组件大小):
     *
     * vertical(仅可调整垂直方向的大小，即调整组件的高度)
     *
     * horizontal(仅可调节水平方向的大小，即调整组件的宽度)
     *
     * both(水平和垂直方向均可调节，宽高都可调节)
     */
    resize: 'none' | 'vertical' | 'horizontal' | 'both';
    /**
     * 显示文本length
     */
    maxlength: number;
    /**
     * 编辑图标Tip内容
     */
    iconTip: string;
    /**
     * 配置校验相关信息，详见接口TiValidationConfig
     */
    validation: TiValidationConfig;
    /**
     * 用户自定义校验规则
     *
     * 接口值被当作new FormControl()的第二个参数
     *
     * 接口类型与new FormControl()的第二个参数格式一致，详情参考angular表单部分
     */
    validationRules: Array<ValidatorFn>;
    /**
     * 新增10.1.2
     * 用来配置文本框的宽
     */
    width: string;
    /**
     * 新增10.1.2
     * 用来配置文本框的高
     */
    height: string;
    /**
     * 编辑事件接口
     */
    readonly editor: EventEmitter<any>;
    /**
     * 确认事件接口
     */
    readonly confirm: EventEmitter<any>;
    /**
     * 取消事件接口
     */
    readonly cancel: EventEmitter<any>;
    /**
     * @ignore
     */
    textareaComp: TiTextareaComponent;
    /**
     * @ignore
     */
    textComp: TiTextComponent;
    /**
     * @ignore
     */
    confirmIconEle: ElementRef;
    /**
     * @ignore
     */
    editEle: ElementRef;
    /**
     * @ignore
     */
    isEditing: boolean;
    /**
     * @ignore
     */
    value: string;
    /**
     * @ignore
     */
    oldValue: string;
    /**
     * @ignore
     */
    emptyValue: string;
    /**
     * @ignore
     */
    control: FormControl;
    /**
     * @ignore
     */
    valueInvalid: boolean;
    private subscription;
    ngOnInit(): void;
    /**
     * @ignore
     */
    ngOnModelChange(): void;
    ngOnDestroy(): void;
    /**
     * @ignore
     * 点击编辑图标事件
     */
    onClickEdit(): void;
    /**
     * @ignore
     * 点击确认图标事件
     */
    onClickConfirm(): void;
    /**
     * @ignore
     * 点击取消图标事件
     */
    onClickCancel(): void;
}
