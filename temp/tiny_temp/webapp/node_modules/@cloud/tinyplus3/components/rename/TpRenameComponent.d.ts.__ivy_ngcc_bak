import { ElementRef, EventEmitter, NgZone, Renderer2, TemplateRef } from '@angular/core';
import { TiBaseComponent, TiPopupService, TiPositionType } from '@cloud/tiny3';
/**
 * rename组件生产的弹窗实例，提供hide()方法，用于关闭弹窗
 */
export interface TpRenameModalRef {
    /**
     * 关闭弹窗的方法
     */
    hide(): void;
}
/**
 * 名称编辑组件
 *
 * <example-url>../tinyplus3demo/#/rename/rename-all</example-url>
 */
export declare class TpRenameComponent extends TiBaseComponent {
    protected hostRef: ElementRef;
    protected renderer2: Renderer2;
    private tiPopup;
    private zone;
    constructor(hostRef: ElementRef, renderer2: Renderer2, tiPopup: TiPopupService<any>, zone: NgZone);
    /**
     * 待编辑的内容
     */
    value: string;
    /**
     * 标识该行数据是否为new
     */
    isNew: boolean;
    /**
     * 组件是否可用
     */
    disabled: boolean;
    /**
     * 弹窗标题
     */
    modalHeader: string;
    /**
     * @ignore
     * 铅笔图标的tip提示信息
     *
     * 根据华为云4.0规范变更，使用原生title代替tip解释图标的作用，10.0.1版本起该接口隐藏，并取消缺省值（编辑/Edit（国际化））
     */
    iconTip: string;
    /**
     * @ignore
     * 铅笔图标的tip提示信息方位，10.0.1版本起该接口隐藏
     */
    iconTipPosition: TiPositionType;
    /**
     * 10.0.1新增
     *
     * 图标的title属性，用于说明图标的作用
     */
    iconTitle: string;
    /**
     * 10.0.3新增
     *
     * 是否通过组件显示被编辑的内容，组件以文本的形式显示，默认显示
     */
    showValue: boolean;
    /**
     * 确认/OK按钮点击事件，参数：输入框的内容
     */
    readonly confirm: EventEmitter<any>;
    /**
     * 确认/OK按钮点击事件，为开发者提供关闭弹窗的时机
     *
     * 参数：弹窗实例[TpRenameModalRef]{@link ../interfaces/TpRenameModalRef.html}
     */
    readonly beforeClose: EventEmitter<any>;
    /**
     * @ignore
     * 自定义弹窗模板
     */
    customModal: TemplateRef<any>;
    private hostSpace;
    private defaultModalHeader;
    private unlistenDocumentClick;
    private renameModal;
    private TpRenameModalComponentRef;
    ngOnInit(): void;
    /**
     * @ignore
     */
    onClick(): void;
    private DeterminePosition;
    private findClosestTD;
    private addDocumentClickEvent;
    private destroyRenameModal;
    ngOnDestroy(): void;
}
