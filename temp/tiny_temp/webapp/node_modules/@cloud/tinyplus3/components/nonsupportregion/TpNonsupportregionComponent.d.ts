import { ChangeDetectorRef, ElementRef, Renderer2, SimpleChanges } from '@angular/core';
import { TiBaseComponent } from '@cloud/tiny3';
/**
 * 该接口定义与console框架数据结构保持一致
 *
 * 10.1.0/9.1.0新增
 */
import * as ɵngcc0 from '@angular/core';
export interface TpRegionData {
    /**
     * 当前region数据，对象类型
     */
    region?: any;
    /**
     * 当前服务自行处理后支持的region列表，数组对象类型
     */
    supportRegions?: Array<any>;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * 区域服务不支持页面组件
 *
 * 该组件与console框架相关，框架处理数据，组件获取数据显示；
 * 有些服务无法在servicecm配置支持的region列表，可通过regionData接口配置
 *
 * <b>注</b>：支持列表中的region区域是服务已配置的可支持的区域。
 *
 * <example-url>../tinyplus3demo/#/nonsupportregion/nonsupportregion-all</example-url>
 */
export declare class TpNonsupportregionComponent extends TiBaseComponent {
    private elementRef;
    private renderer2;
    private changeDetector;
    /**
     * 配置当前区域数据和当前服务下支持的区域列表数据，默认数据来源于console框架getRegionData()中提供的region及supportRegions
     *
     * 业务侧可自行处理console框架getRegionData()中提供的区域数据后传入
     *
     * 10.1.0/9.1.0新增
     */
    regionData: TpRegionData;
    /**
     * @ignore
     */
    containerEle: ElementRef;
    /**
     * @ignore
     */
    label: string;
    /**
     * @ignore
     */
    supportRegions: Array<any>;
    private regionsDataSub;
    constructor(elementRef: ElementRef, renderer2: Renderer2, changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private setRegionsData;
    private setViewInfo;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpNonsupportregionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpNonsupportregionComponent, "tp-nonsupportregion", never, { "regionData": "regionData"; }, {}, never, never, false>;
}

//# sourceMappingURL=TpNonsupportregionComponent.d.ts.map