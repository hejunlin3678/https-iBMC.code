import { TiBaseComponent } from '@cloud/tiny3';
export declare type TpCountDownCode = 'hws_countdown_period_using' | 'hws_countdown_period_gracing' | 'hws_countdown_period_frozen' | 'hws_countdown_period_illegalfrozen' | 'hws_countdown_period_policefrozen' | 'hws_countdown_period_toondemand' | 'hws_countdown_ondemand_using' | 'hws_countdown_ondemand_gracing' | 'hws_countdown_ondemand_frozen' | 'hws_countdown_ondemand_illegalfrozen' | 'hws_countdown_ondemand_illegalfrozen_arrear' | 'hws_countdown_ondemand_policefrozen';
/**
 * 倒计时信息，接口是根据"云运营公共接口说明"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口
 */
export interface TpCountDownInfos {
    status: number;
    nextOperationRemainingDay: number;
    nextOperationRemainingHour: number;
    nextOperationRemainingMinute: number;
    nextOperationRemainingSecond: number;
    [propName: string]: any;
}
/**
 * 倒计时信息提示信息，接口是根据"云运营公共接口说明"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口
 */
export interface TpCountDownTips {
    effTime: string;
    expTime: string;
    graceTime: string;
    releaseTime: string;
    frozenTime: string;
    [propName: string]: any;
}
/**
 * 资源倒计时组件
 * <example-url>../tinyplus3demo/#/countdown/countdown-all</example-url>
 */
export declare class TpCountdownComponent extends TiBaseComponent {
    /**
     * 是否显示资源的状态
     */
    showStatus: boolean;
    /**
     * 倒计时类别，即倒计时countDownCode字段
     */
    countDownCode: TpCountDownCode;
    /**
     * 倒计时数据, 和2.21云服务倒计时信息查询接口返回的countDownInfos一致
     */
    countDownInfos: TpCountDownInfos;
    /**
     * tip提示数据，和2.21云服务倒计时信息查询接口返回的TpCountDownTips一致
     */
    countDownTips: TpCountDownTips;
    /**
     * @ignore
     * 倒计时最后显示的文本
     */
    countdownText: string;
    /**
     * @ignore
     * tip 的内容
     */
    tipContext: any;
    /**
     * @ignore
     * tip 的最大宽度
     */
    tipMaxWidth: string;
    ngOnInit(): void;
    /**
     * 生成倒计时内容
     */
    private generateContent;
    private isDayLess7;
    /**
     * 生成tips 内容
     */
    private generateTipContent;
    /**
     * 日期时间戳转换成带时区的
     */
    private formatLocaleDateTime;
}
