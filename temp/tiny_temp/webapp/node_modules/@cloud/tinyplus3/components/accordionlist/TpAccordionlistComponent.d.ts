import { TemplateRef } from '@angular/core';
import { TiActionmenuItem, TiBaseComponent } from '@cloud/tiny3';
/**
 * 折叠面板列表中单个折叠面板的信息接口
 */
import * as ɵngcc0 from '@angular/core';
export interface TpAccordionlistOption {
    /**
     * 单个折叠面板是否处于展开状态，用于初始化设置，默认不展开
     */
    open?: boolean;
    /**
     * 单个折叠面板是否禁用
     */
    disabled?: boolean;
    /**
     * 单个折叠面板的头部(除过右侧actionmenu操作区)点击回调
     */
    headClick?: ($event: Event) => void;
    /**
     * 单个折叠面板左侧的显示文本
     */
    headlabel?: string;
    /**
     * 单个折叠面板右侧actionmenu操作区配置项
     */
    actionmenu?: TpAccordionlistActionmenuItem;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
export interface TpAccordionlistActionmenuItem {
    /**
     * 操作项数据集
     */
    items: Array<TiActionmenuItem>;
    /**
     * 数据集中要显示字符串的key
     */
    labelKey?: string;
    /**
     * 下拉面板最大宽度，超过时换行，对所有子菜单都生效
     */
    panelMaxWidth?: string;
    /**
     * 下拉面板最大高度度，超过时出现竖向滚动条，对所有子菜单都生效。
     */
    panelMaxHeight?: string;
    /**
     * 操作项外部容器宽度
     */
    maxWidth?: string;
    /**
     * @ignore
     * 最多显示个数, 包含下拉菜单。UI规范规定最多显示4个, 所以暂不对外开放
     */
    maxShowNum?: number;
    /**
     * 点击选中操作菜单项事件
     */
    select?: (item: TiActionmenuItem, option: TpAccordionlistOption) => void;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 *
 *  折叠面板列表组件
 *
 *  10.1.0版本新增
 *
 *  10.0.4及之前的版本是以模板的形式提供(只提供了一些样式）；10.1.0版本为了实现样式按需加载和其使用简便性，去掉了之前的模板，封装了该组件。
 *
 *  <example-url>../tinyplus3demo/#/accordionlist/accordionlist-all</example-url>
 *
 */
export declare class TpAccordionlistComponent extends TiBaseComponent {
    /**
     * 展开某一项时，是否关闭其它项
     */
    closeOthers: boolean;
    /**
     * 折叠面板列表数据集合
     */
    options: Array<TpAccordionlistOption>;
    /**
     * @ignore
     * 获取到用户自定义的头部左侧label区模板
     */
    headLabelTemplate: TemplateRef<any>;
    /**
     * @ignore
     * 获取到用户自定义的展开内容区模板
     */
    contentTemplate: TemplateRef<any>;
    private accordionItemComps;
    /**
     * @ignore
     */
    headClick($event: Event, option: TpAccordionlistOption, index: number, actionmenuContainer: any): void;
    /**
     * @ignore
     */
    onActionmenuSelect(item: TiActionmenuItem, option: TpAccordionlistOption): void;
    /**
     * @ignore
     */
    getActionmenuItems(option: TpAccordionlistOption): Array<TiActionmenuItem>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpAccordionlistComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpAccordionlistComponent, "tp-accordionlist", never, { "closeOthers": "closeOthers"; "options": "options"; }, {}, ["headLabelTemplate", "contentTemplate"], never, false>;
}

//# sourceMappingURL=TpAccordionlistComponent.d.ts.map