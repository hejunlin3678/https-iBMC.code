import { ChangeDetectorRef, ElementRef, EventEmitter, Renderer2, SimpleChanges, QueryList } from '@angular/core';
import { TiDateComponent, TiDominatorComponent, TiDropComponent, TiDropsearchComponent, TiFormComponent } from '@cloud/tiny3';
import { TpIconComponent } from '../icon/TpIconModule';
/**
 * tag类型, radio-默认单选， noValue-非正常tag，tag值为空，  checkbox-多选，map-键值tag, numRange-数字范围tag,
 * dateRange-日期范围tag。tag 的分类是根据键值的结果划分
 */
export declare type TpSearchboxTagType = 'radio' | 'noValue' | 'checkbox' | 'map' | 'numRange' | 'dateRange';
/**
 * 候选tag数据配置项
 */
export interface TpSearchboxItem {
    /**
     * 搜索字段，tag的键
     */
    field: string;
    /**
     * tag 键的显示值，实际结果是field
     */
    label: string;
    /**
     * 配置项可生产的tag类型
     */
    type?: TpSearchboxTagType;
    /**
     * tag 值的选择项数据
     */
    options: Array<TpSearchboxOption>;
    /**
     * 自动识别匹配正则
     * 10.0.2 新增
     */
    regexp?: RegExp;
    /**
     * radio 单选类型可设置, 设置为false时,单选属性可以多次选择
     */
    replace?: boolean;
    /**
     * 单选或多选值的选中项键值
     * 10.0.2 新增
     */
    optionValueKey?: string;
    /**
     * dateRange 类型日期显示和结果格式，dateRange时必选
     */
    format?: string;
    /**
     * numRange 最小值，类型为number
     * dateRange开始日期，类型为Date
     */
    start?: number | Date;
    /**
     * numRange 最大值，类型为number
     * dateRange起始日期，类型为Date
     */
    end?: number | Date;
    /**
     * numRange 可填最小值，用于校验
     * dateRange可选最小值，用于校验
     */
    min?: number | Date;
    /**
     * numRange 可填最大值，用于校验
     * dateRange可选最大值，用于校验
     */
    max?: number | Date;
    /**
     * 每个item对应的提示文本
     */
    placeholder?: string;
    [propName: string]: any;
}
export interface TpSearchboxOption {
    /**
     * 选项显示值
     */
    label: string;
    /**
     * 搜索目标字段，只有‘label’才需要
     */
    field?: string;
    /**
     * 控制map类型二级选项是否出现内置所有值，map类型需要
     */
    allValues?: boolean;
    /**
     * 控制map类型二级选项是否出现内置空值，map类型需要
     */
    emptyValue?: boolean;
    /**
     * map类型二级选项数据
     */
    options?: Array<any>;
    [propName: string]: any;
}
/**
 * 每个选中tag的类型
 */
export interface TpSearchboxTag {
    /**
     * 搜索目标搜字段
     */
    field: string;
    /**
     * tag键，field的显示值
     */
    label: string;
    /**
     * tag值
     */
    value: string;
    /**
     * 类型
     */
    type: TpSearchboxTagType;
    /**
     * 数字范围和日期范围tag 开始值
     */
    start?: number | string;
    /**
     * 数字范围和日期范围tag 结束值
     */
    end?: number | string;
    [propName: string]: any;
}
/**
 * search 事件回调参数的数据对象，对象的键对应field，对象的值是字符串数组，单选单个，多选多个
 */
export interface TpSearchboxFilter {
    [propName: string]: Array<String>;
}
/**
 * ip正则
 * 10.0.2 新增
 */
export declare const TP_REGEXP_IP: RegExp;
/**
 * UUID正则
 * 10.0.2 新增
 */
export declare const TP_REGEXP_UUID: RegExp;
/**
 * 综合搜索组件。
 * 用户通过该组件，选择出数据过滤需要的参数
 *
 * <example-url>../tinyplus3demo/#/searchbox/searchbox-all</example-url>
 */
export declare class TpSearchboxComponent extends TiFormComponent {
    private changeDetectorRef;
    /**
     * @ignore
     * formControl 校验状态，通过了所有有效性检查
     */
    static readonly VALID: string;
    /**
     * @ignore
     * formControl 校验状态，至少有一个有效性检查失败了
     */
    static readonly INVALID: string;
    /**
     * 设置默认的过滤范围字段
     */
    defaultField: string;
    /**
     * 没有生成tag时的占位提示文本
     *
     */
    emptyPlaceholder: string;
    /**
     * 输入框的宽度
     */
    inputWidth: string;
    /**
     * 是否显示帮助图标
     *
     */
    showHelp: boolean;
    /**
     * 是否显示设置defaultField图标
     */
    showSettings: boolean;
    /**
     * 源数据
     */
    items: Array<TpSearchboxItem>;
    /**
     * 设置组件最多显示几行，
     */
    maxLine: number;
    /**
     * 下拉框最大高度，单位为px，
     *
     */
    panelMaxHeight: string;
    /**
     * 设置属性面板宽度
     */
    propPanelWidth: string;
    /**
     * 设置属性值面板宽度
     */
    valuePanelWidth: string;
    /**
     * 设置tag的最大宽度，解决tag太长，属性值
     */
    tagMaxWidth: string;
    /**
     * help 图标提示事件
     */
    readonly help: EventEmitter<any>;
    /**
     * 清除事件
     */
    readonly clear: EventEmitter<any>;
    /**
     * 搜索事件
     */
    readonly search: EventEmitter<TpSearchboxFilter>;
    /**
     * 值面板打开前事件,用于懒加载值选项
     */
    readonly beforeOpen: EventEmitter<TpSearchboxComponent>;
    /**
     * @ignore
     * 选中项后，输入值变化事件
     * 10.0.2 新增
     */
    readonly inputValueChange: EventEmitter<any>;
    /**
     * 默认匹配字段发生改变事件
     * 10.1.2 新增
     */
    readonly defaultFieldChange: EventEmitter<any>;
    /**
     * @ignore
     * 内部标签donimator组件
     */
    dominatorCom: TiDominatorComponent;
    /**
     * @ignore
     * 属性面板
     */
    propDropCom: TiDropsearchComponent;
    /**
     * @ignore
     * 值面板
     */
    valueDropCom: TiDropsearchComponent;
    /**
     * @ignore
     * 多选值面板
     */
    valueMultiDropCom: TiDropsearchComponent;
    /**
     * @ignore
     * 自定义面板 numRange / daterange
     */
    customDropCom: TiDropComponent;
    /**
     * @ignore
     * 设置面板
     */
    settingsDropCom: TiDropComponent;
    /**
     * @ignore
     * 日期范围开始日期
     */
    dateRangeStartCom: TiDateComponent;
    /**
     * @ignore
     * 日期范围结束日期
     */
    dateRangeEndCom: TiDateComponent;
    /**
     * @ignore
     * 搜索输入框
     */
    searchInputRf: ElementRef;
    /**
     * @ignore
     * settings 设置图标 用于drop 设置dominatorElem
     */
    settingsCom: TpIconComponent;
    /**
     * @ignore
     * 右侧图标（help、setting、search）
     */
    rightIconsRef: QueryList<TpIconComponent>;
    /**
     * @ignore
     * 分割符号，默认是中文冒号
     */
    tagSeperator: string;
    /**
     * @ignore
     * 有选中标签后的placeholder
     */
    inputPlaceholder: string;
    /**
     * @ignore
     * 属性选项
     */
    propDropOptions: Array<any>;
    /**
     * @ignore
     * 值选项
     */
    valueDropOptions: Array<any>;
    /**
     * @ignore
     * 输入框的值
     */
    inputValue: string;
    /**
     * @ignore
     * 选中item, 编辑和选择中都会存在
     */
    selectedItem: TpSearchboxItem;
    /**
     * @ignore
     * map类型标签,第一级选中的选项
     */
    selectedOption: TpSearchboxOption;
    /**
     * @ignore
     * 正在编辑tag
     */
    editingTag: TpSearchboxTag;
    /**
     * @ignore
     * 值面板dominator
     */
    valueDropDominator: HTMLElement;
    /**
     * @ignore
     * 值面板dominator
     */
    settingsDropDominatorElem: HTMLElement;
    /**
     * @ignore
     * 帮助图标提示内容
     */
    helpTipContent: string;
    /**
     * @ignore
     * 清空图标提示内容
     */
    clearTipContent: string;
    /**
     * @ignore
     * 设置默认搜索项图标提示内容
     */
    settingTipContent: string;
    /**
     * @ignore
     * 单选值面板选中项
     */
    propDropSelected: TpSearchboxOption;
    /**
     * @ignore
     * 单选值面板选中项
     */
    valueDropSelected: TpSearchboxOption;
    /**
     * @ignore
     * 多选值面板选中项
     */
    valueDropSelecteds: Array<TpSearchboxOption>;
    /**
     * @ignore
     * 设置defaultField面板选中项
     */
    settingsDropSelected: TpSearchboxOption;
    /**
     * @ignore
     * 设置defaultField面板选项
     */
    settingDropOptions: Array<TpSearchboxOption>;
    /**
     * @ignore
     * drop 面板到触发元素的距离，编辑标签时，距离是6px,所以使用变量
     */
    dominatorSpace: string;
    /**
     * 记录默认选中项旧值，用于判断两次选中是否是同一个值。如果是，则不触发defaultFieldChange事件。
     */
    private oldDefaultField;
    dominatorPlaceholder: string;
    private alwaysFocusableElems;
    private rangeLine;
    private rangeLarge;
    private rangeLess;
    constructor(hostRef: ElementRef, render: Renderer2, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewChecked(): void;
    ngAfterViewInit(): void;
    /**
     * @ignore
     * 设置默认field字段面板选中项
     */
    onSettingDropSelect(option: TpSearchboxOption): void;
    /**
     * @ignore
     * tag发生改变（删减、新增）时触发。
     * TODO: 为什么只有在tag删除的时候，才会触发该函数
     */
    onDominatorModelChange(): void;
    private setPlaceholder;
    /**
     * @ignore
     * 输入点击事件
     */
    onClickInput(event: Event): void;
    private propDropSearch;
    /**
     * @ignore
     * 输入框按键按下处理Backspace和Enter键
     */
    onKeydownInput(event: KeyboardEvent): void;
    /**
     * @ignore
     * 输入框值变化处理，
     * 输入值时，如果展开的是属性面板，搜索属性，如果是值面板，单选搜索选项，多选匹配选项
     */
    onInputValueChange(value: string): void;
    /**
     * @ignore
     * 输入框失去焦点
     *
     */
    onBlurInput(): void;
    /**
     * @ignore
     * 输入框聚焦
     */
    onFocusInput(): void;
    /**
     * @ignore
     * 整体失去焦点
     */
    onBlur(): void;
    /**
     * @ignore
     * 删除单个tag
     */
    onDelete(): void;
    /**
     * @ignore
     * 整体点击
     */
    onClick(event: Event): void;
    /**
     * @ignore
     * 清除所有tag
     */
    onClickClear(event: Event): void;
    /**
     * @ignore
     * 点击搜索
     */
    onClickSearch(event: Event): void;
    /**
     * @ignore
     * 点击help图标
     */
    onClickHelp(event: Event): void;
    /**
     * @ignore
     * 点击设置默认搜索项图标
     */
    onClickSetting(event: Event): void;
    /**
     * @ignore
     * 是否有label 类型，用于label 类型的特殊处理
     */
    hasLabeltag(): boolean;
    /**
     * @ignore
     * 是否有label 类型，用于label 类型的特殊处理
     */
    onMousedownTagValue(event: Event): void;
    /**
     * @ignore
     */
    onClickTagValue(event: Event, tag: TpSearchboxTag): void;
    /**
     * @ignore
     * tag值聚焦
     */
    onFocusTagValue(event: Event, tag: TpSearchboxTag): void;
    /**
     * @ignore
     * tag值失去焦点
     */
    onBlurTagValue(): void;
    /**
     * @ignore
     * tag 编辑输入框keydown事件，处理编辑状态下 enter 键操作
     */
    onKeydownTagInput(event: KeyboardEvent): void;
    /**
     * @ignore
     * 标签编辑时只有多选需要处理匹配
     */
    onTagInput(event: Event): void;
    /**
     * @ignore
     * 是否可以编辑
     */
    tagEditable(type: TpSearchboxTagType): boolean;
    /**
     * @ignore
     *  属性面板选中回调
     */
    onPorpDropSelect(option: TpSearchboxOption): void;
    /**
     * 暴露外面的打开值面板接口
     */
    open(options: Array<TpSearchboxOption>): void;
    /**
     * 获取但前选中数据项
     */
    getSelectedItem(): TpSearchboxItem;
    /**
     * @ignore
     * 单选值面板选中，(包括map类型)
     */
    onValueDropSelect(selected: TpSearchboxOption): void;
    /**
     * @ignore
     * 多选底部确定按钮
     */
    onClickValueDropOK(event: Event): void;
    /**
     * @ignore
     * 多选底部取消按钮
     */
    onClickValueDropCancel(): void;
    /**
     * @ignore
     * 数字范围
     */
    onClickCustomDropOK(): void;
    /**
     * @ignore
     * 自定义面板取消按钮回调
     */
    onClickCustomDropCancel(): void;
    /**
     * @ignore
     * numRange 和 dateRange 面板的宽度需要固定值
     */
    customDropWidth(): string;
    private init;
    private initItems;
    private isValidDate;
    private lessMax;
    private moreMin;
    private initPropDropOptions;
    private initSettingDropOptions;
    private matchCheckboxInput;
    private dealRadioItemSearch;
    private setValueDropSearchResult;
    private setCustomValueDropSearchResult;
    private generateTagByInputValue;
    private clearPropDropSelected;
    private responseEnter;
    private responseBackspace;
    private showValueDrop;
    private hideAllDrops;
    private hideValueDrops;
    private hideCustomDrop;
    private searchOptions;
    private mapItemSelect;
    private setValueDropSelecteds;
    private clearState;
    private generateNumRangetag;
    private generateDateRangeTag;
    private afterGenerateTag;
    private setNumRangeDropFocusableElems;
    private setDateRangeDropFocusableElems;
    private getButtons;
    private formatDate2String;
    private generateTagByValuePanel;
    private isTagExist;
    private generateTagByPropDrop;
    private generateTag;
    private addOtherOptionKey;
    private updateModel;
    private emitChange;
    private getValueDropOptions;
    private getFilter;
    private selectHTMLElementText;
}
