import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { TiBaseComponent, TiValidationConfig } from '@cloud/tiny3';
import { TpFeedbackOptions } from './TpFeedbackInterface';
/**
 * @ignore
 */
import * as ɵngcc0 from '@angular/core';
export declare class TpFeedbackContentComponent extends TiBaseComponent {
    protected hostRef: ElementRef;
    protected renderer2: Renderer2;
    private fb;
    private static devConfig;
    private static prodConfig;
    /**
     * @ignore
     */
    static config: any;
    /**
     * 组件数据
     */
    options: TpFeedbackOptions;
    /**
     * 10.1.4新增
     * 提交问卷成功后事件
     */
    readonly submit: EventEmitter<any>;
    /**
     * @ignore
     */
    showheader: boolean;
    /**
     * @ignore
     * 初始化用来存储答案的数组
     */
    displayData: any;
    /**
     * 初始化用来存储答案的数组
     */
    private submitAnswer;
    /**
     * @ignore
     */
    questions: any;
    /**
     * @ignore
     */
    validation: TiValidationConfig;
    /**
     * @ignore
     */
    form: FormGroup;
    private vaildrules;
    constructor(hostRef: ElementRef, renderer2: Renderer2, fb: FormBuilder);
    ngOnInit(): void;
    private showQuestions;
    /**
     * @ignore
     * 满意度评分触发事件
     * @param value 选择评分值
     * @param index 题目下标值
     */
    onChangeScore(value: number, index: number): void;
    /**
     * @ignore
     * 选中项超过三项时，其余项不可选中，并设置"最多选择三项"的样式。
     */
    onClickItem(event: Event): void;
    /**
     * @ignore
     * 复选框选中事件，最多选择三项
     * @param item 复选项数据
     * @param question 题目数据
     * @param index 复选项下标
     */
    onChangeCheckbox(item: any, question: any, index: number): void;
    /**
     * @ignore
     * 复选项为其它原因，存储用户输入内容
     * @param question 题目数据
     */
    updateOtherReason(question: any): void;
    /**
     * @ignore
     * 题目为essay时，存储用户输入文本域内容
     * @param textareaValue 文本域输入内容
     * @param index 题目下标
     */
    updateTextarea(textareaValue: number, index: number): void;
    /**
     * @ignore
     * 提交问卷
     */
    onSubmit(): void;
    private getIndexByQuestionId;
    private getCheckedNumber;
    private checkQuestion;
    private isRequiredComplete;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpFeedbackContentComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpFeedbackContentComponent, "tp-feedback-content", never, { "options": "options"; }, { "submit": "submit"; }, never, ["*"], false>;
}

//# sourceMappingURL=TpFeedbackContentComponent.d.ts.map