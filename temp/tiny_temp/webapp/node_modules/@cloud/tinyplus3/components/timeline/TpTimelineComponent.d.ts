import { SimpleChanges, TemplateRef } from '@angular/core';
import { TiBaseComponent } from '@cloud/tiny3';
import * as ɵngcc0 from '@angular/core';
export interface TpTimelineOption {
    /**
     * 设置时间轴条目对应的轴心标识，不同状态对应的标识颜色不一样
     */
    type?: 'info' | 'success' | 'danger' | 'primary' | 'warning';
    /**
     * 设置时间轴条目的文本。
     */
    label: string;
    /**
     * 设置时间轴的时间。
     */
    time?: string;
    /**
     * 是否为时间轴标题
     * 10.1.4新增
     */
    isTitle?: boolean;
    /**
     * 执行失败错误信息
     * 10.1.4新增
     */
    errorMessage?: string;
    /**
     * 时间轴问号tip提示
     * 10.1.4新增
     */
    iconTip?: string | TemplateRef<any> | any;
    /**
     * tip方向
     * 10.1.4新增
     */
    iconTipPosition?: string;
    /**
     * tip最大宽度
     * 10.1.4新增
     */
    iconTipMaxWidth?: string;
}
/**
 * 时间线timeline组件
 * <example-url>../tinyplus3demo/#/timeline/timeline-all</example-url>
 */
export declare class TpTimelineComponent extends TiBaseComponent {
    /**
     * 时间轴配置项总接口
     */
    options: Array<TpTimelineOption>;
    /**
     * 当前激活项（正在进行时）
     * 10.1.4新增
     */
    activeIndex: number;
    /**
     * @ignore
     */
    itemTemplate: TemplateRef<any>;
    /**
     * @ignore
     * 时间轴一级信息集合
     */
    titleOptions: any[];
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * @ignore
     */
    findItemIndex(item: TpTimelineOption): number;
    /**
     * @ignore
     * 获取时间轴一级（标题）信息集合
     */
    getTitleOptions(): Array<TpTimelineOption>;
    /**
     * @ignore
     * activeIndex之前的项全部变更为success状态
     */
    changeToSuccess(): void;
    /**
     * @ignore
     * 判断当前一级时间轴状态
     */
    isSuccess(option: TpTimelineOption): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpTimelineComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpTimelineComponent, "tp-timeline", never, { "activeIndex": "activeIndex"; "options": "options"; }, {}, ["itemTemplate"], never, false>;
}

//# sourceMappingURL=TpTimelineComponent.d.ts.map