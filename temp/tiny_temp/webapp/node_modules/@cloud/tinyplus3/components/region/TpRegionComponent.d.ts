import { EventEmitter, SimpleChanges, TemplateRef } from '@angular/core';
import { TiDominatorComponent, TiDropComponent, TiDroplistComponent, TiFormComponent } from '@cloud/tiny3';
import * as ɵngcc0 from '@angular/core';
export interface TpRegionItem {
    /**
     * 当前大区的名称文本
     */
    displayName: string;
    /**
     * 大区的一组地区
     */
    regions?: Array<TpRegion>;
    /**
     * 大区的另一组地区，亚太区下某些需要特殊处理的区域
     */
    special?: Array<TpRegion>;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
export interface TpRegion {
    /**
     * 当前区域的名称
     */
    displayName: string;
    disabled?: boolean;
    tipContent?: string;
    tipPosition?: string;
    /**
     * 灰化的原因
     */
    title?: string;
    /**
     * 设置选项的标志块
     *
     * 对象类型，包含两个属性:1.text: 显示的文本；2.class:标志的样式；eg:{text: string; class: string}
     */
    sup?: {
        text?: string;
        class?: string;
        /**
         * 允许有多余的属性字段
         */
        [propName: string]: any;
    };
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * 区域选择组件
 *
 * 组件提供了[TpRegionUtil]{@link ../classes/TpRegionUtil.html}供某些业务处理数据。
 *
 * <example-url>../tinyplus3demo/#/region/region-all</example-url>
 */
export declare class TpRegionComponent extends TiFormComponent {
    /**
     * 下拉面板展示的数据列表
     */
    items: Array<TpRegionItem>;
    /**
     * 预留文本
     */
    placeholderText: string;
    /**
     * 选中事件，选中项没有变化
     */
    readonly select: EventEmitter<any>;
    /**
     * 选中事件，选中项变化
     */
    /**
     * @ignore
     */
    TiDominatorCom: TiDominatorComponent;
    /**
     * @ignore
     */
    dropCom: TiDropComponent;
    /**
     * @ignore
     */
    droplistCom: TiDroplistComponent;
    /**
     * @ignore
     * 获取到用户自定义的按钮标志模板
     */
    supTemplate: TemplateRef<any>;
    /**
     * @ignore
     * 灰化时默认提示文本
     */
    dafaultDisableReason: string;
    /**
     * @ignore
     * 是否为ctc局点，面板结构类似于hws，选块较小
     */
    isSmallItem: boolean;
    /**
     * @ignore
     * 是否为非hws非ctc局点，面板使用droplist，以select形式呈现
     */
    isUseDroplist: boolean;
    /**
     * @ignore
     */
    selectedItem: TpRegionItem;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    /**
     * @ignore
     */
    ngOnModelChange(): void;
    /**
     * @ignore
     */
    onMousedown(event: MouseEvent): void;
    /**
     * @ignore
     */
    onClick(item: any, event: MouseEvent): void;
    /**
     * @ignore
     */
    onBlur(): void;
    /**
     * @ignore
     * 记录下拉面板展开状态
     */
    get dropshow(): boolean;
    /**
     * 面板的打开或关闭，统一处理drop和droplist
     */
    private togglePanel;
    private loopItemsFindSelectedItem;
    private findSelectedItem;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpRegionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpRegionComponent, "tp-region", never, { "items": "items"; "placeholderText": "placeholder"; }, { "select": "select"; }, ["supTemplate"], never, false>;
}

//# sourceMappingURL=TpRegionComponent.d.ts.map