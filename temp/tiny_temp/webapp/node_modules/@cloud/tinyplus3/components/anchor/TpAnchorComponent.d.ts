import { ElementRef, EventEmitter, NgZone, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { TiBaseComponent } from '@cloud/tiny3';
import * as ɵngcc0 from '@angular/core';
export interface TpAnchorItem {
    /**
     * 设置id，对应页面中联动的DOM元素id;
     */
    id: string;
    /**
     * 设置文本;
     */
    title?: string;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * 定位导航组件
 *
 * <example-url>../tinyplus3demo/#/anchor/anchor-all</example-url>
 */
export declare class TpAnchorComponent extends TiBaseComponent {
    private element;
    private renderer2;
    private zone;
    /**
     * 组件数据
     */
    items: Array<TpAnchorItem>;
    /**
     * 设置要跳转到的目标锚点元素id，对应页面中联动的DOM元素id
     */
    anchorId: string;
    /**
     * 设置锚点对应Dom元素距窗口顶部距离，点击切换锚点时，页面滑动在到达该值时，切换到对应锚点
     *
     * <b>注：</b>通过滚轮滚动时，当顶部距离小于设置的offsetTop值，切换到对应锚点
     */
    offsetTop: number;
    /**
     * 设置用户点击锚点时，页面滑动速度，其单位为ms
     */
    speed: number;
    /**
     * 跳转到该锚点时，触发事件
     */
    readonly select: EventEmitter<TpAnchorItem>;
    /**
     * 锚点id改变事件，用于实现锚点id双向绑定，也可单独使用
     *
     * 10.0.4/9.0.8新增接口
     */
    readonly anchorIdChange: EventEmitter<string>;
    /**
     * @ignore
     * 获取到用户自定义的模板
     */
    itemTemplete: TemplateRef<any>;
    private unlistenScroll;
    /**
     * 是否组件内部触发scroll事件
     */
    private isInnerScrolling;
    /**
     * @ignore
     * 保存组件内部更改后的锚点id
     */
    currentId: string;
    private hasGoanchor;
    private hasAnimation;
    constructor(element: ElementRef, renderer2: Renderer2, zone: NgZone);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    ngOnDestroy(): void;
    private onWindowScroll;
    /**
     * @ignore
     */
    onClick(item: TpAnchorItem): void;
    /**
     * 页面滚动到目标锚点对应位置
     * @param anchorId 锚点id
     */
    private goToAnchor;
    private scrollAnimation;
    private scrollToView;
    private getCurrentAnchor;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpAnchorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpAnchorComponent, "tp-anchor", never, { "offsetTop": "offsetTop"; "speed": "speed"; "anchorId": "anchorId"; "items": "items"; }, { "select": "select"; "anchorIdChange": "anchorIdChange"; }, ["itemTemplete"], never, false>;
}

//# sourceMappingURL=TpAnchorComponent.d.ts.map