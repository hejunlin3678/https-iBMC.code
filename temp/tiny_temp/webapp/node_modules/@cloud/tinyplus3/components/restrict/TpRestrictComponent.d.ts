import { ElementRef, Renderer2, TemplateRef } from '@angular/core';
import { TiBaseComponent, TiModalRef, TiTipRef, TiTipService } from '@cloud/tiny3';
import { TpGoandbackService } from '../../services/goandback/TpGoandbackService';
/**
 * @ignore
 * 内部使用
 */
import * as ɵngcc0 from '@angular/core';
export interface TpRestrictMessage {
    label: string;
    href: string;
    link: string;
}
/**
 * 用户受限组件
 * <example-url>../tinyplus3demo/#/restrict/restrict-all</example-url>
 */
export declare class TpRestrictComponent extends TiBaseComponent {
    protected hostRef: ElementRef;
    protected renderer2: Renderer2;
    private tipService;
    private tpGoandbackService;
    /**
     * @ignore
     * tip 内容template
     */
    tipContentTemplate: TemplateRef<any>;
    /**
     * @ignore
     * alert 是否展示控制项
     */
    open: boolean;
    /**
     * @ignore
     * alert 类型
     */
    alertType: string;
    /**
     * @ignore
     * 内部alert类型图标
     */
    typeIcon: boolean;
    /**
     * @ignore
     * 内部alert关闭图标
     */
    closeIcon: boolean;
    /**
     * @ignore
     * alert 内容
     */
    alertContent: string;
    /**
     * @ignore
     * tipcontent 内容
     */
    tipContent: string;
    constructor(hostRef: ElementRef, renderer2: Renderer2, tipService: TiTipService, tpGoandbackService: TpGoandbackService);
    /**
     * 显示提示块
     */
    openAlert(content?: string): void;
    /**
     * 给目标元素添加tip
     */
    addTip(target: HTMLElement, content: string): TiTipRef;
    /**
     * 打开弹窗
     */
    openMessage(messageOption: any, confirmFn?: (instances: TiModalRef, openAlertFn: Function) => void): void;
    private getMessageInfo;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpRestrictComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpRestrictComponent, "tp-restrict", never, {}, {}, never, never, false>;
}

//# sourceMappingURL=TpRestrictComponent.d.ts.map