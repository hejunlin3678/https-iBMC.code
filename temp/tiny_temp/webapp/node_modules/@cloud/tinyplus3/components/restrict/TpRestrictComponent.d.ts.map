{"version":3,"file":"TpRestrictComponent.d.ts","sources":["TpRestrictComponent.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2, TemplateRef } from '@angular/core';\r\nimport { TiBaseComponent, TiModalRef, TiTipRef, TiTipService } from '@cloud/tiny3';\r\nimport { TpGoandbackService } from '../../services/goandback/TpGoandbackService';\r\n/**\r\n * @ignore\r\n * 内部使用\r\n */\r\nexport interface TpRestrictMessage {\r\n    label: string;\r\n    href: string;\r\n    link: string;\r\n}\r\n/**\r\n * 用户受限组件\r\n * <example-url>../tinyplus3demo/#/restrict/restrict-all</example-url>\r\n */\r\nexport declare class TpRestrictComponent extends TiBaseComponent {\r\n    protected hostRef: ElementRef;\r\n    protected renderer2: Renderer2;\r\n    private tipService;\r\n    private tpGoandbackService;\r\n    /**\r\n     * @ignore\r\n     * tip 内容template\r\n     */\r\n    tipContentTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     * alert 是否展示控制项\r\n     */\r\n    open: boolean;\r\n    /**\r\n     * @ignore\r\n     * alert 类型\r\n     */\r\n    alertType: string;\r\n    /**\r\n     * @ignore\r\n     * 内部alert类型图标\r\n     */\r\n    typeIcon: boolean;\r\n    /**\r\n     * @ignore\r\n     * 内部alert关闭图标\r\n     */\r\n    closeIcon: boolean;\r\n    /**\r\n     * @ignore\r\n     * alert 内容\r\n     */\r\n    alertContent: string;\r\n    /**\r\n     * @ignore\r\n     * tipcontent 内容\r\n     */\r\n    tipContent: string;\r\n    constructor(hostRef: ElementRef, renderer2: Renderer2, tipService: TiTipService, tpGoandbackService: TpGoandbackService);\r\n    /**\r\n     * 显示提示块\r\n     */\r\n    openAlert(content?: string): void;\r\n    /**\r\n     * 给目标元素添加tip\r\n     */\r\n    addTip(target: HTMLElement, content: string): TiTipRef;\r\n    /**\r\n     * 打开弹窗\r\n     */\r\n    openMessage(messageOption: any, confirmFn?: (instances: TiModalRef, openAlertFn: Function) => void): void;\r\n    private getMessageInfo;\r\n}\r\n"]}