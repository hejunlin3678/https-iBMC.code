import { ElementRef, EventEmitter, Renderer2, TemplateRef } from '@angular/core';
import { TiBaseComponent, TiTipService } from '@cloud/tiny3';
/**
 * @ignore
 * 每条受限信息
 */
import * as ɵngcc0 from '@angular/core';
export interface TpFrozenInfo {
    /**
     * 1 冻结，2 解冻结
     */
    status: number;
    /**
     * 1-表示公安冻结, 2表示未实名认证冻结,3-表示欠费冻结,4-合作伙伴冻结,5-账号销户前冻结,6-违规冻结
     */
    type: number;
    /**
     * json 字符串，可以解析为一个数组，包含两个冻结信息
     * 详情参考 云运营公共接口文档 4.10 查询账号冻结场景
     */
    statusMsg: string;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * @ignore
 * 消息类型，'POP' 为提示块中的消息，'TIP' 为tip 提示消息
 */
declare type TpFrozenMessageType = 'POP' | 'TIP';
/**
 * @ignore
 *
 */
export interface TpFrozenStatusMsg {
    /**
     * 消息类型，'POP' 为提示块中的消息，'TIP' 为tip 提示消息
     */
    msgType: TpFrozenMessageType;
    /**
     * 消息字符串
     */
    msgContent: string;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * @ignore
 * 4.10	查询账号冻结场景 http 返回数据类型
 */
export interface TpFrozenResponse {
    /**
     * 接口返回值设置
     */
    frozenInfos: Array<TpFrozenInfo>;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * 账号冻结组件，组件查询CBC查询账号冻结场景接口，获取冻结信息，展示块提示，给目标元素添加tip提示。
 *
 * 9.0.3版本新增
 *
 * <example-url>../tinyplus3demo/#/frozen/frozen-all</example-url>
 */
export declare class TpFrozenComponent extends TiBaseComponent {
    protected hostRef: ElementRef;
    protected renderer2: Renderer2;
    private tipService;
    /**
     * 添加tip的按钮元素
     */
    buttonElem: HTMLElement;
    /**
     * 获取数据成功事件
     */
    readonly response: EventEmitter<TpFrozenResponse | Error>;
    /**
     * @ignore
     * tip 内容template
     */
    tipContentTemplate: TemplateRef<any>;
    /**
     * @ignore
     * 内部alert 打开关闭
     */
    open: boolean;
    /**
     * @ignore
     * alert 类型
     */
    alertType: string;
    /**
     * @ignore
     * 内部alert类型图标
     */
    typeIcon: boolean;
    /**
     * @ignore
     * 内部alert关闭图标
     */
    closeIcon: boolean;
    /**
     * @ignore
     * alert 内容
     */
    label: string;
    /**
     * @ignore
     * tip 提示内容
     */
    tipContent: string;
    /**
     * @ignore
     * tip实例，销毁tip作用
     */
    private tipInstance;
    /**
     * @ignore
     * 从http返回数据中获取内容字符串
     */
    static getMsgContent(data: TpFrozenResponse, msgType: TpFrozenMessageType): string;
    private static getUserInfo;
    /**
     * @ignore
     * 请求账号冻结场景接口
     * config 本地测试使用，实际使用时请忽略此参数
     */
    static queryFrozenInfo(config?: any): Promise<TpFrozenResponse>;
    constructor(hostRef: ElementRef, renderer2: Renderer2, tipService: TiTipService);
    /**
     * 查询冻结
     * config 为方便测试设置，实际使用时请忽略
     */
    queryFrozen(config?: any): void;
    /**
     * 隐藏提示块,销毁tip
     */
    private unfrozen;
    /**
     *  给目标元素添加tip
     *  v9.0.4 版本添加
     */
    addTip(...targets: Array<HTMLElement>): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TpFrozenComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TpFrozenComponent, "tp-frozen", never, { "buttonElem": "buttonElem"; }, { "response": "response"; }, never, never, false>;
}
export {};

//# sourceMappingURL=TpFrozenComponent.d.ts.map