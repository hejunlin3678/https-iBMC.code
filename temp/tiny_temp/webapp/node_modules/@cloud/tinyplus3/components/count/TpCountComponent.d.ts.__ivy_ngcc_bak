import { ElementRef, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { TiTipService } from '@cloud/tiny3';
import { TpCountTimeComponent } from './TpCountTimeComponent';
/**
 * 倒计时类别, 详情参考“云运营公共接口说明”文档，2.21云服务倒计时信息查询
 */
export declare type TpCountCode = 'hws_countdown_period_using' | 'hws_countdown_period_gracing' | 'hws_countdown_period_frozen' | 'hws_countdown_period_illegalfrozen' | 'hws_countdown_period_policefrozen' | 'hws_countdown_period_toondemand' | 'hws_countdown_ondemand_using' | 'hws_countdown_ondemand_gracing' | 'hws_countdown_ondemand_frozen' | 'hws_countdown_ondemand_illegalfrozen' | 'hws_countdown_ondemand_illegalfrozen_arrear' | 'hws_countdown_ondemand_policefrozen';
/**
 * @ignore
 * 倒计时不同阶段对应的颜色提示类别
 */
export declare type TpCountDownStateLevel = 'normal' | 'warn' | 'alarm';
/**
 * 倒计时信息，即countDownInfos对象类型,
 * 接口是根据"云运营公共接口说明"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口
 */
export interface TpCountInfos {
    /**
     * 资源的当前的状态,1：未生效（开通中，资源还未使用）2：生效中（未到期，可正常使用资源）
     */
    status: number;
    /**
     * 当前状态到下一步操作执行，还剩下的天数（XX>=24小时）
     */
    nextOperationRemainingDay?: number;
    /**
     * 当前状态到下一步操作执行，还剩下的小时数（24小时>XX>=1小时）
     */
    nextOperationRemainingHour?: number;
    /**
     * 当前状态到下一步操作执行，还剩下的分钟数（60分钟>XX>=1分钟）
     */
    nextOperationRemainingMinute?: number;
    /**
     * 当前状态到下一步操作执行，还剩下的秒数（60秒>XX）
     *
     */
    nextOperationRemainingSecond?: number;
    /**
     * 资源创建时间
     */
    createTime?: string;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * 倒计时信息提示信息，接口是根据"云运营公共接口说明"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口
 */
export interface TpCountTips {
    /**
     * 资源生效时间（即资源创建时间）
     */
    effTime?: string;
    /**
     * 资源到期时间，如果已经欠费，则为资源欠费时间。
     */
    expTime?: string;
    /**
     * 宽限期结束时间
     */
    graceTime?: string;
    /**
     * 资源释放时间
     */
    releaseTime?: string;
    /**
     * 资源冻结时间
     */
    frozenTime?: string;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 *  计费模式
 *  period-包周期，ondemand-按需
 */
export declare type TpCountChargingMode = 'period' | 'ondemand';
/**
 * @ignore
 * 1行tip内容，内部使用
 */
export interface TpCountTipItem {
    title: string;
    time: string;
    [propName: string]: any;
}
/**
 * 表格倒计时组件
 *
 * tp-countdown 组件升级版，countdown组件的接口和功能保留，添加计费模式和资源状态
 *
 * 10.0.1 新增
 *
 * <example-url>../tinyplus3demo/#/count/count-all</example-url>
 */
export declare class TpCountComponent extends TpCountTimeComponent {
    private element;
    private renderer2;
    private tipService;
    /**
     * 计费模式
     */
    type: TpCountChargingMode;
    /**
     * @ignore
     * 资源状态和倒计时的父容器，为添加tip
     */
    stateTimeRef: ElementRef;
    /**
     * @ignore
     * 倒计时组件
     */
    countTimeCom: TpCountTimeComponent;
    /**
     * @ignore
     * tip内容模板
     */
    tipContentTemplate: TemplateRef<any>;
    /**
     * @ignore
     * tip实例
     */
    private tipInstance;
    /**
     * @ignore
     * tip 的内容
     */
    tipContext: Array<TpCountTipItem>;
    constructor(element: ElementRef, renderer2: Renderer2, tipService: TiTipService);
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * @ignore
     *
     */
    showState(): boolean;
    private addTip;
}
