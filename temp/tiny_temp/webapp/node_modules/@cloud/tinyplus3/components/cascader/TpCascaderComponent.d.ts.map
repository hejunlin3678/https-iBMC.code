{"version":3,"file":"TpCascaderComponent.d.ts","sources":["TpCascaderComponent.d.ts"],"names":[],"mappingssourcesContent":["import { EventEmitter, QueryList, SimpleChanges } from '@angular/core';\r\nimport { TiDominatorComponent, TiDropComponent, TiDroplistComponent, TiFormComponent, TiListComponent, TiPositionType } from '@cloud/tiny3';\r\nexport interface TpCascaderItem {\r\n    label?: string;\r\n    disabled?: boolean;\r\n    /**\r\n     * 二级面板数据\r\n     *\r\n     * 包含：1.label：显示文本 2.disabled：禁用 3.tip：提示信息 4.tipPosition：方位，默认为‘right’\r\n     */\r\n    children?: Array<{\r\n        label?: string;\r\n        disabled?: boolean;\r\n        tip?: any;\r\n        tipPosition?: TiPositionType;\r\n        [propName: string]: any;\r\n    }>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * 级联选择器 目前只支持二级或三级级联\r\n *\r\n * <example-url>../tinyplus3demo/#/cascader/cascader-all</example-url>\r\n */\r\nexport declare class TpCascaderComponent extends TiFormComponent {\r\n    /**\r\n     * 数据列表\r\n     */\r\n    items: Array<TpCascaderItem>;\r\n    /**\r\n     * 是否开启清空输入框内容的功能\r\n     */\r\n    clearable: boolean;\r\n    /**\r\n     * @ignore\r\n     * 10.1.0新增\r\n     */\r\n    /**\r\n     * 预留文本\r\n     */\r\n    placeholder: string;\r\n    /**\r\n     * 显示的字段\r\n     */\r\n    labelKey: string;\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 单级面板的宽度\r\n     */\r\n    panelWidth: string;\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 面板高度\r\n     */\r\n    panelHeight: string;\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 是否只能选中叶子节点\r\n     */\r\n    onlySelectLeaf: boolean;\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 在选择框上呈现的数据是否显示全部路径\r\n     */\r\n    showAllLevel: boolean;\r\n    /**\r\n     * 10.1.1新增\r\n     * 指定选中值的字段\r\n     */\r\n    valueKey: string;\r\n    /**\r\n     * @ignore\r\n     * 选中事件，选中项没有变化\r\n     */\r\n    readonly select: EventEmitter<any>;\r\n    /**\r\n     * @ignore\r\n     * 选中事件，选中项变化\r\n     */\r\n    readonly change: EventEmitter<any>;\r\n    /**\r\n     * 清除已选项\r\n     */\r\n    readonly clear: EventEmitter<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    dominatorCom: TiDominatorComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    dropCom: TiDropComponent;\r\n    /**\r\n     * @ignore 呈现各级数据的list\r\n     */\r\n    listComs: QueryList<TiListComponent>;\r\n    /**\r\n     * @ignore 宽的面板，是一个droplist，用于无数据和搜索场景\r\n     */\r\n    wideDroplist: TiDroplistComponent;\r\n    /**\r\n     * @ignore 分隔符 以后可能会对外开放\r\n     */\r\n    separator: string;\r\n    /**\r\n     * @ignore 转化为数字的panelWidth\r\n     */\r\n    panelWidthNum: number;\r\n    /**\r\n     * @ignore 三个TiListComponent的model\r\n     */\r\n    listModel: Array<any>;\r\n    /**\r\n     * @ignore 用于dominator呈现数据\r\n     */\r\n    dominatorModel: string;\r\n    /**\r\n     * @ignore\r\n     * itemsArr[0]存放根面板内容，itemArr[1]存放次级面板内容，itemArr[2]存放次次级面板内容\r\n     */\r\n    itemsArr: Array<Array<any>>;\r\n    /**\r\n     * @ignore 宽面板的数据\r\n     */\r\n    itemForWideDroplist: Array<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    dropshow: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    listComsArr: Array<TiListComponent>;\r\n    /**\r\n     * modelWhole与model的中间变量\r\n     */\r\n    private _modelWhole;\r\n    private valueFn;\r\n    ngOnInit(): void;\r\n    ngOnChanges(change: SimpleChanges): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnModelChange(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    onClick(): void;\r\n    ngAfterViewInit(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    close(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    onBlur(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    onSelect($event: TpCascaderItem, panelIndex: number): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    onClear(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    onMouseleave(panelIndex: number): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    showList(panelIndex: number): void;\r\n    private handleModel;\r\n    /**\r\n     * 通过model拼接dominatorModel，显示在dominator上\r\n     */\r\n    private joinDominatorModel;\r\n    writeValue(model: any): void;\r\n    private get modelWhole();\r\n    /**\r\n     * 点选时modelWhole改变，要同时更改model\r\n     */\r\n    private set modelWhole(value);\r\n}\r\n"]}