import { EventEmitter, QueryList, SimpleChanges } from '@angular/core';
import { TiDominatorComponent, TiDropComponent, TiDroplistComponent, TiFormComponent, TiListComponent, TiPositionType } from '@cloud/tiny3';
export interface TpCascaderItem {
    label?: string;
    disabled?: boolean;
    /**
     * 二级面板数据
     *
     * 包含：1.label：显示文本 2.disabled：禁用 3.tip：提示信息 4.tipPosition：方位，默认为‘right’
     */
    children?: Array<{
        label?: string;
        disabled?: boolean;
        tip?: any;
        tipPosition?: TiPositionType;
        [propName: string]: any;
    }>;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * 级联选择器 目前只支持二级或三级级联
 *
 * <example-url>../tinyplus3demo/#/cascader/cascader-all</example-url>
 */
export declare class TpCascaderComponent extends TiFormComponent {
    /**
     * 数据列表
     */
    items: Array<TpCascaderItem>;
    /**
     * 是否开启清空输入框内容的功能
     */
    clearable: boolean;
    /**
     * @ignore
     * 10.1.0新增
     */
    /**
     * 预留文本
     */
    placeholder: string;
    /**
     * 显示的字段
     */
    labelKey: string;
    /**
     * 10.0.4 新增
     *
     * 单级面板的宽度
     */
    panelWidth: string;
    /**
     * 10.0.4 新增
     *
     * 面板高度
     */
    panelHeight: string;
    /**
     * 10.0.4 新增
     *
     * 是否只能选中叶子节点
     */
    onlySelectLeaf: boolean;
    /**
     * 10.0.4 新增
     *
     * 在选择框上呈现的数据是否显示全部路径
     */
    showAllLevel: boolean;
    /**
     * 10.1.1新增
     * 指定选中值的字段
     */
    valueKey: string;
    /**
     * @ignore
     * 选中事件，选中项没有变化
     */
    readonly select: EventEmitter<any>;
    /**
     * @ignore
     * 选中事件，选中项变化
     */
    readonly change: EventEmitter<any>;
    /**
     * 清除已选项
     */
    readonly clear: EventEmitter<any>;
    /**
     * @ignore
     */
    dominatorCom: TiDominatorComponent;
    /**
     * @ignore
     */
    dropCom: TiDropComponent;
    /**
     * @ignore 呈现各级数据的list
     */
    listComs: QueryList<TiListComponent>;
    /**
     * @ignore 宽的面板，是一个droplist，用于无数据和搜索场景
     */
    wideDroplist: TiDroplistComponent;
    /**
     * @ignore 分隔符 以后可能会对外开放
     */
    separator: string;
    /**
     * @ignore 转化为数字的panelWidth
     */
    panelWidthNum: number;
    /**
     * @ignore 三个TiListComponent的model
     */
    listModel: Array<any>;
    /**
     * @ignore 用于dominator呈现数据
     */
    dominatorModel: string;
    /**
     * @ignore
     * itemsArr[0]存放根面板内容，itemArr[1]存放次级面板内容，itemArr[2]存放次次级面板内容
     */
    itemsArr: Array<Array<any>>;
    /**
     * @ignore 宽面板的数据
     */
    itemForWideDroplist: Array<any>;
    /**
     * @ignore
     */
    dropshow: boolean;
    /**
     * @ignore
     */
    listComsArr: Array<TiListComponent>;
    /**
     * modelWhole与model的中间变量
     */
    private _modelWhole;
    private valueFn;
    ngOnInit(): void;
    ngOnChanges(change: SimpleChanges): void;
    /**
     * @ignore
     */
    ngOnModelChange(): void;
    /**
     * @ignore
     */
    onClick(): void;
    ngAfterViewInit(): void;
    /**
     * @ignore
     */
    close(): void;
    /**
     * @ignore
     */
    onBlur(): void;
    /**
     * @ignore
     */
    onSelect($event: TpCascaderItem, panelIndex: number): void;
    /**
     * @ignore
     */
    onClear(): void;
    /**
     * @ignore
     */
    onMouseleave(panelIndex: number): void;
    /**
     * @ignore
     */
    showList(panelIndex: number): void;
    private handleModel;
    /**
     * 通过model拼接dominatorModel，显示在dominator上
     */
    private joinDominatorModel;
    writeValue(model: any): void;
    private get modelWhole();
    /**
     * 点选时modelWhole改变，要同时更改model
     */
    private set modelWhole(value);
}
