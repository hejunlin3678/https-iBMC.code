import { ElementRef } from '@angular/core';
import { TiBaseComponent } from '@cloud/tiny3';
/**
 * @ignore
 */
export declare class TpIdentityauthModalComponent extends TiBaseComponent {
    userInfoRes: any;
    roleInfoRes: any;
    userId: string;
    serviceEndpointList: Array<any>;
    mask: any;
    camel: any;
    successFn: any;
    appWebPath: string;
    id: string;
    OKButton: ElementRef;
    /**
     * 组件使用的词条，此处统一获取
     */
    private i18n_Identityauth;
    /**
     * @ignore
     * 弹窗上部的红色alert相关配置
     */
    errorAlert: any;
    /**
     * @ignore
     * 是否显示校验的错误提示
     *
     * 本组件不使用校验组件，只是引入tiErrorMsgComponent，在必要的时候显示或隐藏
     */
    showErrorMessage: boolean;
    /**
     * @ignore
     * 不同绑定方式下，组件的通用配置
     */
    identityAuthModel: any;
    /**
     * @ignore
     * Iam服务网址
     */
    iamUrl: string;
    /**
     * @ignore
     * 蓝色alert的文本
     */
    alertLabelLink: string;
    /**
     * @ignore
     * 是否为管理员
     */
    isSecuAdmin: boolean;
    /**
     * 验证方式为虚拟MFA的配置，表单中‘验证方式’选为'虚拟MFA'时生效
     */
    private bindMfaModel;
    /**
     * 验证方式为手机的配置，表单中‘验证方式’选为'手机'时生效
     */
    private bindPhone;
    /**
     * 验证方式为邮箱的配置，表单中‘验证方式’选为'邮箱'时生效
     */
    private bindEmail;
    /**
     * @ignore
     *
     * 表单中使用的主要数据
     */
    formModel: any;
    private static getIamEndpoint;
    /**
     * 对象深合并方法，不适宜数组对象
     *
     * 1.targetObj中已存在的简单属性会被覆盖；已存在的同名数组被合并；已存在的对象属性会进入内部进行合并，规则同上
     * 2.targetObj中不存在的属性直接添加
     *
     * @param targetObj 对象类型
     * @param sourceObj 对象类型
     * @returns 被合并的targetObj
     */
    private static deepMerge;
    /**
     * 初始化用户信息
     */
    private handleUserBoundInfo;
    private getVerificationCode;
    private changeVerificationCodeBtnTip;
    private requestErrorTip;
    private countDown;
    private verifyVerificationCode;
    /**
     * 去掉input红色边框及背景，隐藏errorMessage
     */
    private clearValidMessage;
    /**
     * 添加input红色边框及背景，显示errorMessage
     */
    private addValidMessage;
    /**
     * @ignore
     *
     * 验证码输入框回车操作
     */
    enter(): void;
    /**
     * @ignore
     */
    close(): void;
    /**
     * @ignore
     */
    dismiss(): void;
    ngOnInit(): void;
}
