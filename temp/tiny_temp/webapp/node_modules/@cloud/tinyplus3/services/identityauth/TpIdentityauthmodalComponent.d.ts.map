{"version":3,"file":"TpIdentityauthmodalComponent.d.ts","sources":["TpIdentityauthmodalComponent.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * @ignore\r\n */\r\nexport declare class TpIdentityauthModalComponent extends TiBaseComponent {\r\n    userInfoRes: any;\r\n    roleInfoRes: any;\r\n    userId: string;\r\n    serviceEndpointList: Array<any>;\r\n    mask: any;\r\n    camel: any;\r\n    successFn: any;\r\n    appWebPath: string;\r\n    id: string;\r\n    OKButton: ElementRef;\r\n    /**\r\n     * 组件使用的词条，此处统一获取\r\n     */\r\n    private i18n_Identityauth;\r\n    /**\r\n     * @ignore\r\n     * 弹窗上部的红色alert相关配置\r\n     */\r\n    errorAlert: any;\r\n    /**\r\n     * @ignore\r\n     * 是否显示校验的错误提示\r\n     *\r\n     * 本组件不使用校验组件，只是引入tiErrorMsgComponent，在必要的时候显示或隐藏\r\n     */\r\n    showErrorMessage: boolean;\r\n    /**\r\n     * @ignore\r\n     * 不同绑定方式下，组件的通用配置\r\n     */\r\n    identityAuthModel: any;\r\n    /**\r\n     * @ignore\r\n     * Iam服务网址\r\n     */\r\n    iamUrl: string;\r\n    /**\r\n     * @ignore\r\n     * 蓝色alert的文本\r\n     */\r\n    alertLabelLink: string;\r\n    /**\r\n     * @ignore\r\n     * 是否为管理员\r\n     */\r\n    isSecuAdmin: boolean;\r\n    /**\r\n     * 验证方式为虚拟MFA的配置，表单中‘验证方式’选为'虚拟MFA'时生效\r\n     */\r\n    private bindMfaModel;\r\n    /**\r\n     * 验证方式为手机的配置，表单中‘验证方式’选为'手机'时生效\r\n     */\r\n    private bindPhone;\r\n    /**\r\n     * 验证方式为邮箱的配置，表单中‘验证方式’选为'邮箱'时生效\r\n     */\r\n    private bindEmail;\r\n    /**\r\n     * @ignore\r\n     *\r\n     * 表单中使用的主要数据\r\n     */\r\n    formModel: any;\r\n    private static getIamEndpoint;\r\n    /**\r\n     * 对象深合并方法，不适宜数组对象\r\n     *\r\n     * 1.targetObj中已存在的简单属性会被覆盖；已存在的同名数组被合并；已存在的对象属性会进入内部进行合并，规则同上\r\n     * 2.targetObj中不存在的属性直接添加\r\n     *\r\n     * @param targetObj 对象类型\r\n     * @param sourceObj 对象类型\r\n     * @returns 被合并的targetObj\r\n     */\r\n    private static deepMerge;\r\n    /**\r\n     * 初始化用户信息\r\n     */\r\n    private handleUserBoundInfo;\r\n    private getVerificationCode;\r\n    private changeVerificationCodeBtnTip;\r\n    private requestErrorTip;\r\n    private countDown;\r\n    private verifyVerificationCode;\r\n    /**\r\n     * 去掉input红色边框及背景，隐藏errorMessage\r\n     */\r\n    private clearValidMessage;\r\n    /**\r\n     * 添加input红色边框及背景，显示errorMessage\r\n     */\r\n    private addValidMessage;\r\n    /**\r\n     * @ignore\r\n     *\r\n     * 验证码输入框回车操作\r\n     */\r\n    enter(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    close(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    dismiss(): void;\r\n    ngOnInit(): void;\r\n}\r\n"]}