export class TpExtend {
    static isObject(item) {
        return (item && typeof item === 'object' && !Array.isArray(item));
    }
    // 对象扩展，当前只适用于对象形式，数组形式如有需求，请在该方法中自行扩展
    static extend(target, source) {
        const output = Object.assign({}, target);
        if (!(TpExtend.isObject(target) && TpExtend.isObject(source))) {
            return;
        }
        Object.keys(source).forEach((key) => {
            if (TpExtend.isObject(source[key])) {
                if (!(key in target)) {
                    Object.assign(output, { [key]: source[key] });
                }
                else {
                    output[key] = TpExtend.extend(target[key], source[key]);
                }
            }
            else {
                Object.assign(output, { [key]: source[key] });
            }
        });
        return output;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnlwbHVzMy9sb2NhbGUvaTE4bi9leHRlbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsTUFBTSxPQUFPLFFBQVE7SUFDVixNQUFNLENBQUMsUUFBUSxDQUFDLElBQVM7UUFDNUIsT0FBTyxDQUFDLElBQUksSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUNHLHNDQUFzQztJQUNuQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQWMsRUFBRSxNQUFjO1FBQy9DLE1BQU0sTUFBTSxxQkFBZSxNQUFNLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRTtZQUMzRCxPQUFPO1NBQ1Y7UUFDQSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBbUIsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFXLEVBQUUsRUFBRTtZQUMzRCxJQUFJLFFBQVEsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUU7Z0JBQ2hDLElBQUksQ0FBQyxDQUFDLEdBQUcsSUFBSSxNQUFNLENBQUMsRUFBRTtvQkFDbEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7aUJBQ2pEO3FCQUFNO29CQUNILE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztpQkFDM0Q7YUFDSjtpQkFBTTtnQkFDSCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNqRDtRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztDQUNKIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmV4cG9ydCBjbGFzcyBUcEV4dGVuZCB7XHJcbiAgICBwdWJsaWMgc3RhdGljIGlzT2JqZWN0KGl0ZW06IGFueSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAoaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSkpO1xyXG4gICAgfVxyXG4gICAgICAgIC8vIOWvueixoeaJqeWxle+8jOW9k+WJjeWPqumAgueUqOS6juWvueixoeW9ouW8j++8jOaVsOe7hOW9ouW8j+WmguaciemcgOaxgu+8jOivt+WcqOivpeaWueazleS4reiHquihjOaJqeWxlVxyXG4gICAgcHVibGljIHN0YXRpYyBleHRlbmQodGFyZ2V0OiBvYmplY3QsIHNvdXJjZTogb2JqZWN0KTogb2JqZWN0IHtcclxuICAgICAgICBjb25zdCBvdXRwdXQ6IG9iamVjdCA9IHsuLi50YXJnZXR9O1xyXG4gICAgICAgIGlmICghKFRwRXh0ZW5kLmlzT2JqZWN0KHRhcmdldCkgJiYgVHBFeHRlbmQuaXNPYmplY3Qoc291cmNlKSkpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAoT2JqZWN0LmtleXMoc291cmNlKSBhcyBBcnJheTxzdHJpbmc+KS5mb3JFYWNoKChrZXk6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoVHBFeHRlbmQuaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIShrZXkgaW4gdGFyZ2V0KSkge1xyXG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob3V0cHV0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0gPSBUcEV4dGVuZC5leHRlbmQodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob3V0cHV0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gb3V0cHV0O1xyXG4gICAgfVxyXG59Il19