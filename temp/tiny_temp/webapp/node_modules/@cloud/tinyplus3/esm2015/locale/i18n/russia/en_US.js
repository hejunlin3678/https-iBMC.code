import { en_US as defaultEnUS } from '../default/en_US';
import { TpExtend } from '../extend';
import { UrlConfig } from './UrlConfig';
export const en_US = TpExtend.extend(defaultEnUS, {
    tpInfo: {
        restricted: `Insufficient credit balance. Service cannot be provisioned. <a href="${UrlConfig.recharge}">Pay your bill</a> or <a href="${UrlConfig.createfeedback}">submit a service ticket</a>.`
    },
    tpCountdown: {
        ondemand_gracing: 'Expired. Will be frozen in {TS}',
        arrears_time: 'Expiration: '
    },
    tpCountdownalert: {
        ondemand_gracing: 'Your expenditure has exceeded the credit limit. {RN} will be frozen in {TS}. ',
        ondemand_frozen: 'Your expenditure has exceeded the credit limit. {RN} will be deleted in {TS}. ',
        recharge: 'Pay Now'
    },
    tpIdentification: {
        path: 'https://account-ru1.huaweicloud.com/usercenter/#/accountindex/realNameAuth'
    },
    tpRecharge: {
        path: 'https://account-ru1.huaweicloud.com/usercenter/#/userindex/balanceRecharge',
        firstMessageContent: 'Insufficient credit balance. Service cannot be provisioned. Pay your bill or {0}.',
        firstMessageContentLabel: 'submit a service ticket',
        firstMessageContentHref: `${UrlConfig.createfeedback}`,
        firstMessageOkButtonText: 'Go to Bill Pay',
        secondMessageTitle: 'Please confirm your credit balance has been recovered. To confirm click Recovered.',
        secondMessageContent: 'Do not close or refresh the current page. The current cloud service configuration will need to be reselected once you leave this page.',
        secondMessageOkButtonText: 'Recovered',
        secondMessageFail: `Your credit balance was not recovered. <a target="_blank" rel="noopener noreferrer" href="${UrlConfig.recharge}" tiNavigation>Pay your bill</a> or <a target="_blank" rel="noopener noreferrer" href="${UrlConfig.createfeedback}" tiNavigation>submit a service ticket</a>.`,
        secondMessageToOperation: ''
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5fVVMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9AY2xvdWQvdGlueXBsdXMzL2xvY2FsZS9pMThuL3J1c3NpYS9lbl9VUy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxJQUFJLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDckMsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV4QyxNQUFNLENBQUMsTUFBTSxLQUFLLEdBQVEsUUFBUSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUU7SUFDbkQsTUFBTSxFQUFFO1FBQ0osVUFBVSxFQUFFLHdFQUF3RSxTQUFTLENBQUMsUUFBUSxtQ0FBbUMsU0FBUyxDQUFDLGNBQWMsZ0NBQWdDO0tBQ3BNO0lBQ0QsV0FBVyxFQUFFO1FBQ1QsZ0JBQWdCLEVBQUUsaUNBQWlDO1FBQ25ELFlBQVksRUFBRSxjQUFjO0tBQy9CO0lBQ0QsZ0JBQWdCLEVBQUU7UUFDZCxnQkFBZ0IsRUFBRSwrRUFBK0U7UUFDakcsZUFBZSxFQUFFLGdGQUFnRjtRQUNqRyxRQUFRLEVBQUUsU0FBUztLQUN0QjtJQUNELGdCQUFnQixFQUFFO1FBQ2YsSUFBSSxFQUFFLDRFQUE0RTtLQUNwRjtJQUNELFVBQVUsRUFBRTtRQUNSLElBQUksRUFBRSw0RUFBNEU7UUFDbEYsbUJBQW1CLEVBQUUsbUZBQW1GO1FBQ3hHLHdCQUF3QixFQUFFLHlCQUF5QjtRQUNuRCx1QkFBdUIsRUFBRSxHQUFHLFNBQVMsQ0FBQyxjQUFjLEVBQUU7UUFDdEQsd0JBQXdCLEVBQUUsZ0JBQWdCO1FBQzFDLGtCQUFrQixFQUFFLG9GQUFvRjtRQUN4RyxvQkFBb0IsRUFBRSx3SUFBd0k7UUFDOUoseUJBQXlCLEVBQUUsV0FBVztRQUN0QyxpQkFBaUIsRUFBRSw2RkFBNkYsU0FBUyxDQUFDLFFBQVEsMEZBQTBGLFNBQVMsQ0FBQyxjQUFjLDZDQUE2QztRQUNqUyx3QkFBd0IsRUFBRSxFQUFFO0tBQy9CO0NBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5fVVMgYXMgZGVmYXVsdEVuVVMgfSBmcm9tICcuLi9kZWZhdWx0L2VuX1VTJztcclxuaW1wb3J0IHsgVHBFeHRlbmQgfSBmcm9tICcuLi9leHRlbmQnO1xyXG5pbXBvcnQgeyBVcmxDb25maWcgfSBmcm9tICcuL1VybENvbmZpZyc7XHJcblxyXG5leHBvcnQgY29uc3QgZW5fVVM6IGFueSA9IFRwRXh0ZW5kLmV4dGVuZChkZWZhdWx0RW5VUywge1xyXG4gICAgdHBJbmZvOiB7XHJcbiAgICAgICAgcmVzdHJpY3RlZDogYEluc3VmZmljaWVudCBjcmVkaXQgYmFsYW5jZS4gU2VydmljZSBjYW5ub3QgYmUgcHJvdmlzaW9uZWQuIDxhIGhyZWY9XCIke1VybENvbmZpZy5yZWNoYXJnZX1cIj5QYXkgeW91ciBiaWxsPC9hPiBvciA8YSBocmVmPVwiJHtVcmxDb25maWcuY3JlYXRlZmVlZGJhY2t9XCI+c3VibWl0IGEgc2VydmljZSB0aWNrZXQ8L2E+LmBcclxuICAgIH0sXHJcbiAgICB0cENvdW50ZG93bjoge1xyXG4gICAgICAgIG9uZGVtYW5kX2dyYWNpbmc6ICdFeHBpcmVkLiBXaWxsIGJlIGZyb3plbiBpbiB7VFN9JyxcclxuICAgICAgICBhcnJlYXJzX3RpbWU6ICdFeHBpcmF0aW9uOiAnXHJcbiAgICB9LFxyXG4gICAgdHBDb3VudGRvd25hbGVydDoge1xyXG4gICAgICAgIG9uZGVtYW5kX2dyYWNpbmc6ICdZb3VyIGV4cGVuZGl0dXJlIGhhcyBleGNlZWRlZCB0aGUgY3JlZGl0IGxpbWl0LiB7Uk59IHdpbGwgYmUgZnJvemVuIGluIHtUU30uICcsXHJcbiAgICAgICAgb25kZW1hbmRfZnJvemVuOiAnWW91ciBleHBlbmRpdHVyZSBoYXMgZXhjZWVkZWQgdGhlIGNyZWRpdCBsaW1pdC4ge1JOfSB3aWxsIGJlIGRlbGV0ZWQgaW4ge1RTfS4gJyxcclxuICAgICAgICByZWNoYXJnZTogJ1BheSBOb3cnXHJcbiAgICB9LFxyXG4gICAgdHBJZGVudGlmaWNhdGlvbjoge1xyXG4gICAgICAgcGF0aDogJ2h0dHBzOi8vYWNjb3VudC1ydTEuaHVhd2VpY2xvdWQuY29tL3VzZXJjZW50ZXIvIy9hY2NvdW50aW5kZXgvcmVhbE5hbWVBdXRoJ1xyXG4gICAgfSxcclxuICAgIHRwUmVjaGFyZ2U6IHtcclxuICAgICAgICBwYXRoOiAnaHR0cHM6Ly9hY2NvdW50LXJ1MS5odWF3ZWljbG91ZC5jb20vdXNlcmNlbnRlci8jL3VzZXJpbmRleC9iYWxhbmNlUmVjaGFyZ2UnLFxyXG4gICAgICAgIGZpcnN0TWVzc2FnZUNvbnRlbnQ6ICdJbnN1ZmZpY2llbnQgY3JlZGl0IGJhbGFuY2UuIFNlcnZpY2UgY2Fubm90IGJlIHByb3Zpc2lvbmVkLiBQYXkgeW91ciBiaWxsIG9yIHswfS4nLFxyXG4gICAgICAgIGZpcnN0TWVzc2FnZUNvbnRlbnRMYWJlbDogJ3N1Ym1pdCBhIHNlcnZpY2UgdGlja2V0JyxcclxuICAgICAgICBmaXJzdE1lc3NhZ2VDb250ZW50SHJlZjogYCR7VXJsQ29uZmlnLmNyZWF0ZWZlZWRiYWNrfWAsXHJcbiAgICAgICAgZmlyc3RNZXNzYWdlT2tCdXR0b25UZXh0OiAnR28gdG8gQmlsbCBQYXknLFxyXG4gICAgICAgIHNlY29uZE1lc3NhZ2VUaXRsZTogJ1BsZWFzZSBjb25maXJtIHlvdXIgY3JlZGl0IGJhbGFuY2UgaGFzIGJlZW4gcmVjb3ZlcmVkLiBUbyBjb25maXJtIGNsaWNrIFJlY292ZXJlZC4nLFxyXG4gICAgICAgIHNlY29uZE1lc3NhZ2VDb250ZW50OiAnRG8gbm90IGNsb3NlIG9yIHJlZnJlc2ggdGhlIGN1cnJlbnQgcGFnZS4gVGhlIGN1cnJlbnQgY2xvdWQgc2VydmljZSBjb25maWd1cmF0aW9uIHdpbGwgbmVlZCB0byBiZSByZXNlbGVjdGVkIG9uY2UgeW91IGxlYXZlIHRoaXMgcGFnZS4nLFxyXG4gICAgICAgIHNlY29uZE1lc3NhZ2VPa0J1dHRvblRleHQ6ICdSZWNvdmVyZWQnLFxyXG4gICAgICAgIHNlY29uZE1lc3NhZ2VGYWlsOiBgWW91ciBjcmVkaXQgYmFsYW5jZSB3YXMgbm90IHJlY292ZXJlZC4gPGEgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiIGhyZWY9XCIke1VybENvbmZpZy5yZWNoYXJnZX1cIiB0aU5hdmlnYXRpb24+UGF5IHlvdXIgYmlsbDwvYT4gb3IgPGEgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiIGhyZWY9XCIke1VybENvbmZpZy5jcmVhdGVmZWVkYmFja31cIiB0aU5hdmlnYXRpb24+c3VibWl0IGEgc2VydmljZSB0aWNrZXQ8L2E+LmAsXHJcbiAgICAgICAgc2Vjb25kTWVzc2FnZVRvT3BlcmF0aW9uOiAnJ1xyXG4gICAgfVxyXG59KTtcclxuXHJcbiJdfQ==