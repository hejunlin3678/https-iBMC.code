import { Util } from '@cloud/tiny3';
/**
 * @ignore
 * 工具类
 */
export class TpUtil {
    static setAttrs(element, attrs) {
        for (const key in attrs) {
            if (attrs.hasOwnProperty(key)) {
                element.setAttribute(key, attrs[key]);
            }
        }
    }
    static isObject(item) {
        return (item && typeof item === 'object' && !Array.isArray(item));
    }
    // 对象扩展，当前只适用于对象形式，数组形式如有需求，请在该方法中自行扩展
    static extend(target, source) {
        const output = Object.assign({}, target);
        if (!(TpUtil.isObject(target) && TpUtil.isObject(source))) {
            return;
        }
        Object.keys(source).forEach((key) => {
            if (TpUtil.isObject(source[key])) {
                if (!(key in target)) {
                    Object.assign(output, { [key]: source[key] });
                }
                else {
                    output[key] = TpUtil.extend(target[key], source[key]);
                }
            }
            else {
                Object.assign(output, { [key]: source[key] });
            }
        });
        return output;
    }
    /**
     * url 跳转的目标路径 string
     * params  参数对象集合 Object
     */
    static addUrlParams(url, params) {
        if (!Util.isString(url) || url === '' || Util.isUndefined(params)) {
            return url;
        }
        let finalUrl = url;
        for (const key in params) {
            if (Object.prototype.hasOwnProperty.call(params, key)) {
                const param = key + '=' + encodeURIComponent(params[key]);
                if (url.indexOf('?') === -1) {
                    finalUrl = finalUrl + '?' + param;
                }
                else {
                    finalUrl = finalUrl + '&' + param;
                }
            }
        }
        return finalUrl;
    }
    /**
     * url 跳转的目标路径 string
     * params 参数对象集合 Object
     */
    static addDefaultParam(url, params) {
        const defaultParam = {
            service: window.location.href // 默认参数为当前页面链接地址，方便用户实现返回原页面
        };
        const finalParams = Object.assign(Object.assign({}, defaultParam), params);
        return this.addUrlParams(url, finalParams);
    }
    /**
     * 得到cookie的值
     * @param key： cookie名对应的键值
     */
    static getCookie(key) {
        if (!document.cookie) {
            return;
        }
        const splitedCookie = document.cookie.split(';');
        for (const cookie of splitedCookie) {
            const temp = cookie.split('=');
            if (temp[0] && temp[0].trim() === key) {
                return temp[1].trim();
            }
        }
    }
    /**
     * 设置cookie的值，包括key、value
     */
    static setCookie(key, value) {
        document.cookie = `${key}=${value}`;
    }
}
//# sourceMappingURL=data:application/json;base64,