import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';
import { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';
import { CfUtil } from '../../cfutils/CfUtil';
/**
 * @ignore
 * 优惠场景，主要有包周期场景和按需场景，服务可根据实际类型自行配置。
 *
 * <example-url>../tinyplus3demo/#/discounts/discounts-all</example-url>
 */
export class TpDiscountsComponent extends TiBaseComponent {
    constructor(elementRef, render) {
        super(elementRef, render);
        this.elementRef = elementRef;
        this.render = render;
        /**
         * 可选优惠项切换选择项时触发
         *
         * 9.0.3 新增接口
         */
        this.discountsChange = new EventEmitter();
        /**
         * @ignore
         * 用户获取当前语言集合
         */
        this.localeWords = TiLocale.getLocaleWords();
        /**
         * @ignore
         * 用于获取词条
         */
        this.tpDiscounts = this.localeWords.tpDiscounts;
        /**
         * @ignore
         * 模板使用,判断是否为中文场景
         */
        this.isChinese = this.localeWords.tiLocaleKey === 'zh-CN';
        /**
         * @ignore
         * 模板使用,弹窗是否展开标志量
         */
        this.isOpen = false;
    }
    // tslint:disable-next-line:use-life-cycle-interface
    ngOnInit() {
        super.ngOnInit();
        if (this.discoutsConfig.type === 'ondemand') {
            this.handleDiscounts(this.discoutsConfig.discounts);
        }
        if (this.discoutsConfig.type === 'period') {
            this.setTotalSavings();
            this.setSelectableData(this.discoutsConfig.selectableDiscounts);
        }
        this.onlistenClick = this.render.listen(window, 'click', () => this.onDocumentClick());
    }
    // tslint:disable-next-line:use-life-cycle-interface
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        if (this.discoutsConfig.type === 'ondemand') {
            this.handleDiscounts(this.discoutsConfig.discounts);
        }
        if (this.discoutsConfig.type === 'period') {
            const change = changes['discoutsConfig'];
            if (change && !change.isFirstChange()) {
                this.setTotalSavings();
            }
            this.setSelectableData(this.discoutsConfig.selectableDiscounts);
        }
    }
    // tslint:disable-next-line:use-life-cycle-interface
    ngAfterViewChecked() {
        super.ngAfterViewChecked();
        if (this.isOpen) {
            // 定位元素宽度
            const tipModalIconWidth = this.fontEle.nativeElement.offsetWidth;
            // 定位元素左侧靠边距离
            // 服务实际业务中，使用offselLeft获取的值不准确（缺失左侧sideBar的47px），导致较小分辨率下，挤压出横向滚动条。
            // 此处修改为getBoundingClientRect().left，在服务环境上已测试ok.
            const tipModalIconLeft = this.fontEle.nativeElement.getBoundingClientRect().left;
            // 定位元素距离右侧窗口的位置
            const tipModalIconRight = window.innerWidth - tipModalIconLeft - tipModalIconWidth;
            // 提示弹窗宽度
            const tipContainerWidth = this.containerEle.nativeElement.offsetWidth;
            // 居中显示需要的偏移量
            const offset = (tipContainerWidth - tipModalIconWidth) / 2;
            // 弹窗正常居中对齐的偏移量 - 定位元素距离左侧窗口的位置；如果大于0，说明左溢出
            const isLeftOverflow = (offset - tipModalIconLeft) > 0;
            // 弹窗正常居中对齐的偏移量 - 定位元素距离右侧窗口的位置；如果大于0，则说明右溢出。
            const isRightOverflow = (offset - tipModalIconRight) > 0;
            const distance = 20; // 溢出时，距离左侧留20px余量
            let marginLeft;
            if (isLeftOverflow) {
                marginLeft = -tipModalIconLeft + distance;
            }
            else if (isRightOverflow) {
                marginLeft = -(tipContainerWidth - tipModalIconRight - tipModalIconWidth) - distance;
            }
            else {
                marginLeft = -offset;
            }
            this.render.setStyle(this.containerEle.nativeElement, 'margin-left', marginLeft + 'px');
            this.render.setStyle(this.beforeEle.nativeElement, 'left', tipModalIconWidth / 2 + 'px');
        }
    }
    // tslint:disable-next-line:use-life-cycle-interface
    ngOnDestroy() {
        super.ngOnDestroy();
        if (this.onlistenClick) {
            this.onlistenClick();
        }
    }
    /**
     * @ignore
     * 单选radio点击切换选择项触发
     */
    onRadioChange($event) {
        this.setTotalSavings();
        this.discountsChange.emit($event);
    }
    /**
     * 点击documnet优惠信息窗口关闭
     */
    onDocumentClick() {
        this.isOpen = false;
    }
    /**
     * @ignore
     * 点击右上角叉号图标，弹窗关闭
     */
    onClose($event) {
        this.isOpen = false;
        $event.stopPropagation();
    }
    /**
     * @ignore
     * 模板使用，tip面板点击需要组织冒泡
     */
    onContainerClick($event) {
        $event.stopPropagation();
    }
    /**
     * @ignore
     */
    onClick($event) {
        // 当在焦点在A标签，触发回车键的时候，不需要关闭面板。
        if (event.target['tagName'] === 'A') {
            return;
        }
        this.isOpen = !this.isOpen;
        $event.stopPropagation();
    }
    // 按需优惠项信息合并
    getOndemandDiscounts(data) {
        const out = [];
        for (let i = 0; i < data.length; i++) {
            const cur = data[i];
            const n = out.findIndex((ele) => ele.label === cur.label);
            if (n > -1) {
                const item = Object.assign(Object.assign(Object.assign({}, out[n]), cur), {
                    expireTime: Util.isString(out[n].expireTime) && Util.isString(cur.expireTime) &&
                        new Date(out[n].expireTime).getTime() > new Date(cur.expireTime).getTime() ? cur.expireTime : out[n].expireTime,
                    type: this.getData(out[n].type, cur.type),
                    href: this.getData(out[n].href, cur.href)
                });
                out[n] = item;
            }
            else {
                out.push(cur);
            }
        }
        return out;
    }
    // tslint:disable-next-line:prefer-function-over-method
    getData(val1, val2) {
        if (Util.isUndefined(val2) || val2 === '') {
            return val1;
        }
        return val2;
    }
    // 根据接口type来设定详情链接，也支持用户自定义详情链接
    // tslint:disable-next-line:prefer-function-over-method
    setDetailLink(item) {
        CfUtil.getLinks()
            .then((linksData) => {
            const user_center_common = linksData && linksData.links && linksData.links.user_center_common
                ? linksData.links.user_center_common : '';
            let detailLink = '';
            switch (item.type) {
                case 0:
                    detailLink = user_center_common + this.tpDiscounts.discounts_detailLink_type0;
                    break;
                case 1:
                    detailLink = user_center_common + this.tpDiscounts.discounts_detailLink_type1;
                    break;
                case 2:
                    detailLink = user_center_common + this.tpDiscounts.discounts_detailLink_type2
                        + (Util.isUndefined(item.beId) ? '' : '&beId=' + item.beId);
                    break;
                default:
                    detailLink = Util.isString(item.href) ? item.href : '';
                    break;
            }
            detailLink = this.addLinkParams(detailLink);
            item.href = detailLink;
        });
    }
    getLink(value) {
        value.forEach((item) => {
            this.setDetailLink(item);
        });
    }
    /**
     * @ignore
     * 到期时间一周之内才显示
     */
    showExpireTime(val) {
        const nowTime = new Date().getTime();
        const expireTime = new Date(val).getTime();
        const gap = expireTime - nowTime;
        return gap > 0 && gap < 86400000 * 7;
    }
    /**
     * @ignore
     * 到期时间格式化
     */
    getFormatExpireTime(val) {
        return CfUtil.formatLocaleDateTime(val);
    }
    // 按需场景数据拼接处理
    handleDiscounts(items) {
        const ondemandDiscounts = [];
        for (let i = 0; i < items.length; i++) {
            //  类似 8折与 20% off 转换
            items[i].discountRate = !Util.isNumber(items[i].rate) ? '' :
                this.isChinese ? ` ${parseFloat((items[i].rate * 10).toFixed(2))}${this.tpDiscounts.discounts}`
                    : `; ${parseFloat(((1 - items[i].rate) * 100).toFixed(2))}%${this.tpDiscounts.discounts}`;
            ondemandDiscounts[i] = {
                rate: Util.isNumber(items[i].rate) ? items[i].rate : undefined,
                expireTime: Util.isString(items[i].expireTime) ? items[i].expireTime : '',
                type: Util.isNumber(items[i].type) ? items[i].type : undefined,
                beId: Util.isString(items[i].beId) ? items[i].beId : '',
                href: Util.isString(items[i].href) ? items[i].href : ''
            };
            let name;
            let resourceName;
            let specification;
            if (this.isChinese) {
                name = Util.isString(items[i].name) ? items[i].name : '';
                resourceName = Util.isString(items[i].resourceName) ? items[i].resourceName : '';
                specification = Util.isString(items[i].specification) ? items[i].specification : '';
            }
            else {
                name = !Util.isEmptyString(items[i].name) ? items[i].name : '';
                resourceName = !Util.isEmptyString(items[i].resourceName) ? '; ' + items[i].resourceName : '';
                specification = !Util.isEmptyString(items[i].specification) ? ', ' + items[i].specification : '';
            }
            ondemandDiscounts[i].label = name + resourceName + specification + items[i].discountRate;
        }
        this.ondemandDiscountsConfig = this.getOndemandDiscounts(ondemandDiscounts);
        this.getLink(this.ondemandDiscountsConfig);
        return this.ondemandDiscountsConfig;
    }
    // 可选数据详情链接
    getSelectableDetail(vals) {
        for (const val of vals) {
            if (!Util.isUndefined(val.href)) {
                return;
            }
            this.setDetailLink(val);
        }
    }
    // 获取agencyID和locale
    addLinkParams(url) {
        if (url === '') {
            return url;
        }
        const storage = CfUtil.getStorageService();
        if (!(!Util.isUndefined(storage) && !Util.isUndefined(storage.cookieStorage) && Util.isFunction(storage.cookieStorage.getItem))) {
            return url;
        }
        const agencyID = storage.cookieStorage.getItem('agencyID');
        const locale = storage.cookieStorage.getItem('locale');
        let finalUrl = url;
        if (!Util.isEmptyString(agencyID)) {
            finalUrl = finalUrl + '&agencyId=' + agencyID;
        }
        if (!Util.isEmptyString(locale)) {
            finalUrl = finalUrl + '&locale=' + locale;
        }
        return finalUrl;
    }
    /**
     * 优惠总额
     */
    setTotalSavings() {
        this.sum = 0;
        if (Util.isArray(this.discoutsConfig.selectedDiscounts)) {
            for (const item of this.discoutsConfig.selectedDiscounts) {
                if (!Util.isNumber(item.priceNum)) {
                    continue;
                }
                else {
                    this.sum += item.priceNum;
                }
            }
        }
        // 获取选中优惠项的索引index
        if (!Util.isUndefined(this.discoutsConfig.selectableDiscounts)) {
            const index = this.discoutsConfig.selectableDiscounts.findIndex((ele) => ele.id === this.discoutsConfig.selectedId);
            const selectedDiscountsNum = this.discoutsConfig.selectableDiscounts[index]
                && this.discoutsConfig.selectableDiscounts[index].priceNum;
            if (index > -1 && Util.isNumber(selectedDiscountsNum)) {
                this.sum += selectedDiscountsNum;
            }
        }
    }
    /**
     * @ignore
     *
     * 判断优惠总价格是否为0，总结为0不显示共省部分
     */
    isSumEqualZero() {
        this.setTotalSavings();
        const reg = new RegExp('[\.-]');
        const precision = this.discoutsConfig.numFormat ?
            Number(this.discoutsConfig.numFormat.split(reg)[2]) : 2;
        return parseFloat(this.sum.toFixed(precision)) === 0;
    }
    /**
     * 可选优惠项数据根据实际场景判断是否添加默认尾项
     */
    setSelectableData(options) {
        if (!Util.isArray(options) || options.length === 0) {
            return;
        }
        this.getSelectableDetail(options);
        const length = options.length;
        if (options[length - 1].id !== 'no-discounts') {
            options[length] = {
                label: this.tpDiscounts.no_discounts,
                id: 'no-discounts',
                href: '',
                priceNum: 0
            };
        }
    }
}
TpDiscountsComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-discounts',
                template: "<div #font tiOutline class='tp-discounts-font' [tabindex]=\"0\" (keydown.enter)= 'onClick($event)'>\r\n  <span class='tp-discounts-symbol'>{{'tpDiscounts.discounts_selected' | tiTranslate}}</span>\r\n  <span #before *ngIf='isOpen' class=\"tp-discounts-container-before\"></span>\r\n  <div #container (click)='onContainerClick($event)' [id]=\"appendId('open')\" *ngIf='isOpen' class='tp-discounts-container' [ngStyle]=\"{'max-height':discoutsConfig.maxHeight + 'px'}\">\r\n    <div *ngIf=\"discoutsConfig.type === 'ondemand'\">\r\n      <ng-container *ngTemplateOutlet='ondemand'></ng-container>\r\n    </div>\r\n    <div *ngIf=\"discoutsConfig.type === 'period'\">\r\n      <ng-container *ngTemplateOutlet='period'></ng-container>\r\n    </div>\r\n    <tp-icon local tiOutline name='cloud-close' class='tp-discounts-close' [tabindex]=\"0\" (click)=\"onClose($event)\" [id]=\"appendId('close')\"></tp-icon>\r\n  </div>\r\n</div>\r\n<!-- \u6309\u9700\u4F18\u60E0\u6298\u6263\u6A21\u677F -->\r\n<ng-template #ondemand>\r\n  <div *ngIf='discoutsConfig.discounts && discoutsConfig.discounts.length > 0'>\r\n    <span class='tp-discounts-title'>{{'tpDiscounts.discounts_selected' | tiTranslate}}</span>\r\n    <ul class='tp-ondemand-discounts-container' [id]=\"appendId('list')\">\r\n      <li class='tp-discounts-list' *ngFor='let item of ondemandDiscountsConfig | rate; index as i'>\r\n        <tp-icon local name='cloud-selected' class='tp-discounts-listfont'></tp-icon>\r\n        <span class='tp-discounts-label' [id]=\"appendId('label_' + i)\">{{item.label}}</span>\r\n        <a tiNavigationDarkbg class='tp-discounts-link' target='_blank' [href]='item.href' rel=\"noopener noreferrer\"\r\n          *ngIf='item.href' [id]=\"appendId('details_' + i)\">{{'tpDiscounts.discounts_details' | tiTranslate}}</a>\r\n        <div class='tp-discounts-expireTime' *ngIf='item.expireTime && showExpireTime(item.expireTime)'>\r\n          <span>{{'tpDiscounts.discounts_expireTime' | tiTranslate}}</span>\r\n          <span>{{getFormatExpireTime(item.expireTime)}}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</ng-template>\r\n<!-- \u5305\u5468\u671F\u4F18\u60E0\u6298\u6263\u6A21\u677F -->\r\n<ng-template #period>\r\n  <span class=\"tp-discounts-title\">{{'tpDiscounts.discounts_selected' | tiTranslate}}</span>\r\n  <span class=\"tp-discounts-title\" *ngIf=\"!isSumEqualZero()\">( <span style=\"white-space:pre\">{{'tpDiscounts.savings' | tiTranslate}}</span><!--\r\n    --><span [id]=\"appendId('sum')\">{{sum | tpCurrency: discoutsConfig.numFormat}}</span><span *ngIf='discoutsConfig.measureUnit'>/{{discoutsConfig.measureUnit}}</span> ) :</span>\r\n  <div class=\"tp-selectedDiscounts-container\"\r\n    *ngIf=\"discoutsConfig.selectedDiscounts && discoutsConfig.selectedDiscounts.length > 0\">\r\n    <table style=\"width:100%\">\r\n      <tbody>\r\n        <tr *ngFor=\"let discount of discoutsConfig.selectedDiscounts | notEqualTo0; index as i\">\r\n          <td class=\"tp-discounts-list\">\r\n            <tp-icon local name='cloud-selected' class='tp-discounts-listfont'></tp-icon><!--\r\n            --><span class=\"tp-discounts-label\" [id]=\"appendId('discount_label_' + i)\"><span>{{'tpDiscounts.discounts_type' | tiTranslate}}</span><span>{{discount.resourceName}}</span></span>\r\n          </td>\r\n          <td class='tp-selectable-discounts-priceNum'>\r\n            <span class=\"tp-disconuts-num\"><span>{{'tpDiscounts.discounts_label' | tiTranslate}}</span>\r\n              <span [id]=\"appendId('discount_price_' + i)\">{{discount.priceNum | tpCurrency: discoutsConfig.numFormat}}</span><span *ngIf='discoutsConfig.measureUnit'>/{{discoutsConfig.measureUnit}}</span></span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"tp-availableDiscounts-container\"\r\n    *ngIf=\"discoutsConfig.selectableDiscounts && discoutsConfig.selectableDiscounts.length > 0\">\r\n    <p class=\"tp-discounts-label \">\r\n      <tp-icon local name='cloud-selected' class='tp-discounts-listfont'></tp-icon><span\r\n        class='tp-availablediscounts-title'>{{'tpDiscounts.discounts_available' | tiTranslate}}</span>\r\n    </p>\r\n    <div style=\"margin-left:24px\">\r\n      <table class=\"tp-radio-container\">\r\n        <tbody>\r\n          <tr *ngFor=\"let item of discoutsConfig.selectableDiscounts | notEqualTo01\">\r\n            <td class='tp-selectable-discounts'>\r\n              <input type=\"radio\" tiRadio dark name=\"discountList\" [(ngModel)]=\"discoutsConfig.selectedId\" [id]=\"appendId('radio_' + item.id)\"\r\n                (ngModelChange)='onRadioChange(item)' value=\"{{item.id}}\" label=\"{{item.label}}\" />\r\n              <a tiNavigationDarkbg class='tp-discounts-link' target='_blank' *ngIf='item.href' rel=\"noopener noreferrer\"\r\n                [href]=\"item.href\" [id]=\"appendId('details_' + item.id)\">{{'tpDiscounts.discounts_details' | tiTranslate}}</a>\r\n              <tp-icon local *ngIf='item.isRecommend' class='tp-discounts-recommend' name='cloud-recommend'></tp-icon>\r\n            </td>\r\n            <td style=\"padding-left:10px;text-align:right\">\r\n              <span *ngIf=\"item.priceNum\"\r\n                class=\"tp-disconuts-num\"><span>{{'tpDiscounts.discounts_label' | tiTranslate}}</span>\r\n                <span [id]=\"appendId('discountlist_price' + item.id)\">{{item.priceNum | tpCurrency: discoutsConfig.numFormat}}</span><span *ngIf='discoutsConfig.measureUnit'>/{{discoutsConfig.measureUnit}}</span></span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n",
                host: {
                    '(click)': 'onClick($event)'
                },
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tp-discounts-container{background-color:var(--ti-common-color-bg-dark-deep);border-radius:var(--ti-common-border-radius-1);bottom:25px;box-sizing:border-box;cursor:default;left:0;overflow-y:auto;padding:var(--ti-common-space-3x) var(--ti-common-space-2x);white-space:nowrap}.tp-discounts-container,.tp-discounts-container-before{box-shadow:var(--ti-common-shadow-3-down);position:absolute}.tp-discounts-container-before{background:var(--ti-common-color-bg-dark-deep);border-bottom:1px solid var(--ti-common-color-bg-dark-deep);border-right:1px solid var(--ti-common-color-bg-dark-deep);bottom:20px;content:\"\";display:block;height:10px;margin-left:-5px;overflow:hidden;transform:rotate(45deg);width:10px}.tp-discounts-close{color:var(--ti-common-color-icon-graybg-normal);cursor:pointer;font-size:12px;position:absolute;right:10px;top:10px}.tp-discounts-close:hover{color:var(--ti-common-color-icon-darkbg-hover)}.tp-discounts-title{font-size:var(--ti-common-font-size-1);line-height:var(--ti-common-line-height-number);padding-bottom:var(--ti-common-space-base);padding-left:var(--ti-common-space-2x)}.tp-discounts-font,.tp-discounts-title{color:var(--ti-common-color-warn);display:inline-block}.tp-discounts-font{cursor:pointer;font-size:var(--ti-common-font-size-2);padding-right:var(--ti-common-space-3x);position:relative;vertical-align:text-bottom}.tp-discounts-font:hover{color:var(--ti-common-color-warn-text)}.tp-discounts-listfont{color:var(--ti-common-color-warn);font-size:var(--ti-common-font-size-2);vertical-align:text-bottom}.tp-discounts-label{color:var(--ti-common-color-text-gray);padding-left:var(--ti-common-space-2x);padding-right:var(--ti-common-space-base)}.tp-discounts-label,.tp-discounts-link{font-size:var(--ti-common-font-size-base)}.tp-discounts-list{padding-top:var(--ti-common-space-2x)}.tp-discounts-expireTime{color:var(--ti-common-color-warn);font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);margin-left:var(--ti-common-space-6x)}.tp-ondemand-discounts-container{padding:0 var(--ti-common-space-2x)}.tp-disconuts-num{color:var(--ti-common-color-warn);font-size:var(--ti-common-font-size-base)}.tp-selectable-discounts ::ng-deep .ti3-radio-label{color:var(--ti-common-color-text-gray)!important;font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);padding-right:var(--ti-common-space-base)}.tp-discounts-recommend{background-color:var(--ti-common-color-text-white);border-radius:var(--ti-common-border-radius-1);color:var(--ti-common-color-warn);display:inline-block;height:15px;margin-left:var(--ti-common-space-3x);vertical-align:middle;width:15px}.tp-discounts-recommend.tp-icon-cloud-recommend:before{line-height:1;vertical-align:super}.tp-selectedDiscounts-container{padding:0 var(--ti-common-space-2x) var(--ti-common-space-3x)}.tp-availablediscounts-title{padding-left:var(--ti-common-space-2x)}.tp-availableDiscounts-container{background-color:rgba(40,43,51,.6);margin-bottom:2px;padding:var(--ti-common-space-3x) var(--ti-common-space-2x)}.tp-availableDiscounts-container .tp-discounts-label{padding-left:0}.tp-radio-container{width:100%}.tp-radio-container td{white-space:nowrap}.tp-discounts-symbol{font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);position:relative}.tp-discounts-symbol:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:5px solid;content:\"\";height:0;position:absolute;right:-12px;top:7px;width:0}.tp-selectable-discounts-priceNum{padding-left:10px;padding-top:var(--ti-common-space-2x);text-align:right}"]
            },] }
];
TpDiscountsComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
TpDiscountsComponent.propDecorators = {
    discoutsConfig: [{ type: Input }],
    discountsChange: [{ type: Output }],
    fontEle: [{ type: ViewChild, args: ['font',] }],
    containerEle: [{ type: ViewChild, args: ['container',] }],
    beforeEle: [{ type: ViewChild, args: ['before',] }]
};
//# sourceMappingURL=data:application/json;base64,