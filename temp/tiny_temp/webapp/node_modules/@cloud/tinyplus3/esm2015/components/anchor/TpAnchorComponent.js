import { Component, ContentChild, ElementRef, EventEmitter, Input, NgZone, Output, Renderer2, TemplateRef } from '@angular/core';
import { TiBaseComponent } from '@cloud/tiny3';
/**
 * 定位导航组件
 *
 * <example-url>../tinyplus3demo/#/anchor/anchor-all</example-url>
 */
export class TpAnchorComponent extends TiBaseComponent {
    constructor(element, renderer2, zone) {
        super(element, renderer2);
        this.element = element;
        this.renderer2 = renderer2;
        this.zone = zone;
        /**
         * 设置锚点对应Dom元素距窗口顶部距离，点击切换锚点时，页面滑动在到达该值时，切换到对应锚点
         *
         * <b>注：</b>通过滚轮滚动时，当顶部距离小于设置的offsetTop值，切换到对应锚点
         */
        this.offsetTop = 50;
        /**
         * 设置用户点击锚点时，页面滑动速度，其单位为ms
         */
        this.speed = 300;
        /**
         * 跳转到该锚点时，触发事件
         */
        this.select = new EventEmitter();
        /**
         * 锚点id改变事件，用于实现锚点id双向绑定，也可单独使用
         *
         * 10.0.4/9.0.8新增接口
         */
        this.anchorIdChange = new EventEmitter();
        this.hasGoanchor = false;
        this.hasAnimation = false; // 初始化及数据更新时，无需平滑滚动
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        const anchorIdObj = changes['anchorId'];
        const itemsObj = changes['items'];
        if (anchorIdObj && anchorIdObj.currentValue && !anchorIdObj.isFirstChange() && this.anchorId !== this.currentId) {
            this.hasGoanchor = false;
            this.hasAnimation = true;
        }
        if (itemsObj && itemsObj.currentValue && !itemsObj.isFirstChange()) {
            this.hasGoanchor = false;
        }
    }
    ngOnInit() {
        super.ngOnInit();
        // 监听滚轮事件
        this.zone.runOutsideAngular(() => {
            this.unlistenScroll = this.renderer2.listen(window, 'scroll', () => {
                this.onWindowScroll();
            });
        });
    }
    ngAfterViewChecked() {
        super.ngAfterViewChecked();
        // 数据更新anchorId有值时，需要滚动页面到指定位置，只触发一次
        if (!this.hasGoanchor) {
            this.hasGoanchor = true;
            this.goToAnchor(this.anchorId || this.items && this.items[0] && this.items[0].id);
        }
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        if (this.unlistenScroll) {
            this.unlistenScroll();
        }
    }
    // 页面滚动时，相应锚点高亮
    onWindowScroll() {
        if (this.isInnerScrolling) {
            return;
        }
        const scrollTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop;
        const itemLength = this.items && this.items.length;
        // 页面滚动时，锚点对应Dom元素距浏览器窗口顶部高度小于等于所配置的顶部偏移量，则应是当前锚点
        for (let i = itemLength - 1; i >= 0; i--) {
            const anchorEle = document.getElementById(this.items[i].id);
            // 判断有无当前激活锚点，使用户点击时，只当前锚点高亮；而滚动时，相对应锚点都高亮
            if (anchorEle && anchorEle.offsetTop) {
                const clientY = anchorEle.offsetTop - scrollTop - this.offsetTop;
                const id = this.anchorId;
                if (clientY <= this.offsetTop) {
                    this.zone.run(() => {
                        this.anchorId = this.currentId = this.items[i].id;
                        // 锚点改变时，仅向外通知一次
                        if (this.anchorId !== id) {
                            this.select.emit(this.items[i]);
                            this.anchorIdChange.emit(this.items[i].id);
                        }
                    });
                    break;
                }
            }
        }
    }
    /**
     * @ignore
     */
    onClick(item) {
        this.hasAnimation = true;
        this.goToAnchor(item.id);
    }
    /**
     * 页面滚动到目标锚点对应位置
     * @param anchorId 锚点id
     */
    goToAnchor(anchorId) {
        this.isInnerScrolling = true;
        const targetEle = document.getElementById(anchorId);
        const scrollTop = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop;
        const scollPosition = targetEle && targetEle.offsetTop - this.offsetTop;
        /**
         * 初始化及数据更新时，页面直接滚动到定位位置；
         * 点击锚点切换及用户动态改变当前锚点id时，滚动条平滑运动。
         */
        if (this.hasAnimation) {
            this.scrollAnimation(scrollTop, scollPosition, anchorId, this.speed);
        }
        else {
            // 修改了当前高亮锚点，使用setTimeout，消除ExpressionChangedAfterItHasBeenCheckedError报错
            setTimeout(() => {
                this.scrollToView(scollPosition, anchorId);
            }, 0);
        }
    }
    // 滚动条平滑运动
    scrollAnimation(currentY, targetY, anchorId, speed) {
        const direction = targetY - currentY > 0 ? 1 : -1;
        let distance = Math.abs(targetY - currentY); // 滚动条需要滚动的距离
        const stepTimes = speed / (1000 / 60); // 一般浏览器刷新频率是60HZ，时间间隔为1000ms/60，总帧数
        let stepDist = distance / stepTimes; // 每帧滚动条滚动距离
        if (targetY !== currentY) {
            stepDist *= direction;
            // 定时器，1000/60ms时间间隔 执行一次
            let positionY = currentY;
            let timer = setInterval(() => {
                positionY = positionY + stepDist;
                distance -= Math.abs(stepDist);
                if (distance <= 0) {
                    clearInterval(timer);
                    timer = undefined;
                    this.scrollToView(targetY, anchorId);
                    this.hasAnimation = false; // 更新hasAnimation
                }
                else {
                    window.scrollTo(0, positionY);
                }
            }, 1000 / 60);
        }
    }
    // 页面定位到指定位置，无滚动效果
    scrollToView(target, anchorId) {
        window.scrollTo(0, target); // 横向坐标不移动
        this.getCurrentAnchor(anchorId);
        this.isInnerScrolling = false;
    }
    // 页面滚动到指定位置之后，向外通知当前锚点数据
    getCurrentAnchor(anchorId) {
        this.anchorId = this.currentId = anchorId;
        for (const item of this.items) {
            if (item.id === anchorId) {
                this.select.emit(item);
                this.anchorIdChange.emit(item.id);
            }
        }
    }
}
TpAnchorComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-anchor',
                template: "<ul [id]=\"appendId('list')\">\r\n    <li class=\"tp-anchor-link\"\r\n        *ngFor=\"let item of items index as i\"\r\n        [ngClass]=\"{'tp-anchor-link-active': item.id === currentId}\">\r\n        <a href=\"javascript:void(0);\"\r\n            oncontextmenu=\"return false\"\r\n            class=\"tp-anchor-link-title\"\r\n            (click)=\"onClick(item)\"\r\n            [id]=\"appendId('title_' + item.id)\">\r\n            <ng-container *ngIf=\"itemTemplete else defaultTemplete\">\r\n               <ng-container *ngTemplateOutlet=\"itemTemplete; context: {$implicit: item,index: i}\"></ng-container>\r\n            </ng-container>\r\n            <ng-template #defaultTemplete>\r\n                <span>{{item.title}}</span>\r\n            </ng-template>\r\n        </a>\r\n    </li>\r\n</ul>\r\n",
                host: {
                    '[class.tp-anchor-container]': 'true'
                },
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}::ng-deep :root{--tp-anchor-link-badge-height:var(--tp-anchor-link-badge-width);--tp-anchor-link-badge-width:8px;--tp-anchor-link-line-width:1px;--tp-anchor-link-padding:0 0 var(--ti-common-space-5x) 0;--tp-anchor-link-title-lineHeight:calc(var(--ti-common-font-size-base)*var(--ti-common-line-height-number));--tp-anchor-link-title-padding-left:calc(20px + var(--ti-common-space-3x) + var(--tp-anchor-link-badge-width));--tp-anchor-padding:30px 2px;--tp-anchor-width:160px}:host.tp-anchor-container{-ms-box-sizing:border-box;box-sizing:border-box;display:inline-block;overflow:hidden;padding:var(--tp-anchor-padding);width:var(--tp-anchor-width)}.tp-anchor-link{padding:var(--tp-anchor-link-padding);position:relative}.tp-anchor-link:after{background-color:var(--tp-anchor-link-line-color);content:\"\";height:calc(100% - var(--tp-anchor-link-badge-width));left:calc(var(--ti-common-space-5x) + (var(--tp-anchor-link-badge-width) - var(--tp-anchor-link-line-width))/2);position:absolute;top:calc((var(--tp-anchor-link-title-lineHeight) + var(--tp-anchor-link-badge-width))/2);width:var(--tp-anchor-link-line-width)}.tp-anchor-link:last-child{padding-bottom:0}.tp-anchor-link:last-child:after{display:none}.tp-anchor-link-title{color:var(--tp-anchor-link-title-color);display:block;line-height:var(--tp-anchor-link-title-lineHeight);padding:0 var(--ti-common-space-5x) 0 var(--tp-anchor-link-title-padding-left);position:relative;text-decoration:none;word-wrap:break-word}.tp-anchor-link-title:before{background-color:var(--tp-anchor-link-line-color);border-radius:50%;box-sizing:border-box;content:\"\";height:var(--tp-anchor-link-badge-height);left:var(--ti-common-space-5x);position:absolute;top:calc((var(--tp-anchor-link-title-lineHeight) - var(--tp-anchor-link-badge-height))/2);width:var(--tp-anchor-link-badge-width)}.tp-anchor-link-title:hover{color:var(--tp-anchor-link-title-color-hover)}.tp-anchor-link-active .tp-anchor-link-title{color:var(--tp-anchor-link-title-color-selected)}.tp-anchor-link-active .tp-anchor-link-title:before{background-color:var(--ti-common-color-bg-emphasize)}"]
            },] }
];
TpAnchorComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: NgZone }
];
TpAnchorComponent.propDecorators = {
    items: [{ type: Input }],
    anchorId: [{ type: Input }],
    offsetTop: [{ type: Input }],
    speed: [{ type: Input }],
    select: [{ type: Output }],
    anchorIdChange: [{ type: Output }],
    itemTemplete: [{ type: ContentChild, args: ['item', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,