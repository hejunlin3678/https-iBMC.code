import { Component, ElementRef, Renderer2 } from '@angular/core';
import { TiBaseComponent, TiRenderer } from '@cloud/tiny3';
import { TpGuideComponent } from './TpGuideComponent';
import { TpGuidesComponent } from './TpGuidesComponent';
/**
 * TiGuideBodyComponent 是单个引导模块的body区域
 */
export class TpGuideBodyComponent extends TiBaseComponent {
    constructor(elementRef, renderer2, tiRenderer, guideComp, guidesComp) {
        super(elementRef, renderer2);
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.tiRenderer = tiRenderer;
        this.guideComp = guideComp;
        this.guidesComp = guidesComp;
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngOnInit() {
        super.ngOnInit();
        this.guideComp.hasBody = true;
        this.tiRenderer.insertAfter(this.nativeElement, this.guidesComp.nativeElement);
    }
    /**
     * @ignore
     * 展示激活项body
     */
    showActiveBody() {
        return this.guidesComp.activeIndex === this.guideComp.cardIndex;
    }
}
TpGuideBodyComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-guide-body',
                template: "<div class=\"tp-guide-body\" *ngIf=\"showActiveBody()\" >\r\n    <ng-content></ng-content>\r\n</div>\r\n",
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tp-guide-body{-ms-box-sizing:border-box;background:var(--ti-common-color-bg-white-normal);box-shadow:var(--ti-common-shadow-1-down);box-sizing:border-box;display:block;font-size:var(--ti-common-font-size-base);margin-top:var(--tp-guide-body-space);padding:var(--ti-common-space-6x) var(--ti-common-space-6x) var(--ti-common-space-6x) var(--ti-common-space-6x);width:100%}"]
            },] }
];
TpGuideBodyComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: TiRenderer },
    { type: TpGuideComponent },
    { type: TpGuidesComponent }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBHdWlkZUJvZHlDb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9AY2xvdWQvdGlueXBsdXMzL2NvbXBvbmVudHMvZ3VpZGVzL1RwR3VpZGVCb2R5Q29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUUzRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RDs7R0FFRztBQU9ILE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxlQUFlO0lBQ3JELFlBQW9CLFVBQXNCLEVBQVUsU0FBb0IsRUFBVSxVQUFzQixFQUNwRixTQUEyQixFQUFVLFVBQTZCO1FBQ2xGLEtBQUssQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFGYixlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUFVLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDcEYsY0FBUyxHQUFULFNBQVMsQ0FBa0I7UUFBVSxlQUFVLEdBQVYsVUFBVSxDQUFtQjtJQUV0RixDQUFDO0lBQ0QscURBQXFEO0lBQ3JELFFBQVE7UUFDSixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNuRixDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksY0FBYztRQUNqQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsV0FBVyxLQUFLLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDO0lBQ3BFLENBQUM7OztZQXZCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLG9IQUFnQzs7YUFFbkM7OztZQVptQixVQUFVO1lBQUUsU0FBUztZQUNmLFVBQVU7WUFFM0IsZ0JBQWdCO1lBQ2hCLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpQmFzZUNvbXBvbmVudCwgVGlSZW5kZXJlciB9IGZyb20gJ0BjbG91ZC90aW55Myc7XHJcblxyXG5pbXBvcnQgeyBUcEd1aWRlQ29tcG9uZW50IH0gZnJvbSAnLi9UcEd1aWRlQ29tcG9uZW50JztcclxuaW1wb3J0IHsgVHBHdWlkZXNDb21wb25lbnQgfSBmcm9tICcuL1RwR3VpZGVzQ29tcG9uZW50JztcclxuLyoqXHJcbiAqIFRpR3VpZGVCb2R5Q29tcG9uZW50IOaYr+WNleS4quW8leWvvOaooeWdl+eahGJvZHnljLrln59cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd0cC1ndWlkZS1ib2R5JyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9ndWlkZS1ib2R5Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vZ3VpZGUtYm9keS5sZXNzJ11cclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBUcEd1aWRlQm9keUNvbXBvbmVudCBleHRlbmRzIFRpQmFzZUNvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsIHByaXZhdGUgcmVuZGVyZXIyOiBSZW5kZXJlcjIsIHByaXZhdGUgdGlSZW5kZXJlcjogVGlSZW5kZXJlcixcclxuICAgICAgICAgICAgICAgIHByaXZhdGUgZ3VpZGVDb21wOiBUcEd1aWRlQ29tcG9uZW50LCBwcml2YXRlIGd1aWRlc0NvbXA6IFRwR3VpZGVzQ29tcG9uZW50KSB7XHJcbiAgICAgICAgc3VwZXIoZWxlbWVudFJlZiwgcmVuZGVyZXIyKTtcclxuICAgIH1cclxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogdXNlLWxpZmUtY3ljbGUtaW50ZXJmYWNlXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gICAgICAgIHRoaXMuZ3VpZGVDb21wLmhhc0JvZHkgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMudGlSZW5kZXJlci5pbnNlcnRBZnRlcih0aGlzLm5hdGl2ZUVsZW1lbnQsIHRoaXMuZ3VpZGVzQ29tcC5uYXRpdmVFbGVtZW50KTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICog5bGV56S65r+A5rS76aG5Ym9keVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2hvd0FjdGl2ZUJvZHkoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3VpZGVzQ29tcC5hY3RpdmVJbmRleCA9PT0gdGhpcy5ndWlkZUNvbXAuY2FyZEluZGV4O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==