import { Component, ElementRef, Input, Renderer2 } from '@angular/core';
import { TiFormComponent, TiLocale } from '@cloud/tiny3';
/**
 * NPS评分组件
 *
 * <example-url>../tinyplus3demo/#/score/score-all</example-url>
 */
export class TpScoreComponent extends TiFormComponent {
    constructor(hostRef, renderer) {
        super(hostRef, renderer);
        this.hostRef = hostRef;
        this.renderer = renderer;
        /**
         * @ignore
         * 定义含有11项成员的数组
         */
        this.scoreArray = new Array(11);
        this.minText = this.minText || TiLocale.getLocaleWords().tpScore.minText;
        this.maxText = this.maxText || TiLocale.getLocaleWords().tpScore.maxText;
    }
    /**
     * @ignore
     * 选择评分时，触发事件
     */
    onClick(value) {
        this.model = value;
    }
}
TpScoreComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-score',
                template: "<span *ngFor=\"let item of scoreArray index as i; let last=last;\"\r\n      class=\"tp-score-item\"\r\n      [ngClass]=\"{'tp-score-item-active': model === i,\r\n                  'tp-score-item-last-child': last}\"\r\n      tiOutline\r\n      [tabindex]=\"0\" (keydown.enter)=\"onClick(i)\"\r\n      (click)=\"onClick(i)\"\r\n      [id]=\"appendId(i)\">{{i}}</span>\r\n<br>\r\n\r\n<span class=\"tp-score-text\">\r\n    <span [id]=\"appendId('min')\">{{minText}}</span>\r\n    <span [id]=\"appendId('max')\">{{maxText}}</span>\r\n</span>",
                providers: [TiFormComponent.getValueAccessor(TpScoreComponent)],
                styles: ["::ng-deep :root{--tp-score-item-height:28px;--tp-score-item-width:36px}:host{display:inline-block;font-size:var(--ti-common-font-size-base);font-weight:400;line-height:var(--ti-common-line-height-number)}.tp-score-item{background-color:var(--ti-common-color-bg-light-normal);border-radius:var(--ti-common-border-radius-normal) 0 var(--ti-common-border-radius-normal);cursor:pointer;display:inline-block;height:var(--tp-score-item-height);line-height:var(--tp-score-item-height);margin-right:var(--ti-common-space-base);text-align:center;width:var(--tp-score-item-width)}.tp-score-item:hover{background-color:var(--ti-common-color-bg-light-emphasize)}.tp-score-item.tp-score-item-active{background-color:var(--ti-common-color-bg-emphasize);color:var(--ti-common-color-text-white)}.tp-score-item-last-child{margin-right:0}.tp-score-text{color:var(--ti-common-color-text-weaken);display:flex;justify-content:space-between;margin-top:var(--ti-common-space-2x)}"]
            },] }
];
TpScoreComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
TpScoreComponent.propDecorators = {
    minText: [{ type: Input }],
    maxText: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBTY29yZUNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55cGx1czMvY29tcG9uZW50cy9zY29yZS9UcFNjb3JlQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFekQ7Ozs7R0FJRztBQVFILE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxlQUFlO0lBZ0JqRCxZQUFzQixPQUFtQixFQUFZLFFBQW1CO1FBQ3BFLEtBQUssQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFEUCxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQVksYUFBUSxHQUFSLFFBQVEsQ0FBVztRQU54RTs7O1dBR0c7UUFDSSxlQUFVLEdBQWUsSUFBSSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFJMUMsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxJQUFJLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3pFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sSUFBSSxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUM3RSxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksT0FBTyxDQUFDLEtBQWE7UUFDeEIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7SUFDdkIsQ0FBQzs7O1lBbENKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsVUFBVTtnQkFDcEIscWlCQUEyQjtnQkFFM0IsU0FBUyxFQUFFLENBQUUsZUFBZSxDQUFDLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLENBQUU7O2FBQ3BFOzs7WUFibUIsVUFBVTtZQUFTLFNBQVM7OztzQkFtQjNDLEtBQUs7c0JBSUwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUaUZvcm1Db21wb25lbnQsIFRpTG9jYWxlIH0gZnJvbSAnQGNsb3VkL3RpbnkzJztcclxuXHJcbi8qKlxyXG4gKiBOUFPor4TliIbnu4Tku7ZcclxuICpcclxuICogPGV4YW1wbGUtdXJsPi4uL3RpbnlwbHVzM2RlbW8vIy9zY29yZS9zY29yZS1hbGw8L2V4YW1wbGUtdXJsPlxyXG4gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3RwLXNjb3JlJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9zY29yZS5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL3Njb3JlLmxlc3MnXSxcclxuICAgIHByb3ZpZGVyczogWyBUaUZvcm1Db21wb25lbnQuZ2V0VmFsdWVBY2Nlc3NvcihUcFNjb3JlQ29tcG9uZW50KSBdXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgVHBTY29yZUNvbXBvbmVudCBleHRlbmRzIFRpRm9ybUNvbXBvbmVudCB7XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruacgOWwj+ivhOWIhuWAvOaWh+acrOaPj+i/sFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBtaW5UZXh0OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruacgOWkp+ivhOWIhuWAvOaWh+acrOaPj+i/sFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBtYXhUZXh0OiBzdHJpbmc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDlrprkuYnlkKvmnIkxMemhueaIkOWRmOeahOaVsOe7hFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc2NvcmVBcnJheTogQXJyYXk8YW55PiA9IG5ldyBBcnJheSgxMSk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvdGVjdGVkIGhvc3RSZWY6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XHJcbiAgICAgICAgc3VwZXIoaG9zdFJlZiwgcmVuZGVyZXIpO1xyXG4gICAgICAgIHRoaXMubWluVGV4dCA9IHRoaXMubWluVGV4dCB8fCBUaUxvY2FsZS5nZXRMb2NhbGVXb3JkcygpLnRwU2NvcmUubWluVGV4dDtcclxuICAgICAgICB0aGlzLm1heFRleHQgPSB0aGlzLm1heFRleHQgfHwgVGlMb2NhbGUuZ2V0TG9jYWxlV29yZHMoKS50cFNjb3JlLm1heFRleHQ7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIOmAieaLqeivhOWIhuaXtu+8jOinpuWPkeS6i+S7tlxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgb25DbGljayh2YWx1ZTogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5tb2RlbCA9IHZhbHVlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==