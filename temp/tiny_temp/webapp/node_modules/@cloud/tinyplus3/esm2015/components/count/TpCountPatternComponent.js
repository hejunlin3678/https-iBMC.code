// tslint:disable-next-line: no-implicit-dependencies
import { Component, Input } from '@angular/core';
// tslint:disable-next-line: no-implicit-dependencies
import { TiBaseComponent, TiLocale } from '@cloud/tiny3';
/**
 * 表格倒计时组件
 *
 * <example-url>../tinyplus3demo/#/count/count-all</example-url>
 */
export class TpCountPatternComponent extends TiBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * 计费模式
         */
        this.type = 'period';
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngOnInit() {
        super.ngOnInit();
        this.updateText();
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        if (changes['type'] && !changes['type'].firstChange) {
            this.updateText();
        }
    }
    updateText() {
        this.text = this.type === 'period' ?
            TiLocale.getLocaleWords().tpCount.periodCharging : TiLocale.getLocaleWords().tpCount.ondemandCharging;
    }
}
TpCountPatternComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-count-pattern',
                template: `
      {{ text }}
    `
            },] }
];
TpCountPatternComponent.propDecorators = {
    type: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBDb3VudFBhdHRlcm5Db21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9AY2xvdWQvdGlueXBsdXMzL2NvbXBvbmVudHMvY291bnQvVHBDb3VudFBhdHRlcm5Db21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscURBQXFEO0FBQ3JELE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUNoRSxxREFBcUQ7QUFDckQsT0FBTyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFHekQ7Ozs7R0FJRztBQU9ILE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxlQUFlO0lBTjVEOztRQU9JOztXQUVHO1FBQ00sU0FBSSxHQUF3QixRQUFRLENBQUM7SUEyQmxELENBQUM7SUFuQkcscURBQXFEO0lBQ3JELFFBQVE7UUFDSixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFFakIsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFDRCxxREFBcUQ7SUFDckQsV0FBVyxDQUFDLE9BQXNCO1FBQzlCLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFM0IsSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsV0FBVyxFQUFFO1lBQ2pELElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztTQUNyQjtJQUNMLENBQUM7SUFFTyxVQUFVO1FBQ2QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDO1lBQ2hDLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsY0FBYyxFQUFFLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0lBQzlHLENBQUM7OztZQXBDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGtCQUFrQjtnQkFDNUIsUUFBUSxFQUFFOztLQUVUO2FBQ0o7OzttQkFLSSxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1pbXBsaWNpdC1kZXBlbmRlbmNpZXNcclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWltcGxpY2l0LWRlcGVuZGVuY2llc1xyXG5pbXBvcnQgeyBUaUJhc2VDb21wb25lbnQsIFRpTG9jYWxlIH0gZnJvbSAnQGNsb3VkL3RpbnkzJztcclxuaW1wb3J0IHsgVHBDb3VudENoYXJnaW5nTW9kZSB9IGZyb20gJy4vVHBDb3VudENvbXBvbmVudCc7XHJcblxyXG4vKipcclxuICog6KGo5qC85YCS6K6h5pe257uE5Lu2XHJcbiAqXHJcbiAqIDxleGFtcGxlLXVybD4uLi90aW55cGx1czNkZW1vLyMvY291bnQvY291bnQtYWxsPC9leGFtcGxlLXVybD5cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd0cC1jb3VudC1wYXR0ZXJuJyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICAgIHt7IHRleHQgfX1cclxuICAgIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIFRwQ291bnRQYXR0ZXJuQ29tcG9uZW50IGV4dGVuZHMgVGlCYXNlQ29tcG9uZW50IHtcclxuICAgIC8qKlxyXG4gICAgICog6K6h6LS55qih5byPXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIHR5cGU6IFRwQ291bnRDaGFyZ2luZ01vZGUgPSAncGVyaW9kJztcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIOiuoei0ueaooeW8j+aYvuekuuaWh+acrFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgdGV4dDogc3RyaW5nO1xyXG5cclxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogdXNlLWxpZmUtY3ljbGUtaW50ZXJmYWNlXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG5cclxuICAgICAgICB0aGlzLnVwZGF0ZVRleHQoKTtcclxuICAgIH1cclxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogdXNlLWxpZmUtY3ljbGUtaW50ZXJmYWNlXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XHJcblxyXG4gICAgICAgIGlmIChjaGFuZ2VzWyd0eXBlJ10gJiYgIWNoYW5nZXNbJ3R5cGUnXS5maXJzdENoYW5nZSkge1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVRleHQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSB1cGRhdGVUZXh0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudGV4dCA9IHRoaXMudHlwZSA9PT0gJ3BlcmlvZCcgP1xyXG4gICAgICAgICAgICBUaUxvY2FsZS5nZXRMb2NhbGVXb3JkcygpLnRwQ291bnQucGVyaW9kQ2hhcmdpbmcgOiBUaUxvY2FsZS5nZXRMb2NhbGVXb3JkcygpLnRwQ291bnQub25kZW1hbmRDaGFyZ2luZztcclxuICAgIH1cclxufVxyXG4iXX0=