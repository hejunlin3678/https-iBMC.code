import { Component, Input, ViewChild } from '@angular/core';
import { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';
import { CfUtil } from '../../cfutils/CfUtil';
import { TpHalfmodalComponent } from '../halfmodal/TpHalfmodalModule';
import { TpFeedbackContentComponent } from './TpFeedbackContentComponent';
import { TpUtil } from './../../utils/TpUtil';
/**
 * 问卷调查组件 feedback
 *
 * 该组件支持服务去自定义题目，但是题目的类型要求是单选题目，并且会关联出两个多选题目。如果多选题目中有其它原因这个选项，要求这个选项放在最后。
 *
 * 使用该组件需注意以下几点：
 *
 * 1.该组件与console相关，需要使用到@cloud/cfdata;<br>
 * 2.options.allQuestion和options.customQuestion两个接口互斥。customQuestion是在默认的题目中去新增题目，allQuestion是由服务去定制所有的问卷内容（适用于CBC、客服、IAM等服务）；<br>
 * 3.本地调试确保端口是<b>8888</b>，目前NPS后台已经将http://localhost:8888 放开；<br>
 * 4.同一个用户数据提交之后，90（10.1.0 版本规范变更，由31变更为90）天内组件不显示。如果调测需要，可自行修改源码中阈值MILLISECONDS_PER_MONTH(含义：N毫秒之后可以显示)；<br>
 * 5.用户提交的数据下发到NPS后台，如需查看数据，请联系NPS后台同事孙正东 30009929"；<br>
 * 6.华为云各服务可根据http://csbi.huawei.com/#/home 查找对应编号或英文简称设置<b>serviceId</b>；
 *
 * <example-url>../tinyplus3demo/#/feedback/feedback-all</example-url>
 */
export class TpFeedbackComponent extends TiBaseComponent {
    constructor() {
        super(...arguments);
        // 常量配置
        this.CONST_ANT = {
            MILLISECONDS_PER_MONTH: 90 * 24 * 60 * 60 * 1000 // 90天对应的毫秒数
        };
        /**
         * @ignore
         * 是否显示问卷入口
         */
        this.showFeedBack = false;
        /**
         * @ignore
         * 是否显示弹出框
         */
        this.openModalAlert = false;
        this.useId = '';
    }
    ngOnInit() {
        super.ngOnInit();
        CfUtil.getUser()
            .then((user) => {
            const root = user;
            const camel = CfUtil.getHttpService();
            const msgService = CfUtil.getMessage();
            if (!camel || !Util.isFunction(camel.get) || !root || !msgService || !Util.isFunction(msgService.showSuccess)) {
                return;
            }
            this.alertLinkText = Util.formatEntry(TiLocale.getLocaleWords().tpFeedback.open_halfModal.click, [this.options.serviceName]);
            const useId = root.domainId;
            const url = `${TpFeedbackContentComponent.config.backend}/api/get/commit/date?surveyId={survey_id}&userId={user_id}&serviceId={service_id}`;
            this.useId = useId;
            if (this.useId) {
                camel.get({
                    url: {
                        s: url,
                        o: {
                            survey_id: TpFeedbackContentComponent.config.surveyId,
                            user_id: this.useId,
                            service_id: this.options.serviceId
                        }
                    }
                })
                    .then((response) => {
                    // 后台返回的日期格式yyyy-MM-dd，在IE下Date.parse为NaN，需要转成yyyy/mm/dd
                    const submitDate = Date.parse(response.data.replace(/-/g, '/'));
                    // 如果是非法日期，或者没有提交为''，则重新赋值为0.否则会出现NaN，组件展示不出来。
                    const milliSeconds = isNaN(submitDate) ? 0 : submitDate;
                    // 查询上次提交的日期，如果小于90天则不显示。否则，看之前用户是否点击关闭按钮
                    if (new Date().getTime() - milliSeconds > this.CONST_ANT.MILLISECONDS_PER_MONTH) {
                        const tinyVocValue = Util.isUndefined(TpUtil.getCookie('tinyVoc')) ? '' : TpUtil.getCookie('tinyVoc');
                        if (tinyVocValue.indexOf(`${this.options.serviceId}${this.useId}`) === -1) {
                            this.showFeedBack = true;
                            this.openModalAlert = true;
                        }
                    }
                }, () => {
                    // 数据请求失败，不出现该组件。如果出现错误提示，会给用户带来困扰。
                });
            }
        });
    }
    /**
     * @ignore
     * 关闭弹出框
     */
    closeModalAlert() {
        const serverlist = Util.isUndefined(TpUtil.getCookie('tinyVoc')) ? '' : TpUtil.getCookie('tinyVoc');
        TpUtil.setCookie('tinyVoc', `${serverlist}${this.options.serviceId}${this.useId},`);
        this.showFeedBack = false;
    }
    /**
     * @ignore
     * 提交问卷
     */
    onSubmit() {
        this.halfmodalCom.hide(); // 弹窗关闭
        this.openModalAlert = false; // 入口关闭
        this.showFeedBack = false;
    }
}
TpFeedbackComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-feedback',
                template: "<!-- \u63D0\u793A\u9762\u677F alert -->\r\n<ti-alert [(open)]=\"openModalAlert\" style=\"width: 100%\" [type]=\"'prompt'\" (openChange)=\"closeModalAlert()\" [id]=\"appendId('feedback_alert')\">\r\n    <span>{{ 'tpFeedback.open_halfModal.text1' | tiTranslate }}<span\r\n        class=\"tp-feedback-openModal\" tiOutline [tabindex]=\"0\" (keydown.enter)=\"halfModal.show($event.target)\"\r\n        (click)=\"halfModal.show($event.target)\" [id]=\"appendId('open_modal')\">{{ alertLinkText }}</span>{{'tpFeedback.open_halfModal.text2' | tiTranslate}}</span>\r\n</ti-alert>\r\n\r\n<!-- \u534A\u5C4F\u5F39\u7A97 halfmodal -->\r\n<tp-halfmodal #halfModal width=\"560px\" [id]=\"appendId('halfmodal')\">\r\n    <!-- \u95EE\u5377\u8C03\u67E5\u5185\u5BB9 -->\r\n    <tp-feedback-content [options]=\"options\" [id]=\"appendId('content')\" (submit)=\"onSubmit()\">\r\n        <ng-content></ng-content>\r\n    </tp-feedback-content>\r\n</tp-halfmodal>",
                host: {
                    '[hidden]': '!showFeedBack'
                },
                styles: [":host{display:block}.tp-feedback-openModal{color:var(--ti-common-color-text-link);cursor:pointer;font-size:var(--ti-common-font-size-base);text-decoration:none}.tp-feedback-openModal:hover{color:var(--ti-common-color-text-link-hover)}:host tp-halfmodal{padding-bottom:0}"]
            },] }
];
TpFeedbackComponent.propDecorators = {
    options: [{ type: Input }],
    halfmodalCom: [{ type: ViewChild, args: ['halfModal', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,