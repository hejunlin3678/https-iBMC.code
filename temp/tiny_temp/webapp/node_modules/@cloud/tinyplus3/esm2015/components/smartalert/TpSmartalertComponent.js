import { Component, ContentChild, Input, TemplateRef } from "@angular/core";
import { TiBaseComponent } from '@cloud/tiny3';
/**
 * @ignore
 * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。
 *
 * 智能提示组件
 *
 * <example-url>../tinyplus3demo/#/smartalert/smartalert-all</example-url>
 */
export class TpSmartalertComponent extends TiBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * 提示类型
         */
        this.type = 'prompt';
        /**
         * 样式大小
         */
        this.size = 'normal';
        /**
         * 边框一直显示或是悬浮显示
         */
        this.border = 'always';
    }
}
TpSmartalertComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-smartalert',
                template: "<div [ngClass]=\"['tp-smart-' + type, 'tp-smart-' + size, 'tp-smart-border-' + border]\" [id]=\"appendId('smart_label')\">\r\n    <span class=\"tp-smart-bg-circle\">\r\n        <ng-container *ngIf=\"leftIconTemplate else defaultLeftIcon\">\r\n            <ng-content select=\"tp-icon\"></ng-content>\r\n        </ng-container>\r\n    </span>\r\n    <ng-content></ng-content>\r\n</div>\r\n<ng-template #defaultLeftIcon>\r\n    <ng-container *ngIf=\"type === 'prompt'\">\r\n        <ti-icon name=\"alert-prompt\"></ti-icon>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"type !== 'prompt'\">\r\n        <ti-icon name=\"alert-warn\"></ti-icon>\r\n    </ng-container>\r\n</ng-template>",
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}:host{color:var(--ti-common-color-text-secondary);display:inline-block;position:relative}:host .tp-smart-normal{padding:var(--ti-common-space-3x) var(--ti-common-space-5x)}:host .tp-smart-small{padding:var(--ti-common-space-base) var(--ti-common-space-3x)}.tp-smart-prompt{border:1px solid transparent;border-radius:var(--ti-common-border-radius-normal)}.tp-smart-prompt.tp-smart-border-always,.tp-smart-prompt.tp-smart-border-hover:hover{background:var(--ti-common-color-prompt-bg);border-color:var(--ti-common-color-prompt-border)}.tp-smart-prompt .tp-smart-bg-circle{background-image:linear-gradient(-33deg,var(--ti-common-color-prompt-icon-from),var(--ti-common-color-prompt-icon-to));border-radius:50%;color:var(--ti-common-color-bg-white-normal);display:inline-block;height:16px;left:-8px;line-height:16px;position:absolute;text-align:center;width:16px}.tp-smart-prompt .tp-smart-bg-circle tp-icon{font-size:16px}.tp-smart-warn{border:1px solid transparent;border-radius:var(--ti-common-border-radius-normal)}.tp-smart-warn.tp-smart-border-always,.tp-smart-warn.tp-smart-border-hover:hover{background:var(--ti-common-color-warn-bg);border-color:var(--ti-common-color-warn-border)}.tp-smart-warn .tp-smart-bg-circle{background-image:linear-gradient(-33deg,var(--ti-common-color-warn-icon-from),var(--ti-common-color-warn-icon-to));border-radius:50%;color:var(--ti-common-color-bg-white-normal);display:inline-block;height:16px;left:-8px;line-height:16px;position:absolute;text-align:center;width:16px}.tp-smart-warn .tp-smart-bg-circle tp-icon{font-size:16px}.tp-smart-error{border:1px solid transparent;border-radius:var(--ti-common-border-radius-normal)}.tp-smart-error.tp-smart-border-always,.tp-smart-error.tp-smart-border-hover:hover{background:var(--ti-common-color-error-bg);border-color:var(--ti-common-color-error-border-secondary)}.tp-smart-error .tp-smart-bg-circle{background-image:linear-gradient(-33deg,var(--ti-common-color-error-icon-from),var(--ti-common-color-error-icon-to));border-radius:50%;color:var(--ti-common-color-bg-white-normal);display:inline-block;height:16px;left:-8px;line-height:16px;position:absolute;text-align:center;width:16px}.tp-smart-error .tp-smart-bg-circle tp-icon{font-size:16px}"]
            },] }
];
TpSmartalertComponent.propDecorators = {
    type: [{ type: Input }],
    size: [{ type: Input }],
    border: [{ type: Input }],
    leftIconTemplate: [{ type: ContentChild, args: ['leftIcon', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBTbWFydGFsZXJ0Q29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnlwbHVzMy9jb21wb25lbnRzL3NtYXJ0YWxlcnQvVHBTbWFydGFsZXJ0Q29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUMvQzs7Ozs7OztHQU9HO0FBT0gsTUFBTSxPQUFPLHFCQUFzQixTQUFRLGVBQWU7SUFOMUQ7O1FBT0k7O1dBRUc7UUFDTSxTQUFJLEdBQWdDLFFBQVEsQ0FBQztRQUN0RDs7V0FFRztRQUNNLFNBQUksR0FBdUIsUUFBUSxDQUFDO1FBQzdDOztXQUVHO1FBQ00sV0FBTSxHQUF1QixRQUFRLENBQUM7SUFLbkQsQ0FBQzs7O1lBdkJBLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsMHJCQUE4Qjs7YUFFakM7OzttQkFNSSxLQUFLO21CQUlMLEtBQUs7cUJBSUwsS0FBSzsrQkFJTCxZQUFZLFNBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBJbnB1dCwgVGVtcGxhdGVSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBUaUJhc2VDb21wb25lbnQgfSBmcm9tICdAY2xvdWQvdGlueTMnO1xyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKiDop4TojIPmj5Dlh7rvvIzkupHkuJrliqHpgJrnlKjlnLrmma/kuI3kvJrkvb/nlKjor6Xnu4Tku7bvvIwxMC4xLjPotbfvvIzlnKjlrpjnvZHpmpDol4/or6Xnu4Tku7bjgIJcclxuICpcclxuICog5pm66IO95o+Q56S657uE5Lu2XHJcbiAqXHJcbiAqIDxleGFtcGxlLXVybD4uLi90aW55cGx1czNkZW1vLyMvc21hcnRhbGVydC9zbWFydGFsZXJ0LWFsbDwvZXhhbXBsZS11cmw+XHJcbiAqL1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAndHAtc21hcnRhbGVydCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJ3NtYXJ0YWxlcnQuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9zbWFydGFsZXJ0Lmxlc3MnXVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIFRwU21hcnRhbGVydENvbXBvbmVudCBleHRlbmRzIFRpQmFzZUNvbXBvbmVudCB7XHJcbiAgICAvKipcclxuICAgICAqIOaPkOekuuexu+Wei1xyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSB0eXBlOiAncHJvbXB0JyB8ICd3YXJuJyB8ICdlcnJvcicgPSAncHJvbXB0JztcclxuICAgIC8qKlxyXG4gICAgICog5qC35byP5aSn5bCPXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIHNpemU6ICdub3JtYWwnIHwgJ3NtYWxsJyA9ICdub3JtYWwnO1xyXG4gICAgLyoqXHJcbiAgICAgKiDovrnmoYbkuIDnm7TmmL7npLrmiJbmmK/mgqzmta7mmL7npLpcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgYm9yZGVyOiAnYWx3YXlzJyB8ICdob3ZlcicgPSAnYWx3YXlzJztcclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZSDoh6rlrprkuYnlt6bkvqflm77moIdcclxuICAgICAqL1xyXG4gICAgQENvbnRlbnRDaGlsZCgnbGVmdEljb24nLCB7IHN0YXRpYzogdHJ1ZSB9KSBsZWZ0SWNvblRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG59XHJcbiJdfQ==