import { Component, ElementRef, Input, ViewChild } from '@angular/core';
import { TiFormComponent } from '@cloud/tiny3';
/**
 *  Icon组件
 *
 *  Icon组件可以设置显示Icon。
 *
 * <example-url>../tinyplus3demo/#/iconaction/iconaction-all</example-url>
 */
export class TpIconactionComponent extends TiFormComponent {
    constructor() {
        // TODO: add explicit constructor
        super(...arguments);
        // TODO: add explicit constructor
        /**
         * icon名称
         */
        this.iconName = 'cloud-action-add2';
        /**
         * 跳转方式
         *
         * 10.1.2新增
         */
        this.target = '_blank';
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngOnInit() {
        // 基类中做了设置宿主id的操作
        super.ngOnInit();
        this.setFocusableElems([this.aRef.nativeElement]);
    }
    /**
     * @ignore
     */
    onClickFn(event) {
        if (!this.href) {
            event.preventDefault();
        }
    }
    /**
     * @ignore
     * 不传href时，禁用右键打开新窗口功能
     */
    oncontextmenu() {
        return !!this.href;
    }
}
TpIconactionComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-iconaction',
                template: "<a #a rel=\"noopener noreferrer\"\r\n   class=\"tp-icon-action\"\r\n   [href]=\"href\"\r\n   [target]=\"target\"\r\n   (click)=\"onClickFn($event)\"\r\n   (contextmenu)=\"oncontextmenu()\"\r\n   [id]=\"appendId('awrapper')\">\r\n    <tp-icon [name]=\"iconName\" class=\"tp-icon-action-icon\"></tp-icon>\r\n    <span class=\"tp-icon-action-text\" [id]=\"appendId('label')\">{{label}}</span>\r\n</a>",
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tp-icon-action{align-items:center;cursor:pointer;display:inline-flex;text-decoration:none}.tp-icon-action-icon{color:var(--tp-iconaction-default-icon-color);display:inline-flex;font-size:var(--ti-common-font-size-2);margin-right:5px}.tp-icon-action-icon.icon-cloud-action-add5,.tp-icon-action-icon.icon-cloud-action-remove{font-size:var(--ti-common-font-size-2);margin-right:var(--ti-common-space-2x);transition:color .15s}.tp-icon-action:active .tp-icon-action-icon,.tp-icon-action:focus .tp-icon-action-icon,.tp-icon-action:hover .tp-icon-action-icon{color:var(--tp-iconaction-hover-icon-color);transition:color .2s}:host[dark] .tp-icon-action-icon{color:var(--ti-common-color-icon-darkbg-normal)}:host[dark] .tp-icon-action:active .tp-icon-action-icon,:host[dark] .tp-icon-action:focus .tp-icon-action-icon,:host[dark] .tp-icon-action:hover .tp-icon-action-icon{color:var(--ti-common-color-icon-darkbg-hover);transition:color .2s}:host[disabled] .tp-icon-action{cursor:not-allowed;outline:none}:host[disabled] .tp-icon-action-icon{color:var(--tp-iconaction-disabled-icon-color)!important}:host[disabled] .tp-icon-action-text{color:var(--tp-iconaction-disabled-text-color)!important}:host[dark][disabled] .tp-icon-action-icon,:host[dark][disabled] .tp-icon-action-text{color:var(--ti-common-color-icon-darkbg-disabled)!important}.tp-icon-action-text{color:var(--tp-iconaction-default-text-color);font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number)}.tp-icon-action:active .tp-icon-action-text,.tp-icon-action:focus .tp-icon-action-text,.tp-icon-action:hover .tp-icon-action-text{color:var(--tp-iconaction-hover-text-color);transition:color .2s}:host[dark] .tp-icon-action-text{color:var(--ti-common-color-text-gray)}:host[dark] .tp-icon-action:active .tp-icon-action-text,:host[dark] .tp-icon-action:focus .tp-icon-action-text,:host[dark] .tp-icon-action:hover .tp-icon-action-text{color:var(--ti-common-color-icon-darkbg-hover)}"]
            },] }
];
TpIconactionComponent.propDecorators = {
    iconName: [{ type: Input }],
    label: [{ type: Input }],
    href: [{ type: Input }],
    target: [{ type: Input }],
    aRef: [{ type: ViewChild, args: ['a', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBJY29uYWN0aW9uQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnlwbHVzMy9jb21wb25lbnRzL2ljb25hY3Rpb24vVHBJY29uYWN0aW9uQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUUvQzs7Ozs7O0dBTUc7QUFNSCxNQUFNLE9BQU8scUJBQXNCLFNBQVEsZUFBZTtJQUwxRDtRQU1FLGlDQUFpQzs7UUFFakMsaUNBQWlDO1FBRS9COztXQUVHO1FBQ00sYUFBUSxHQUFXLG1CQUFtQixDQUFDO1FBV2hEOzs7O1dBSUc7UUFDTSxXQUFNLEdBQVcsUUFBUSxDQUFDO0lBMEJ2QyxDQUFDO0lBckJHLHFEQUFxRDtJQUNyRCxRQUFRO1FBQ0osaUJBQWlCO1FBQ2pCLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUNEOztPQUVHO0lBQ0ksU0FBUyxDQUFDLEtBQVk7UUFDekIsSUFBRyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDWCxLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7U0FDMUI7SUFDTCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksYUFBYTtRQUNoQixPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3ZCLENBQUM7OztZQXRESixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLHlaQUFnQzs7YUFFbkM7Ozt1QkFTSSxLQUFLO29CQUlMLEtBQUs7bUJBTUwsS0FBSztxQkFNTCxLQUFLO21CQUlMLFNBQVMsU0FBQyxHQUFHLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpRm9ybUNvbXBvbmVudCB9IGZyb20gJ0BjbG91ZC90aW55Myc7XHJcblxyXG4vKipcclxuICogIEljb27nu4Tku7ZcclxuICpcclxuICogIEljb27nu4Tku7blj6/ku6Xorr7nva7mmL7npLpJY29u44CCXHJcbiAqXHJcbiAqIDxleGFtcGxlLXVybD4uLi90aW55cGx1czNkZW1vLyMvaWNvbmFjdGlvbi9pY29uYWN0aW9uLWFsbDwvZXhhbXBsZS11cmw+XHJcbiAqL1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAndHAtaWNvbmFjdGlvbicsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vaWNvbmFjdGlvbi5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2ljb25hY3Rpb24ubGVzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUcEljb25hY3Rpb25Db21wb25lbnQgZXh0ZW5kcyBUaUZvcm1Db21wb25lbnQge1xyXG4gIC8vIFRPRE86IGFkZCBleHBsaWNpdCBjb25zdHJ1Y3RvclxyXG5cclxuICAvLyBUT0RPOiBhZGQgZXhwbGljaXQgY29uc3RydWN0b3JcclxuXHJcbiAgICAvKipcclxuICAgICAqIGljb27lkI3np7BcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgaWNvbk5hbWU6IHN0cmluZyA9ICdjbG91ZC1hY3Rpb24tYWRkMic7XHJcbiAgICAvKipcclxuICAgICAqIGljb27lkI3np7BcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog6Lez6L2s6ZO+5o6lXHJcbiAgICAgKlxyXG4gICAgICogMTAuMS4y5paw5aKeXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIGhyZWY6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog6Lez6L2s5pa55byPXHJcbiAgICAgKlxyXG4gICAgICogMTAuMS4y5paw5aKeXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIHRhcmdldDogc3RyaW5nID0gJ19ibGFuayc7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgQFZpZXdDaGlsZCgnYScsIHsgc3RhdGljOiB0cnVlIH0pIGFSZWY6IEVsZW1lbnRSZWY7XHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IHVzZS1saWZlLWN5Y2xlLWludGVyZmFjZVxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5Z+657G75Lit5YGa5LqG6K6+572u5a6/5Li7aWTnmoTmk43kvZxcclxuICAgICAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gICAgICAgIHRoaXMuc2V0Rm9jdXNhYmxlRWxlbXMoW3RoaXMuYVJlZi5uYXRpdmVFbGVtZW50XSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgcHVibGljIG9uQ2xpY2tGbihldmVudDogRXZlbnQpOiB2b2lkIHtcclxuICAgICAgICBpZighdGhpcy5ocmVmKSB7XHJcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDkuI3kvKBocmVm5pe277yM56aB55So5Y+z6ZSu5omT5byA5paw56qX5Y+j5Yqf6IO9XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBvbmNvbnRleHRtZW51KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAhIXRoaXMuaHJlZjtcclxuICAgIH1cclxufVxyXG4iXX0=