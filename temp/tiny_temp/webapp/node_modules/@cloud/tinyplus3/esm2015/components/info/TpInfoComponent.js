import { Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';
// import { TpUtil } from '../../utils/TpUtil';
import { TiLocale, TiBaseComponent } from '@cloud/tiny3';
/**
 * @ignore
 * <example-url>../tinyplus3demo/#/info/info-all</example-url>
 */
export class TpInfoComponent extends TiBaseComponent {
    constructor(element, renderer) {
        super(element, renderer);
        this.element = element;
        this.renderer = renderer;
        /**
         * 提示信息类型，有两种可选择类型：'restricted'，'unverified'
         */
        this.infoType = 'unverified';
        this.config = {
            restricted: {
                cls: 'tp-info-restricted',
                content: TiLocale.getLocaleWords().tpInfo.restricted
            },
            unverified: {
                cls: 'tp-info-unverified',
                content: TiLocale.getLocaleWords().tpInfo.unverified
            }
        };
    }
    ngOnInit() {
        super.ngOnInit();
        const typeConfig = this.config[this.infoType];
        this.renderer.addClass(this.element.nativeElement, typeConfig.cls);
        this.content = typeConfig.content;
    }
}
TpInfoComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-info',
                template: "<tp-icon local name='cloud-action-state-abnormal' class='tp-info-icon'></tp-icon>\r\n<div class='tp-info-content' [innerHTML]='content' #contentEle [id]=\"appendId('content')\"></div>\r\n",
                styles: [".tp-link-no-decoration{color:var(--ti-common-color-text-link);cursor:pointer;text-decoration:none}.tp-link-no-decoration:hover{color:var(--tp-link-no-decoration-color-hover);text-decoration:var(--tp-link-no-decoration-text-decoration)}:host.tp-info-restricted{color:var(--ti-common-color-error-text)}:host.tp-info-restricted .tp-info-icon{color:var(--ti-common-color-error)}:host.tp-info-unverified{color:var(--ti-common-color-warn-text)}:host.tp-info-unverified .tp-info-icon{color:var(--ti-common-color-warn)}.tp-info-icon{font-size:16px;margin-right:10px;vertical-align:middle}.tp-info-content{display:inline;vertical-align:middle}:host ::ng-deep a{color:var(--ti-common-color-text-link);cursor:pointer;text-decoration:none}:host ::ng-deep a:hover{color:var(--tp-link-no-decoration-color-hover);text-decoration:var(--tp-link-no-decoration-text-decoration)}"]
            },] }
];
TpInfoComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
TpInfoComponent.propDecorators = {
    infoType: [{ type: Input }],
    contentEle: [{ type: ViewChild, args: ['contentEle', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBJbmZvQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnlwbHVzMy9jb21wb25lbnRzL2luZm8vVHBJbmZvQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25GLCtDQUErQztBQUMvQyxPQUFPLEVBQUUsUUFBUSxFQUFFLGVBQWUsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUV6RDs7O0dBR0c7QUFPSCxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxlQUFlO0lBc0JoRCxZQUFvQixPQUFtQixFQUFZLFFBQW1CO1FBQ2xFLEtBQUssQ0FBQyxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFEVCxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQVksYUFBUSxHQUFSLFFBQVEsQ0FBVztRQXJCdEU7O1dBRUc7UUFDTSxhQUFRLEdBQVcsWUFBWSxDQUFDO1FBQ2pDLFdBQU0sR0FBVztZQUNyQixVQUFVLEVBQUU7Z0JBQ1IsR0FBRyxFQUFFLG9CQUFvQjtnQkFDekIsT0FBTyxFQUFFLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxNQUFNLENBQUMsVUFBVTthQUN2RDtZQUNELFVBQVUsRUFBRTtnQkFDUixHQUFHLEVBQUUsb0JBQW9CO2dCQUN6QixPQUFPLEVBQUUsUUFBUSxDQUFDLGNBQWMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxVQUFVO2FBQ3ZEO1NBQ0osQ0FBQztJQVVGLENBQUM7SUFFRCxRQUFRO1FBQ0osS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2pCLE1BQU0sVUFBVSxHQUFRLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ25ELElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsYUFBYSxFQUFFLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNuRSxJQUFJLENBQUMsT0FBTyxHQUFHLFVBQVUsQ0FBQyxPQUFPLENBQUM7SUFDdEMsQ0FBQzs7O1lBckNKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsU0FBUztnQkFDbkIsdU1BQTBCOzthQUU3Qjs7O1lBWm1CLFVBQVU7WUFBUyxTQUFTOzs7dUJBa0IzQyxLQUFLO3lCQWFMLFNBQVMsU0FBQyxZQUFZLEVBQUUsRUFBQyxNQUFNLEVBQUUsSUFBSSxFQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgUmVuZGVyZXIyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gaW1wb3J0IHsgVHBVdGlsIH0gZnJvbSAnLi4vLi4vdXRpbHMvVHBVdGlsJztcclxuaW1wb3J0IHsgVGlMb2NhbGUsIFRpQmFzZUNvbXBvbmVudCB9IGZyb20gJ0BjbG91ZC90aW55Myc7XHJcblxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKiA8ZXhhbXBsZS11cmw+Li4vdGlueXBsdXMzZGVtby8jL2luZm8vaW5mby1hbGw8L2V4YW1wbGUtdXJsPlxyXG4gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3RwLWluZm8nLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2luZm8uaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9pbmZvLmxlc3MnXVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIFRwSW5mb0NvbXBvbmVudCBleHRlbmRzIFRpQmFzZUNvbXBvbmVudCB7XHJcbiAgICAvKipcclxuICAgICAqIOaPkOekuuS/oeaBr+exu+Wei++8jOacieS4pOenjeWPr+mAieaLqeexu+Wei++8midyZXN0cmljdGVkJ++8jCd1bnZlcmlmaWVkJ1xyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBpbmZvVHlwZTogc3RyaW5nID0gJ3VudmVyaWZpZWQnO1xyXG4gICAgcHJpdmF0ZSBjb25maWc6IG9iamVjdCA9IHtcclxuICAgICAgICByZXN0cmljdGVkOiB7XHJcbiAgICAgICAgICAgIGNsczogJ3RwLWluZm8tcmVzdHJpY3RlZCcsXHJcbiAgICAgICAgICAgIGNvbnRlbnQ6IFRpTG9jYWxlLmdldExvY2FsZVdvcmRzKCkudHBJbmZvLnJlc3RyaWN0ZWRcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVudmVyaWZpZWQ6IHtcclxuICAgICAgICAgICAgY2xzOiAndHAtaW5mby11bnZlcmlmaWVkJyxcclxuICAgICAgICAgICAgY29udGVudDogVGlMb2NhbGUuZ2V0TG9jYWxlV29yZHMoKS50cEluZm8udW52ZXJpZmllZFxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8gY29udGVudOWFg+e0oGVsZW1lbnRSZWZcclxuICAgIEBWaWV3Q2hpbGQoJ2NvbnRlbnRFbGUnLCB7c3RhdGljOiB0cnVlfSkgcHJpdmF0ZSBjb250ZW50RWxlOiBFbGVtZW50UmVmO1xyXG5cclxuICAgIC8vIOaPkOekuuWGheWuuVxyXG4gICAgcHVibGljIGNvbnRlbnQ6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsZW1lbnQ6IEVsZW1lbnRSZWYsIHByb3RlY3RlZCByZW5kZXJlcjogUmVuZGVyZXIyKSB7XHJcbiAgICAgICAgc3VwZXIoZWxlbWVudCwgcmVuZGVyZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgICAgICAgY29uc3QgdHlwZUNvbmZpZzogYW55ID0gdGhpcy5jb25maWdbdGhpcy5pbmZvVHlwZV07XHJcbiAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudCwgdHlwZUNvbmZpZy5jbHMpO1xyXG4gICAgICAgIHRoaXMuY29udGVudCA9IHR5cGVDb25maWcuY29udGVudDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICAvLyAgICAgVHBJbmZvQ29tcG9uZW50LnNldEFUYWcodGhpcy5jb250ZW50RWxlLm5hdGl2ZUVsZW1lbnQpO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIC8vIOiuvue9rmHmoIfnrb7moLflvI/lkozooYzkuLrmlrnlvI9cclxuICAgIC8vIHByaXZhdGUgc3RhdGljIHNldEFUYWcoZWxlbWVudDogSFRNTEVsZW1lbnQpOiBhbnkge1xyXG4gICAgLy8gICAgIGNvbnN0IGFUYWdzOiBOb2RlTGlzdE9mPEhUTUxBbmNob3JFbGVtZW50PiA9IGVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYScpO1xyXG4gICAgLy8gICAgIGlmICghYVRhZ3MgfHwgYVRhZ3MubGVuZ3RoID09PSAwKSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCchYVRhZ3MnKTtcclxuICAgIC8vICAgICAgICAgcmV0dXJuO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICBhVGFncy5mb3JFYWNoKChhdGFnOiBIVE1MQW5jaG9yRWxlbWVudCkgPT4ge1xyXG4gICAgLy8gICAgICAgICBUcFV0aWwuc2V0QXR0cnMoYXRhZywge1xyXG4gICAgLy8gICAgICAgICAgICAgY2xhc3M6ICd0cC1saW5rLW5vLWRlY29yYXRpb24nLFxyXG4gICAgLy8gICAgICAgICAgICAgdGFyZ2V0OiAnX2JsYW5rJ1xyXG4gICAgLy8gICAgICAgICB9KTtcclxuICAgIC8vICAgICB9KTtcclxuICAgIC8vIH1cclxufVxyXG4iXX0=