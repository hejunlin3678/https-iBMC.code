import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, TemplateRef, ViewChild
// tslint:disable-next-line: no-implicit-dependencies
 } from '@angular/core';
// tslint:disable-next-line: no-implicit-dependencies
import { TiBaseComponent, TiTipService, Util } from '@cloud/tiny3';
// tslint:disable-next-line: no-implicit-dependencies
import { CfUtil } from '../../cfutils/CfUtil';
/**
 * 账号冻结组件，组件查询CBC查询账号冻结场景接口，获取冻结信息，展示块提示，给目标元素添加tip提示。
 *
 * 9.0.3版本新增
 *
 * <example-url>../tinyplus3demo/#/frozen/frozen-all</example-url>
 */
export class TpFrozenComponent extends TiBaseComponent {
    constructor(hostRef, renderer2, tipService) {
        super(hostRef, renderer2);
        this.hostRef = hostRef;
        this.renderer2 = renderer2;
        this.tipService = tipService;
        /**
         * 获取数据成功事件
         */
        this.response = new EventEmitter();
        /**
         * @ignore
         * 内部alert 打开关闭
         */
        this.open = false;
        /**
         * @ignore
         * alert 类型
         */
        this.alertType = 'error';
        /**
         * @ignore
         * 内部alert类型图标
         */
        this.typeIcon = true;
        /**
         * @ignore
         * 内部alert关闭图标
         */
        this.closeIcon = false;
        /**
         * @ignore
         * alert 内容
         */
        this.label = '';
    }
    /**
     * @ignore
     * 从http返回数据中获取内容字符串
     */
    static getMsgContent(data, msgType) {
        if (data && Array.isArray(data.frozenInfos) && data.frozenInfos.length > 0) {
            // 返回数据中 frozenInfos按优先级排序，所以取第一个
            const frozenInfo = data.frozenInfos[0];
            // status 1 冻结 2 解冻
            if (frozenInfo.status !== 1 || !Util.isString(frozenInfo.statusMsg)) {
                return;
            }
            try {
                frozenInfo.statusMsgs = JSON.parse(frozenInfo.statusMsg);
            }
            catch (error) {
                console.warn(error);
                return;
            }
            const msg = frozenInfo.statusMsgs.find((item) => {
                return item.msgType === msgType;
            });
            if (msg && Util.isString(msg.msgContent)) {
                return msg.msgContent;
            }
        }
    }
    static getUserInfo(config) {
        // config 本地测试使用，实际使用时请忽略此参数
        if (config) {
            return new Promise((resolve, reject) => {
                resolve(config.domainId);
            });
        }
        else {
            return CfUtil.getUser().then((user) => user.domainId);
        }
    }
    /**
     * @ignore
     * 请求账号冻结场景接口
     * config 本地测试使用，实际使用时请忽略此参数
     */
    static queryFrozenInfo(config) {
        const queryFrozenInfoPromise = TpFrozenComponent.getUserInfo(config)
            .then((domainId) => {
            const camel = config ? config.camel : CfUtil.getHttpService();
            const customerId = domainId;
            if (customerId && camel) {
                let url = '/rest/cbc/cbccustmgrservice/v1/customer/frozen';
                // AppWebPath 为console.home框架的设置,例如'/console'路径
                const appWebPath = CfUtil.getAppWebPath();
                if (Util.isString(appWebPath)) {
                    url = appWebPath + url;
                }
                return camel.get({
                    url: {
                        s: url
                    },
                    params: { customerId }
                });
            }
            else {
                return Promise.reject(new Error('frozen 依赖camel服务，使用前请先注入'));
            }
        });
        return queryFrozenInfoPromise;
    }
    /**
     * 查询冻结
     * config 为方便测试设置，实际使用时请忽略
     */
    queryFrozen(config) {
        TpFrozenComponent.queryFrozenInfo(config)
            .then((response) => {
            this.label = TpFrozenComponent.getMsgContent(response, 'POP');
            // 是字符串显示
            this.open = Util.isString(this.label);
            // 给按钮添加tip
            this.tipContent = TpFrozenComponent.getMsgContent(response, 'TIP');
            if (Util.isString(this.tipContent) && this.buttonElem) {
                this.addTip(this.buttonElem);
            }
            if (!this.label && !this.tipContent) {
                this.unfrozen();
            }
            // 获取数据成功，触发response事件，将后台原始响应数据传递出去，方便使用者自行处理相关逻辑
            this.response.emit(response);
        }, (error) => {
            this.response.emit(error);
            this.open = false;
        });
    }
    /**
     * 隐藏提示块,销毁tip
     */
    unfrozen() {
        this.open = false;
        // @ts-ignore:忽略destroy检查
        if (this.tipInstance && Util.isFunction(this.tipInstance.destroy)) {
            // @ts-ignore:外层有判断
            this.tipInstance.destroy();
            this.tipInstance = undefined;
        }
    }
    /**
     *  给目标元素添加tip
     *  v9.0.4 版本添加
     */
    addTip(...targets) {
        if (this.tipContentTemplate && this.tipContent) {
            targets.forEach((element) => {
                this.tipInstance = this.tipService.create(element, {
                    trigger: 'mouse',
                    showFn: () => {
                        return {
                            content: this.tipContentTemplate
                        };
                    }
                });
            });
        }
    }
}
TpFrozenComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-frozen',
                template: "<ti-alert\r\n    [type]=\"alertType\"\r\n    [closeIcon]=\"closeIcon\"\r\n    [typeIcon]=\"typeIcon\"\r\n    [open]=\"open\"\r\n    [id]=\"appendId('frozen_alert')\"\r\n    >\r\n        <section [innerHTML]=\"label\" [id]=\"appendId('label')\"></section>\r\n</ti-alert>\r\n\r\n<!-- tip \u63D0\u793A\u5185\u5BB9\uFF0C\u56E0\u4E3A\u5B57\u7B26\u4E32\u4E2D\u6709a\u94FE\u63A5\u6240\u4EE5\u4F7F\u7528\u4E86\u6A21\u677F -->\r\n<ng-template #tipContentTemplate >\r\n    <section [innerHTML]=\"tipContent\"></section>\r\n</ng-template>\r\n\r\n\r\n",
                styles: [".tp-link-no-decoration{color:var(--ti-common-color-text-link);cursor:pointer;text-decoration:none}.tp-link-no-decoration:hover{color:var(--tp-link-no-decoration-color-hover);text-decoration:var(--tp-link-no-decoration-text-decoration)}:host{display:block}:host ::ng-deep ti-alert{width:100%}:host ::ng-deep ti-alert a{color:var(--ti-common-color-text-link);cursor:pointer;text-decoration:none}:host ::ng-deep ti-alert a:hover{color:var(--tp-link-no-decoration-color-hover);text-decoration:var(--tp-link-no-decoration-text-decoration)}"]
            },] }
];
TpFrozenComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: TiTipService }
];
TpFrozenComponent.propDecorators = {
    buttonElem: [{ type: Input }],
    response: [{ type: Output }],
    tipContentTemplate: [{ type: ViewChild, args: ['tipContentTemplate', { static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBGcm96ZW5Db21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9AY2xvdWQvdGlueXBsdXMzL2NvbXBvbmVudHMvZnJvemVuL1RwRnJvemVuQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDSCxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsU0FBUztBQUNyRixxREFBcUQ7RUFDeEQsTUFBTSxlQUFlLENBQUM7QUFDdkIscURBQXFEO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQVksWUFBWSxFQUFpQixJQUFJLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDNUYscURBQXFEO0FBQ3JELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQW1FOUM7Ozs7OztHQU1HO0FBTUgsTUFBTSxPQUFPLGlCQUFrQixTQUFRLGVBQWU7SUF3SGxELFlBQ2MsT0FBbUIsRUFDbkIsU0FBb0IsRUFDdEIsVUFBd0I7UUFFaEMsS0FBSyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUpoQixZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQ25CLGNBQVMsR0FBVCxTQUFTLENBQVc7UUFDdEIsZUFBVSxHQUFWLFVBQVUsQ0FBYztRQXRIcEM7O1dBRUc7UUFDZ0IsYUFBUSxHQUEyQyxJQUFJLFlBQVksRUFBNEIsQ0FBQztRQU1uSDs7O1dBR0c7UUFDSSxTQUFJLEdBQVksS0FBSyxDQUFDO1FBQzdCOzs7V0FHRztRQUNJLGNBQVMsR0FBVyxPQUFPLENBQUM7UUFDbkM7OztXQUdHO1FBQ0ksYUFBUSxHQUFZLElBQUksQ0FBQztRQUNoQzs7O1dBR0c7UUFDSSxjQUFTLEdBQVksS0FBSyxDQUFDO1FBQ2xDOzs7V0FHRztRQUNJLFVBQUssR0FBVyxFQUFFLENBQUM7SUF3RjFCLENBQUM7SUE3RUQ7OztPQUdH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Q0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMvRCxtQkFBbUI7WUFDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUMzQixJQUFJLENBQUMsV0FBVyxHQUFHLFNBQVMsQ0FBQztTQUNoQztJQUNMLENBQUM7SUFDRDs7O09BR0c7SUFDSSxNQUFNLENBQUMsR0FBRyxPQUEyQjtRQUN4QyxJQUFJLElBQUksQ0FBQyxrQkFBa0IsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFO1lBQzVDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFvQixFQUFFLEVBQUU7Z0JBQ3JDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsT0FBTyxFQUFFO29CQUMvQyxPQUFPLEVBQUUsT0FBTztvQkFDaEIsTUFBTSxFQUFFLEdBQWtCLEVBQUU7d0JBQ3hCLE9BQU87NEJBQ0gsT0FBTyxFQUFFLElBQUksQ0FBQyxrQkFBa0I7eUJBQ25DLENBQUM7b0JBQ04sQ0FBQztpQkFDSixDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQzs7O1lBOUxKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsV0FBVztnQkFDckIsdWlCQUE0Qjs7YUFFL0I7OztZQXBGYyxVQUFVO1lBQStCLFNBQVM7WUFJN0IsWUFBWTs7O3lCQXFGM0MsS0FBSzt1QkFJTCxNQUFNO2lDQUtOLFNBQVMsU0FBQyxvQkFBb0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFJlbmRlcmVyMiwgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZFxyXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1pbXBsaWNpdC1kZXBlbmRlbmNpZXNcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1pbXBsaWNpdC1kZXBlbmRlbmNpZXNcclxuaW1wb3J0IHsgVGlCYXNlQ29tcG9uZW50LCBUaVRpcFJlZiwgVGlUaXBTZXJ2aWNlLCBUaVRpcFNob3dJbmZvLCBVdGlsIH0gZnJvbSAnQGNsb3VkL3RpbnkzJztcclxuLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1pbXBsaWNpdC1kZXBlbmRlbmNpZXNcclxuaW1wb3J0IHsgQ2ZVdGlsIH0gZnJvbSAnLi4vLi4vY2Z1dGlscy9DZlV0aWwnO1xyXG5cclxuLyoqXHJcbiAqIEBpZ25vcmVcclxuICog5q+P5p2h5Y+X6ZmQ5L+h5oGvXHJcbiAqL1xyXG5leHBvcnQgaW50ZXJmYWNlIFRwRnJvemVuSW5mbyB7XHJcbiAgICAvKipcclxuICAgICAqIDEg5Ya757uT77yMMiDop6Plhrvnu5NcclxuICAgICAqL1xyXG4gICAgc3RhdHVzOiBudW1iZXI7XHJcbiAgICAvKipcclxuICAgICAqIDEt6KGo56S65YWs5a6J5Ya757uTLCAy6KGo56S65pyq5a6e5ZCN6K6k6K+B5Ya757uTLDMt6KGo56S65qyg6LS55Ya757uTLDQt5ZCI5L2c5LyZ5Ly05Ya757uTLDUt6LSm5Y+36ZSA5oi35YmN5Ya757uTLDYt6L+d6KeE5Ya757uTXHJcbiAgICAgKi9cclxuICAgIHR5cGU6IG51bWJlcjtcclxuICAgIC8qKlxyXG4gICAgICoganNvbiDlrZfnrKbkuLLvvIzlj6/ku6Xop6PmnpDkuLrkuIDkuKrmlbDnu4TvvIzljIXlkKvkuKTkuKrlhrvnu5Pkv6Hmga9cclxuICAgICAqIOivpuaDheWPguiAgyDkupHov5DokKXlhazlhbHmjqXlj6PmlofmoaMgNC4xMCDmn6Xor6LotKblj7flhrvnu5PlnLrmma9cclxuICAgICAqL1xyXG4gICAgc3RhdHVzTXNnOiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOWFgeiuuOacieWkmuS9meeahOWxnuaAp+Wtl+autVxyXG4gICAgICovXHJcbiAgICBbcHJvcE5hbWU6IHN0cmluZ106IGFueTtcclxuXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBAaWdub3JlXHJcbiAqIOa2iOaBr+exu+Wei++8jCdQT1AnIOS4uuaPkOekuuWdl+S4reeahOa2iOaBr++8jCdUSVAnIOS4unRpcCDmj5DnpLrmtojmga9cclxuICovXHJcbnR5cGUgVHBGcm96ZW5NZXNzYWdlVHlwZSA9ICdQT1AnIHwgJ1RJUCc7XHJcblxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKlxyXG4gKi9cclxuZXhwb3J0IGludGVyZmFjZSBUcEZyb3plblN0YXR1c01zZyB7XHJcbiAgICAvKipcclxuICAgICAqIOa2iOaBr+exu+Wei++8jCdQT1AnIOS4uuaPkOekuuWdl+S4reeahOa2iOaBr++8jCdUSVAnIOS4unRpcCDmj5DnpLrmtojmga9cclxuICAgICAqL1xyXG4gICAgbXNnVHlwZTogVHBGcm96ZW5NZXNzYWdlVHlwZTtcclxuICAgIC8qKlxyXG4gICAgICog5raI5oGv5a2X56ym5LiyXHJcbiAgICAgKi9cclxuICAgIG1zZ0NvbnRlbnQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICog5YWB6K645pyJ5aSa5L2Z55qE5bGe5oCn5a2X5q61XHJcbiAgICAgKi9cclxuICAgIFtwcm9wTmFtZTogc3RyaW5nXTogYW55O1xyXG5cclxufVxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKiA0LjEwXHTmn6Xor6LotKblj7flhrvnu5PlnLrmma8gaHR0cCDov5Tlm57mlbDmja7nsbvlnotcclxuICovXHJcbmV4cG9ydCBpbnRlcmZhY2UgVHBGcm96ZW5SZXNwb25zZSB7XHJcbiAgICAvKipcclxuICAgICAqIOaOpeWPo+i/lOWbnuWAvOiuvue9rlxyXG4gICAgICovXHJcbiAgICBmcm96ZW5JbmZvczogQXJyYXk8VHBGcm96ZW5JbmZvPjtcclxuICAgIC8qKlxyXG4gICAgICog5YWB6K645pyJ5aSa5L2Z55qE5bGe5oCn5a2X5q61XHJcbiAgICAgKi9cclxuICAgIFtwcm9wTmFtZTogc3RyaW5nXTogYW55O1xyXG59XHJcblxyXG4vKipcclxuICog6LSm5Y+35Ya757uT57uE5Lu277yM57uE5Lu25p+l6K+iQ0JD5p+l6K+i6LSm5Y+35Ya757uT5Zy65pmv5o6l5Y+j77yM6I635Y+W5Ya757uT5L+h5oGv77yM5bGV56S65Z2X5o+Q56S677yM57uZ55uu5qCH5YWD57Sg5re75YqgdGlw5o+Q56S644CCXHJcbiAqXHJcbiAqIDkuMC4z54mI5pys5paw5aKeXHJcbiAqXHJcbiAqIDxleGFtcGxlLXVybD4uLi90aW55cGx1czNkZW1vLyMvZnJvemVuL2Zyb3plbi1hbGw8L2V4YW1wbGUtdXJsPlxyXG4gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3RwLWZyb3plbicsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vZnJvemVuLmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vZnJvemVuLmxlc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVHBGcm96ZW5Db21wb25lbnQgZXh0ZW5kcyBUaUJhc2VDb21wb25lbnQge1xyXG4gICAgLyoqXHJcbiAgICAgKiDmt7vliqB0aXDnmoTmjInpkq7lhYPntKBcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgYnV0dG9uRWxlbTogSFRNTEVsZW1lbnQ7XHJcbiAgICAvKipcclxuICAgICAqIOiOt+WPluaVsOaNruaIkOWKn+S6i+S7tlxyXG4gICAgICovXHJcbiAgICBAT3V0cHV0KCkgcmVhZG9ubHkgcmVzcG9uc2U6IEV2ZW50RW1pdHRlcjxUcEZyb3plblJlc3BvbnNlIHwgRXJyb3I+ID0gbmV3IEV2ZW50RW1pdHRlcjxUcEZyb3plblJlc3BvbnNlIHwgRXJyb3I+KCk7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIHRpcCDlhoXlrrl0ZW1wbGF0ZVxyXG4gICAgICovXHJcbiAgICBAVmlld0NoaWxkKCd0aXBDb250ZW50VGVtcGxhdGUnLCB7IHN0YXRpYzogZmFsc2UgfSkgdGlwQ29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDlhoXpg6hhbGVydCDmiZPlvIDlhbPpl61cclxuICAgICAqL1xyXG4gICAgcHVibGljIG9wZW46IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICogYWxlcnQg57G75Z6LXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBhbGVydFR5cGU6IHN0cmluZyA9ICdlcnJvcic7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIOWGhemDqGFsZXJ057G75Z6L5Zu+5qCHXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0eXBlSWNvbjogYm9vbGVhbiA9IHRydWU7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIOWGhemDqGFsZXJ05YWz6Zet5Zu+5qCHXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjbG9zZUljb246IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICogYWxlcnQg5YaF5a65XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBsYWJlbDogc3RyaW5nID0gJyc7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIHRpcCDmj5DnpLrlhoXlrrlcclxuICAgICAqL1xyXG4gICAgcHVibGljIHRpcENvbnRlbnQ6IHN0cmluZztcclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICogdGlw5a6e5L6L77yM6ZSA5q+BdGlw5L2c55SoXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgdGlwSW5zdGFuY2U6IFRpVGlwUmVmO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDku45odHRw6L+U5Zue5pWw5o2u5Lit6I635Y+W5YaF5a655a2X56ym5LiyXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0TXNnQ29udGVudChkYXRhOiBUcEZyb3plblJlc3BvbnNlLCBtc2dUeXBlOiBUcEZyb3plbk1lc3NhZ2VUeXBlKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAoZGF0YSAmJiBBcnJheS5pc0FycmF5KGRhdGEuZnJvemVuSW5mb3MpICYmIGRhdGEuZnJvemVuSW5mb3MubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAvLyDov5Tlm57mlbDmja7kuK0gZnJvemVuSW5mb3PmjInkvJjlhYjnuqfmjpLluo/vvIzmiYDku6Xlj5bnrKzkuIDkuKpcclxuICAgICAgICAgICAgY29uc3QgZnJvemVuSW5mbzogVHBGcm96ZW5JbmZvID0gZGF0YS5mcm96ZW5JbmZvc1swXSBhcyBUcEZyb3plbkluZm87XHJcbiAgICAgICAgICAgIC8vIHN0YXR1cyAxIOWGu+e7kyAyIOino+WGu1xyXG4gICAgICAgICAgICBpZiAoZnJvemVuSW5mby5zdGF0dXMgIT09IDEgfHwgIVV0aWwuaXNTdHJpbmcoZnJvemVuSW5mby5zdGF0dXNNc2cpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGZyb3plbkluZm8uc3RhdHVzTXNncyA9IEpTT04ucGFyc2UoZnJvemVuSW5mby5zdGF0dXNNc2cpIGFzIEFycmF5PFRwRnJvemVuU3RhdHVzTXNnPjtcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihlcnJvcik7XHJcblxyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNvbnN0IG1zZzogVHBGcm96ZW5TdGF0dXNNc2cgPSBmcm96ZW5JbmZvLnN0YXR1c01zZ3MuZmluZCgoaXRlbTogVHBGcm96ZW5TdGF0dXNNc2cpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLm1zZ1R5cGUgPT09IG1zZ1R5cGU7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZiAobXNnICYmIFV0aWwuaXNTdHJpbmcobXNnLm1zZ0NvbnRlbnQpKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbXNnLm1zZ0NvbnRlbnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgZ2V0VXNlckluZm8oY29uZmlnPzogYW55KTogUHJvbWlzZTxzdHJpbmc+IHtcclxuICAgICAgICAvLyBjb25maWcg5pys5Zyw5rWL6K+V5L2/55So77yM5a6e6ZmF5L2/55So5pe26K+35b+955Wl5q2k5Y+C5pWwXHJcbiAgICAgICAgaWYgKGNvbmZpZykge1xyXG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShjb25maWcuZG9tYWluSWQpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gQ2ZVdGlsLmdldFVzZXIoKS50aGVuKCh1c2VyOiBhbnkpID0+IHVzZXIuZG9tYWluSWQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIOivt+axgui0puWPt+WGu+e7k+WcuuaZr+aOpeWPo1xyXG4gICAgICogY29uZmlnIOacrOWcsOa1i+ivleS9v+eUqO+8jOWunumZheS9v+eUqOaXtuivt+W/veeVpeatpOWPguaVsFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHF1ZXJ5RnJvemVuSW5mbyhjb25maWc/OiBhbnkpOiBQcm9taXNlPFRwRnJvemVuUmVzcG9uc2U+IHtcclxuICAgICAgICBjb25zdCBxdWVyeUZyb3plbkluZm9Qcm9taXNlOiBQcm9taXNlPFRwRnJvemVuUmVzcG9uc2U+ID0gVHBGcm96ZW5Db21wb25lbnQuZ2V0VXNlckluZm8oY29uZmlnKVxyXG4gICAgICAgICAgICAudGhlbigoZG9tYWluSWQ6IHN0cmluZykgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY2FtZWw6IGFueSA9IGNvbmZpZyA/IGNvbmZpZy5jYW1lbCA6IENmVXRpbC5nZXRIdHRwU2VydmljZSgpO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgY3VzdG9tZXJJZDogc3RyaW5nID0gZG9tYWluSWQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoY3VzdG9tZXJJZCAmJiBjYW1lbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCB1cmw6IHN0cmluZyA9ICcvcmVzdC9jYmMvY2JjY3VzdG1ncnNlcnZpY2UvdjEvY3VzdG9tZXIvZnJvemVuJztcclxuICAgICAgICAgICAgICAgICAgICAvLyBBcHBXZWJQYXRoIOS4umNvbnNvbGUuaG9tZeahhuaetueahOiuvue9rizkvovlpoInL2NvbnNvbGUn6Lev5b6EXHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYXBwV2ViUGF0aDogc3RyaW5nID0gQ2ZVdGlsLmdldEFwcFdlYlBhdGgoKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoVXRpbC5pc1N0cmluZyhhcHBXZWJQYXRoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSBhcHBXZWJQYXRoICsgdXJsO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbWVsLmdldCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgczogdXJsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogeyBjdXN0b21lcklkIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcignZnJvemVuIOS+nei1lmNhbWVs5pyN5Yqh77yM5L2/55So5YmN6K+35YWI5rOo5YWlJykpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHF1ZXJ5RnJvemVuSW5mb1Byb21pc2U7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IoXHJcbiAgICAgICAgcHJvdGVjdGVkIGhvc3RSZWY6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgcHJvdGVjdGVkIHJlbmRlcmVyMjogUmVuZGVyZXIyLFxyXG4gICAgICAgIHByaXZhdGUgdGlwU2VydmljZTogVGlUaXBTZXJ2aWNlXHJcbiAgICApIHtcclxuICAgICAgICBzdXBlcihob3N0UmVmLCByZW5kZXJlcjIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+l6K+i5Ya757uTXHJcbiAgICAgKiBjb25maWcg5Li65pa55L6/5rWL6K+V6K6+572u77yM5a6e6ZmF5L2/55So5pe26K+35b+955WlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBxdWVyeUZyb3plbihjb25maWc/OiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBUcEZyb3plbkNvbXBvbmVudC5xdWVyeUZyb3plbkluZm8oY29uZmlnKVxyXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2U6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sYWJlbCA9IFRwRnJvemVuQ29tcG9uZW50LmdldE1zZ0NvbnRlbnQocmVzcG9uc2UsICdQT1AnKTtcclxuICAgICAgICAgICAgICAgIC8vIOaYr+Wtl+espuS4suaYvuekulxyXG4gICAgICAgICAgICAgICAgdGhpcy5vcGVuID0gVXRpbC5pc1N0cmluZyh0aGlzLmxhYmVsKTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyDnu5nmjInpkq7mt7vliqB0aXBcclxuICAgICAgICAgICAgICAgIHRoaXMudGlwQ29udGVudCA9IFRwRnJvemVuQ29tcG9uZW50LmdldE1zZ0NvbnRlbnQocmVzcG9uc2UsICdUSVAnKTtcclxuICAgICAgICAgICAgICAgIGlmIChVdGlsLmlzU3RyaW5nKHRoaXMudGlwQ29udGVudCkgJiYgdGhpcy5idXR0b25FbGVtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hZGRUaXAodGhpcy5idXR0b25FbGVtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMubGFiZWwgJiYgIXRoaXMudGlwQ29udGVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMudW5mcm96ZW4oKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIOiOt+WPluaVsOaNruaIkOWKn++8jOinpuWPkXJlc3BvbnNl5LqL5Lu277yM5bCG5ZCO5Y+w5Y6f5aeL5ZON5bqU5pWw5o2u5Lyg6YCS5Ye65Y6777yM5pa55L6/5L2/55So6ICF6Ieq6KGM5aSE55CG55u45YWz6YC76L6RXHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlc3BvbnNlLmVtaXQocmVzcG9uc2UpO1xyXG4gICAgICAgICAgICB9LCAoZXJyb3I6IEVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlc3BvbnNlLmVtaXQoZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vcGVuID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6ZqQ6JeP5o+Q56S65Z2XLOmUgOavgXRpcFxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHVuZnJvemVuKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub3BlbiA9IGZhbHNlO1xyXG4gICAgICAgIC8vIEB0cy1pZ25vcmU65b+955WlZGVzdHJveeajgOafpVxyXG4gICAgICAgIGlmICh0aGlzLnRpcEluc3RhbmNlICYmIFV0aWwuaXNGdW5jdGlvbih0aGlzLnRpcEluc3RhbmNlLmRlc3Ryb3kpKSB7XHJcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmU65aSW5bGC5pyJ5Yik5patXHJcbiAgICAgICAgICAgIHRoaXMudGlwSW5zdGFuY2UuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB0aGlzLnRpcEluc3RhbmNlID0gdW5kZWZpbmVkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogIOe7meebruagh+WFg+e0oOa3u+WKoHRpcFxyXG4gICAgICogIHY5LjAuNCDniYjmnKzmt7vliqBcclxuICAgICAqL1xyXG4gICAgcHVibGljIGFkZFRpcCguLi50YXJnZXRzOiBBcnJheTxIVE1MRWxlbWVudD4pOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy50aXBDb250ZW50VGVtcGxhdGUgJiYgdGhpcy50aXBDb250ZW50KSB7XHJcbiAgICAgICAgICAgIHRhcmdldHMuZm9yRWFjaCgoZWxlbWVudDogSFRNTEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMudGlwSW5zdGFuY2UgPSB0aGlzLnRpcFNlcnZpY2UuY3JlYXRlKGVsZW1lbnQsIHtcclxuICAgICAgICAgICAgICAgICAgICB0cmlnZ2VyOiAnbW91c2UnLFxyXG4gICAgICAgICAgICAgICAgICAgIHNob3dGbjogKCk6IFRpVGlwU2hvd0luZm8gPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogdGhpcy50aXBDb250ZW50VGVtcGxhdGVcclxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==