import { Component, Input } from '@angular/core';
import { TiBaseComponent } from '@cloud/tiny3';
/**
 * @ignore
 * 内部使用组件
 */
export class TpSupportregionlistComponent extends TiBaseComponent {
    /**
     * @ignore
     */
    onClick(item) {
        if (!this.selectedRegionEvent) {
            this.selectedRegionEvent = document.createEvent('HTMLEvents');
            this.selectedRegionEvent.initEvent('cfChangeRegion', true, true);
        }
        this.selectedRegionEvent.detail = item;
        document.dispatchEvent(this.selectedRegionEvent);
    }
    /**
     * @ignore
     */
    onClickIcon(event, item) {
        item.showProjectsList = !item.showProjectsList;
    }
}
TpSupportregionlistComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-supportregionlist',
                template: "<span *ngIf=\"regions && regions.length > 0\" class=\"tp-supportregionlist-label\">{{ 'tpNonsupportregion.supportLabel' | tiTranslate }}</span>\r\n<ul class=\"tp-supportregionlist-regions\" [id]=\"appendId('list')\">\r\n    <ng-container *ngFor=\"let region of regions; index as i\">\r\n        <!-- \u4E00\u7EA7\u533A\u57DF -->\r\n        <ng-container *ngTemplateOutlet=\"regionTemplate; context: {$implicit: region, liId: i, show: true}\"></ng-container>\r\n        <!-- \u4E8C\u7EA7\u533A\u57DF -->\r\n        <ng-container *ngFor=\"let project of region.projects; index as j;\">\r\n            <ng-container *ngTemplateOutlet=\"regionTemplate; context: {$implicit: project, show: region.showProjectsList}\"></ng-container>\r\n        </ng-container>\r\n    </ng-container>\r\n</ul>\r\n\r\n<ng-template #regionTemplate let-item let-liId=liId let-show=show>\r\n        <li *ngIf=\"show\" class=\"tp-supportregionlist-project\" [id]=\"appendId(liId)\">\r\n            <a (click)=\"onClick(item)\" [id]=\"appendId('name' + liId)\">{{item.displayName}}</a>\r\n            <section *ngIf=\"item.projects && item.projects.length!==0\"\r\n                      class=\"tp-supportregionlist-icon\"\r\n                      [ngClass]=\"{'tp-supportregionlist-icon-transform': item.showProjectsList}\" (click)=\"onClickIcon($event, item)\" [id]=\"appendId('icon' + liId)\"></section>\r\n        </li>\r\n</ng-template>",
                styles: [":host{display:flex;justify-content:center;line-height:var(--ti-common-line-height-number);margin-bottom:40px}.tp-supportregionlist-label{margin-right:var(--ti-common-space-2x)}.tp-supportregionlist-regions{text-align:left}.tp-supportregionlist-project{color:var(--ti-common-color-text-link);cursor:pointer;margin-bottom:var(--ti-common-space-base)}.tp-supportregionlist-project:hover{color:var(--ti-common-color-text-link-hover)}.tp-supportregionlist-project:hover section:after{border-top-color:var(--ti-common-color-text-link-hover)}.tp-supportregionlist-icon{display:inline-block;padding-left:var(--ti-common-space-2x)}.tp-supportregionlist-icon:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:5px solid var(--ti-common-color-text-link);content:\"\";cursor:pointer;display:inline-block;height:0;vertical-align:middle;width:0}.tp-supportregionlist-icon-transform:after{transform:rotate(180deg)}"]
            },] }
];
TpSupportregionlistComponent.propDecorators = {
    regions: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVHBTdXBwb3J0cmVnaW9ubGlzdENvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55cGx1czMvY29tcG9uZW50cy9zdXBwb3J0cmVnaW9ubGlzdC9UcFN1cHBvcnRyZWdpb25saXN0Q29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFL0M7OztHQUdHO0FBT0gsTUFBTSxPQUFPLDRCQUE2QixTQUFRLGVBQWU7SUFJN0Q7O09BRUc7SUFDSCxPQUFPLENBQUMsSUFBUztRQUNiLElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLEVBQUU7WUFDM0IsSUFBSSxDQUFDLG1CQUFtQixHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDOUQsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDcEU7UUFFRCxJQUFJLENBQUMsbUJBQW1CLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUN2QyxRQUFRLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFDRDs7T0FFRztJQUNILFdBQVcsQ0FBQyxLQUFZLEVBQUUsSUFBUztRQUMvQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7SUFDbkQsQ0FBQzs7O1lBM0JKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxnNUNBQXVDOzthQUUxQzs7O3NCQUdJLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpQmFzZUNvbXBvbmVudCB9IGZyb20gJ0BjbG91ZC90aW55Myc7XHJcblxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKiDlhoXpg6jkvb/nlKjnu4Tku7ZcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd0cC1zdXBwb3J0cmVnaW9ubGlzdCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vc3VwcG9ydHJlZ2lvbmxpc3QuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9zdXBwb3J0cmVnaW9ubGlzdC5sZXNzJ11cclxufSlcclxuXHJcbmV4cG9ydCBjbGFzcyBUcFN1cHBvcnRyZWdpb25saXN0Q29tcG9uZW50IGV4dGVuZHMgVGlCYXNlQ29tcG9uZW50IHtcclxuICAgIEBJbnB1dCgpIHJlZ2lvbnM6IEFycmF5PGFueT47XHJcbiAgICBwcml2YXRlIHNlbGVjdGVkUmVnaW9uRXZlbnQ6IGFueTtcclxuXHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgb25DbGljayhpdGVtOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBpZiAoIXRoaXMuc2VsZWN0ZWRSZWdpb25FdmVudCkge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkUmVnaW9uRXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnSFRNTEV2ZW50cycpO1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkUmVnaW9uRXZlbnQuaW5pdEV2ZW50KCdjZkNoYW5nZVJlZ2lvbicsIHRydWUsIHRydWUpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5zZWxlY3RlZFJlZ2lvbkV2ZW50LmRldGFpbCA9IGl0ZW07XHJcbiAgICAgICAgZG9jdW1lbnQuZGlzcGF0Y2hFdmVudCh0aGlzLnNlbGVjdGVkUmVnaW9uRXZlbnQpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIG9uQ2xpY2tJY29uKGV2ZW50OiBFdmVudCwgaXRlbTogYW55KTogdm9pZCB7XHJcbiAgICAgICAgaXRlbS5zaG93UHJvamVjdHNMaXN0ID0gIWl0ZW0uc2hvd1Byb2plY3RzTGlzdDtcclxuICAgIH1cclxufVxyXG4iXX0=