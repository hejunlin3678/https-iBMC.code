// tslint:disable-next-line:no-implicit-dependencies
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import { TiBaseComponent, Util } from '@cloud/tiny3';
/**
 * 时间线timeline组件
 * <example-url>../tinyplus3demo/#/timeline/timeline-all</example-url>
 */
export class TpTimelineComponent extends TiBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * 当前激活项（正在进行时）
         * 10.1.4新增
         */
        this.activeIndex = -1;
        /**
         * @ignore
         * 时间轴一级信息集合
         */
        this.titleOptions = [];
    }
    ngOnInit() {
        super.ngOnInit();
        this.titleOptions = this.getTitleOptions();
        this.changeToSuccess();
    }
    ngOnChanges(changes) {
        if (changes['activeIndex'] && !changes['activeIndex'].firstChange) {
            this.changeToSuccess();
        }
        if (changes['options'] && !changes['options'].firstChange) {
            this.titleOptions = this.getTitleOptions();
        }
    }
    /**
     * @ignore
     */
    findItemIndex(item) {
        return this.titleOptions.findIndex((ele) => ele === item);
    }
    /**
     * @ignore
     * 获取时间轴一级（标题）信息集合
     */
    getTitleOptions() {
        return this.options.filter((option) => option.isTitle);
    }
    /**
     * @ignore
     * activeIndex之前的项全部变更为success状态
     */
    changeToSuccess() {
        if (this.activeIndex === -1 || Util.isUndefined(this.activeIndex) || !Util.isNumber(this.activeIndex)) {
            return;
        }
        this.options.forEach((option, index) => {
            option.type = index < this.activeIndex ? 'success' : 'primary';
        });
    }
    /**
     * @ignore
     * 判断当前一级时间轴状态
     */
    isSuccess(option) {
        if (!option.isTitle) {
            return;
        }
        let level2Options = [];
        const index = this.options.findIndex((item) => item === option);
        let isSucess = true;
        for (let i = index + 1; i <= this.activeIndex; i++) {
            if (this.options[i] && this.options[i].isTitle) {
                break;
            }
            level2Options.push(this.options[i]);
        }
        if (level2Options.length > 0) {
            level2Options.forEach((option) => {
                if (option.type && option.type !== 'success') {
                    isSucess = false;
                }
            });
        }
        return isSucess;
    }
}
TpTimelineComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-timeline',
                template: "<ul [id]=\"appendId('list')\" [ngClass]=\"{'tp-timeline-multistage': titleOptions.length > 0}\">\r\n    <li *ngFor='let item of options; index as i' class=\"tp-timeline-container\" [ngClass]=\"{'tp-timeline-completed': item.type === 'success'}\">\r\n        <span class='tp-timeline-label' [id]=\"appendId('label_' + i)\"\r\n            [ngClass]= \"{'tp-timeline-info': item.type === 'info',\r\n            'tp-timeline-success': item.type === 'success',\r\n            'tp-timeline-warning': item.type === 'warning',\r\n            'tp-timeline-danger': item.type === 'danger',\r\n            'tp-timeline-currentStep': i === activeIndex}\">\r\n                <span *ngIf=\"item.isTitle\" class=\"tp-timeline-level1\"\r\n                    [ngClass]=\"{'tp-timeline-level1-success': item.type === 'success',\r\n                    'tp-timeline-processing': !isSuccess(item)}\">\r\n                        <span *ngIf=\"item.type !== 'success' || !isSuccess(item)\">{{findItemIndex(item) + 1}}</span>\r\n                        <tp-icon *ngIf=\"item.type === 'success' && isSuccess(item)\" name=\"cloud-action-checkmark-1\"></tp-icon>\r\n                </span>\r\n                <ng-container *ngTemplateOutlet=\"itemTemplate?itemTemplate:defaultItemTemplate;context: {$implicit: item, index: i}\"></ng-container>\r\n        </span>\r\n    </li>\r\n</ul>\r\n\r\n<ng-template #defaultItemTemplate let-item let-i=index>\r\n    <div class=\"tp-timeline-label-container\">\r\n        <span [ngClass]=\"{'tp-timeline-active': i === activeIndex,\r\n                      'tp-timeline-active-danger': i === activeIndex && item.type === 'danger',\r\n                      'tp-timeline-label-level1': item.isTitle}\">{{item.label}}</span>\r\n        <tp-icon local name=\"cloud-action-tip\" *ngIf=\"item.iconTip\" [tiTip]=\"item.iconTip\"\r\n        [tiTipPosition]=\"item.iconTipPosition\"\r\n        [tiTipMaxWidth]=\"item.iconTipMaxWidth\" class=\"tp-timeline-icontip\"></tp-icon>\r\n        <span *ngIf=\"titleOptions.length > 0\">\r\n            <span class='tp-timeline-time' *ngIf=\"item.time && item.type === 'success'\" [ngClass]=\"{'tp-timeline-time-level2': !item.isTitle}\">{{item.time}}</span>\r\n        </span>\r\n    </div>\r\n    <span *ngIf=\"titleOptions.length <= 0\" class='tp-timeline-time'>{{item.time}}</span>\r\n    <div *ngIf=\"item.type === 'danger'\">\r\n        <ng-container *ngTemplateOutlet=\"errorMessageTemplate; context: {$implicit: item}\"></ng-container>\r\n    </div>\r\n</ng-template>\r\n<!-- \u05B4\uFFFD\uFFFD\u02A7\uFFFD\u0723\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u03E2 -->\r\n<ng-template #errorMessageTemplate  let-item>\r\n    <span class=\"tp-timeline-errorMessagg\" [innerHTML]=\"item.errorMessage\"></span>\r\n</ng-template>",
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}::ng-deep :root{--tp-timeline-badge-width:8px;--tp-timeline-color-success:var(--ti-common-color-success);--tp-timeline-errorMsg-color:var(--ti-common-color-error-text);--tp-timeline-errorMsg-color-dark:var(--ti-common-color-error);--tp-timeline-label-lineHeight:calc(var(--ti-common-font-size-base)*var(--ti-common-line-height-number));--tp-timeline-line-color:var(--ti-common-color-line-dividing);--tp-timeline-line-color-dark:var(--ti-common-color-line-normal);--tp-timeline-line-width:1px;--tp-timeline-text-color-success:var(--ti-common-color-text-success)}.tp-timeline-container{padding-bottom:calc(var(--ti-common-space-5x));position:relative}.tp-timeline-container:after{background-color:var(--ti-common-color-line-disabled);content:\"\";height:calc(100% - var(--tp-timeline-badge-width));left:calc(-1*var(--tp-timeline-line-width)/2);position:absolute;top:calc((var(--tp-timeline-label-lineHeight) + var(--tp-timeline-badge-width))/2);width:var(--tp-timeline-line-width)}.tp-timeline-container:last-child{padding-bottom:0}.tp-timeline-container:last-child:after{display:none}.tp-timeline-multistage .tp-timeline-container.tp-timeline-completed:after{background-color:var(--tp-timeline-color-success)}.tp-timeline-label{color:var(--ti-common-color-text-primary);display:block;font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);padding-left:var(--ti-common-space-5x);position:relative;word-wrap:break-word}.tp-timeline-label:before{background-color:var(--tp-timeline-line-color);border-radius:50%;content:\"\";height:var(--tp-timeline-badge-width);left:calc(-1*var(--tp-timeline-badge-width)/2);position:absolute;top:calc((var(--tp-timeline-label-lineHeight) - var(--tp-timeline-badge-width))/2);width:var(--tp-timeline-badge-width);z-index:1}.tp-timeline-multistage{padding-left:var(--ti-common-space-2x)}.tp-timeline-multistage .tp-timeline-label{color:var(--ti-common-color-text-weaken)}.tp-timeline-multistage .tp-timeline-success{color:var(--ti-common-color-text-primary)}.tp-timeline-multistage .tp-timeline-time-level2{display:inline-block;padding-left:var(--ti-common-space-3x)}.tp-timeline-currentStep:before{background-clip:content-box;background-color:var(--tp-timeline-color-success);border:2px solid rgba(80,212,171,.2);left:calc(-1*var(--tp-timeline-badge-width)/2 - 2px)}.tp-timeline-multistage .tp-timeline-danger:before{background-color:var(--tp-timeline-errorMsg-color);border:2px solid rgba(222,80,78,.2)}.tp-timeline-info:before{background-color:var(--ti-common-color-prompt);border-color:var(--ti-common-color-prompt)}.tp-timeline-success:before{background-color:var(--ti-common-color-success);border-color:var(--ti-common-color-success)}.tp-timeline-warning:before{background-color:var(--ti-common-color-warn);border-color:var(--ti-common-color-warn)}.tp-timeline-danger:before{background-color:var(--ti-common-color-error);border-color:var(--ti-common-color-error)}.tp-timeline-time{color:var(--ti-common-color-text-weaken);display:block;font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);white-space:pre}.tp-timeline-active{color:var(--tp-timeline-text-color-success)}.tp-timeline-active-danger{color:var(--tp-timeline-errorMsg-color)}.tp-timeline-level1{background-color:var(--ti-common-color-bg-white-normal);border:1px solid var(--ti-common-color-text-weaken);border-radius:50%;color:var(--ti-common-color-text-weaken);display:inline-block;height:14px;left:-8px;line-height:1;position:absolute;text-align:center;top:4px;width:14px;z-index:1}.tp-timeline-level1-success{border-color:var(--tp-timeline-color-success);color:var(--tp-timeline-color-success)}.tp-timeline-processing{background:var(--tp-timeline-color-success);color:var(--ti-common-color-bg-white-normal)}.tp-timeline-errorMessagg{color:var(--tp-timeline-errorMsg-color);padding-top:var(--ti-common-space-base)}.tp-timeline-label-level1{font-size:var(--ti-common-font-size-1)}.tp-timeline-label-container{align-items:center;display:flex}.tp-timeline-icontip{color:var(--ti-common-color-icon-normal);font-size:var(--ti-common-font-size-2);padding-left:var(--ti-common-space-2x);vertical-align:bottom}:host[dark] .tp-timeline-container:after{background:var(--tp-timeline-line-color-dark)}:host[dark] .tp-timeline-label{color:var(--tp-timeline-line-color-dark)}:host[dark] .tp-timeline-label:before{background:var(--tp-timeline-line-color-dark)}:host[dark] .tp-timeline-level1{background-color:var(--ti-common-color-bg-dark-normal);border-color:var(--tp-timeline-line-color-dark);color:var(--tp-timeline-line-color-dark)}:host[dark] .tp-timeline-level1.tp-timeline-level1-success{border-color:var(--tp-timeline-color-success);color:var(--tp-timeline-color-success)}:host[dark] .tp-timeline-currentStep:before,:host[dark] .tp-timeline-success:before{background:var(--tp-timeline-color-success);background-clip:content-box}:host[dark] .tp-timeline-currentStep.tp-timeline-danger:before{background:var(--tp-timeline-errorMsg-color-dark);background-clip:content-box;border:2px solid rgba(246,111,106,.2)}:host[dark] .tp-timeline-active-danger,:host[dark] .tp-timeline-errorMessagg{color:var(--tp-timeline-errorMsg-color-dark)}:host[dark] .tp-timeline-time{color:var(--tp-timeline-line-color-dark)}:host[dark] .tp-timeline-success{color:var(--ti-common-color-bg-white-normal)}:host[dark] .tp-timeline-level1.tp-timeline-processing{background-color:var(--tp-timeline-color-success);color:var(--ti-common-color-bg-white-normal)}:host[dark] .tp-timeline-icontip{display:none}"]
            },] }
];
TpTimelineComponent.propDecorators = {
    options: [{ type: Input }],
    activeIndex: [{ type: Input }],
    itemTemplate: [{ type: ContentChild, args: ['item', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,