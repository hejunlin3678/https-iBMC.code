import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { TiDominatorComponent, TiDropComponent, TiDroplistComponent, TiFormComponent, TiLocale } from '@cloud/tiny3';
/**
 * 区域选择组件
 *
 * 组件提供了[TpRegionUtil]{@link ../classes/TpRegionUtil.html}供某些业务处理数据。
 *
 * <example-url>../tinyplus3demo/#/region/region-all</example-url>
 */
// TODO：和Select有重复代码，未来设法消除。
export class TpRegionComponent extends TiFormComponent {
    constructor() {
        // TODO: add explicit constructor
        super(...arguments);
        /**
         * 选中事件，选中项没有变化
         */
        this.select = new EventEmitter();
        /**
         * @ignore
         * 灰化时默认提示文本
         */
        this.dafaultDisableReason = TiLocale.getLocaleWords().tpRegion.unSupport;
        /**
         * @ignore
         * 是否为ctc局点，面板结构类似于hws，选块较小
         */
        this.isSmallItem = TiLocale.getLocaleWords().tpRegionSmallItem;
        /**
         * @ignore
         * 是否为非hws非ctc局点，面板使用droplist，以select形式呈现
         */
        this.isUseDroplist = TiLocale.getLocaleWords().tpRegionSelectStyle;
    }
    // ngOnInit(): void {
    //     // TODO：兼容disable和disabled
    // }
    ngOnChanges(changes) {
        var _a, _b;
        if (((_b = (_a = changes['items']) === null || _a === void 0 ? void 0 : _a.currentValue) === null || _b === void 0 ? void 0 : _b.length) > 0 && this.model) {
            this.loopItemsFindSelectedItem();
        }
    }
    ngAfterViewInit() {
        super.ngAfterViewInit();
        if (this.isUseDroplist) {
            this.setFocusableElems(this.TiDominatorCom.getFocusableElems());
        }
        else {
            this.setFocusableElems(this.TiDominatorCom.getFocusableElems()
                .concat(this.dropCom.nativeElement));
        }
    }
    /**
     * @ignore
     */
    ngOnModelChange() {
        var _a;
        if (this.model && ((_a = this.items) === null || _a === void 0 ? void 0 : _a.length) > 0) {
            this.loopItemsFindSelectedItem();
        }
        else {
            this.selectedItem = undefined;
        }
    }
    /**
     * @ignore
     */
    onMousedown(event) {
        if (this.disabled) {
            return;
        }
        this.togglePanel();
    }
    /**
     * @ignore
     */
    onClick(item, event) {
        if (item.disabled) {
            // 防止dominator 失焦blur
            event.preventDefault();
            return;
        }
        if (!this.model || this.model !== item) {
            this.model = item;
        }
        else {
            this.select.emit(item);
        }
        this.dropCom.hide();
    }
    /**
     * @ignore
     */
    onBlur() {
        this.dropCom && this.dropCom.hide();
        this.droplistCom && this.droplistCom.hide();
    }
    /**
     * @ignore
     * 记录下拉面板展开状态
     */
    get dropshow() {
        if (this.isUseDroplist) {
            return this.droplistCom ? this.droplistCom.isShow : false;
        }
        else {
            return this.dropCom ? this.dropCom.isShow : false;
        }
    }
    /**
     * 面板的打开或关闭，统一处理drop和droplist
     */
    togglePanel() {
        if (this.dropshow) {
            this.dropCom && this.dropCom.hide();
            this.droplistCom && this.droplistCom.hide();
        }
        else {
            this.dropCom && this.dropCom.show();
            this.droplistCom && this.droplistCom.show();
        }
    }
    loopItemsFindSelectedItem() {
        this.items.some((item) => {
            if (item.regions && this.findSelectedItem(item.regions, item)) {
                return true;
            }
            else if (item.special) {
                return this.findSelectedItem(item.special, item);
            }
            return false;
        });
    }
    findSelectedItem(data, item) {
        const flag = data.some((region) => {
            if (region === this.model) {
                this.selectedItem = item;
                return true;
            }
            return false;
        });
        return flag;
    }
}
TpRegionComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-region',
                template: "<ti-dominator [id]=\"appendId('region_dominator')\"\r\n    [placeholder]=\"placeholder\" [disabled]=\"disabled\" (mousedown)=\"onMousedown($event)\"\r\n    [dropshow]='dropshow'\r\n    [(ngModel)]='model'>\r\n\r\n    <ng-template #placeholder >\r\n        <ti-icon name=\"location\" class=\"tp-region-dominator-icon\"></ti-icon><span class=\"tp-region-placeholder\">{{placeholderText}}</span>\r\n    </ng-template>\r\n    <ng-template #item let-item>\r\n        <ti-icon name=\"location\" class=\"tp-region-dominator-icon\"></ti-icon><span [title]=\"isUseDroplist?item.name:item.displayName\">{{isUseDroplist?item.name:item.displayName}}</span>\r\n    </ng-template>\r\n</ti-dominator>\r\n\r\n<ti-drop\r\n    *ngIf=\"!isUseDroplist else droplist\"\r\n    class=\"tp-region-drop\"\r\n    [id]=\"appendId('drop')\"\r\n    panelWidth='auto'\r\n    [fixMaxHeight]=\"true\"\r\n    [dominatorElem]=\"TiDominatorCom.nativeElement\">\r\n    <ul class=\"tp-region-panel-container\" [id]=\"appendId('list')\" [attr.small-item]=\"isSmallItem\" >\r\n        <li *ngFor=\"let item of items;index as i\" class=\"tp-region-panel-list\">\r\n            <span class=\"tp-region-panel-title\" [title]=\"item.displayName\">{{item.displayName}}</span>\r\n            <ul class=\"tp-region-panel-ul\" [ngClass]=\"{'tp-region-panel-ul-border': selectedItem === item}\" [id]=\"appendId('child_list_' + i)\">\r\n                <li>\r\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context:{$implicit: item.regions, index: i, set: ''}\"></ng-container>\r\n                </li>\r\n                <li *ngIf=\"item.special\">\r\n                    <ng-container *ngTemplateOutlet=\"itemTemplate; context:{$implicit: item.special, index: i, set: 'special_'}\"></ng-container>\r\n                </li>\r\n            </ul>\r\n        </li>\r\n    </ul>\r\n</ti-drop>\r\n\r\n<ng-template #itemTemplate let-items let-index=index let-set=set>\r\n    <span *ngFor=\"let child of items; index as i\" class=\"tp-region-panel-item-wrapper\" >\r\n        <span class=\"tp-region-panel-item\"\r\n            [id]=\"appendId('region_item_' + index + '_' + set + i)\"\r\n            (mousedown)=\"onClick(child, $event)\"\r\n            [ngClass]=\"{'item-disabled': child.disabled,\r\n                        'item-selected': model === child }\"\r\n            [title]=\"child.displayName\"\r\n            [tiTip]=\"child.tipContent || (child.disabled?dafaultDisableReason:'')\"\r\n            [tiTipContext]=\"child\"\r\n            [tiTipPosition]=\"child.tipPosition ? child.tipPosition : ''\">{{child.displayName}}</span>\r\n        <section *ngIf=\"supTemplate else defaultTemplate\" class=\"item-sup\">\r\n            <ng-container *ngTemplateOutlet=\"supTemplate; context: {$implicit: child.sup, index: i}\"></ng-container>\r\n        </section>\r\n        <ng-template #defaultTemplate >\r\n            <span *ngIf=\"child.sup\" [ngClass]=\"[child.sup.class]\" class=\"item-sup\">{{child.sup.text}}</span>\r\n        </ng-template>\r\n    </span>\r\n</ng-template>\r\n\r\n<ng-template #droplist>\r\n    <ti-droplist\r\n        [(ngModel)]=\"model\"\r\n        [dominatorElem]=\"TiDominatorCom.nativeElement\"\r\n        [options]=\"items\" labelKey=\"name\"></ti-droplist>\r\n</ng-template>",
                providers: [TiFormComponent.getValueAccessor(TpRegionComponent)],
                host: {
                    '(blur)': 'onBlur()'
                },
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tp-component-container-border,:host{-ms-box-sizing:border-box;border:1px solid;border-radius:var(--ti-common-border-radius-normal);box-sizing:border-box;display:inline-block}.tp-component-container-border:not([disabled]),:host:not([disabled]){background-color:var(--ti-input-bg-color);border-color:var(--ti-common-color-line-normal)}.tp-component-container-border:not([disabled]):hover,:host:not([disabled]):hover{border-color:var(--ti-common-color-line-hover)}.tp-component-container-border:not([disabled])[tiFocused],:host:not([disabled])[tiFocused]{border-color:var(--ti-common-color-line-active)}.tp-component-container-border[disabled],:host[disabled]{background-color:var(--ti-common-color-bg-disabled);border-color:var(--ti-common-color-line-disabled);cursor:not-allowed!important}::ng-deep :root{--tp-region-dominator-width:200px;--tp-region-panel-item-height:28px;--tp-region-panel-item-sup-height:16px;--tp-region-panel-item-width:148px;--tp-region-panel-left-width:70px;--tp-region-panel-small-item-width:100px;--tp-region-panel-small-left-width:35px;--tp-region-panel-small-ul-width:642px;--tp-region-panel-small-width:699px;--tp-region-panel-ul-width:632px;--tp-region-panel-width:722px}:host{width:var(--tp-region-dominator-width)}:host .tp-region-dominator-icon{color:var(--ti-common-color-icon-normal);margin-right:var(--ti-common-space-base)}:host .tp-region-placeholder{color:var(--ti-input-placeholder-color)}:host[disabled] .tp-region-dominator-icon{color:var(--ti-common-color-icon-disabled)}.tp-region-drop:focus{outline:0}.tp-region-panel-container{-ms-box-sizing:border-box;box-sizing:border-box;padding:12px 10px;width:var(--tp-region-panel-width);z-index:1060}.tp-region-panel-container .tp-region-panel-list{*zoom:1}.tp-region-panel-container .tp-region-panel-list:after{clear:both;content:\"\";display:table}.tp-region-panel-container .tp-region-panel-list:before{content:\"\";display:table}.tp-region-panel-container .tp-region-panel-list:hover .tp-region-panel-ul{background-color:var(--ti-common-color-bg-gray)}.tp-region-panel-container .tp-region-panel-list:hover .tp-region-panel-title{color:var(--ti-common-color-text-highlight)}.tp-region-panel-container .tp-region-panel-ul{-ms-box-sizing:border-box;border-left:2px solid var(--ti-common-color-line-dividing);box-sizing:border-box;float:left;padding:0 calc(var(--ti-common-space-4x) - 4px) var(--ti-common-space-4x) var(--ti-common-space-4x);width:var(--tp-region-panel-ul-width)}.tp-region-panel-container .tp-region-panel-ul-border{border-color:var(--ti-common-color-line-active)}.tp-region-panel-container .tp-region-panel-title{-ms-box-sizing:border-box;box-sizing:border-box;float:left;line-height:var(--ti-common-line-height-number);margin-top:var(--ti-common-space-4x);overflow:hidden;padding-right:10px;text-overflow:ellipsis;white-space:nowrap;width:var(--tp-region-panel-left-width)}.tp-region-panel-container .tp-region-panel-item-wrapper{display:inline-block;margin:var(--ti-common-space-4x) 2px 0 0;position:relative}.tp-region-panel-container .tp-region-panel-item{background-color:var(--ti-common-color-bg-light-normal);border-radius:var(--ti-common-border-radius-normal);box-sizing:border-box;color:var(--ti-common-color-text-primary);cursor:pointer;display:inline-block;height:var(--tp-region-panel-item-height);line-height:var(--tp-region-panel-item-height);overflow:hidden;padding:0 var(--ti-common-space-5x);text-align:center;text-overflow:ellipsis;white-space:nowrap;width:var(--tp-region-panel-item-width)}.tp-region-panel-container .tp-region-panel-item:hover{background-color:var(--ti-common-color-bg-light-emphasize)}.tp-region-panel-container .tp-region-panel-item.item-selected{background-color:var(--ti-common-color-bg-emphasize);color:var(--ti-common-color-text-white)}.tp-region-panel-container .tp-region-panel-item.item-disabled{background-color:var(--ti-common-color-bg-disabled);color:var(--ti-common-color-text-disabled);cursor:not-allowed}.tp-region-panel-container[small-item=true]{width:var(--tp-region-panel-small-width)}.tp-region-panel-container[small-item=true] .tp-region-panel-ul{width:var(--tp-region-panel-small-ul-width)}.tp-region-panel-container[small-item=true] .tp-region-panel-title{width:var(--tp-region-panel-small-left-width)}.tp-region-panel-container[small-item=true] .tp-region-panel-item{width:var(--tp-region-panel-small-item-width)}.item-sup{font-size:16px;height:var(--tp-region-panel-item-sup-height);line-height:var(--tp-region-panel-item-sup-height);position:absolute;right:0;top:calc(var(--tp-region-panel-item-sup-height)*-1/2)}"]
            },] }
];
TpRegionComponent.propDecorators = {
    items: [{ type: Input }],
    placeholderText: [{ type: Input, args: ['placeholder',] }],
    select: [{ type: Output }],
    TiDominatorCom: [{ type: ViewChild, args: [TiDominatorComponent, { static: true },] }],
    dropCom: [{ type: ViewChild, args: [TiDropComponent, { static: false },] }],
    droplistCom: [{ type: ViewChild, args: [TiDroplistComponent, { static: false },] }],
    supTemplate: [{ type: ContentChild, args: ['sup', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,