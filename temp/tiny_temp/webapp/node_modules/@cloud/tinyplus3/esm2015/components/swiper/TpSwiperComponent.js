import { Component, ContentChildren, ElementRef, EventEmitter, Input, NgZone, Output, QueryList, Renderer2, ViewChild } from '@angular/core';
import { TiBaseComponent } from '@cloud/tiny3';
import { TpSwipercardComponent } from './TpSwipercardComponent';
/**
 * swiper组件每个展示块为一个card，点击左右按钮可以实现card切换功能
 *
 * <example-url>../tinyplus3demo/#/swiper/swiper-all</example-url>
 */
export class TpSwiperComponent extends TiBaseComponent {
    constructor(elementRef, renderer2, zone) {
        super(elementRef, renderer2);
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.zone = zone;
        /**
         * 指定当前激活项
         */
        this.activeIndex = 0;
        /**
         * 10.0.2新增
         *
         * 是否自动播放
         */
        this.autoplay = false;
        /**
         * 10.0.2新增
         *
         * 自动播放时，默认的播放（翻页）速度
         */
        this.autoplaySpeed = 3000;
        /**
         * 10.1.2新增
         *
         * 每页展示卡片数量
         */
        this.showCardNum = 1;
        /**
         * 10.1.2新增
         *
         * 多图轮播卡片间距，8-12px，默认为8px（规范建议使用偶数值，即8px，10px，12px）
         */
        this.cardGap = '8px';
        /**
         * 10.1.2新增
         *
         * 指示器位置，三个属性值，‘below’容器外部，‘bottom’容器内部底部，‘none’不显示
         */
        this.indicatorPosition = 'below';
        /**
         * 10.1.2新增
         *
         * 是否无限循环
         */
        this.loop = true;
        /**
         * 当前卡片切换触发的事件
         */
        this.activeIndexChange = new EventEmitter();
        /**
        /**
         * @ignore
         * 卡片总页数
         */
        this.totalPage = 0;
        /**
         * @ignore
         * 当前页， 按照索引值从0开始
         */
        this.currentPage = 0;
        /**
         * @ignore
         * 面板指示点的集合
         */
        this.swiperBullets = [];
        // 卡片切换动画间隔，单位ms
        this.transitionSpeed = 600;
        // 卡片总数量
        this.cardNum = 0;
    }
    ngOnInit() {
        super.ngOnInit();
        // 一屏显示卡片的数目会随窗口大小而变化，所以监听窗口大小变化重新计算分页，
        this.zone.runOutsideAngular(() => {
            this.unlistenResize = this.renderer2.listen(window, 'resize', () => {
                this.setCardsWidth();
                this.setLeftPosition(this.currentPage);
            });
        });
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngAfterContentChecked() {
        super.ngAfterContentChecked();
        // 当卡片数量变化时，计算总数量
        if (this.cards.nativeElement.children.length !== this.cardNum) {
            this.setCardNum();
        }
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngAfterViewInit() {
        this.setCardsWidth();
        this.setLeftPosition(this.currentPage);
        this.renderer.setStyle(this.cards.nativeElement, 'transition', `left ${this.transitionSpeed}ms`);
        // 只有一页时，不自动轮播
        if (this.autoplay && this.autoplaySpeed && this.totalPage > 1) {
            this.autoplayId = setInterval(() => {
                this.onClickNext();
            }, this.autoplaySpeed);
        }
    }
    ngAfterViewChecked() {
        // 外层容器宽度有变化时，重新计算宽度及位置
        if (this.wrapperEle && this.wrapperEle.nativeElement.getBoundingClientRect().width !== this.pageWidth) {
            this.setCardsWidth();
            this.setLeftPosition(this.currentPage);
        }
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        const indexObj = changes['activeIndex'];
        if (indexObj && !indexObj.firstChange) {
            this.calculateCurrentPage(indexObj.currentValue);
            this.setLeftPosition(this.currentPage);
        }
    }
    ngOnDestroy() {
        if (this.autoplayId) {
            clearInterval(this.autoplayId);
            this.autoplayId = undefined;
        }
        if (this.unlistenResize) {
            this.unlistenResize();
        }
    }
    /**
     * @ignore
     * 点击左侧按钮触发事件
     */
    onClickPrev() {
        this.activeCard(this.currentPage - 1);
    }
    /**
     * @ignore
     * 点击右侧按钮触发事件
     */
    onClickNext() {
        this.activeCard(this.currentPage + 1);
    }
    /**
     * @ignore
     * 点击指示器触发事件
     */
    onClickDot(index) {
        this.activeCard(index);
    }
    /**
     * @ignore
     * 点击左右侧按钮、面板指示板触发事件
     */
    activeCard(index) {
        if (this.totalPage === 1) {
            return;
        }
        this.renderer.setStyle(this.cards.nativeElement, 'transition', `left ${this.transitionSpeed}ms`);
        if (index === this.totalPage && this.loop) {
            this.currentPage = 0;
            const first = this.swipercardComs.first.nativeElement;
            this.setPosition(first, true);
            this.setLeftPosition(this.totalPage);
            this.adjustPosition(first);
        }
        else if (index === -1 && this.loop) {
            this.currentPage = this.totalPage - 1;
            const last = this.swipercardComs.last.nativeElement;
            this.setPosition(last, false);
            this.setLeftPosition(-1);
            this.adjustPosition(last);
        }
        else {
            this.currentPage = index <= -1 ? 0 : index >= this.totalPage ? this.totalPage - 1 : index;
            this.setLeftPosition(this.currentPage);
            this.activeIndexChange.emit(this.currentPage);
        }
    }
    // 计算卡片总数及总页数
    setCardNum() {
        this.cardNum = this.cards && this.cards.nativeElement.children && this.cards.nativeElement.children.length;
        this.calculatpaging();
        this.swiperBullets.length = this.totalPage;
    }
    // 计算卡片容器总宽度
    setCardsWidth() {
        this.calculatecardWidth();
        this.renderer.setStyle(this.cards.nativeElement, 'width', `${this.totalWidth}px`);
    }
    // 当点击左右按钮时，设置激活卡片相对位置
    setLeftPosition(index) {
        if (this.totalPage === 1) {
            return;
        }
        // 最后一页未占完
        if (index === this.totalPage - 1 && this.cardNum % this.showCardNum !== 0) {
            const swiperCardNum = this.cardNum - this.showCardNum;
            this.renderer.setStyle(this.cards.nativeElement, 'left', `${-(swiperCardNum) * this.swiperCardWidth - (swiperCardNum - 1) * this.cardSpace}px`);
            this.renderer2.setStyle(this.swipercardComs.toArray()[swiperCardNum].nativeElement, 'margin-right', this.cardGap);
            return;
        }
        // 无限循环
        if (index === this.totalPage && this.loop) {
            this.renderer.setStyle(this.cards.nativeElement, 'left', `${-(this.totalWidth)}px`);
            return;
        }
        if (index === -1 && this.loop) {
            this.renderer.setStyle(this.cards.nativeElement, 'left', `${this.swiperCardWidth * this.showCardNum + (this.showCardNum - 1) * this.cardSpace}px`);
            return;
        }
        this.renderer.setStyle(this.cards.nativeElement, 'left', `${-index * 100}%`);
    }
    // 调整第一页或者最后一页的位置，为动画做准备
    setPosition(targetEle, lastToFirst) {
        this.renderer.setStyle(targetEle, 'transform', `translateX(${lastToFirst ? this.totalWidth : this.totalWidth * -1}px)`);
    }
    adjustPosition(targetEle) {
        setTimeout(() => {
            this.renderer.removeStyle(targetEle, 'transform');
            this.renderer.removeStyle(this.cards.nativeElement, 'transition');
            this.setLeftPosition(this.currentPage);
            this.activeIndexChange.emit(this.currentPage);
        }, this.transitionSpeed);
    }
    // 计算每页显示卡片数，总页数及当前页
    calculatpaging() {
        this.calculateTotalPage();
        this.calculateCurrentPage(this.activeIndex);
    }
    /**
     * 计算卡片宽度
     */
    calculatecardWidth() {
        // 初始化时，多图且左右翻页按钮还没有显示，容器元素的可用宽度需要减去左右按钮的宽度之和32+32=64
        if (this.totalPage === 0 && this.showCardNum > 1) {
            this.pageWidth = this.wrapperEle.nativeElement.getBoundingClientRect().width - 64;
        }
        else {
            this.pageWidth = this.wrapperEle.nativeElement.getBoundingClientRect().width;
        }
        // 每页卡片总间距
        this.cardSpace = this.showCardNum > 1 ? parseInt(this.cardGap, 10) : 0;
        const cardsSpace = (this.showCardNum - 1) * parseInt(this.cardGap, 10);
        this.swiperCardWidth = (this.pageWidth - cardsSpace) / this.showCardNum;
        this.totalWidth = this.swiperCardWidth * this.cardNum + cardsSpace * this.totalPage;
        this.swipercardComs.toArray().forEach((item, index) => {
            // 设置卡片宽度
            this.renderer2.setStyle(item.nativeElement, 'width', this.swiperCardWidth + 'px');
            // 设置卡片间距，每页最后一个卡片不设置
            if ((index + 1) % this.showCardNum !== 0 && index !== this.cardNum - 1) {
                this.renderer2.setStyle(item.nativeElement, 'margin-right', this.cardSpace + 'px');
            }
        });
    }
    /**
     * 计算总页数
     */
    calculateTotalPage() {
        this.totalPage = Math.ceil(this.cardNum / this.showCardNum);
        if (this.currentPage > this.totalPage) {
            this.activeCard(this.totalPage);
        }
    }
    /**
     *  计算当前页
     */
    calculateCurrentPage(index) {
        // 当前索引值不正确，不处理
        if (index < 0 || index > (this.cardNum - 1)) {
            return;
        }
        if (this.showCardNum === 1) {
            this.currentPage = index;
            return;
        }
        // 当前一页卡片的最大最小索引
        const maxIndex = (this.currentPage + 1) * this.showCardNum - 1;
        const minIndex = this.currentPage > 0 ? (this.currentPage * this.showCardNum - 1) : 0;
        // 当前索卡片是否在当前页面
        if (index < minIndex || index > maxIndex) {
            this.currentPage = Math.floor((index + 1) / this.showCardNum);
        }
    }
}
TpSwiperComponent.decorators = [
    { type: Component, args: [{
                selector: 'tp-swiper',
                template: "<div class=\"tp-swiper-container\">\r\n    <!-- \u5DE6\u4FA7\u6309\u94AE -->\r\n    <div *ngIf=\"totalPage > 1\"\r\n        tiOutline\r\n        class=\"tp-swiper-arrow tp-swiper-prev\"\r\n        [ngClass]=\"{'tp-swiper-finite-arrow': !loop && currentPage <= 0}\"\r\n        tabindex=\"0\"\r\n        (keydown.enter)=\"onClickPrev()\"\r\n        (click)=\"onClickPrev()\"\r\n        [id]=\"appendId('prev')\">\r\n        <ti-icon name=\"angle-left\"></ti-icon>\r\n    </div>\r\n\r\n    <!-- \u5361\u7247\u5BB9\u5668 -->\r\n    <div class=\"tp-swiper-wrapper\" #wrapper>\r\n        <div class=\"tp-swiper-cards-container\" #cards>\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- \u53F3\u4FA7\u6309\u94AE -->\r\n    <div *ngIf=\"totalPage > 1\"\r\n        tiOutline\r\n        class=\"tp-swiper-next tp-swiper-arrow\"\r\n        [ngClass]=\"{'tp-swiper-finite-arrow': !loop && currentPage >= totalPage - 1}\"\r\n        tabindex=\"0\"\r\n        (keydown.enter)=\"onClickNext()\"\r\n        (click)=\"onClickNext()\"\r\n        [id]=\"appendId('next')\">\r\n        <ti-icon name=\"angle-right\"></ti-icon>\r\n    </div>\r\n</div>\r\n\r\n<!-- \u9762\u677F\u6307\u793A\u70B9 -->\r\n<ul *ngIf=\"totalPage > 1 && indicatorPosition!=='none'\"\r\n    class=\"tp-swiper-pagination-bullets\" [id]=\"appendId('list')\"\r\n    [ngClass]=\"{'tp-swiper-pagination-bullets-bottom': indicatorPosition==='bottom'}\">\r\n    <li *ngFor=\"let item of swiperBullets index as i\"\r\n        class=\"tp-swiper-pagination-bullet\"\r\n        [ngClass]=\"{'tp-swiper-pagination-bullet-active': i === currentPage}\"\r\n        (click)=\"onClickDot(i)\"></li>\r\n</ul>",
                host: {
                    '[class.tp-swiper-multiple]': 'showCardNum > 1'
                },
                styles: [".ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}::ng-deep :root{--tp-swiper-bullet-border:2.5px;--tp-swiper-icon-height:calc(var(--tp-swiper-icon-width)*2);--tp-swiper-icon-width:24px;--tp-swiper-multiple-icon-width:16px;--tp-swiper-pagination-bullets-space:28px}:host{display:block;position:relative}.tp-swiper-container{-moz-align-items:center;-moz-flex-direction:row;-moz-justify-content:center;-ms-align-items:center;-ms-justify-content:center;flex-direction:row;position:relative}.tp-swiper-arrow,.tp-swiper-container{align-items:center;display:flex;justify-content:center}.tp-swiper-arrow{background:rgba(0,0,0,.2);border-radius:var(--ti-common-border-radius-normal);color:var(--ti-common-color-icon-white);cursor:pointer;flex-shrink:0;font-size:16px;height:var(--tp-swiper-icon-height);position:absolute;text-align:center;top:calc((100% - var(--tp-swiper-icon-height))/2);width:var(--tp-swiper-icon-width);z-index:1}.tp-swiper-arrow:not(.tp-swiper-finite-arrow):hover{background:rgba(0,0,0,.3)}.tp-swiper-finite-arrow{cursor:not-allowed}.tp-swiper-finite-arrow ti-icon{color:var(--ti-common-color-icon-disabled)}.tp-swiper-prev{left:0}.tp-swiper-next{right:0}:host.tp-swiper-multiple .tp-swiper-wrapper{margin:0 var(--ti-common-space-10)}:host.tp-swiper-multiple .tp-swiper-arrow{background:transparent;color:var(--ti-common-color-icon-normal);position:static}:host.tp-swiper-multiple .tp-swiper-arrow:not(.tp-swiper-finite-arrow):hover{color:var(--ti-common-color-icon-hover)}.tp-swiper-wrapper{overflow-x:hidden;position:relative;width:100%}.tp-swiper-wrapper .tp-swiper-cards-container{display:flex;position:relative}.tp-swiper-pagination-bullets{margin-top:var(--tp-swiper-pagination-bullets-space);text-align:center}.tp-swiper-pagination-bullets .tp-swiper-pagination-bullet{-ms-box-sizing:border-box;background-color:var(--ti-common-color-line-normal);border:var(--tp-swiper-bullet-border) solid var(--ti-common-color-line-normal);border-radius:var(--tp-swiper-bullet-border);box-sizing:border-box;cursor:pointer;display:inline-block;margin:0 0 0 var(--ti-common-space-6)}.tp-swiper-pagination-bullets .tp-swiper-pagination-bullet:first-child{margin:0}.tp-swiper-pagination-bullets .tp-swiper-pagination-bullet.tp-swiper-pagination-bullet-active{background-color:var(--ti-common-color-line-hover);border-color:var(--ti-common-color-line-hover);width:20px}.tp-swiper-pagination-bullets-bottom{bottom:var(--tp-swiper-pagination-bullets-space);margin-top:0;position:absolute;width:100%}.tp-swiper-pagination-bullets-right{margin-top:0;position:absolute;right:var(--tp-swiper-pagination-bullets-space);top:50%;transform:translateY(-50%);width:5px}.tp-swiper-pagination-bullets-right .tp-swiper-pagination-bullet{margin:0 0 var(--ti-common-space-6) 0}.tp-swiper-pagination-bullets-right .tp-swiper-pagination-bullet.tp-swiper-pagination-bullet-active{background-color:var(--ti-common-color-line-hover);border-color:var(--ti-common-color-line-hover);height:20px;width:5px}"]
            },] }
];
TpSwiperComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: NgZone }
];
TpSwiperComponent.propDecorators = {
    activeIndex: [{ type: Input }],
    autoplay: [{ type: Input }],
    autoplaySpeed: [{ type: Input }],
    showCardNum: [{ type: Input }],
    cardGap: [{ type: Input }],
    indicatorPosition: [{ type: Input }],
    loop: [{ type: Input }],
    activeIndexChange: [{ type: Output }],
    cards: [{ type: ViewChild, args: ['cards', { static: true },] }],
    swipercardComs: [{ type: ContentChildren, args: [TpSwipercardComponent,] }],
    wrapperEle: [{ type: ViewChild, args: ['wrapper', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,