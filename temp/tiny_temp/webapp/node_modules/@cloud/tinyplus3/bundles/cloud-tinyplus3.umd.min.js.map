{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../../@cloud/tinyplus3/components/accessdeclined/TpAccessdeclinedComponent.ts","../../../../@cloud/tinyplus3/components/accessdeclined/TpAccessdeclinedModule.ts","../../../../@cloud/tinyplus3/components/accordionlist/TpAccordionlistComponent.ts","../../../../@cloud/tinyplus3/components/accordionlist/TpAccordionlistModule.ts","../../../../@cloud/tinyplus3/components/anchor/TpAnchorComponent.ts","../../../../@cloud/tinyplus3/components/anchor/TpAnchorModule.ts","../../../../@cloud/tinyplus3/components/beingmaintained/TpBeingmaintainedComponent.ts","../../../../@cloud/tinyplus3/components/supportregionlist/TpSupportregionlistComponent.ts","../../../../@cloud/tinyplus3/components/supportregionlist/TpSupportregionlistModule.ts","../../../../@cloud/tinyplus3/components/beingmaintained/TpBeingmaintainedModule.ts","../../../../@cloud/tinyplus3/components/icon/TpIconComponent.ts","../../../../@cloud/tinyplus3/components/icon/TpIconlocalComponent.ts","../../../../@cloud/tinyplus3/components/icon/TpIconModule.ts","../../../../@cloud/tinyplus3/components/info/TpInfoComponent.ts","../../../../@cloud/tinyplus3/components/info/TpInfoModule.ts","../../../../@cloud/tinyplus3/components/beta/TpBetaComponent.ts","../../../../@cloud/tinyplus3/components/beta/TpBetaModule.ts","../../../../@cloud/tinyplus3/components/pricecalc/TpPricecalcComponent.ts","../../../../@cloud/tinyplus3/components/pricecalc/TpPricecalcModule.ts","../../../../@cloud/tinyplus3/components/buylayer/TpBuylayerComponent.ts","../../../../@cloud/tinyplus3/pipes/locale/TpDatePipe.ts","../../../../@cloud/tinyplus3/pipes/locale/TpNumberPipe.ts","../../../../@cloud/tinyplus3/pipes/locale/TpCurrencyPipe.ts","../../../../@cloud/tinyplus3/pipes/locale/TpLocaleModule.ts","../../../../@cloud/tinyplus3/cfutils/CfUtil.ts","../../../../@cloud/tinyplus3/utils/TpUtil.ts","../../../../@cloud/tinyplus3/components/buylayer/TpBuylayerLeftComponent.ts","../../../../@cloud/tinyplus3/components/buylayer/TpBuylayerRightComponent.ts","../../../../@cloud/tinyplus3/components/discounts/RatePipe.ts","../../../../@cloud/tinyplus3/components/discounts/TpDiscountsComponent.ts","../../../../@cloud/tinyplus3/components/discounts/TpDiscountsModule.ts","../../../../@cloud/tinyplus3/components/buylayer/IsMajorPrice.ts","../../../../@cloud/tinyplus3/components/buylayer/TpBuylayerModule.ts","../../../../@cloud/tinyplus3/components/card/TpCardComponent.ts","../../../../@cloud/tinyplus3/components/card/TpCardAddComponent.ts","../../../../@cloud/tinyplus3/components/card/TpCardHeaderComponent.ts","../../../../@cloud/tinyplus3/components/card/TpCardModule.ts","../../../../@cloud/tinyplus3/components/cascader/TpCascaderComponent.ts","../../../../@cloud/tinyplus3/components/cascader/TpCascaderModule.ts","../../../../@cloud/tinyplus3/components/collapsebox/TpCollapseboxComponent.ts","../../../../@cloud/tinyplus3/components/collapsebox/TpCollapseboxModule.ts","../../../../@cloud/tinyplus3/components/collapsebutton/TpCollapsebuttonComponent.ts","../../../../@cloud/tinyplus3/components/collapsebutton/TpCollapsepanelComponent.ts","../../../../@cloud/tinyplus3/components/collapsebutton/TpCollapsebuttonModule.ts","../../../../@cloud/tinyplus3/components/score/TpScoreComponent.ts","../../../../@cloud/tinyplus3/components/score/TpScoreModule.ts","../../../../@cloud/tinyplus3/components/contactsurvey/TpContactsurveyComponent.ts","../../../../@cloud/tinyplus3/components/contactsurvey/TpContactsurveyModule.ts","../../../../@cloud/tinyplus3/components/copy/TpToastComponent.ts","../../../../@cloud/tinyplus3/components/copy/TpCopyComponent.ts","../../../../@cloud/tinyplus3/components/copy/TpCopyModule.ts","../../../../@cloud/tinyplus3/components/countdown/TpCountdownComponent.ts","../../../../@cloud/tinyplus3/components/countdown/TpCountdownModule.ts","../../../../@cloud/tinyplus3/components/count/TpCountTimeComponent.ts","../../../../@cloud/tinyplus3/components/count/TpCountComponent.ts","../../../../@cloud/tinyplus3/components/count/TpCountStateComponent.ts","../../../../@cloud/tinyplus3/components/count/TpCountPatternComponent.ts","../../../../@cloud/tinyplus3/components/count/TpCountModule.ts","../../../../@cloud/tinyplus3/components/countdownalert/TpCountdownalertComponent.ts","../../../../@cloud/tinyplus3/components/countdownalert/TpCountdownalertModule.ts","../../../../@cloud/tinyplus3/components/crumb/TpCrumbComponent.ts","../../../../@cloud/tinyplus3/components/crumb/TpCrumbModule.ts","../../../../@cloud/tinyplus3/components/descandbuy/TpDescandbuyComponent.ts","../../../../@cloud/tinyplus3/components/helptip/TpHelptipComponent.ts","../../../../@cloud/tinyplus3/components/helptip/TpHelptipModule.ts","../../../../@cloud/tinyplus3/components/descandbuy/TpDescandbuyModule.ts","../../../../@cloud/tinyplus3/components/halfmodal/TpHalfmodalComponent.ts","../../../../@cloud/tinyplus3/components/halfmodal/TpHalfmodalModule.ts","../../../../@cloud/tinyplus3/components/feedback/TpFeedbackContentComponent.ts","../../../../@cloud/tinyplus3/components/feedback/TpFeedbackComponent.ts","../../../../@cloud/tinyplus3/components/feedback/TpFeedbackModule.ts","../../../../@cloud/tinyplus3/components/foldtext/TpFoldtextComponent.ts","../../../../@cloud/tinyplus3/components/foldtext/TpFoldtextModule.ts","../../../../@cloud/tinyplus3/components/frozen/TpFrozenComponent.ts","../../../../@cloud/tinyplus3/components/frozen/TpFrozenModule.ts","../../../../@cloud/tinyplus3/components/frozenpage/TpFrozenpageComponent.ts","../../../../@cloud/tinyplus3/components/frozenpage/TpFrozenpageModule.ts","../../../../@cloud/tinyplus3/components/grid/TpGridComponent.ts","../../../../@cloud/tinyplus3/components/grid/TpGridModule.ts","../../../../@cloud/tinyplus3/components/guides/TpGuidesComponent.ts","../../../../@cloud/tinyplus3/components/guides/TpGuideComponent.ts","../../../../@cloud/tinyplus3/components/guides/TpGuideHeaderComponent.ts","../../../../@cloud/tinyplus3/components/guides/TpGuideContentComponent.ts","../../../../@cloud/tinyplus3/components/guides/TpGuideBodyComponent.ts","../../../../@cloud/tinyplus3/components/guides/TpGuidesModule.ts","../../../../@cloud/tinyplus3/components/guidesteps/TpGuidestepsComponent.ts","../../../../@cloud/tinyplus3/components/guidesteps/TpGuidestepComponent.ts","../../../../@cloud/tinyplus3/components/guidesteps/TpGuidestepHeaderComponent.ts","../../../../@cloud/tinyplus3/components/guidesteps/TpGuidestepContentComponent.ts","../../../../@cloud/tinyplus3/components/guidesteps/TpGuidestepsModule.ts","../../../../@cloud/tinyplus3/components/iconaction/TpIconactionComponent.ts","../../../../@cloud/tinyplus3/components/iconaction/TpIconactionModule.ts","../../../../@cloud/tinyplus3/components/labeleditor/TpLabeleditorComponent.ts","../../../../@cloud/tinyplus3/components/labeleditor/TpLabeleditorModule.ts","../../../../@cloud/tinyplus3/components/layout/TpLayoutHeaderComponent.ts","../../../../@cloud/tinyplus3/components/layout/TpLayoutContentComponent.ts","../../../../@cloud/tinyplus3/components/layout/TpLayoutSectionComponent.ts","../../../../@cloud/tinyplus3/components/layout/TpLayoutContentBodyComponent.ts","../../../../@cloud/tinyplus3/components/layout/TpLayoutContentHeaderComponent.ts","../../../../@cloud/tinyplus3/components/layout/TpLayoutColumnComponent.ts","../../../../@cloud/tinyplus3/components/layout/TpLayoutModule.ts","../../../../@cloud/tinyplus3/components/leftmenu/TpLeftmenuComponent.ts","../../../../@cloud/tinyplus3/components/leftmenu/TpLeftmenuModule.ts","../../../../@cloud/tinyplus3/components/leftmenuthin/TpLeftmenuthinComponent.ts","../../../../@cloud/tinyplus3/components/leftmenuthin/TpLeftmenuthinModule.ts","../../../../@cloud/tinyplus3/components/linkbutton/TpLinkbuttonComponent.ts","../../../../@cloud/tinyplus3/components/linkbutton/TpLinkbuttonModule.ts","../../../../@cloud/tinyplus3/components/linklist/TpLinklistComponent.ts","../../../../@cloud/tinyplus3/components/linklist/TpLinklistModule.ts","../../../../@cloud/tinyplus3/components/modalbody/TpModalBodyComponent.ts","../../../../@cloud/tinyplus3/components/modalbody/TpModalBodyModule.ts","../../../../@cloud/tinyplus3/components/nonsupportregion/TpNonsupportregionComponent.ts","../../../../@cloud/tinyplus3/components/nonsupportregion/TpNonsupportregionModule.ts","../../../../@cloud/tinyplus3/components/priceline/TpPricelineComponent.ts","../../../../@cloud/tinyplus3/components/priceline/TpPricelineModule.ts","../../../../@cloud/tinyplus3/components/productpreview/TpProductpreviewComponent.ts","../../../../@cloud/tinyplus3/components/productpreview/TpProductpreviewModule.ts","../../../../@cloud/tinyplus3/components/progressbar/TpProgressbarComponent.ts","../../../../@cloud/tinyplus3/components/progressbar/TpProgressbarModule.ts","../../../../@cloud/tinyplus3/components/purchaselist/TpPurchaselistComponent.ts","../../../../@cloud/tinyplus3/components/purchaselist/TpPurchaseitemComponent.ts","../../../../@cloud/tinyplus3/components/purchaselist/TpPurchaseNodataComponent.ts","../../../../@cloud/tinyplus3/components/purchaselist/TpPurchaselistModule.ts","../../../../@cloud/tinyplus3/components/recommend/TpRecommendComponent.ts","../../../../@cloud/tinyplus3/components/smartalert/TpSmartalertComponent.ts","../../../../@cloud/tinyplus3/components/smartalert/TpSmartalertModule.ts","../../../../@cloud/tinyplus3/components/recommend/TpRecommendModule.ts","../../../../@cloud/tinyplus3/components/region/TpRegionComponent.ts","../../../../@cloud/tinyplus3/components/region/TpRegionUtil.ts","../../../../@cloud/tinyplus3/components/region/TpRegionModule.ts","../../../../@cloud/tinyplus3/components/regionselect/TpRegionselectComponent.ts","../../../../@cloud/tinyplus3/components/regionselect/TpRegionselectModule.ts","../../../../@cloud/tinyplus3/components/rename/TpRenameModalContainerComponent.ts","../../../../@cloud/tinyplus3/components/rename/TpRenameModalComponent.ts","../../../../@cloud/tinyplus3/components/rename/TpRenameComponent.ts","../../../../@cloud/tinyplus3/components/rename/TpRenameModule.ts","../../../../@cloud/tinyplus3/components/resources/TpResourcesComponent.ts","../../../../@cloud/tinyplus3/components/resources/TpResourceItemComponent.ts","../../../../@cloud/tinyplus3/components/resources/TpResourcesModule.ts","../../../../@cloud/tinyplus3/services/goandback/TpGoandbackComponent.ts","../../../../@cloud/tinyplus3/services/goandback/TpGoandbackModule.ts","../../../../@cloud/tinyplus3/services/goandback/TpGoandbackService.ts","../../../../@cloud/tinyplus3/components/restrict/TpRestrictComponent.ts","../../../../@cloud/tinyplus3/components/restrict/TpRestrictModule.ts","../../../../@cloud/tinyplus3/components/searchbox/TpSearchboxComponent.ts","../../../../@cloud/tinyplus3/components/searchbox/TpSearchboxHelpComponent.ts","../../../../@cloud/tinyplus3/components/searchbox/TpSearchboxModule.ts","../../../../@cloud/tinyplus3/components/selectgroup/TpSelectgroupComponent.ts","../../../../@cloud/tinyplus3/components/selectgroup/TpSelectitemComponent.ts","../../../../@cloud/tinyplus3/components/selectgroup/TpSelectgroupModule.ts","../../../../@cloud/tinyplus3/components/selectsearchbox/TpSelectsearchboxComponent.ts","../../../../@cloud/tinyplus3/components/selectsearchbox/TpSelectsearchboxModule.ts","../../../../@cloud/tinyplus3/components/slidecards/TpSlidecardsComponent.ts","../../../../@cloud/tinyplus3/components/slidecards/TpSlidecardsModule.ts","../../../../@cloud/tinyplus3/components/stepguide/TpStepguideComponent.ts","../../../../@cloud/tinyplus3/components/stepguide/TpStepguideModule.ts","../../../../@cloud/tinyplus3/components/subtitle/TpSubtitleComponent.ts","../../../../@cloud/tinyplus3/components/subtitle/TpSubtitleModule.ts","../../../../@cloud/tinyplus3/components/swiper/TpSwipercardComponent.ts","../../../../@cloud/tinyplus3/components/swiper/TpSwiperComponent.ts","../../../../@cloud/tinyplus3/components/swiper/TpSwiperModule.ts","../../../../@cloud/tinyplus3/services/binding/TpBindingModule.ts","../../../../@cloud/tinyplus3/services/binding/TpBindingService.ts","../../../../@cloud/tinyplus3/services/identification/TpIdentificationModule.ts","../../../../@cloud/tinyplus3/services/identification/TpIdentificationService.ts","../../../../@cloud/tinyplus3/services/identityauth/TpIdentityauthmodalComponent.ts","../../../../@cloud/tinyplus3/services/identityauth/TpIdentityauthModule.ts","../../../../@cloud/tinyplus3/services/identityauth/TpIdentityauthService.ts","../../../../@cloud/tinyplus3/services/recharge/TpRechargeModule.ts","../../../../@cloud/tinyplus3/services/recharge/TpRechargeService.ts","../../../../@cloud/tinyplus3/directives/storage/TpStorageColumnsDirective.ts","../../../../@cloud/tinyplus3/directives/storage/TpStorageColumnsModule.ts","../../../../@cloud/tinyplus3/components/timeline/TpTimelineComponent.ts","../../../../@cloud/tinyplus3/components/timeline/TpTimelineModule.ts","../../../../@cloud/tinyplus3/components/tagsearch/TpTagsearchComponent.ts","../../../../@cloud/tinyplus3/components/tagsearch/TpTagsearchModule.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__values","o","s","m","i","__read","r","ar","error","__spread","arguments","concat","TpAccessdeclinedComponent","_super","TiBaseComponent","Component","args","selector","template","NgModule","imports","TiLocaleModule","exports","declarations","TpAccordionlistComponent","_this","closeOthers","options","headClick","$event","option","index","actionmenuContainer","contains","target","currentAccordionItem","accordionItemComps","toArray","open","onActionmenuSelect","item","actionmenu","select","getActionmenuItems","items","map","disabled","Input","ContentChild","static","ViewChildren","TiAccordionItemComponent","CommonModule","TiAccordionModule","TiActionmenuModule","TpAnchorComponent","element","renderer2","zone","offsetTop","speed","EventEmitter","anchorIdChange","hasGoanchor","hasAnimation","ngOnChanges","changes","anchorIdObj","itemsObj","currentValue","isFirstChange","anchorId","currentId","ngOnInit","runOutsideAngular","unlistenScroll","listen","window","onWindowScroll","ngAfterViewChecked","goToAnchor","id","ngOnDestroy","isInnerScrolling","scrollTop","document","documentElement","pageYOffset","itemLength","anchorEle","getElementById","this_1","clientY","id_1","run","emit","onClick","targetEle","scollPosition","scrollAnimation","setTimeout","scrollToView","currentY","targetY","direction","distance","Math","abs","stepDist","positionY_1","timer_1","setInterval","clearInterval","undefined","scrollTo","getCurrentAnchor","_b","_c","host","[class.tp-anchor-container]","ElementRef","Renderer2","NgZone","Output","TpBeingmaintainedComponent","elementRef","changeDetector","tpBeingmaintained","TiLocale","getLocaleWords","setRegionsData","regionsDataSub","unsubscribe","cfRegionSubject","subscribe","region","displayName","Util","formatEntry","getMaintainData","maintainData","isEmptyString","time","maintainTime","describe","maintainRegions","detectChanges","AccountService","queryCustomMaintenances","data","startTime","endTime","ChangeDetectorRef","ViewChild","TpSupportregionlistComponent","selectedRegionEvent","createEvent","initEvent","detail","dispatchEvent","onClickIcon","event","showProjectsList","TpSupportregionlistModule","TpIconComponent","hostRef","renderer","http","setPath","path","nameChange","url_1","ob","urlObservableMap","get","responseType","pipe","share","set","svgText","nativeElement","innerHTML","delete","Map","[class.tp-cloud-action-state-ing]","HttpClient","TpIconlocalComponent","removeClass","previousValue","addClass","encapsulation","ViewEncapsulation","None","TpInfoComponent","infoType","config","restricted","cls","content","tpInfo","unverified","typeConfig","TpIconModule","TpBetaComponent","moreUrl","intro","message","verified","applyUrl","onClickFn","preventDefault","TiButtonModule","TpInfoModule","TpPricecalcComponent","domSanitizer","tpPricecalc","url","beforeClick","detailHrefBeforeText","detailHrefText","detailHrefAfterText","TiBrowser","isIE","blankTab","getUniqueId","newWindow","sanitize","SecurityContext","URL","opener","form","submit","isNotDefaultUrl","values","DomSanitizer","TpBuylayerComponent","ngZone","discountsChange","ngAfterViewInit","buylayerContentEle","offsetHeight","setStyle","unlistenWindowScroll","scrollLeft","change","[class.tp-buylayer-container]","TpDatePipe","transform","format","formatDate","tiLocaleDate","EN_US","Pipe","name","pure","TpNumberPipe","myoptions","getOptions","assign","minimumIntegerDigits","substring","indexOf","minimumFractionDigits","maximumFractionDigits","Intl","NumberFormat","tiLocaleKey","tpLocaleNumber","TpCurrencyPipe","type","res","replace","currency","includes","endsWith","tpLocaleCurrency","CfUtil","getUser","isAngularJSConsole","getFromAngularJSConsole","UserData","getCfUser","_a","getLinks","LinksData","getEndpoints","EndpointsData","getCfEndpoints","getHttpService","HttpService","getMessage","Message","getMask","Mask","getStorageService","StorageService","formatLocaleDateTime","datetime","localeService","isNonsupportRegion","rootScope","getAppWebPath","appWebPath","AppWebPath","angular","inject","html","injector","TpUtil","setAttrs","attrs","key","setAttribute","isObject","isArray","extend","source","output","keys","forEach","addUrlParams","params","isString","isUndefined","finalUrl","param","encodeURIComponent","addDefaultParam","defaultParam","service","location","href","finalParams","getCookie","cookie","splitedCookie","split","splitedCookie_1","splitedCookie_1_1","temp","trim","setCookie","TpBuylayerLeftComponent","costs","freechargeDetailLink","pricelistHead","tpBuylayer","buyLayer_cost_pricelist","hasNumberofMajorprice","routeLink","buyLayer_freeCharge_detailLink","costsChange","discountChange","numFormat","majorDiscoutsConfig","linksData","links","user_center_common","addLinkParams","ngDoCheck","currentMajorCosts","filter","hide","majorPrice","currentMinorCosts","hideConnectSymbol","setMajorPrice","finalCosts","majorPriceNum","getMajorPriceNum","isCostsAllHide","isRefund","setRefundParams","onlyHasMajorprice","hasDiscountsData","hasSelectableDiscounts","selectableDiscounts","hasSelectedDiscounts","selectedDiscounts","discounts","showMajorDiscount","minorpriceNum","minorDiscoutsConfig","showMinorDiscount","num","cost","isNumber","majorPriceArr","minorPriceArr","isMinorPriceAllHide","isAllHide","isMajorPriceAllHide","arr","arr_1","arr_1_1","buyLayer_cost_label","tipTitle","buyLayer_cost_label_refund_majorprice","buyLayer_cost_label_refund_detail","pricelist","title","buyLayer_cost_pricelist_label_before","buyLayer_cost_pricelist_label_after","buyLayer_cost_label_refund","priceNum","buyLayer_cost_type","val","isPositiveNumber","getLocalSymble","localeKey","getLocaleCurrencySymbol","storage","cookieStorage","isFunction","getItem","agencyID","locale","TemplateRef","buttons","[class.tp-buylayer-right]","RatePipe","rate","NotEqualTo0Pipe","NotEqualTo01Pipe","TpDiscountsComponent","render","localeWords","tpDiscounts","isChinese","isOpen","discoutsConfig","handleDiscounts","setTotalSavings","setSelectableData","onlistenClick","onDocumentClick","tipModalIconWidth","fontEle","offsetWidth","tipModalIconLeft","getBoundingClientRect","left","tipModalIconRight","innerWidth","tipContainerWidth","containerEle","offset","marginLeft","beforeEle","onRadioChange","onClose","stopPropagation","onContainerClick","getOndemandDiscounts","out","cur","findIndex","ele","expireTime","Date","getTime","getData","val1","val2","setDetailLink","detailLink","discounts_detailLink_type0","discounts_detailLink_type1","discounts_detailLink_type2","beId","getLink","showExpireTime","nowTime","gap","getFormatExpireTime","ondemandDiscounts","discountRate","parseFloat","toFixed","resourceName","specification","ondemandDiscountsConfig","getSelectableDetail","vals","vals_1","vals_1_1","sum","selectedId","selectedDiscountsNum","isSumEqualZero","reg","RegExp","precision","Number","no_discounts","(click)","FormsModule","TpLocaleModule","TiRadioModule","TiOutlineModule","IsMajorPricePipe","IsMinorPricePipe","TpDiscountsModule","TiTipModule","TpPricecalcModule","TpBuylayerRightComponent","TpCardComponent","active","[class.tp-card-disabled]","[class.tp-card-active]","[attr.tabindex]","TpCardAddComponent","add","[class.tp-card-add-disabled]","TpCardHeaderComponent","TpCascaderComponent","clearable","labelKey","panelWidth","panelHeight","onlySelectLeaf","showAllLevel","clear","separator","listModel","itemsArr","itemForWideDroplist","valueFn","valueKey","panelWidthNum","parseInt","ngOnModelChange","modelWhole","joinDominatorModel","dropCom","isShow","wideDroplist","close","dropshow","show","listComsArr","list","model","children","showList","scrollToSelected","focus","listComs","setFocusableElems","dominatorCom","getFocusableElems","onBlur","onSelect","panelIndex","splice","handleModel","onClear","onMouseleave","hoverOption","dominatorModel","writeValue","_modelWhole","nextModelWhole","nextModelWhole1","defineProperty","TiFormComponent","providers","getValueAccessor","(blur)","[class.tp-cascader-dominator]","TiDominatorComponent","TiDropComponent","TiDominatorModule","TiDropModule","TiListModule","TiDroplistModule","TpCollapseboxComponent","collapsed","closeable","onClickClose","observers","TiCollapseModule","TpCollapsebuttonComponent","searchCount","collapsedChange","onClickToggle","[class.tp-collapsebutton-uncollapsed]","TpCollapsepanelComponent","TpScoreComponent","scoreArray","minText","tpScore","maxText","TpContactsurveyComponent","showContactsurvey","submitDisabled","tpContactsurvey","displayData","submitAnswer","devConfig","backend","surveyId","prodConfig","userId","hostname","user","root","camel","msgService","showSuccess","domainId","survey_id","user_id","service_id","serviceId","contact_id","contactId","response","submitDate","parse","milliSeconds","isNaN","MILLISECONDS_PER_MONTH","questionId","require","contactSurvey_question1_title","contactName","contactSurvey_question2_title","closedList","onClickSubmit","post","sendData","w3account","answers","contactSurvey_submit_success","changeScore","score","initAnswerArrray","answer","subRemark","subQuestionId","subName","reason","class","TiTextareaModule","TpScoreModule","TiIconModule","TpCopyComponent","Renderer","tiPopup","clickObserve","Subject","hideToast","deleteToast","hostSpace","createClickObserve","createHideToastObserve","createDeleteToastObserve","clickSub","throttleTime","textarea","createElement","appendChild","setProperty","execCommand","removeChild","showToast","hideToastSub","delay","toastRef","deleteToastSub","toast","TpToastComponent","successTip","tpCopy","container","TiPosition","setPosition","hostEle","fixMaxHeight","determinPositionFn","layout","avilableLayout","right","targetLayout","width","TiPopupService","TiPopupModule","entryComponents","TpCountdownComponent","showStatus","countdownText","tipContext","tipMaxWidth","generateContent","generateTipContent","timespan","countDownInfos","nextOperationRemainingDay","tpCountdown","day","nextOperationRemainingSecond","second","nextOperationRemainingHour","hour","nextOperationRemainingMinute","minute","statusKey","countDownCode","slice","countDownTips","effTime","spliter","status","classList","isDayLess7","create_time","expire_time","expTime","frozen_time","graceTime","frozenTime","release_time","releaseTime","toonneed_time","arrears_time","req","TpCountTimeComponent","pattern","showTip","firstChange","updateStateLevel","tpCount","createTime","stateLevel","[class.tp-count-time-only]","TpCountComponent","tipService","addTip","tipInstance","destroy","showState","stateTimeRef","trigger","maxWidth","showFn","tipContentTemplate","TiTipService","TpCountStateComponent","state","updateState","using","overdue","frozened","illegalFrozened","arrear","[class.tp-count-alarm]","[class.tp-count-warn]","TpCountPatternComponent","updateText","text","periodCharging","ondemandCharging","TiOverflowModule","TpCountdownalertComponent","typeIcon","closeIcon","triggerScroll","innerLabel","tpCountdownalert","infos","getTimespan","String","resource","showBuyLink","linkText","renew","recharge","linkHref","protocol","contact_customer_service","phoneNumber","TiAlertModule","TpCrumbComponent","RouterModule","TpDescandbuyComponent","onButtonClick","button","click","onPricecalcClick","pricecalc","TpHelptipComponent","TpHelptipModule","TpHalfmodalComponent","backdrop","clientRectTop","beforeHide","isWantShow","focusableElementsString","findClosest","parentNodeName","nodeName","isNull","parentNode","backdropEle","unListenDocumentKeydown","which","TiKeymap","KEY_TAB","clickTab","unlistenClick","clientWidth","clientX","clientHeight","wantHide","introModal","querySelector","focusableElements","querySelectorAll","focusInDialogOnTabchange","hideBackdrop","[style.width]","[style.top]","[style.right]","[hidden]","TpFeedbackContentComponent","fb","showheader","vaildrules","getCheckedNumber","itemArray","checkedNum","itemArray_1","itemArray_1_1","checked","checkQuestion","questionArray","answerArray","resultArray","hasfinshed","showQuestions","customQuestion","console","log","tpFeedback","serviceName","startDesc","title_desc","questions","question1_title","question1_title_desc","question1_title_unSati","hasOtherReason","remark","question_unSati_options1","question_unSati_options2","question_unSati_options3","question_unSati_options4","question_unSati_options5","question_unSati_options6","question_unSati_options7","question_unSati_options8","question1_title_sati","question_sati_options1","question_sati_options2","question_sati_options3","question_sati_options4","question_sati_options5","question_sati_options6","question_sati_options7","question_sati_options8","questionLast_title","allQuestion","customQuestionCopy","keys_1","keys_1_1","showOtherReason","FormControl","group","onChangeScore","firstIndex_1","secondIndex_1","oldFirstShow","oldSecondShow","controls","markAsPristine","setControl","TiValidators","required","maxLength","onClickItem","onChangeCheckbox","question","questionIndex","getIndexByQuestionId","submitQuestion","validation","checkLimit","updateOtherReason","updateTextarea","textareaValue","onSubmit","removeControl","errors","check","isRequiredComplete","join","submit_success","resultArray_1","resultArray_1_1","FormBuilder","TpFeedbackComponent","CONST_ANT","showFeedBack","openModalAlert","useId","alertLinkText","open_halfModal","closeModalAlert","serverlist","halfmodalCom","ReactiveFormsModule","TiCheckboxModule","TiTextModule","TiValidationModule","TpHalfmodalModule","TpFoldtextComponent","texts","line","showMore","tpFoldtext","showLess","folded","lineHeight","getComputedStyle","getPropertyValue","height","TpFrozenComponent","alertType","getMsgContent","msgType","frozenInfos","frozenInfo","statusMsg","statusMsgs","JSON","warn","msg","find","msgContent","getUserInfo","queryFrozenInfo","customerId","Error","queryFrozen","tipContent","buttonElem","unfrozen","targets","_i","TiTipServiceModule","TpFrozenpageComponent","backServiceList","backService","tpFrozenpage","back_service","TpGridComponent","TpGuidesComponent","activeIndex","TpGuideComponent","guidesComp","cardIndex","hasBody","ngAfterContentInit","setCardIndex","cardNum","isUndo","isActive","isDone","hasSpace","[class.tp-guide-card-container]","[class.tp-guide-card-undo]","[class.tp-guide-card-active]","[class.tp-guide-card-done]","TpGuideBodyComponent","tiRenderer","guideComp","insertAfter","showActiveBody","TiRenderer","TpGuideHeaderComponent","TpGuideContentComponent","TpGuidestepsComponent","TpGuidestepComponent","isComplete","TpGuidestepHeaderComponent","guidestepComp","[class.tp-guidestep-dot-complete]","TpGuidestepContentComponent","TpIconactionComponent","iconName","aRef","oncontextmenu","TpLabeleditorComponent","changeDetectorRef","autoTip","resize","editor","confirm","cancel","isEditing","emptyValue","valueInvalid","control","validationRules","tipPosition","subscription","statusChanges","setValue","maxlength","onClickEdit","oldValue","multiline","textareaComp","removeAttribute","textComp","onClickConfirm","onClickCancel","[class.tp-layout-header]","[class.tp-layout-content]","[class.tp-layout-section]","TpLayoutContentComponent","TpLayoutContentBodyComponent","TpLayoutHeaderComponent","TpLayoutSectionComponent","TpLayoutContentHeaderComponent","TpLayoutColumnComponent","TpLeftmenuComponent","activeChange","getHeaderTextClass","CHINESE_REG","test","onActiveChange","triggerClick","TiLeftmenuModule","TpLeftmenuthinComponent","router","activeRoute","reloadState","reloadStateChange","resolvedPromise","isUrlChange","urlActiveItem","getActiveItemByUrl","link","navigationSubscription","events","evt","NavigationEnd","newActiveItem","activeObj","navigate","selectFn","oldactive","newactive","triggerReload","getNavigationExtras","routerExtras","relativeTo","resultItem","isActived","relativeRoute","getRelativeRoute","isMatchCurrentUrl","routerList","itemUrlTree","createUrlTree","Router","ActivatedRoute","TpLinkbuttonComponent","TpLinklistComponent","TpModalBodyComponent","TiModalBodyComponent","[class.ti3-modal-body]","TpNonsupportregionComponent","regionData","setViewInfo","regionsObj","tpNonsupportregion","supportRegions","TpPricelineComponent","deselectable","initCanvas","canvasOption","draw","timer","buttonGroupCom","previousItems","changeDraw","onNgModelChange","currentItems","newItem","price","lineColor","color","activeColor","startColor","endColor","supportsCssVars","cSSStyleDeclaration","canvasRef","cSSStyleDeclaration2","canvasWrapRef","carveHeight","lineWidth","tpPriceline","carveTitle","titleX","titleY","fontSize","fontFamily","tagOffset","tagUnit","tagPrefix","tagCurrency","color2rgba","wrapStyles","canvasWidth","ctx","getContext","hex","alpha","clearRect","rects","x","lastX","maxPrice","lastButton","drawText","len","record","getCurrentHeight","rect","drawRect","drawLine","curPrice","currrentIndex","isEnd","rectOption","fillStyle","font","alignRight","textMetrics","measureText","fillText","lineJoin","strokeStyle","beginPath","moveTo","round","lineTo","stroke","canvasGradient","createLinearGradient","addColorStop","fillRect","TiButtongroupComponent","TiButtongroupModule","TpProductpreviewComponent","tiModal","hostEleRef","files","thumbList","currentPreviewIndex","currentThumbPage","totalThumbPage","productThumbEle","initThumb","setThumbList","ceil","ITEM_PER_PAGE","onMouseenterThumb","thumbItemNumber","thumbItemEles","thumbItemEles_1","thumbItemEles_1_1","parentElement","onClickMain","TiImagepreviewComponent","modalClass","context","fileList","prev","TiModalService","TiImagepreviewModule","TiModalModule","TiZoomModule","TpProgressbarComponent","labelType","updateLabel","updateWarnLevel","alarm","warnLevel","max","TiProgressbarModule","TpPurchaselistComponent","enableClear","totalPrice","discountPrice","buttonDisabled","total","emptyText","onCheckboxNgModelChange","clickFn","clearFn","TpPurchaseitemComponent","hasArea","closeFn","TpPurchaseNodataComponent","TpRecommendComponent","getNum","tpRecommend","TpSmartalertComponent","size","border","TpSmartalertModule","TpRegionComponent","dafaultDisableReason","tpRegion","unSupport","isSmallItem","tpRegionSmallItem","isUseDroplist","tpRegionSelectStyle","loopItemsFindSelectedItem","TiDominatorCom","selectedItem","onMousedown","togglePanel","droplistCom","some","regions","findSelectedItem","special","TiDroplistComponent","TpRegionUtil","getRegionList","regionArr","processCTCData","processHWSData","itemKey","targetKey","flag","targetKey_1","e_2","targetKey_1_1","findLastIndex","originalArr","reservedArr","reverse","isAlliance","isSelfDevelop","geoCategory","geoArea","itemObj","isNonsupportRegionFn","nonsupportRegions","regionId","regionArr_1","regionArr_1_1","shortName","charCodeAt","pushRegion","ascription","project","regionObj","TpRegionselectComponent","noDataText","searchable","isNotLastOne","classificationLevel","currentClassificationsLength","cfRegionSelectSeparativeSign","oldSearchable","initSelectedData","classifications","tpRegionselect","regionSelect_province_label","regionSelect_city_label","regionSelect_county_label","hasadjustWidth","regionselectOption","getBtnItems","changePlaceholder","changeBtnRight","changeSelectedData","onMousedownFn","hideWithoutFocus","btns","width_1","getExtraWidth","btn","oriWidth","onSelectFn","selectedRegion","btnItems","selectedText","btnItem","btnSelected","originId","handleOriginSuggestions","changeDropdownSuggestions","originSuggestions","noDataDisable","btnChangeFn","selectedTextArr","level","classification","regionIdArr","getRegionIdArr","regionIdArr_1","regionIdArr_1_1","getSelectedOption","hasFoundId","nextLevel","isSpecialZone","unshift","selectedBtn","currentmodel","dropdownSuggestions","currentData","dropdown","sort","a","item1","showText","wrapperWidth","wrapperEle","buttonsWidth","buttongroupEle","TiDropsearchComponent","TiDropsearchModule","TpRenameModalComponent","okLabel","tpRename","okButton","cancelLabel","tiCommon","cancelBtn","errorMessage","regExp","inValidMessage","dismiss","input","setSelectionRange","TpRenameComponent","isNew","iconTipPosition","iconTitle","tip","showValue","beforeClose","DeterminePosition","bottom","findClosestTD","defaultModalHeader","modalHeader","iconTip","renameModal","TpRenameModalContainerComponent","TpRenameModalComponentRef","customModal","contentContext","destroyRenameModal","modal","td","hostEleX","hOffset","addDocumentClickEvent","unlistenDocumentClick","tpRenameModalHostElement","TiTableModule","TpResourcesComponent","errorSelect","onErrorSelect","TpResourceItemComponent","getErrorNumber","errorMax","baseValue","onClickError","TpCardModule","TiMessageModule","TpGoandbackComponent","TpGoandbackService","tiMessage","firstMessageType","words","firstMessage","configObj","configId","contentHref","firstMessageContentLabel","firstMessageContentHref","instances","firstMessageTitle","firstMessageContent","firstMessageOkButtonText","autofocus","handleUrl","goToUrl","secondMessageTitle","secondMessage","cancelButton","messageRef","promptId","secondMessageFail","secondMessageOkButtonText","confirmFn","openAlertFn","instance","definedUrl","win","Injectable","providedIn","TpGoandbackModule","TiMessageService","TpRestrictComponent","tpGoandbackService","alertContent","openAlert","openMessage","messageOption","getMessageInfo","matchedString","regExeRes","exec","lastIndex","attrsStr","regExeRes2","TpSearchboxComponent","defaultField","emptyPlaceholder","showHelp","showSettings","maxLine","panelMaxHeight","propPanelWidth","valuePanelWidth","tagMaxWidth","help","search","beforeOpen","inputValueChange","defaultFieldChange","tagSeperator","inputPlaceholder","tpSearchbox","addPlaceholder","propDropOptions","valueDropOptions","inputValue","helpTipContent","clearTipContent","clearAll","settingTipContent","switchText","valueDropSelecteds","settingDropOptions","dominatorSpace","oldDefaultField","dominatorPlaceholder","alwaysFocusableElems","rangeLine","rangeLarge","rangeLess","init","setPlaceholder","initSettingDropOptions","settingsDropDominatorElem","settingsCom","valueDropDominator","searchInputRf","rightIconsRef","onSettingDropSelect","field","settingsDropCom","onDominatorModelChange","onClickInput","setValueDropSearchResult","getValueDropOptions","showValueDrop","propDropSearch","searchResult","searchOptions","propDropCom","onKeydownInput","keyCode","KEY_BACKSPACE","responseBackspace","KEY_ENTER","responseEnter","onInputValueChange","dealRadioItemSearch","matchCheckboxInput","onBlurInput","valueDropCom","valueMultiDropCom","onFocusInput","hideAllDrops","onDelete","onClickClear","onClickSearch","generateTagByInputValue","getFilter","onClickHelp","onClickSetting","hasLabeltag","onMousedownTagValue","onClickTagValue","tag","tagEditable","editingTag","hideValueDrops","setValueDropSelecteds","onFocusTagValue","elem","selectHTMLElementText","onBlurTagValue","onKeydownTagInput","tagValue","textContent","isTagExist","generateTag","emitChange","onTagInput","onPorpDropSelect","generateTagByPropDrop","placeholder","clearPropDropSelected","setCustomValueDropSearchResult","getSelectedItem","onValueDropSelect","selected","generateTagByValuePanel","clearState","mapItemSelect","onClickValueDropOK","onClickValueDropCancel","onClickCustomDropOK","generateNumRangetag","generateDateRangeTag","onClickCustomDropCancel","hideCustomDrop","customDropWidth","initItems","initPropDropOptions","allValues","allValues_1","currentOption","emptyValue_1","start_1","start","rangeValue","min","lessMax","end_1","end","moreMin","formControls","FormGroup","VALID","INVALID","updateValueAndValidity","onlySelf","emitEvent","startDate","isValidDate","endDate","startMax","endMin","valueChanges","date","toString","parent","minValue","actualValue","tiErrorMessage","rangeMinErr","rangeMaxErr","childOption","settingsDropSelected","valueArray","span","tagKey","modelChanged","matchedItem","regexp","defaultItem","propDropSelected","selectedOption","customDropCom","setNumRangeDropFocusableElems","setDateRangeDropFocusableElems","keyword","keywordUpper","toLocaleUpperCase","field_1","value_1","newTag","selectedTag","valueDropSelected","unit","tagIndex","afterGenerateTag","formatDate2String","toISOString","curTag","inputs","inputElemsArray","getButtons","elemsNodeList","dateRangeStartCom","dateRangeEndCom","markForCheck","TiLocaleFormat","reduce","acc","optionValueKey","addOtherOptionKey","updateModel","editingTagIndex","fieldTagIndex","range","createRange","selectNodeContents","selection","getSelection","removeAllRanges","addRange","TpSearchboxHelpComponent","running","creating","stopped","restarting","tags1","tags2","tags3","helpModalTemplateRef","TiDateModule","TpSelectgroupComponent","TpSelectitemComponent","selectgroup","checkPosition","multiple","isChecked","[class.tp-selectitem-box]","[class.tp-selectitem-disabled]","[class.tp-selectitem-checked]","[class.tp-selectitem-template]","[class.tp-selectsearchbox-container]","TpSelectsearchboxComponent","TpSlidecardsComponent","currentIndex","pageChange","currentPage","cardSpan","pageList","pageSize","totalPage","totalCard","unlistenResize","canCalculatePaging","calculatePaging","showCurrentCard","listObserver","MutationObserver","mutationRecords","observe","listEleRef","childList","attributes","attributeFilter","currentIndexChange","disconnect","listWrapperEleRef","cardComRefs","calculatePageSize","calculateTotalPage","generatePagesArray","goPage","containerWidth","cardWidth","first","cardStyle","marginRight","floor","pageNum","goPrev","goNext","maxIndex","targetPage","ContentChildren","descendants","TpStepguideComponent","TpSubtitleComponent","selectedChange","back","selectComRef","onSelectedOptionChange","[style.max-width]","TiSelectComponent","TiSelectModule","TpSwipercardComponent","TpSwiperComponent","autoplay","autoplaySpeed","showCardNum","cardGap","indicatorPosition","loop","activeIndexChange","swiperBullets","transitionSpeed","setCardsWidth","setLeftPosition","ngAfterContentChecked","cards","setCardNum","autoplayId","onClickNext","pageWidth","indexObj","calculateCurrentPage","onClickPrev","activeCard","onClickDot","swipercardComs","adjustPosition","last","calculatpaging","calculatecardWidth","totalWidth","swiperCardNum","swiperCardWidth","cardSpace","lastToFirst","removeStyle","cardsSpace","[class.tp-swiper-multiple]","TpBindingService","tpBinding","TpBindingModule","TpIdentificationService","tpIdentification","TpIdentificationModule","TpIdentityauthModalComponent","i18n_Identityauth","tpIdentityauth","errorAlert","showErrorMessage","identityAuthModel","nowBind","bind","noBindTip","no_bind","hasBound","has_bound","changeBindContent","okButtonLabel","okBtn","bindMfaModel","verification_mfa","tpSupportMFA","forbidChange","hideBoundContent","helpTip","mfa_label_tip","codeInput","bind_mfa_help_tip","verification_placeholder","getCodeBtn","bindPhone","verification_mobile","bind_mobile","get_verification_code","bindEmail","verification_email","bind_email","tpSupportEmail","email_verification_placeholder","formModel","verification_code","clearValidMessage","isLock","getVerificationCode","verifyVerificationCode","verificationModel","modelList","deepMerge","refresh","loaded","refreshTip","refresh_tip","timeout","handleUserBoundInfo","requestErrorTip","getIamEndpoint","endpointList","endpoint","targetObj","sourceObj","method","info","mobile","infoArr","mask","sendCodeRequestData","scene","changeVerificationCodeBtnTip","remain_counter","countDown","operation_lock","system_busy","remainCounter","get_verification_code_times","operation_lock_btn_tip","next_get_verification_code","requestData","verifycode","cloud_verify_ticket","domain","successFn","addValidMessage","codeInputElem","enter","OKButton","iamUrl","serviceEndpointList","isSecuAdmin","roleInfoRes","roles","alertLabelLink","closeIdentityauth","method_alert_label_link_url","userInfoRes","HostBinding","TiFormfieldModule","TiLoadingModule","TpIdentityauthService","queryIsOpen","mfa_support","ops_switch","checkCerifyCode","showError","confirm_system_busy","cloudVerifyTicket","identityAuth","getUserInfoPromise","getRoleInfoPromise","all","endpoints","TpIdentityauthModule","TpRechargeService","tpRecharge","TpRechargeModule","TpStorageColumnsDirective","tableCom","shouldStorageColumnsToggle","httpService","getColumns","updateColumnsSubscription","updateColumnsSubject","postColumns","catch","userid","storageId","GET_URL","category","columns","column","POST_URL","ategory","setting","stringify","lastModifiedDateLong","Directive","TiTableComponent","TpTimelineComponent","titleOptions","getTitleOptions","changeToSuccess","findItemIndex","isTitle","isSuccess","level2Options","isSucess","TpTagsearchComponent"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * 访问受限页面组件\r\n *\r\n * <example-url>../tinyplus3demo/#/accessdeclined/accessdeclined-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-accessdeclined',\r\n    templateUrl: './accessdeclined.html',\r\n    styleUrls: ['./accessdeclined.less']\r\n})\r\n\r\nexport class TpAccessdeclinedComponent extends TiBaseComponent { }\r\n","import { NgModule } from '@angular/core';\r\nimport { TpAccessdeclinedComponent } from './TpAccessdeclinedComponent';\r\nimport { TiLocaleModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports: [\r\n    TiLocaleModule\r\n  ],\r\n  exports: [TpAccessdeclinedComponent],\r\n  declarations: [TpAccessdeclinedComponent]\r\n})\r\n\r\nexport class TpAccessdeclinedModule { }\r\nexport { TpAccessdeclinedComponent } from './TpAccessdeclinedComponent';\r\n","import { Component, ContentChild, Input, QueryList, TemplateRef, ViewChildren } from '@angular/core';\r\nimport { TiAccordionItemComponent, TiActionmenuItem, TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * 折叠面板列表中单个折叠面板的信息接口\r\n */\r\nexport interface TpAccordionlistOption {\r\n    /**\r\n     * 单个折叠面板是否处于展开状态，用于初始化设置，默认不展开\r\n     */\r\n    open?: boolean;\r\n    /**\r\n     * 单个折叠面板是否禁用\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * 单个折叠面板的头部(除过右侧actionmenu操作区)点击回调\r\n     */\r\n    headClick?: ($event: Event) => void;\r\n    /**\r\n     * 单个折叠面板左侧的显示文本\r\n     */\r\n    headlabel?: string;\r\n    /**\r\n     * 单个折叠面板右侧actionmenu操作区配置项\r\n     */\r\n    actionmenu?: TpAccordionlistActionmenuItem;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\nexport interface TpAccordionlistActionmenuItem {\r\n    /**\r\n     * 操作项数据集\r\n     */\r\n    items: Array<TiActionmenuItem>;\r\n    /**\r\n     * 数据集中要显示字符串的key\r\n     */\r\n    labelKey?: string;\r\n    /**\r\n     * 下拉面板最大宽度，超过时换行，对所有子菜单都生效\r\n     */\r\n    panelMaxWidth?: string;\r\n    /**\r\n     * 下拉面板最大高度度，超过时出现竖向滚动条，对所有子菜单都生效。\r\n     */\r\n    panelMaxHeight?: string;\r\n    /**\r\n     * 操作项外部容器宽度\r\n     */\r\n    maxWidth?: string;\r\n    /**\r\n     * @ignore\r\n     * 最多显示个数, 包含下拉菜单。UI规范规定最多显示4个, 所以暂不对外开放\r\n     */\r\n    maxShowNum?: number;\r\n    /**\r\n     * 点击选中操作菜单项事件\r\n     */\r\n    select?: (item: TiActionmenuItem, option: TpAccordionlistOption) => void;\r\n\r\n    // moreText?: string; 之后有需求再开放\r\n    // data?: any;\r\n    // dataToItemsFn?: (data: any) => Array<TiActionmenuItem>;\r\n\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n *\r\n *  折叠面板列表组件\r\n *\r\n *  10.1.0版本新增\r\n *\r\n *  10.0.4及之前的版本是以模板的形式提供(只提供了一些样式）；10.1.0版本为了实现样式按需加载和其使用简便性，去掉了之前的模板，封装了该组件。\r\n *\r\n *  <example-url>../tinyplus3demo/#/accordionlist/accordionlist-all</example-url>\r\n *\r\n */\r\n@Component({\r\n    selector: 'tp-accordionlist',\r\n    templateUrl: './accordionlist.html',\r\n    styleUrls: ['./accordionlist.less']\r\n})\r\nexport class TpAccordionlistComponent extends TiBaseComponent {\r\n    /**\r\n     * 展开某一项时，是否关闭其它项\r\n     */\r\n    @Input() closeOthers: boolean = true;\r\n    /**\r\n     * 折叠面板列表数据集合\r\n     */\r\n    @Input() options: Array<TpAccordionlistOption> = [];\r\n    /**\r\n     * @ignore\r\n     * 获取到用户自定义的头部左侧label区模板\r\n     */\r\n    @ContentChild('headLabel', { static: true }) public headLabelTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     * 获取到用户自定义的展开内容区模板\r\n     */\r\n    @ContentChild('content', { static: true }) public contentTemplate: TemplateRef<any>;\r\n    @ViewChildren(TiAccordionItemComponent) private accordionItemComps: QueryList<TiAccordionItemComponent>;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public headClick($event: Event, option: TpAccordionlistOption, index: number, actionmenuContainer: any): void {\r\n        // 点击非actionmenu区域时展开/收起\r\n        if (!actionmenuContainer.contains($event.target)) {\r\n            const currentAccordionItem: TiAccordionItemComponent = this.accordionItemComps.toArray()[index];\r\n            if (currentAccordionItem) {\r\n                currentAccordionItem.open = !currentAccordionItem.open;\r\n                if (option.headClick) {\r\n                    option.headClick($event);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onActionmenuSelect(item: TiActionmenuItem, option: TpAccordionlistOption): void {\r\n        if (option.actionmenu && option.actionmenu.select) {\r\n            option.actionmenu.select(item, option);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public getActionmenuItems(option: TpAccordionlistOption): Array<TiActionmenuItem> {\r\n        if (!option.actionmenu || !option.actionmenu.items || option.actionmenu.items.length < 1) {\r\n            return [];\r\n        }\r\n\r\n        return option.actionmenu.items.map((item: TiActionmenuItem): TiActionmenuItem => {\r\n            item.disabled = option.disabled || item.disabled;\r\n\r\n            return item;\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiAccordionModule, TiActionmenuModule } from '@cloud/tiny3';\r\n\r\nimport { TpAccordionlistComponent } from './TpAccordionlistComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiAccordionModule,\r\n    TiActionmenuModule\r\n  ],\r\n  exports: [TpAccordionlistComponent],\r\n  declarations: [TpAccordionlistComponent]\r\n})\r\n\r\nexport class TpAccordionlistModule {}\r\nexport { TpAccordionlistComponent, TpAccordionlistOption, TpAccordionlistActionmenuItem } from './TpAccordionlistComponent';\r\n","import { Component, ContentChild, ElementRef, EventEmitter, Input, NgZone, Output, Renderer2, SimpleChange, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\nexport interface TpAnchorItem {\r\n    /* tslint:disable:no-redundant-jsdoc */\r\n    /**\r\n     * 设置id，对应页面中联动的DOM元素id;\r\n     */\r\n    id: string;\r\n    /**\r\n     * 设置文本;\r\n     */\r\n    title?: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * 定位导航组件\r\n *\r\n * <example-url>../tinyplus3demo/#/anchor/anchor-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-anchor',\r\n    templateUrl: './anchor.html',\r\n    styleUrls: ['./anchor.less'],\r\n    host: {\r\n        '[class.tp-anchor-container]': 'true'\r\n    }\r\n})\r\n\r\nexport class TpAnchorComponent extends TiBaseComponent {\r\n    /**\r\n     * 组件数据\r\n     */\r\n    @Input() items: Array<TpAnchorItem>;\r\n    /**\r\n     * 设置要跳转到的目标锚点元素id，对应页面中联动的DOM元素id\r\n     */\r\n    @Input() anchorId: string;\r\n    /**\r\n     * 设置锚点对应Dom元素距窗口顶部距离，点击切换锚点时，页面滑动在到达该值时，切换到对应锚点\r\n     *\r\n     * <b>注：</b>通过滚轮滚动时，当顶部距离小于设置的offsetTop值，切换到对应锚点\r\n     */\r\n    @Input() offsetTop: number = 50;\r\n    /**\r\n     * 设置用户点击锚点时，页面滑动速度，其单位为ms\r\n     */\r\n    @Input() speed: number = 300;\r\n    /**\r\n     * 跳转到该锚点时，触发事件\r\n     */\r\n    @Output() readonly select: EventEmitter<TpAnchorItem> = new EventEmitter<TpAnchorItem>();\r\n    /**\r\n     * 锚点id改变事件，用于实现锚点id双向绑定，也可单独使用\r\n     *\r\n     * 10.0.4/9.0.8新增接口\r\n     */\r\n    @Output() readonly anchorIdChange: EventEmitter<string> = new EventEmitter<string>();\r\n    /**\r\n     * @ignore\r\n     * 获取到用户自定义的模板\r\n     */\r\n    @ContentChild('item', { static: true }) itemTemplete: TemplateRef<any>;\r\n    private unlistenScroll: () => void;\r\n    /**\r\n     * 是否组件内部触发scroll事件\r\n     */\r\n    private isInnerScrolling: boolean;\r\n    /**\r\n     * @ignore\r\n     * 保存组件内部更改后的锚点id\r\n     */\r\n    public currentId: string;\r\n    private hasGoanchor: boolean = false;\r\n    private hasAnimation: boolean = false; // 初始化及数据更新时，无需平滑滚动\r\n    constructor(private element: ElementRef, private renderer2: Renderer2, private zone: NgZone) {\r\n        super(element, renderer2);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        const anchorIdObj: SimpleChange = changes['anchorId'];\r\n        const itemsObj: SimpleChange = changes['items'];\r\n        if (anchorIdObj && anchorIdObj.currentValue && !anchorIdObj.isFirstChange() && this.anchorId !== this.currentId) {\r\n            this.hasGoanchor = false;\r\n            this.hasAnimation = true;\r\n        }\r\n        if (itemsObj && itemsObj.currentValue && !itemsObj.isFirstChange()) {\r\n            this.hasGoanchor = false;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // 监听滚轮事件\r\n        this.zone.runOutsideAngular(() => {\r\n            this.unlistenScroll = this.renderer2.listen(window, 'scroll', () => {\r\n                this.onWindowScroll();\r\n            });\r\n        });\r\n    }\r\n\r\n    ngAfterViewChecked(): void {\r\n        super.ngAfterViewChecked();\r\n        // 数据更新anchorId有值时，需要滚动页面到指定位置，只触发一次\r\n        if (!this.hasGoanchor) {\r\n            this.hasGoanchor = true;\r\n            this.goToAnchor(this.anchorId || this.items && this.items[0] && this.items[0].id);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        if (this.unlistenScroll) {\r\n            this.unlistenScroll();\r\n        }\r\n    }\r\n\r\n    // 页面滚动时，相应锚点高亮\r\n    private onWindowScroll(): void {\r\n        if (this.isInnerScrolling) {\r\n            return;\r\n        }\r\n        const scrollTop: number = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop;\r\n        const itemLength: number = this.items && this.items.length;\r\n        // 页面滚动时，锚点对应Dom元素距浏览器窗口顶部高度小于等于所配置的顶部偏移量，则应是当前锚点\r\n        for (let i: number = itemLength - 1; i >= 0; i--) {\r\n            const anchorEle: HTMLElement = document.getElementById(this.items[i].id);\r\n            // 判断有无当前激活锚点，使用户点击时，只当前锚点高亮；而滚动时，相对应锚点都高亮\r\n            if (anchorEle && anchorEle.offsetTop) {\r\n                const clientY: number = anchorEle.offsetTop - scrollTop - this.offsetTop;\r\n                const id: string = this.anchorId;\r\n                if (clientY <= this.offsetTop) {\r\n                    this.zone.run(() => {\r\n                        this.anchorId = this.currentId = this.items[i].id;\r\n                        // 锚点改变时，仅向外通知一次\r\n                        if (this.anchorId !== id) {\r\n                            this.select.emit(this.items[i]);\r\n                            this.anchorIdChange.emit(this.items[i].id);\r\n                        }\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(item: TpAnchorItem): void {\r\n        this.hasAnimation = true;\r\n        this.goToAnchor(item.id);\r\n    }\r\n\r\n    /**\r\n     * 页面滚动到目标锚点对应位置\r\n     * @param anchorId 锚点id\r\n     */\r\n    private goToAnchor(anchorId: string): void {\r\n        this.isInnerScrolling = true;\r\n        const targetEle: HTMLElement = document.getElementById(anchorId);\r\n        const scrollTop: number = document.documentElement.scrollTop || window.pageYOffset || document.body.scrollTop;\r\n        const scollPosition: number = targetEle && targetEle.offsetTop - this.offsetTop;\r\n\r\n        /**\r\n         * 初始化及数据更新时，页面直接滚动到定位位置；\r\n         * 点击锚点切换及用户动态改变当前锚点id时，滚动条平滑运动。\r\n         */\r\n        if (this.hasAnimation) {\r\n            this.scrollAnimation(scrollTop, scollPosition, anchorId, this.speed);\r\n        } else {\r\n            // 修改了当前高亮锚点，使用setTimeout，消除ExpressionChangedAfterItHasBeenCheckedError报错\r\n            setTimeout(() => {\r\n                this.scrollToView(scollPosition, anchorId);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    // 滚动条平滑运动\r\n    private scrollAnimation(currentY: number, targetY: number, anchorId: string, speed?: number): void {\r\n        const direction: number = targetY - currentY > 0 ? 1 : -1;\r\n        let distance: number = Math.abs(targetY - currentY);  // 滚动条需要滚动的距离\r\n        const stepTimes: number = speed / (1000 / 60); // 一般浏览器刷新频率是60HZ，时间间隔为1000ms/60，总帧数\r\n        let stepDist: number = distance / stepTimes; // 每帧滚动条滚动距离\r\n\r\n        if (targetY !== currentY) {\r\n            stepDist *= direction;\r\n            // 定时器，1000/60ms时间间隔 执行一次\r\n            let positionY: number = currentY;\r\n            let timer: any = setInterval(() => {\r\n                positionY = positionY + stepDist;\r\n                distance -= Math.abs(stepDist);\r\n                if (distance <= 0) {\r\n                    clearInterval(timer);\r\n                    timer = undefined;\r\n                    this.scrollToView(targetY, anchorId);\r\n                    this.hasAnimation = false; // 更新hasAnimation\r\n                } else {\r\n                    window.scrollTo(0, positionY);\r\n                }\r\n            }, 1000 / 60);\r\n        }\r\n    }\r\n\r\n    // 页面定位到指定位置，无滚动效果\r\n    private scrollToView(target: number, anchorId: string): void {\r\n        window.scrollTo(0, target); // 横向坐标不移动\r\n        this.getCurrentAnchor(anchorId);\r\n        this.isInnerScrolling = false;\r\n    }\r\n\r\n    // 页面滚动到指定位置之后，向外通知当前锚点数据\r\n    private getCurrentAnchor(anchorId: string): void {\r\n        this.anchorId = this.currentId = anchorId;\r\n        for (const item of this.items) {\r\n            if (item.id === anchorId) {\r\n                this.select.emit(item);\r\n                this.anchorIdChange.emit(item.id);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpAnchorComponent } from './TpAnchorComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [TpAnchorComponent],\r\n  declarations: [TpAnchorComponent]\r\n})\r\n\r\nexport class TpAnchorModule {}\r\nexport { TpAnchorComponent, TpAnchorItem } from './TpAnchorComponent';\r\n","import { ChangeDetectorRef, Component, ElementRef, Renderer2, ViewChild } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';\r\nimport { AccountService } from '@cloud/cfdata';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * 区域服务维护页面组件\r\n *\r\n * 该组件与console框架相关，框架处理数据，组件获取数据显示；\r\n * 使用时只需引入该组件，无需配置属性接口。\r\n *\r\n * <b>注</b>：支持列表中的region区域是服务已配置的可支持的区域。\r\n *\r\n * <example-url>../tinyplus3demo/#/beingmaintained/beingmaintained-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-beingmaintained',\r\n    templateUrl: 'beingmaintained.html',\r\n    styleUrls: ['beingmaintained.less'],\r\n})\r\n\r\nexport class TpBeingmaintainedComponent extends TiBaseComponent {\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('container') containerEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    maintainRegions: Array<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    label: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    maintainTime: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    describe: string;\r\n    private regionsDataSub: Subscription;\r\n    private tpBeingmaintained: any = TiLocale.getLocaleWords().tpBeingmaintained;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private renderer2: Renderer2,\r\n        private changeDetector: ChangeDetectorRef) {\r\n        super(elementRef, renderer2);\r\n    }\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.setRegionsData();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        if (this.regionsDataSub) {\r\n            this.regionsDataSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private setRegionsData(): void {\r\n        if (!(window as any).cfRegionSubject) {\r\n            return;\r\n        }\r\n\r\n        this.regionsDataSub = (window as any).cfRegionSubject.subscribe({\r\n            next: (items: { region: any, maintainRegions: Array<any> }): void => {\r\n                if (items.region && items.region.displayName) {\r\n                    const displayName: any = `<span>${items.region.displayName}</span>`;\r\n                    this.label = Util.formatEntry(this.tpBeingmaintained.label, [displayName]);\r\n                    this.getMaintainData().then((maintainData: { time: string, describe: string }) => {\r\n                        if (maintainData) {\r\n                            if (!Util.isEmptyString(maintainData.time)) {\r\n                                this.maintainTime = `${this.tpBeingmaintained.maintainTime}${maintainData.time}`;\r\n                            }\r\n                            this.describe = maintainData.describe;\r\n                        }\r\n                    });\r\n                }\r\n\r\n                this.maintainRegions = items.maintainRegions;\r\n                this.changeDetector.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    private getMaintainData(): Promise<any> {\r\n        return AccountService.queryCustomMaintenances().then((data: any) => {\r\n            let time: string = '';\r\n            let describe: string = '';\r\n            if (data) {\r\n                time = data.startTime + ' - ' + data.endTime;\r\n                describe = data.describe;\r\n            }\r\n            return { time, describe };\r\n        });\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * @ignore\r\n * 内部使用组件\r\n */\r\n@Component({\r\n    selector: 'tp-supportregionlist',\r\n    templateUrl: './supportregionlist.html',\r\n    styleUrls: ['./supportregionlist.less']\r\n})\r\n\r\nexport class TpSupportregionlistComponent extends TiBaseComponent {\r\n    @Input() regions: Array<any>;\r\n    private selectedRegionEvent: any;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    onClick(item: any): void {\r\n        if (!this.selectedRegionEvent) {\r\n            this.selectedRegionEvent = document.createEvent('HTMLEvents');\r\n            this.selectedRegionEvent.initEvent('cfChangeRegion', true, true);\r\n        }\r\n\r\n        this.selectedRegionEvent.detail = item;\r\n        document.dispatchEvent(this.selectedRegionEvent);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    onClickIcon(event: Event, item: any): void {\r\n        item.showProjectsList = !item.showProjectsList;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiLocaleModule } from '@cloud/tiny3';\r\nimport { TpSupportregionlistComponent } from './TpSupportregionlistComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiLocaleModule\r\n  ],\r\n  exports: [TpSupportregionlistComponent],\r\n  declarations: [TpSupportregionlistComponent]\r\n})\r\n\r\nexport class TpSupportregionlistModule { }\r\nexport { TpSupportregionlistComponent } from './TpSupportregionlistComponent';\r\n","import { NgModule } from '@angular/core';\r\nimport { TiLocaleModule } from '@cloud/tiny3';\r\nimport { TpBeingmaintainedComponent } from './TpBeingmaintainedComponent';\r\nimport { TpSupportregionlistModule } from '../supportregionlist/TpSupportregionlistModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    TiLocaleModule,\r\n    TpSupportregionlistModule\r\n  ],\r\n  exports: [TpBeingmaintainedComponent],\r\n  declarations: [TpBeingmaintainedComponent]\r\n})\r\n\r\nexport class TpBeingmaintainedModule {}\r\nexport { TpBeingmaintainedComponent } from './TpBeingmaintainedComponent';\r\n","import { Component, Input, SimpleChange, SimpleChanges, ElementRef, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent, Util } from '@cloud/tiny3';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\n\r\n// TODO：如果封装为胶囊样式，DOM内部多一层，比现在优劣？\r\n/**\r\n *  Icon组件，非本地懒加载Icon\r\n *\r\n *  Icon组件可以设置显示Icon。\r\n *\r\n * <example-url>../tinyplus3demo/#/icon/icon-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-icon:not([local])',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./icon.less'],\r\n    host: {\r\n        '[class.tp-cloud-action-state-ing]': \"name === 'cloud-action-state-ing'\"\r\n    },\r\n})\r\nexport class TpIconComponent extends TiBaseComponent {\r\n\r\n    /**\r\n     * Icon基路径\r\n     */\r\n    private static path: string = 'assets/tinyplus3/icons/';\r\n    /**\r\n     * 保存url和观察者，避免并发的重复请求。\r\n     */\r\n    private static urlObservableMap: Map<String, Observable<string>> = new Map<String, Observable<string>>();\r\n    /**\r\n     * icon名称\r\n     */\r\n    @Input() name: string;\r\n\r\n    constructor(protected hostRef: ElementRef, protected renderer: Renderer2, private http: HttpClient) {\r\n        super(hostRef, renderer);\r\n    }\r\n    /**\r\n     * 设置icon下载地址，默认是'assets/tinyplus3/icons/'\r\n     * @param path\r\n     */\r\n    public static setPath(path: string): void {\r\n        TpIconComponent.path = path;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        const nameChange: SimpleChange = changes['name'];\r\n        if (nameChange && !Util.isEmptyString(nameChange.currentValue)) {\r\n            // 拼接URL\r\n            const url: string = `${TpIconComponent.path}${nameChange.currentValue}.svg`;\r\n            // 取出观察者\r\n            let ob: Observable<string> = TpIconComponent.urlObservableMap.get(url);\r\n            if (!ob) {\r\n                // 如果不存在观察者，则发起http请求。share()是为了避免每次订阅都发起http请求。\r\n                ob = this.http.get(url, { responseType: 'text' }).pipe(share());\r\n                // 保存ur和观察者\r\n                TpIconComponent.urlObservableMap.set(url,ob);\r\n            }\r\n            // 订阅http请求结果\r\n            ob.subscribe(\r\n                (svgText: string): void => {\r\n                    // 将<svg>挂在<tp-icon>下\r\n                    this.nativeElement.innerHTML = svgText;\r\n                    // 删除url和观察者\r\n                    TpIconComponent.urlObservableMap.delete(url);\r\n                }\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, SimpleChange, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n// TODO：如果封装为胶囊样式，DOM内部多一层，比现在优劣？\r\n/**\r\n * @ignore Icon组件，本地Icon\r\n *\r\n *  Icon组件可以设置显示Icon。\r\n *\r\n * <example-url>../tinyplus3demo/#/icon/icon-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-icon[local]',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./iconlocal.less'],\r\n    encapsulation: ViewEncapsulation.None // 样式是加在标签上的，不是内部，所以非胶囊\r\n})\r\nexport class TpIconlocalComponent extends TiBaseComponent {\r\n    /**\r\n     * icon名称\r\n     */\r\n    @Input() name: string;\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        const nameChange: SimpleChange = changes['name'];\r\n        if (nameChange) {\r\n            this.renderer.removeClass(this.nativeElement, `tp-icon-${nameChange.previousValue}`);\r\n            this.renderer.addClass(this.nativeElement, `tp-icon-${nameChange.currentValue}`);\r\n        }\r\n    }\r\n}\r\n/* ti-icon组件，为了防止多个组件重复使用字体图标文件，导致最终用户打包文件成倍增大。\r\n因此封装该组件，确保最终打包只引用一份字体图标样式及文件 */\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpIconComponent } from './TpIconComponent';\r\nimport { TpIconlocalComponent } from './TpIconlocalComponent';\r\n\r\n// 此模块不导入HttpClient，是因为懒加载模块中的HttpClientModule，会覆盖全局的。导致http拦截器失效。\r\n// import { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  imports: [CommonModule/* , HttpClientModule */],\r\n  exports: [TpIconComponent, TpIconlocalComponent],\r\n  declarations: [TpIconComponent, TpIconlocalComponent]\r\n})\r\nexport class TpIconModule {}\r\nexport { TpIconComponent } from './TpIconComponent';\r\nexport { TpIconlocalComponent } from './TpIconlocalComponent';\r\n","import { Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';\r\n// import { TpUtil } from '../../utils/TpUtil';\r\nimport { TiLocale, TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * @ignore\r\n * <example-url>../tinyplus3demo/#/info/info-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-info',\r\n    templateUrl: './info.html',\r\n    styleUrls: ['./info.less']\r\n})\r\n\r\nexport class TpInfoComponent extends TiBaseComponent {\r\n    /**\r\n     * 提示信息类型，有两种可选择类型：'restricted'，'unverified'\r\n     */\r\n    @Input() infoType: string = 'unverified';\r\n    private config: object = {\r\n        restricted: {\r\n            cls: 'tp-info-restricted',\r\n            content: TiLocale.getLocaleWords().tpInfo.restricted\r\n        },\r\n        unverified: {\r\n            cls: 'tp-info-unverified',\r\n            content: TiLocale.getLocaleWords().tpInfo.unverified\r\n        }\r\n    };\r\n\r\n    // content元素elementRef\r\n    @ViewChild('contentEle', {static: true}) private contentEle: ElementRef;\r\n\r\n    // 提示内容\r\n    public content: string;\r\n\r\n    constructor(private element: ElementRef, protected renderer: Renderer2) {\r\n        super(element, renderer);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        const typeConfig: any = this.config[this.infoType];\r\n        this.renderer.addClass(this.element.nativeElement, typeConfig.cls);\r\n        this.content = typeConfig.content;\r\n    }\r\n\r\n    // ngAfterViewInit(): void {\r\n    //     TpInfoComponent.setATag(this.contentEle.nativeElement);\r\n    // }\r\n\r\n    // // 设置a标签样式和行为方式\r\n    // private static setATag(element: HTMLElement): any {\r\n    //     const aTags: NodeListOf<HTMLAnchorElement> = element.querySelectorAll('a');\r\n    //     if (!aTags || aTags.length === 0) {\r\n    //         console.log('!aTags');\r\n    //         return;\r\n    //     }\r\n    //     aTags.forEach((atag: HTMLAnchorElement) => {\r\n    //         TpUtil.setAttrs(atag, {\r\n    //             class: 'tp-link-no-decoration',\r\n    //             target: '_blank'\r\n    //         });\r\n    //     });\r\n    // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { TpInfoComponent } from './TpInfoComponent';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [TpIconModule],\r\n  exports: [TpInfoComponent],\r\n  declarations: [TpInfoComponent]\r\n})\r\n\r\nexport class TpInfoModule {}\r\nexport { TpInfoComponent } from './TpInfoComponent';\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * 公测组件\r\n *\r\n * <example-url>../tinyplus3demo/#/beta/beta-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-beta',\r\n    templateUrl: './beta.html',\r\n    styleUrls: ['./beta.less']\r\n})\r\nexport class TpBetaComponent extends TiBaseComponent {\r\n    /**\r\n     * 服务图标\r\n     */\r\n    @Input() icon: string;\r\n    /**\r\n     * 了解更多跳转链接\r\n     */\r\n    @Input() moreUrl: string = '';\r\n    /**\r\n     * 服务介绍描述\r\n     */\r\n    @Input() intro: string = '';\r\n    /**\r\n     * 服务消息描述\r\n     */\r\n    @Input() message: string = '';\r\n    /**\r\n     * 是否实名认证，未实名认证情况会有提示，并且申请按钮灰化\r\n     */\r\n    @Input() verified: boolean = true;\r\n    /**\r\n     * 立即申请跳转链接\r\n     */\r\n    @Input() applyUrl: string = '';\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClickFn(event: Event): void {\r\n        if(!this.verified) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TiButtonModule, TiLocaleModule } from '@cloud/tiny3';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { TpInfoModule } from '../info/TpInfoModule';\r\nimport { TpBetaComponent } from './TpBetaComponent';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TiButtonModule, TiLocaleModule, TpIconModule, TpInfoModule],\r\n  exports: [TpBetaComponent],\r\n  declarations: [TpBetaComponent]\r\n})\r\nexport class TpBetaModule {}\r\nexport { TpBetaComponent } from './TpBetaComponent';\r\n","import { Component, ContentChild, ElementRef, EventEmitter, Input, Output, Renderer2, SecurityContext, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { TiBaseComponent, TiBrowser, TiLocale, Util } from '@cloud/tiny3';\r\n\r\n// 配置values接口且URL不是默认的帮助中心链接时，组件创建表单，将value数据提交到配置的URL地址；\r\n// 否则，组件不创建表单，点击直接跳转到帮助中心，查看产品详情\r\n\r\nexport interface TpPricecalcParam {\r\n    value: string;\r\n    key: string;\r\n}\r\n\r\n/**\r\n * 价格计算器组件\r\n *\r\n * <example-url>../tinyplus3demo/#/pricecalc/pricecalc-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-pricecalc',\r\n    templateUrl: './pricecalc.html',\r\n    styleUrls: ['./pricecalc.less']\r\n})\r\nexport class TpPricecalcComponent extends TiBaseComponent {\r\n    /**\r\n     * 图标右侧文本\r\n     *\r\n     * 缺省值 : 价格计算器/price Calculator（国际化）\r\n     */\r\n    @Input() label: string = TiLocale.getLocaleWords().tpPricecalc.label;\r\n    /**\r\n     * 查看详情的链接地址\r\n     *\r\n     */\r\n    @Input() detailHref: string;\r\n\r\n    /**\r\n     * 查询的产品信息\r\n     *\r\n     * 类型为对象数组，对象包含两个属性：key和value（url地址参数形式为key1=value1&key2=value2）\r\n     */\r\n    @Input() values: Array<TpPricecalcParam>;\r\n    /**\r\n     * 查看价格的链接地址\r\n     */\r\n    @Input() url: string = 'http://www.helpcenter.com/';\r\n    /**\r\n     * 表单向url地址的提交方式\r\n     */\r\n    @Input() method: string;\r\n    /**\r\n     * 点击链接前的事件接口\r\n     */\r\n    @Output() readonly beforeClick: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('myform', { static: true }) form: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ContentChild('detail', { static: true }) detailTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public detailHrefBeforeText: string = TiLocale.getLocaleWords().tpPricecalc.detailHrefBeforeText;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public detailHrefText: string = TiLocale.getLocaleWords().tpPricecalc.detailHrefText;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public detailHrefAfterText: string = TiLocale.getLocaleWords().tpPricecalc.detailHrefAfterText;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public isNotDefaultUrl: boolean;\r\n    /**\r\n     * 提交 form 时新打开的页签窗口名\r\n     */\r\n    private blankTab: string;\r\n\r\n    constructor(elementRef: ElementRef, renderer2: Renderer2, private domSanitizer: DomSanitizer) {\r\n        super(elementRef, renderer2);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(): void {\r\n        this.beforeClick.emit();\r\n\r\n        setTimeout(() => {\r\n            // 问题背景：给 form 标签上设置 rel=\"noopener noreferrer\" 实际是不生效的，还是存在被新打开的页面的恶意带代码重定向原页面的安全漏洞的。\r\n            // 解决方案：先用 window.open 打开一个新的页签窗口(this.blankTab)，然后利用 form 的 target 属性将表单提交到这个窗口中, 那么就可以获取到新窗口\r\n            //          的window对象(window.open 的返回值)，将其 opener 属性置为 null，从而消除该安全漏洞。\r\n            // 注意：该解决方案不适用于IE, IE 下暂未找到解决方案\r\n            if (!TiBrowser.isIE()) {\r\n                this.blankTab = Util.getUniqueId('new_tab'); // 确保是新的页签\r\n                const newWindow: any = window.open(this.domSanitizer.sanitize(SecurityContext.URL, this.url), this.blankTab);\r\n                if (newWindow) {\r\n                    newWindow.opener = null;\r\n                }\r\n            }\r\n            this.form.nativeElement.target = TiBrowser.isIE() ? '_blank' : this.blankTab;\r\n            this.form.nativeElement.submit();\r\n        }, 0);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.isNotDefaultUrl = !!this.values && this.url !== 'http://www.helpcenter.com/';\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpPricecalcComponent } from './TpPricecalcComponent';\r\n\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [TpPricecalcComponent],\r\n  declarations: [TpPricecalcComponent]\r\n})\r\n\r\nexport class TpPricecalcModule {}\r\nexport { TpPricecalcComponent, TpPricecalcParam } from './TpPricecalcComponent';\r\n","import { TpDiscoutsConfig } from '../discounts/TpDiscountsModule';\r\nimport { AfterViewInit, Component, ContentChild, ElementRef, EventEmitter, Input, NgZone, OnDestroy, Output,\r\n    Renderer2, TemplateRef, ViewChild } from '@angular/core';\r\nimport { TpButtons } from './TpBuylayerRightComponent';\r\nimport { TpCalculator, TpCosts } from './TpBuylayerLeftComponent';\r\nimport { TiBaseComponent, TiBrowser } from '@cloud/tiny3';\r\n\r\nexport interface TpBuylayerConfig {\r\n    /**\r\n     * 浮层右侧按钮列表\r\n     */\r\n    buttons?: Array<TpButtons>;\r\n    /**\r\n     * 浮层左侧价格详情列表\r\n     */\r\n    costs?: Array<TpCosts>;\r\n    /**\r\n     * 计费详情信息\r\n     */\r\n    costExplain?: string;\r\n    /**\r\n     * 是否显示免费场景详情信息\r\n     */\r\n    showFreechargeDetail?: boolean;\r\n    /**\r\n     * 优惠tip弹窗信息(主要价格)配置接口,接口内容参考discounts组件。\r\n     */\r\n    majorDiscoutsConfig?: TpDiscoutsConfig;\r\n    /**\r\n     * 优惠tip弹窗信息(次要价格)配置接口,接口内容参考discounts组件。\r\n     */\r\n    minorDiscoutsConfig?: TpDiscoutsConfig;\r\n    /**\r\n     * 自定义货币数值精度\r\n     * 自定义保留位数，例如：1.2-4，表示整数部分最少保留1位，小数部分最小保留2位，小数部分最大保留4位。\r\n     * 默认值取自各局点\r\n     */\r\n    numFormat?: string;\r\n    /**\r\n     * 了解计费详情链接\r\n     */\r\n    detailHref?: string;\r\n    /**\r\n     * 计费详情tip最大宽度\r\n     * 10.1.4新增\r\n     */\r\n    detailTipMaxWidth?: string\r\n    /**\r\n     * 需要显示价格计算器时才需要配置，华为云不涉及\r\n     */\r\n    calculator?: TpCalculator;\r\n    /**\r\n     * 是否为退费场景\r\n     */\r\n    isRefund?: boolean;\r\n    /**\r\n     * @ignore\r\n     * 是否以Tip形式显示次级价格计费详情(10.1.0版本已删除，此处添加，为了防止服务报错)\r\n     */\r\n    showMinorTip?: boolean;\r\n    /**\r\n     * @ignore\r\n     * 是否以Tip形式显示主要价格计费详情(10.1.0版本已删除，此处添加，为了防止服务报错)\r\n     */\r\n    showMajorTip?: boolean;\r\n    /**\r\n     * @ignore\r\n     * 是否显示主要价格优惠tip弹窗(10.1.0版本已删除，此处添加，为了防止服务报错)\r\n     */\r\n    showMajorDiscount?: boolean;\r\n    /**\r\n     * @ignore\r\n     * 是否显示次要价格优惠tip弹窗(10.1.0版本已删除，此处添加，为了防止服务报错)\r\n     */\r\n    showMinorDiscount?: boolean;\r\n}\r\n/**\r\n * 购买浮层组件\r\n *\r\n * <example-url>../tinyplus3demo/#/buylayer/buylayer-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-buylayer',\r\n    templateUrl: './buylayer.html',\r\n    styleUrls: ['./buylayer.less'],\r\n    host: {\r\n        '[class.tp-buylayer-container]': 'true'\r\n    }\r\n})\r\n\r\nexport class TpBuylayerComponent extends TiBaseComponent implements AfterViewInit, OnDestroy {\r\n    constructor(private element: ElementRef, private renderer2: Renderer2, private ngZone: NgZone) {\r\n        super(element, renderer2);\r\n    }\r\n    @Input() buylayerConfig: TpBuylayerConfig;\r\n    /**\r\n     * 优惠组件可选优惠项切换选择项时触发\r\n     *\r\n     * 9.0.3 新增接口\r\n     */\r\n    @Output() readonly discountsChange: EventEmitter<any> = new EventEmitter();\r\n    @ContentChild('leftZone') leftZoneEle: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('buylayerContent', {static: false}) buylayerContentEle: ElementRef;\r\n    private unlistenWindowScroll: () => void;\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngAfterViewInit(): void {\r\n        // ie下兼容问题，免费使用场景弹性布局垂直居中\r\n        if (TiBrowser.isIE()) {\r\n            const contentContainerHeight: number = this.buylayerContentEle.nativeElement.offsetHeight;\r\n            if (contentContainerHeight <= 70) { // 浮层最小高度70px\r\n                this.renderer2.setStyle(this.buylayerContentEle.nativeElement, 'height', 70 + 'px');\r\n            }\r\n        }\r\n\r\n        this.ngZone.runOutsideAngular((): void => {\r\n            // 在横向滚动条出现时控制fixed定位的购买浮层可以左右移动\r\n            this.unlistenWindowScroll = this.renderer2.listen('window', 'scroll', (): void => {\r\n                this.renderer2.setStyle(this.element.nativeElement, 'left', `-${document.documentElement.scrollLeft || document.body.scrollLeft}px`);\r\n            });\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.unlistenWindowScroll) {\r\n            this.unlistenWindowScroll();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public change($event: Event): void {\r\n        this.discountsChange.emit($event);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TiLocale } from '@cloud/tiny3';\r\nimport { TpLocaleWords } from '../../locale/i18n';\r\nimport { formatDate } from '@angular/common';\r\n/**\r\n * 日期格式化\r\n *\r\n * 默认按照局点配置格式\r\n *\r\n * <example-url>../tinyplus3demo/#/locale/locale-all</example-url>\r\n */\r\n@Pipe({ name: 'tpDate', pure: false })\r\nexport class TpDatePipe implements PipeTransform {\r\n  /**\r\n   * 日期转换\r\n   * @param value 日期\r\n   * @param format 显示种类\r\n   * @returns 转换结果\r\n   */\r\n  transform(value: string | number | Date, format: 'date'|'time'|'dateTime'|'dateTimeZone' = 'date'): string {\r\n    // format = format ? format : 'date'; // 默认值是'date'\r\n    const res: string = formatDate(value, (TiLocale.getLocaleWords() as TpLocaleWords).tiLocaleDate[format], TiLocale.EN_US);\r\n\r\n    return res;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TiLocale } from '@cloud/tiny3';\r\nimport { TpLocaleWords } from '../../locale/i18n';\r\nimport { formatDate } from '@angular/common';\r\n\r\n/**\r\n * 数字格式化\r\n *\r\n * 默认按照局点配置格式\r\n *\r\n * <example-url>../tinyplus3demo/#/locale/locale-all</example-url>\r\n */\r\n@Pipe({ name: 'tpNumber', pure: false })\r\nexport class TpNumberPipe implements PipeTransform {\r\n\r\n  /**\r\n   * 货币转换\r\n   * @param value 数字\r\n   * @param format 自定义保留位数，例如：1.2-4，表示整数部分最小保留1位，小数部分最小保留2位，小数部分最大保留4位。\r\n   * @returns 转换结果\r\n   */\r\n  transform(value: number, format?: string): string {\r\n    // 最终格式\r\n    let myoptions: any = this.getOptions();\r\n\r\n    // 如果用户传来了自定义配置保留位数\r\n    if (format) {\r\n      myoptions = {\r\n        ...myoptions,\r\n        ...{\r\n          minimumIntegerDigits: format.substring(0, format.indexOf('.')),\r\n          minimumFractionDigits: format.substring(format.indexOf('.') + 1, format.indexOf('-')),\r\n          maximumFractionDigits: format.substring(format.indexOf('-') + 1)\r\n        }\r\n      };\r\n    }\r\n\r\n    const res: string = new Intl.NumberFormat((TiLocale.getLocaleWords() as TpLocaleWords).tiLocaleKey, myoptions)\r\n    .format(value);\r\n\r\n    return res;\r\n  }\r\n  /**\r\n   * 获取局点中的配置\r\n   * @returns options\r\n   */\r\n  protected getOptions(): any {\r\n    return (TiLocale.getLocaleWords() as TpLocaleWords).tpLocaleNumber;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TiLocale } from '@cloud/tiny3';\r\n\r\nimport { formatDate } from '@angular/common';\r\nimport { TpNumberPipe } from './TpNumberPipe';\r\nimport { TpLocaleWords } from '../../locale/i18n';\r\n/**\r\n * 货币格式化\r\n *\r\n * 默认按照局点配置格式\r\n *\r\n * <example-url>../tinyplus3demo/#/locale/locale-all</example-url>\r\n */\r\n@Pipe({ name: 'tpCurrency', pure: false })\r\nexport class TpCurrencyPipe extends TpNumberPipe implements PipeTransform {\r\n/**\r\n * 转换\r\n * @param value 货币数字\r\n * @param format 自定义保留位数，例如：1.2-4，表示整数部分最少保留1位，小数部分最小保留2位，小数部分最大保留4位。\r\n * @param type 'short'表示美元末尾不带USD\r\n * @returns 转换结果\r\n */\r\ntransform(value: number, format?: string, type?: 'short'|undefined): string {\r\n    // 调用父类处理\r\n    let res: string = super.transform(value, format);\r\n    // 结果调整，符合规范\r\n    res = res.replace('CN¥', '¥');\r\n    res = res.replace('US$', '$');\r\n    res = res.replace('$ ', '$');\r\n    if (this.getOptions().currency === 'USD' && type !== 'short') {\r\n      res = res + ' USD';\r\n    }\r\n    if (res.includes('€') && !res.endsWith('€')) {\r\n      res = res.replace('€', '');\r\n      res = res + ' €';\r\n    }\r\n\r\n    return res;\r\n  }\r\n  /**\r\n   * 获取局点中的配置\r\n   * @returns options\r\n   */\r\n  protected getOptions(): any {\r\n    return (TiLocale.getLocaleWords() as TpLocaleWords).tpLocaleCurrency;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpDatePipe } from './TpDatePipe';\r\nimport { TpNumberPipe } from './TpNumberPipe';\r\nimport { TpCurrencyPipe } from './TpCurrencyPipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [TpDatePipe, TpNumberPipe, TpCurrencyPipe],\r\n  declarations: [TpDatePipe, TpNumberPipe, TpCurrencyPipe]\r\n})\r\nexport class TpLocaleModule {}\r\nexport { TpDatePipe } from './TpDatePipe';\r\nexport { TpNumberPipe } from './TpNumberPipe';\r\nexport { TpCurrencyPipe } from './TpCurrencyPipe';\r\n","import { CfEndpoints, CfLinks, CfUser, EndpointsData, HttpService, LinksData, Mask, Message,\r\n    StorageService, UserData } from '@cloud/cfdata';\r\nimport { TpDatePipe } from '../pipes/locale/TpLocaleModule';\r\n//\r\n/**\r\n * @ignore\r\n * 获取console相关的工具类\r\n * 兼容angular.js版本的console\r\n */\r\nexport class CfUtil {\r\n    public static async getUser(): Promise<any> {\r\n        if (this.isAngularJSConsole()) {\r\n            return this.getFromAngularJSConsole('$rootScope');\r\n        }\r\n\r\n        const cfUserData: CfUser = await UserData.getCfUser();\r\n\r\n        return cfUserData;\r\n    }\r\n\r\n    public static async getLinks(): Promise<any> {\r\n        if (this.isAngularJSConsole()) {\r\n            return this.getFromAngularJSConsole('$rootScope');\r\n        }\r\n\r\n        const cfLinksData: CfLinks = await LinksData.getLinks();\r\n\r\n        return cfLinksData;\r\n    }\r\n\r\n    public static async getEndpoints(): Promise<any> {\r\n        if (this.isAngularJSConsole()) {\r\n            return this.getFromAngularJSConsole('$rootScope');\r\n        }\r\n\r\n        const cfEndpointsData: CfEndpoints = await EndpointsData.getCfEndpoints();\r\n\r\n        return cfEndpointsData;\r\n    }\r\n\r\n    public static getHttpService(): any {\r\n        if (this.isAngularJSConsole()) {\r\n            return this.getFromAngularJSConsole('camel');\r\n        }\r\n\r\n        return HttpService;\r\n    }\r\n\r\n    public static getMessage(): any {\r\n        if (this.isAngularJSConsole()) {\r\n            return this.getFromAngularJSConsole('msgService');\r\n        }\r\n\r\n        return Message;\r\n    }\r\n\r\n    public static getMask(): any {\r\n        if (this.isAngularJSConsole()) {\r\n            return this.getFromAngularJSConsole('mask');\r\n        }\r\n\r\n        return Mask;\r\n    }\r\n\r\n    public static getStorageService(): any {\r\n        if (this.isAngularJSConsole()) {\r\n            return this.getFromAngularJSConsole('storage');\r\n        }\r\n\r\n        return StorageService;\r\n    }\r\n\r\n    public static formatLocaleDateTime(datetime: string | number | Date): any {\r\n        if (this.isAngularJSConsole()) {\r\n            const localeService: any = this.getFromAngularJSConsole('localeService');\r\n            if (localeService &&  typeof localeService.formatLocaleDateTime === 'function') {\r\n                return localeService.formatLocaleDateTime(datetime);\r\n            } else {\r\n                return datetime;\r\n            }\r\n        }\r\n\r\n        return new TpDatePipe().transform(datetime, 'dateTimeZone');\r\n    }\r\n\r\n    public static isNonsupportRegion(): (nonsupportRegions: any, regionId: any, supportRegions: any) => boolean {\r\n        if (this.isAngularJSConsole()) {\r\n            const rootScope: any = this.getFromAngularJSConsole('$rootScope');\r\n\r\n            return rootScope && rootScope.isNonsupportRegion;\r\n        }\r\n\r\n        return UserData.isNonsupportRegion;\r\n    }\r\n\r\n    public static getAppWebPath(): string {\r\n        // 兼容appWebPath(旧版)、AppWebPath(新版)\r\n        let appWebPath: string = (window as any).AppWebPath || (window as any).appWebPath;\r\n        // 去掉首尾的/符号\r\n        appWebPath = appWebPath && appWebPath.replace(/^\\//, '')\r\n            .replace(/\\/$/, '');\r\n\r\n        return `/${appWebPath}`;\r\n    }\r\n\r\n    private static isAngularJSConsole(): boolean {\r\n        return !!(window as any).angular;\r\n    }\r\n\r\n    private static getFromAngularJSConsole(inject: string): any {\r\n        const html: any = (window as any).angular.element('html');\r\n        // 使用ng1+ng2 新融合方案时，Angular应用默认所在的根DOM元素为body\r\n        const body: any = (window as any).angular.element('body');\r\n\r\n        if (html && html.injector()) {\r\n            return html.injector().get(inject);\r\n        } else if (body && body.injector()) {\r\n            return body.injector().get(inject);\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n}\r\n","import { Util } from '@cloud/tiny3';\r\n\r\n/**\r\n * @ignore\r\n * 工具类\r\n */\r\nexport class TpUtil {\r\n    public static setAttrs(element: HTMLElement, attrs: object): void {\r\n        for (const key in attrs) {\r\n            if (attrs.hasOwnProperty(key)) {\r\n                element.setAttribute(key, attrs[key]);\r\n            }\r\n        }\r\n    }\r\n\r\n    public static isObject(item: any): boolean {\r\n        return (item && typeof item === 'object' && !Array.isArray(item));\r\n    }\r\n\r\n    // 对象扩展，当前只适用于对象形式，数组形式如有需求，请在该方法中自行扩展\r\n    public static extend(target: object, source: object): object {\r\n        const output: object = {...target};\r\n        if (!(TpUtil.isObject(target) && TpUtil.isObject(source))) {\r\n            return;\r\n        }\r\n        (Object.keys(source) as Array<string>).forEach((key: string) => {\r\n            if (TpUtil.isObject(source[key])) {\r\n                if (!(key in target)) {\r\n                    Object.assign(output, { [key]: source[key] });\r\n                } else {\r\n                    output[key] = TpUtil.extend(target[key], source[key]);\r\n                }\r\n            } else {\r\n                Object.assign(output, { [key]: source[key] });\r\n            }\r\n        });\r\n\r\n        return output;\r\n    }\r\n\r\n    /**\r\n     * url 跳转的目标路径 string\r\n     * params  参数对象集合 Object\r\n     */\r\n    public static addUrlParams(url: string, params: any): string {\r\n        if (!Util.isString(url) || url === '' || Util.isUndefined(params)) {\r\n            return url;\r\n        }\r\n        let finalUrl: string = url;\r\n        for (const key in params) {\r\n            if (Object.prototype.hasOwnProperty.call(params, key)) {\r\n                const param: string = key + '=' + encodeURIComponent(params[key]);\r\n                if (url.indexOf('?') === -1) {\r\n                    finalUrl = finalUrl +  '?' + param;\r\n                } else {\r\n                    finalUrl = finalUrl +  '&' + param;\r\n                }\r\n            }\r\n        }\r\n\r\n        return finalUrl;\r\n    }\r\n\r\n    /**\r\n     * url 跳转的目标路径 string\r\n     * params 参数对象集合 Object\r\n     */\r\n    public static addDefaultParam(url: string, params: any): string {\r\n        const defaultParam: any = {\r\n            service: window.location.href  // 默认参数为当前页面链接地址，方便用户实现返回原页面\r\n        };\r\n        const finalParams: any = { ...defaultParam, ...params };\r\n\r\n        return this.addUrlParams(url, finalParams);\r\n    }\r\n    /**\r\n     * 得到cookie的值\r\n     * @param key： cookie名对应的键值\r\n     */\r\n    public static getCookie(key: string): any {\r\n        if (!document.cookie) {\r\n            return;\r\n        }\r\n        const splitedCookie: Array<string> = document.cookie.split(';');\r\n        for (const cookie of splitedCookie) {\r\n            const temp: Array<string> = cookie.split('=');\r\n            if (temp[0] && temp[0].trim() === key) {\r\n                return temp[1].trim();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置cookie的值，包括key、value\r\n     */\r\n    public static setCookie(key: string, value: string): void {\r\n        document.cookie = `${key}=${value}`;\r\n    }\r\n\r\n}\r\n","import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport { getLocaleCurrencySymbol } from '@angular/common';\r\nimport { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';\r\n\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\nimport { TpDiscoutsConfig } from '../discounts/TpDiscountsModule';\r\n\r\nimport { TpUtil } from './../../utils/TpUtil';\r\n\r\nexport interface TpCosts {\r\n    /**\r\n     * 价格label\r\n     */\r\n    label?: string;\r\n    /**\r\n     * 价格数值\r\n     */\r\n    value?: number | string;\r\n    /**\r\n     * 计量单位\r\n     */\r\n    measureUnit?: string;\r\n    /**\r\n     * 是否公测\r\n     */\r\n    isBeta?: boolean;\r\n    /**\r\n     * 优惠金额\r\n     */\r\n    discount?: number;\r\n    /**\r\n     * 价格详情链接\r\n     */\r\n    link?: string;\r\n    /**\r\n     * 是否是主要价格\r\n     */\r\n    majorPrice?: boolean;\r\n    /**\r\n     * 是否隐藏价格\r\n     *\r\n     * 10.1.0 新增\r\n     */\r\n    hide?: boolean;\r\n    /**\r\n     * 是否隐藏价格之间的加号连接符号\r\n     *\r\n     * 10.1.0 新增\r\n     */\r\n    hideConnectSymbol?: boolean;\r\n    /**\r\n     * 价格明细\r\n     */\r\n    pricelist?: Array<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    tipTitle?: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     *\r\n     * 10.1.2新增\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\nexport interface TpCalculator {\r\n    /**\r\n     * 链接\r\n     */\r\n    url?: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * @ignore\r\n * 购买浮层左侧价格区域\r\n * <example-url>../tinyplus3demo/#/buylayer/buylayer-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-buylayer-left',\r\n    templateUrl: './buylayer-left.html',\r\n    styleUrls: ['./buylayer-left.less']\r\n})\r\n\r\nexport class TpBuylayerLeftComponent extends TiBaseComponent {\r\n    /**\r\n     * 浮层左侧价格列表集合\r\n     */\r\n    @Input() costs: Array<TpCosts> = [];\r\n    /**\r\n     * 优惠详情弹窗信息配置(主要价格)总接口，具体详情可参考discounts组件\r\n     */\r\n    @Input() majorDiscoutsConfig: TpDiscoutsConfig;\r\n    /**\r\n     * 优惠详情弹窗信息配置（次要价格）总接口，具体详情可参考discounts组件\r\n     */\r\n    @Input() minorDiscoutsConfig: TpDiscoutsConfig;\r\n    /**\r\n     * 是否显示免费套餐场景\r\n     */\r\n    @Input() showFreechargeDetail: boolean;\r\n    /**\r\n     * 用户可自定义价格详情信息\r\n     */\r\n    @Input() costExplain: string;\r\n    /**\r\n     * 价格计算器场景展示时候的配置接口\r\n     */\r\n    @Input() calculator: TpCalculator;\r\n    /**\r\n     * 货币精度设置接口\r\n     * 自定义保留位数，例如：1.2-4，表示整数部分最少保留1位，小数部分最小保留2位，小数部分最大保留4位。\r\n     * 默认值取自各局点\r\n     */\r\n    @Input() numFormat: string;\r\n    /**\r\n     * 了解计费详情链接\r\n     */\r\n    @Input() detailHref: string;\r\n    /**\r\n     * @ignore\r\n     * 是否是退费场景\r\n     */\r\n    @Input() isRefund: boolean;\r\n    /**\r\n     * 计费详情tip最大宽度\r\n     * 10.1.4新增\r\n     */\r\n    @Input() detailTipMaxWidth: string;\r\n    /**\r\n     * 可选优惠项切换选择项时触发\r\n     *\r\n     * 9.0.3 新增接口\r\n     */\r\n    @Output() readonly discountsChange: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChild(TemplateRef) leftZoneEle1: TemplateRef<any>;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public freechargeDetailLink: string = '';\r\n    /**\r\n     * @ignore\r\n     * tip中的表头\r\n     */\r\n    public pricelistHead: string = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_pricelist;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public majorPriceNum: number;\r\n\r\n    /**\r\n     * @ignore\r\n     * 是否只有主要价格。当只有主要价格时，计费详情tip在主要价格后；当有次要费用时，在次要价格之后。\r\n     */\r\n    public onlyHasMajorprice: boolean;\r\n    /**\r\n     * @ignore\r\n     * 主要价格是否包含数字。如果包含则需要出现计费详情，否则不出现。\r\n     */\r\n    public hasNumberofMajorprice: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * 是否显示主要价格的优惠详情\r\n     */\r\n    public showMajorDiscount: boolean;\r\n    /**\r\n     * @ignore\r\n     * 是否显示次要价格的优惠详情\r\n     */\r\n    public showMinorDiscount: boolean;\r\n    /**\r\n     * @ignore\r\n     * 主要价格是否全隐藏\r\n     */\r\n    public isMajorPriceAllHide: boolean;\r\n    /**\r\n     * @ignore\r\n     * 次要价格是否全隐藏\r\n     */\r\n    public isMinorPriceAllHide: boolean;\r\n    /**\r\n     * @ignore\r\n     * 浮层实际呈现的价格数组集合\r\n     */\r\n    public finalCosts: Array<TpCosts>;\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        const routeLink: string = TiLocale.getLocaleWords().tpBuylayer.buyLayer_freeCharge_detailLink;\r\n\r\n        this.costsChange();\r\n\r\n        this.discountChange();\r\n\r\n        if (!Util.isUndefined(this.numFormat) && !Util.isUndefined(this.majorDiscoutsConfig)) {\r\n            // 浮层配置的价格精度同样作用到优惠详情部分，两者保持一致。\r\n            this.majorDiscoutsConfig.numFormat = this.numFormat;\r\n        }\r\n\r\n        CfUtil.getLinks()\r\n            .then((linksData: any) => {\r\n            if (linksData && linksData.links && linksData.links.user_center_common) {\r\n                this.freechargeDetailLink = this.addLinkParams(linksData.links.user_center_common + routeLink);\r\n            }\r\n        });\r\n    }\r\n\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnChanges(): void {\r\n        this.costsChange();\r\n        this.discountChange();\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (!Util.isArray(this.costs) || this.costs.length === 0) {\r\n            return;\r\n        }\r\n        // costs动态hide之后，重新获取主次要价格数组，并且新数组的第一项（头部价格）不带加号连接符\r\n        const currentMajorCosts = this.costs.filter((item: TpCosts) => !item.hide && item.majorPrice);\r\n        const currentMinorCosts = this.costs.filter((item: TpCosts) => !item.hide && !item.majorPrice);\r\n        currentMajorCosts.forEach((item: TpCosts, index: number) => {\r\n            item.hideConnectSymbol = !index;\r\n        })\r\n        currentMinorCosts.forEach((item: TpCosts, index: number) => {\r\n            item.hideConnectSymbol = !index;\r\n        });\r\n    }\r\n    // 数据初始化及变更之后都需执行\r\n    private costsChange(): void {\r\n        this.setMajorPrice();\r\n        this.finalCosts = this.costs.filter((item: TpCosts) => !item.hide);\r\n        this.majorPriceNum = this.getMajorPriceNum();\r\n        this.isCostsAllHide();\r\n        if (this.isRefund) {\r\n            this.setRefundParams();\r\n        }\r\n\r\n        this.onlyHasMajorprice = this.finalCosts && this.finalCosts.length > 0 && this.majorPriceNum === this.finalCosts.length ? true : false;\r\n    }\r\n\r\n    private hasDiscountsData(config: TpDiscoutsConfig): boolean {\r\n        const hasSelectableDiscounts: boolean = Util.isArray(config.selectableDiscounts) && config.selectableDiscounts.length > 0;\r\n        const hasSelectedDiscounts: boolean = Util.isArray(config.selectedDiscounts) && config.selectedDiscounts.length > 0;\r\n        const hasDiscounts: boolean = Util.isArray(config.discounts) && config.discounts.length > 0;\r\n\r\n        return hasDiscounts || (hasSelectedDiscounts || hasSelectableDiscounts);\r\n    }\r\n\r\n    private discountChange(): void {\r\n        if (TpUtil.isObject(this.majorDiscoutsConfig) && this.hasDiscountsData(this.majorDiscoutsConfig) && this.majorPriceNum > 0) {\r\n            this.showMajorDiscount = true;\r\n        } else {\r\n            this.showMajorDiscount = false;\r\n        }\r\n\r\n        const minorpriceNum: number = this.costs && this.costs.length - this.majorPriceNum; // 得到次要价格的数目\r\n        if (TpUtil.isObject(this.minorDiscoutsConfig) && this.hasDiscountsData(this.minorDiscoutsConfig) && minorpriceNum > 0) {\r\n            this.showMinorDiscount = true;\r\n        } else {\r\n            this.showMinorDiscount = false;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public change($event: Event): void {\r\n        this.discountsChange.emit($event);\r\n    }\r\n    // 获取主要价格数量\r\n    private getMajorPriceNum(): number {\r\n        if (this.finalCosts && this.finalCosts.length > 0) {\r\n            let num: number = 0;\r\n            for (const cost of this.finalCosts) {\r\n                if (cost.majorPrice) {\r\n                    num++;\r\n                    if (this.isNumber(cost.value)) {\r\n                        this.hasNumberofMajorprice = true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return num;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n    // 判断主/次要价格是否都隐藏\r\n    private isCostsAllHide() {\r\n        if (this.costs && this.costs.length > 0) {\r\n            // 获取主要价格集合\r\n            const majorPriceArr = this.costs.filter((item) => item.majorPrice);\r\n            // 获取次要价格集合\r\n            const minorPriceArr = this.costs.filter((item) => !item.majorPrice);\r\n            this.isMinorPriceAllHide = this.isAllHide(minorPriceArr);\r\n            this.isMajorPriceAllHide = this.isAllHide(majorPriceArr);\r\n        }\r\n    }\r\n    private isAllHide(arr): boolean {\r\n        let isAllHide = true;\r\n        if (arr.length > 0) {\r\n            for (const cost of arr) {\r\n                if(!cost.hide) {\r\n                    isAllHide = false;\r\n                }\r\n            }\r\n        }\r\n        return isAllHide;\r\n    }\r\n    // 设置价格类型\r\n    private setMajorPrice(): void {\r\n        if (this.costs && this.costs.length > 0) {\r\n            for (const cost of this.costs) {\r\n                if (Util.isUndefined(cost.label) && !this.isRefund) {\r\n                    cost.label = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_label;\r\n                    cost.tipTitle = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_label;\r\n                }\r\n                if (Util.isUndefined(cost.majorPrice)) {\r\n                    cost.majorPrice = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 设置退费场景下的相关参数\r\n     */\r\n    private setRefundParams(): void {\r\n        if (this.costs && this.costs.length > 0) {\r\n            for (const cost of this.costs) {\r\n                if (Util.isUndefined(cost.label)) {\r\n                    cost.label = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_label_refund_majorprice;\r\n                    cost.tipTitle = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_label_refund_detail;\r\n                }\r\n\r\n                if (cost.pricelist && cost.pricelist.length > 0) {\r\n                    cost.pricelist[0].title = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_pricelist_label_before;\r\n                    cost.pricelist[1].title = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_pricelist_label_after;\r\n                    cost.pricelist[2] = {\r\n                        title: TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_label_refund,\r\n                        priceNum: cost.value\r\n                    };\r\n\r\n                    this.pricelistHead = TiLocale.getLocaleWords().tpBuylayer.buyLayer_cost_type;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public isNumber(val: any): boolean {\r\n        return Util.isNumber(val);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public isPositiveNumber(val: any): boolean {\r\n        return Util.isNumber(val) && val > 0;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 货币国际化\r\n     */\r\n    public getLocalSymble(): any {\r\n        const localeKey: string = TiLocale.getLocaleWords().tiLocaleKey;\r\n\r\n        return getLocaleCurrencySymbol(localeKey);\r\n    }\r\n\r\n    // 获取agencyID和locale\r\n    private addLinkParams(url: string): string {\r\n        if (url === '') {\r\n            return url;\r\n        }\r\n        const storage: any = CfUtil.getStorageService();\r\n        if (!(!Util.isUndefined(storage) && !Util.isUndefined(storage.cookieStorage) && Util.isFunction(storage.cookieStorage.getItem))) {\r\n            return url;\r\n        }\r\n        const agencyID: any = storage.cookieStorage.getItem('agencyID');\r\n        const locale: any = storage.cookieStorage.getItem('locale');\r\n        let finalUrl: string = url;\r\n        if (!Util.isEmptyString(agencyID)) {\r\n            finalUrl = finalUrl + '?agencyId=' + agencyID;\r\n            if (!Util.isEmptyString(locale)) {\r\n                finalUrl = finalUrl + '&locale=' + locale;\r\n            }\r\n        } else if (!Util.isEmptyString(locale)) {\r\n            finalUrl = finalUrl + '?locale=' + locale;\r\n        }\r\n\r\n        return finalUrl;\r\n    }\r\n\r\n}\r\n","import { TiPositionType } from '@cloud/tiny3';\r\nimport { Component, Input } from '@angular/core';\r\nexport interface TpButtons {\r\n    /**\r\n     * 按钮文本内容\r\n     */\r\n    label: string;\r\n    /**\r\n     * 按钮是否隐藏\r\n     */\r\n    hide?: boolean;\r\n    /**\r\n     * 按钮是否灰化\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * 按钮是否为主要按钮颜色\r\n     */\r\n    color?: 'danger' | 'primary';\r\n    /**\r\n     * 按钮点击事件\r\n     */\r\n    click?(): void; // 按钮点击事件\r\n    /**\r\n     * 按钮id\r\n     */\r\n    id?: string;\r\n    /**\r\n     * 按钮Tip内容\r\n     */\r\n    tip?: string;\r\n    /**\r\n     * 按钮Tip展开方向\r\n     */\r\n    tipPosition?: TiPositionType;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * @ignore\r\n * 购买浮层右侧按钮区域\r\n * <example-url>../tinyplus3demo/#/buylayer/buylayer-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-buylayer-right',\r\n    templateUrl: './buylayer-right.html',\r\n    styleUrls: ['./buylayer-right.less'],\r\n    host: {\r\n        '[class.tp-buylayer-right]': 'true'\r\n    }\r\n})\r\n\r\nexport class TpBuylayerRightComponent {\r\n    /**\r\n     * 浮层右侧按钮列表集合\r\n     */\r\n    @Input() buttons: Array<TpButtons> = [];\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n/**\r\n * @ignore\r\n */\r\n@Pipe({ name: 'rate' })\r\nexport class RatePipe implements PipeTransform {\r\n    transform(value: Array<any>): Array<any> {\r\n        return value.filter((item: any) => item.rate > 0 && item.rate < 1);\r\n    }\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\n@Pipe({ name: 'notEqualTo0' })\r\nexport class NotEqualTo0Pipe implements PipeTransform {\r\n    transform(value: Array<any>): Array<any> {\r\n        return value.filter((item: any) => item.priceNum !== 0);\r\n    }\r\n}\r\n/**\r\n * @ignore\r\n */\r\n@Pipe({ name: 'notEqualTo01' })\r\nexport class NotEqualTo01Pipe implements PipeTransform {\r\n    transform(value: Array<any>): Array<any> {\r\n        return value.filter((item: any) => {\r\n            if (item.id === 'no-discounts') {\r\n                return item.priceNum === 0;\r\n            } else {\r\n                return item.priceNum !== 0;\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ViewChild\r\n} from '@angular/core';\r\nimport { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';\r\n\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\nexport interface TpDiscountDetail {\r\n    /**\r\n     * 折扣种类名称\r\n     */\r\n    name?: string;\r\n    /**\r\n     * 优惠资源名称\r\n     */\r\n    resourceName?: string;\r\n    /**\r\n     * 规格\r\n     */\r\n    specification?: string;\r\n    /**\r\n     * 尺寸\r\n     */\r\n    size?: string;\r\n    /**\r\n     * 详情链接类型\r\n     */\r\n    type?: number;\r\n    /**\r\n     * 折扣率\r\n     */\r\n    rate?: number;\r\n    /**\r\n     * 详情链接内容\r\n     */\r\n    href?: string;\r\n    /**\r\n     * 优惠到期时间\r\n     */\r\n    expireTime?: string;\r\n    /**\r\n     * 优惠金额\r\n     */\r\n    priceNum?: number;\r\n    /**\r\n     * 包周期可选优惠项id\r\n     *\r\n     * 包周期可选择优惠项配置场景必选\r\n     */\r\n    id?: string;\r\n    /**\r\n     * 是否为优选优惠项\r\n     */\r\n    isRecommend?: boolean;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\nexport interface TpDiscoutsConfig {\r\n    /**\r\n     * 优惠场景类型， 如包周期、按需等\r\n     */\r\n    type: 'period' | 'ondemand';\r\n    /**\r\n     * 优惠金额数字位数控制\r\n     * 自定义保留位数，例如：1.2-4，表示整数部分最少保留1位，小数部分最小保留2位，小数部分最大保留4位。\r\n     * 默认值取自各局点\r\n     */\r\n    numFormat?: string;\r\n    /**\r\n     * 包周期已选择优惠项\r\n     */\r\n    selectedDiscounts?: Array<TpDiscountDetail>;\r\n    /**\r\n     * 包周期可选优惠项，被选项ID\r\n     */\r\n    selectedId?: string;\r\n    /**\r\n     * 包周期可选优惠项\r\n     */\r\n    selectableDiscounts?: Array<TpDiscountDetail>;\r\n    /**\r\n     * 按需场景优惠项\r\n     */\r\n    discounts?: Array<TpDiscountDetail>;\r\n    /**\r\n     * 优惠弹窗最大高度\r\n     */\r\n    maxHeight?: number;\r\n    /**\r\n     * 优惠价格单位\r\n     *  10.1.0 新增\r\n     */\r\n    measureUnit?: string;\r\n}\r\n/**\r\n * @ignore\r\n * 优惠场景，主要有包周期场景和按需场景，服务可根据实际类型自行配置。\r\n *\r\n * <example-url>../tinyplus3demo/#/discounts/discounts-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-discounts',\r\n    templateUrl: './discounts.html',\r\n    styleUrls: ['./discounts.less'],\r\n    host: {\r\n        '(click)': 'onClick($event)'\r\n    }\r\n})\r\n\r\nexport class TpDiscountsComponent extends TiBaseComponent {\r\n    constructor(private elementRef: ElementRef, private render: Renderer2) {\r\n        super(elementRef, render);\r\n    }\r\n    /**\r\n     * 优惠数据总配置接口\r\n     */\r\n    @Input() discoutsConfig: TpDiscoutsConfig;\r\n    /**\r\n     * 可选优惠项切换选择项时触发\r\n     *\r\n     * 9.0.3 新增接口\r\n     */\r\n    @Output() readonly discountsChange: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('font') fontEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('container') containerEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('before') beforeEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 用户获取当前语言集合\r\n     */\r\n    public localeWords: any = TiLocale.getLocaleWords();\r\n    /**\r\n     * @ignore\r\n     * 用于获取词条\r\n     */\r\n    public tpDiscounts: any = this.localeWords.tpDiscounts;\r\n    /**\r\n     * @ignore\r\n     * 模板使用,判断是否为中文场景\r\n     */\r\n    public isChinese: boolean = this.localeWords.tiLocaleKey === 'zh-CN';\r\n    /**\r\n     * @ignore\r\n     * 模板使用,弹窗是否展开标志量\r\n     */\r\n    public isOpen: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * 模板使用,总优惠额\r\n     */\r\n    public sum: number;\r\n    /**\r\n     * @ignore\r\n     * 按需场景最终配置\r\n     */\r\n    public ondemandDiscountsConfig: Array<TpDiscountDetail>;\r\n\r\n    private onlistenClick: () => void;\r\n\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        if (this.discoutsConfig.type === 'ondemand') {\r\n            this.handleDiscounts(this.discoutsConfig.discounts);\r\n        }\r\n        if (this.discoutsConfig.type === 'period') {\r\n            this.setTotalSavings();\r\n            this.setSelectableData(this.discoutsConfig.selectableDiscounts);\r\n        }\r\n        this.onlistenClick = this.render.listen(window, 'click', () => this.onDocumentClick());\r\n    }\r\n\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        if (this.discoutsConfig.type === 'ondemand') {\r\n            this.handleDiscounts(this.discoutsConfig.discounts);\r\n        }\r\n        if (this.discoutsConfig.type === 'period') {\r\n            const change: any = changes['discoutsConfig'];\r\n            if (change && !change.isFirstChange()) {\r\n                this.setTotalSavings();\r\n            }\r\n            this.setSelectableData(this.discoutsConfig.selectableDiscounts);\r\n        }\r\n\r\n    }\r\n\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngAfterViewChecked(): void {\r\n        super.ngAfterViewChecked();\r\n        if (this.isOpen) {\r\n            // 定位元素宽度\r\n            const tipModalIconWidth: number = this.fontEle.nativeElement.offsetWidth;\r\n            // 定位元素左侧靠边距离\r\n            // 服务实际业务中，使用offselLeft获取的值不准确（缺失左侧sideBar的47px），导致较小分辨率下，挤压出横向滚动条。\r\n            // 此处修改为getBoundingClientRect().left，在服务环境上已测试ok.\r\n            const tipModalIconLeft: number = this.fontEle.nativeElement.getBoundingClientRect().left;\r\n            // 定位元素距离右侧窗口的位置\r\n            const tipModalIconRight: number = window.innerWidth - tipModalIconLeft - tipModalIconWidth;\r\n            // 提示弹窗宽度\r\n            const tipContainerWidth: number = this.containerEle.nativeElement.offsetWidth;\r\n            // 居中显示需要的偏移量\r\n            const offset: number = (tipContainerWidth - tipModalIconWidth) / 2;\r\n            // 弹窗正常居中对齐的偏移量 - 定位元素距离左侧窗口的位置；如果大于0，说明左溢出\r\n            const isLeftOverflow: boolean = (offset - tipModalIconLeft) > 0;\r\n            // 弹窗正常居中对齐的偏移量 - 定位元素距离右侧窗口的位置；如果大于0，则说明右溢出。\r\n            const isRightOverflow: boolean = (offset - tipModalIconRight) > 0;\r\n            const distance: number = 20; // 溢出时，距离左侧留20px余量\r\n            let marginLeft: number;\r\n            if (isLeftOverflow) {\r\n                marginLeft = -tipModalIconLeft + distance;\r\n            } else if (isRightOverflow) {\r\n                marginLeft = -(tipContainerWidth - tipModalIconRight - tipModalIconWidth) - distance;\r\n            } else {\r\n                marginLeft = -offset;\r\n            }\r\n            this.render.setStyle(this.containerEle.nativeElement, 'margin-left', marginLeft + 'px');\r\n            this.render.setStyle(this.beforeEle.nativeElement, 'left', tipModalIconWidth / 2 + 'px');\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        if (this.onlistenClick) {\r\n            this.onlistenClick();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 单选radio点击切换选择项触发\r\n     */\r\n    public onRadioChange($event: Event): void {\r\n        this.setTotalSavings();\r\n        this.discountsChange.emit($event);\r\n    }\r\n    /**\r\n     * 点击documnet优惠信息窗口关闭\r\n     */\r\n    private onDocumentClick(): void {\r\n        this.isOpen = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击右上角叉号图标，弹窗关闭\r\n     */\r\n    public onClose($event: any): void {\r\n        this.isOpen = false;\r\n        $event.stopPropagation();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 模板使用，tip面板点击需要组织冒泡\r\n     */\r\n    public onContainerClick($event: any): void {\r\n        $event.stopPropagation();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick($event: any): void {\r\n        // 当在焦点在A标签，触发回车键的时候，不需要关闭面板。\r\n        if (event.target['tagName'] === 'A') {\r\n            return;\r\n        }\r\n        this.isOpen = !this.isOpen;\r\n        $event.stopPropagation();\r\n    }\r\n    // 按需优惠项信息合并\r\n    private getOndemandDiscounts(data: Array<TpDiscountDetail>): Array<TpDiscountDetail> {\r\n        const out: Array<TpDiscountDetail> = [];\r\n        for (let i: number = 0; i < data.length; i++) {\r\n            const cur: TpDiscountDetail = data[i];\r\n            const n: number = out.findIndex((ele: any) => ele.label === cur.label);\r\n            if (n > -1) {\r\n                const item: TpDiscountDetail = {\r\n                    ...out[n],\r\n                    ...cur,\r\n                    ...{\r\n                        expireTime: Util.isString(out[n].expireTime) && Util.isString(cur.expireTime) &&\r\n                            new Date(out[n].expireTime).getTime() > new Date(cur.expireTime).getTime() ? cur.expireTime : out[n].expireTime,\r\n                        type: this.getData(out[n].type, cur.type),\r\n                        href: this.getData(out[n].href, cur.href)\r\n                    }\r\n                };\r\n                out[n] = item;\r\n            } else {\r\n                out.push(cur);\r\n            }\r\n        }\r\n\r\n        return out;\r\n    }\r\n    // tslint:disable-next-line:prefer-function-over-method\r\n    private getData(val1: any, val2: any): any {\r\n        if (Util.isUndefined(val2) || val2 === '') {\r\n            return val1;\r\n        }\r\n\r\n        return val2;\r\n    }\r\n\r\n    // 根据接口type来设定详情链接，也支持用户自定义详情链接\r\n    // tslint:disable-next-line:prefer-function-over-method\r\n    private setDetailLink(item: TpDiscountDetail): void {\r\n        CfUtil.getLinks()\r\n        .then((linksData: any) => {\r\n            const user_center_common: string = linksData && linksData.links && linksData.links.user_center_common\r\n                ? linksData.links.user_center_common : '';\r\n            let detailLink: string = '';\r\n            switch (item.type) {\r\n                case 0:\r\n                    detailLink = user_center_common + this.tpDiscounts.discounts_detailLink_type0;\r\n                    break;\r\n                case 1:\r\n                    detailLink = user_center_common + this.tpDiscounts.discounts_detailLink_type1;\r\n                    break;\r\n                case 2:\r\n                    detailLink = user_center_common + this.tpDiscounts.discounts_detailLink_type2\r\n                    + (Util.isUndefined(item.beId) ? '' : '&beId=' + item.beId);\r\n                    break;\r\n                default:\r\n                    detailLink = Util.isString(item.href) ? item.href : '';\r\n                    break;\r\n            }\r\n            detailLink = this.addLinkParams(detailLink);\r\n            item.href = detailLink;\r\n        });\r\n    }\r\n\r\n    private getLink(value: Array<TpDiscountDetail>): void {\r\n        value.forEach((item: TpDiscountDetail) => {\r\n            this.setDetailLink(item);\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 到期时间一周之内才显示\r\n     */\r\n    public showExpireTime(val: Date): boolean {\r\n        const nowTime: number = new Date().getTime();\r\n        const expireTime: number = new Date(val).getTime();\r\n        const gap: number = expireTime - nowTime;\r\n\r\n        return gap > 0 && gap < 86400000 * 7;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 到期时间格式化\r\n     */\r\n    public getFormatExpireTime(val: Date): any {\r\n        return CfUtil.formatLocaleDateTime(val);\r\n    }\r\n\r\n    // 按需场景数据拼接处理\r\n    private handleDiscounts(items: Array<TpDiscountDetail>): Array<any> {\r\n        const ondemandDiscounts: Array<any> = [];\r\n        for (let i: number = 0; i < items.length; i++) {\r\n            //  类似 8折与 20% off 转换\r\n            items[i].discountRate = !Util.isNumber(items[i].rate) ? '' :\r\n                this.isChinese ? ` ${parseFloat((items[i].rate * 10).toFixed(2))}${this.tpDiscounts.discounts}`\r\n                : `; ${parseFloat(((1 - items[i].rate) * 100).toFixed(2))}%${this.tpDiscounts.discounts}`;\r\n            ondemandDiscounts[i] = {\r\n                rate: Util.isNumber(items[i].rate) ? items[i].rate : undefined,\r\n                expireTime: Util.isString(items[i].expireTime) ? items[i].expireTime : '',\r\n                type: Util.isNumber(items[i].type) ? items[i].type : undefined,\r\n                beId: Util.isString(items[i].beId) ? items[i].beId : '',\r\n                href: Util.isString(items[i].href) ? items[i].href : ''\r\n            };\r\n\r\n            let name: string;\r\n            let resourceName: string;\r\n            let specification: string;\r\n            if (this.isChinese) {\r\n                name = Util.isString(items[i].name) ? items[i].name : '';\r\n                resourceName = Util.isString(items[i].resourceName) ? items[i].resourceName : '';\r\n                specification = Util.isString(items[i].specification) ? items[i].specification : '';\r\n            } else {\r\n                name = !Util.isEmptyString(items[i].name) ? items[i].name : '';\r\n                resourceName = !Util.isEmptyString(items[i].resourceName) ? '; ' + items[i].resourceName : '';\r\n                specification = !Util.isEmptyString(items[i].specification) ? ', ' + items[i].specification : '';\r\n            }\r\n            ondemandDiscounts[i].label = name + resourceName + specification + items[i].discountRate;\r\n        }\r\n        this.ondemandDiscountsConfig = this.getOndemandDiscounts(ondemandDiscounts);\r\n        this.getLink(this.ondemandDiscountsConfig);\r\n\r\n        return this.ondemandDiscountsConfig;\r\n    }\r\n\r\n    // 可选数据详情链接\r\n    private getSelectableDetail(vals: Array<TpDiscountDetail>): void {\r\n        for (const val of vals) {\r\n            if (!Util.isUndefined(val.href)) {\r\n                return;\r\n            }\r\n            this.setDetailLink(val);\r\n        }\r\n    }\r\n    // 获取agencyID和locale\r\n    private addLinkParams(url: string): string {\r\n        if (url === '') {\r\n            return url;\r\n        }\r\n        const storage: any = CfUtil.getStorageService();\r\n        if (!(!Util.isUndefined(storage) && !Util.isUndefined(storage.cookieStorage) && Util.isFunction(storage.cookieStorage.getItem))) {\r\n            return url;\r\n        }\r\n        const agencyID: any = storage.cookieStorage.getItem('agencyID');\r\n        const locale: any = storage.cookieStorage.getItem('locale');\r\n        let finalUrl: string = url;\r\n        if (!Util.isEmptyString(agencyID)) {\r\n            finalUrl = finalUrl + '&agencyId=' + agencyID;\r\n        }\r\n        if (!Util.isEmptyString(locale)) {\r\n            finalUrl = finalUrl + '&locale=' + locale;\r\n        }\r\n\r\n        return finalUrl;\r\n    }\r\n\r\n    /**\r\n     * 优惠总额\r\n     */\r\n    private setTotalSavings(): void {\r\n        this.sum = 0;\r\n        if (Util.isArray(this.discoutsConfig.selectedDiscounts)) {\r\n            for (const item of this.discoutsConfig.selectedDiscounts) {\r\n                if (!Util.isNumber(item.priceNum)) {\r\n                    continue;\r\n                } else {\r\n                    this.sum += item.priceNum;\r\n                }\r\n            }\r\n        }\r\n        // 获取选中优惠项的索引index\r\n        if (!Util.isUndefined(this.discoutsConfig.selectableDiscounts)) {\r\n            const index: number = this.discoutsConfig.selectableDiscounts.findIndex((ele: any) => ele.id === this.discoutsConfig.selectedId)\r\n            const selectedDiscountsNum: number = this.discoutsConfig.selectableDiscounts[index]\r\n                && this.discoutsConfig.selectableDiscounts[index].priceNum;\r\n            if (index > -1 && Util.isNumber(selectedDiscountsNum)) {\r\n                this.sum += selectedDiscountsNum;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     *\r\n     * 判断优惠总价格是否为0，总结为0不显示共省部分\r\n     */\r\n    public isSumEqualZero(): boolean {\r\n        this.setTotalSavings();\r\n        const reg: RegExp = new RegExp('[\\.-]');\r\n        const precision: number = this.discoutsConfig.numFormat ?\r\n        Number(this.discoutsConfig.numFormat.split(reg)[2]) : 2;\r\n\r\n        return parseFloat(this.sum.toFixed(precision)) === 0;\r\n    }\r\n    /**\r\n     * 可选优惠项数据根据实际场景判断是否添加默认尾项\r\n     */\r\n    private setSelectableData(options: Array<TpDiscountDetail>): void {\r\n        if (!Util.isArray(options) || options.length === 0) {\r\n            return;\r\n        }\r\n        this.getSelectableDetail(options);\r\n            const length: number = options.length;\r\n            if (options[length - 1].id !== 'no-discounts') {\r\n                options[length] = {\r\n                    label: this.tpDiscounts.no_discounts,\r\n                    id: 'no-discounts',\r\n                    href: '',\r\n                    priceNum: 0\r\n                };\r\n            }\r\n    }\r\n}\r\n","import { NotEqualTo01Pipe, NotEqualTo0Pipe, RatePipe } from './RatePipe';\r\nimport { NgModule } from '@angular/core';\r\nimport { TpDiscountsComponent } from './TpDiscountsComponent';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TpLocaleModule } from '../../pipes/locale/TpLocaleModule';\r\nimport { TiLocaleModule, TiRadioModule, TiOutlineModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TiLocaleModule,\r\n    TpIconModule,\r\n    TpLocaleModule,\r\n    TiRadioModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpDiscountsComponent],\r\n  declarations: [NotEqualTo0Pipe, NotEqualTo01Pipe, RatePipe, TpDiscountsComponent]\r\n})\r\n\r\nexport class TpDiscountsModule {}\r\nexport { TpDiscountsComponent, TpDiscoutsConfig } from './TpDiscountsComponent';\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'isMajorPrice' })\r\nexport class IsMajorPricePipe implements PipeTransform {\r\n    transform(value: Array<any>): Array<any> {\r\n        return value.filter((item: any) => item.majorPrice === true);\r\n    }\r\n}\r\n\r\n@Pipe({ name: 'isMinorPrice' })\r\nexport class IsMinorPricePipe implements PipeTransform {\r\n    transform(value: Array<any>): Array<any> {\r\n        return value.filter((item: any) => item.majorPrice === false);\r\n    }\r\n}\r\n","import { TpPricecalcModule } from '../pricecalc/TpPricecalcModule';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpBuylayerComponent } from './TpBuylayerComponent';\r\nimport { TpBuylayerLeftComponent } from './TpBuylayerLeftComponent';\r\nimport { TpBuylayerRightComponent } from './TpBuylayerRightComponent';\r\nimport { TiButtonModule, TiLocaleModule, TiTipModule } from '@cloud/tiny3';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TpDiscountsModule } from '../discounts/TpDiscountsModule';\r\nimport { IsMajorPricePipe, IsMinorPricePipe } from './IsMajorPrice';\r\nimport { TpLocaleModule } from '../../pipes/locale/TpLocaleModule';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, TiButtonModule,\r\n      TpDiscountsModule, TpIconModule, TpLocaleModule,  TiLocaleModule, TiTipModule, TpPricecalcModule],\r\n  exports: [TpBuylayerComponent, TpBuylayerLeftComponent, TpBuylayerRightComponent],\r\n  declarations: [IsMajorPricePipe, IsMinorPricePipe, TpBuylayerComponent, TpBuylayerLeftComponent, TpBuylayerRightComponent]\r\n})\r\n\r\nexport class TpBuylayerModule {}\r\nexport { TpBuylayerComponent, TpBuylayerConfig } from './TpBuylayerComponent';\r\nexport { TpButtons, TpBuylayerRightComponent } from './TpBuylayerRightComponent';\r\nexport { TpCosts, TpBuylayerLeftComponent } from './TpBuylayerLeftComponent';\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * 卡片组件\r\n *\r\n * <example-url>../tinyplus3demo/#/card/card-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-card',\r\n    template: `\r\n      <ng-content ></ng-content>\r\n    `,\r\n    styleUrls: ['./card.less'],\r\n    host: {\r\n        '[class.tp-card-disabled]': 'disabled',\r\n        '[class.tp-card-active]': 'active',\r\n        '[attr.tabindex]': 'disabled? \"-1\":\"0\"'\r\n    }\r\n})\r\n\r\nexport class TpCardComponent extends TiBaseComponent {\r\n    /**\r\n     * 卡片禁用状态\r\n     */\r\n    @Input() disabled: boolean = false;\r\n    /**\r\n     * 卡片激活选中状态\r\n     */\r\n    @Input() active: boolean = false;\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n *  特殊卡片组件，添加卡片组件\r\n *\r\n * <example-url>../tinyplus3demo/#/card/card-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-card-add',\r\n    templateUrl: './card-add.html',\r\n    styleUrls: ['./card-add.less'],\r\n    host: {\r\n        '[class.tp-card-add-disabled]': 'disabled',\r\n        '[attr.tabindex]': 'disabled? \"-1\":\"0\"'\r\n    }\r\n})\r\n\r\nexport class TpCardAddComponent extends TiBaseComponent {\r\n    /**\r\n     * 禁用状态\r\n     */\r\n    @Input() disabled: boolean = false;\r\n    /**\r\n     * 点击事件\r\n     */\r\n    @Output() readonly add: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @ignore\r\n     * 加号点击回调\r\n     */\r\n    public onClick($event: Event): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        this.add.emit($event);\r\n    }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n/**\r\n * <example-url>../tinyplus3demo/#/card/card-all</example-url>\r\n */\r\n@Component({\r\n  selector: 'tp-card-header',\r\n  template: `\r\n    <ng-content></ng-content>\r\n   `,\r\n  styleUrls: ['./card-header.less'],\r\n})\r\nexport class TpCardHeaderComponent {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpCardComponent } from './TpCardComponent';\r\nimport { TpCardAddComponent } from './TpCardAddComponent';\r\nimport { TpCardHeaderComponent } from './TpCardHeaderComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpIconModule\r\n  ],\r\n  declarations: [\r\n    TpCardComponent,\r\n    TpCardAddComponent,\r\n    TpCardHeaderComponent\r\n  ],\r\n  exports: [\r\n    TpCardComponent,\r\n    TpCardAddComponent,\r\n    TpCardHeaderComponent\r\n  ]\r\n})\r\n\r\nexport class TpCardModule {}\r\nexport { TpCardComponent } from './TpCardComponent';\r\nexport { TpCardAddComponent } from './TpCardAddComponent';\r\nexport { TpCardHeaderComponent } from './TpCardHeaderComponent';\r\n","import { Component, EventEmitter, Input, Output, QueryList, SimpleChanges, ViewChild, ViewChildren } from '@angular/core';\r\nimport { TiDominatorComponent, TiDropComponent, TiDroplistComponent, TiFormComponent, TiListComponent,\r\n    TiPositionType, TiWholeComponent} from '@cloud/tiny3';\r\n\r\nexport interface TpCascaderItem {\r\n    label?: string;\r\n    disabled?: boolean;\r\n    /**\r\n     * 二级面板数据\r\n     *\r\n     * 包含：1.label：显示文本 2.disabled：禁用 3.tip：提示信息 4.tipPosition：方位，默认为‘right’\r\n     */\r\n    children?: Array<{\r\n        label?: string;\r\n        disabled?: boolean;\r\n        tip?: any;\r\n        tipPosition?: TiPositionType;\r\n        [propName: string]: any;\r\n    }>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * 级联选择器 目前只支持二级或三级级联\r\n *\r\n * <example-url>../tinyplus3demo/#/cascader/cascader-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-cascader',\r\n    templateUrl: './cascader.html',\r\n    styleUrls: ['./cascader.less'],\r\n    providers: [TiFormComponent.getValueAccessor(TpCascaderComponent)],\r\n    host: {\r\n        '(blur)': 'onBlur()',\r\n        '[class.tp-cascader-dominator]': 'true'\r\n    }\r\n})\r\n\r\nexport class TpCascaderComponent extends TiFormComponent {\r\n  // TODO: add explicit constructor\r\n\r\n  // TODO: add explicit constructor\r\n\r\n    /**\r\n     * 数据列表\r\n     */\r\n    @Input() items: Array<TpCascaderItem>;\r\n    /**\r\n     * 是否开启清空输入框内容的功能\r\n     */\r\n    @Input() clearable: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * 10.1.0新增\r\n     */\r\n    // @Input() searchable: boolean = false;\r\n    /**\r\n     * 预留文本\r\n     */\r\n    @Input() placeholder: string;\r\n    /**\r\n     * 显示的字段\r\n     */\r\n    @Input() labelKey: string = 'label';\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 单级面板的宽度\r\n     */\r\n    @Input() panelWidth: string = '160px';\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 面板高度\r\n     */\r\n    @Input() panelHeight: string = '248px';\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 是否只能选中叶子节点\r\n     */\r\n    @Input() onlySelectLeaf: boolean = true;\r\n    /**\r\n     * 10.0.4 新增\r\n     *\r\n     * 在选择框上呈现的数据是否显示全部路径\r\n     */\r\n    @Input() showAllLevel: boolean = true;\r\n    /**\r\n     * 10.1.1新增\r\n     * 指定选中值的字段\r\n     */\r\n    @Input() valueKey: string;\r\n\r\n    /**\r\n     * @ignore\r\n     * 选中事件，选中项没有变化\r\n     */\r\n    @Output() readonly select: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     * 选中事件，选中项变化\r\n     */\r\n    @Output() readonly change: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * 清除已选项\r\n     */\r\n    @Output() readonly clear: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiDominatorComponent, {static: true}) dominatorCom: TiDominatorComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiDropComponent) dropCom: TiDropComponent;\r\n    /**\r\n     * @ignore 呈现各级数据的list\r\n     */\r\n    @ViewChildren('commonList') listComs: QueryList<TiListComponent>;\r\n    /**\r\n     * @ignore 宽的面板，是一个droplist，用于无数据和搜索场景\r\n     */\r\n    @ViewChild('wideDroplist') wideDroplist: TiDroplistComponent;\r\n    /**\r\n     * @ignore 分隔符 以后可能会对外开放\r\n     */\r\n    public separator: string = '/';\r\n    /**\r\n     * @ignore 转化为数字的panelWidth\r\n     */\r\n    public panelWidthNum: number;\r\n    /**\r\n     * @ignore 三个TiListComponent的model\r\n     */\r\n    public listModel: Array<any> = [];\r\n    /**\r\n     * @ignore 用于dominator呈现数据\r\n     */\r\n    public dominatorModel: string;\r\n    /**\r\n     * @ignore\r\n     * itemsArr[0]存放根面板内容，itemArr[1]存放次级面板内容，itemArr[2]存放次次级面板内容\r\n     */\r\n    public itemsArr: Array<Array<any>> = [];\r\n    /**\r\n     * @ignore 宽面板的数据\r\n     */\r\n    public itemForWideDroplist: Array<any> = [];\r\n    /**\r\n     * @ignore\r\n     */\r\n    public dropshow: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public listComsArr: Array<TiListComponent>;\r\n\r\n    /**\r\n     * modelWhole与model的中间变量\r\n     */\r\n    private _modelWhole: Array<TpCascaderItem>;\r\n\r\n    private valueFn: (item: any) => any = (item: any) => {\r\n        return item[this.valueKey];\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.panelWidthNum = parseInt(this.panelWidth, 10);\r\n    }\r\n    ngOnChanges(change: SimpleChanges): void {\r\n        if (change['items']) {\r\n            this.itemsArr[0] = this.items;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnModelChange(): void {\r\n        if (this.modelWhole && this.modelWhole.length > 0) {\r\n            this.joinDominatorModel();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        if (this.dropCom.isShow || this.wideDroplist.isShow) {\r\n            this.close();\r\n\r\n            return;\r\n        }\r\n        this.dropshow = true;\r\n        if (this.items.length === 0) {\r\n            this.wideDroplist.show();\r\n        } else {\r\n            /**\r\n             * 触发tiScroll关闭面板的场景下，drop不显示，但list是显示的，\r\n             * 下次重新打开时，一个或者多个list会全部显示，除第一个外，其他的都定位错误，\r\n             * 所以，需要打开前隐藏除第一个外的其他list。\r\n             */\r\n            this.listComsArr.forEach((list: TiListComponent, index: number): void => {\r\n                if (index > 0) {\r\n                    this.renderer.setStyle(list.nativeElement, 'display', 'none');\r\n                }\r\n            });\r\n            this.dropCom.show();\r\n            if (this.modelWhole && this.modelWhole.length > 0) {\r\n                this.modelWhole.forEach((item: TpCascaderItem, i: number): void => {\r\n                    this.listComsArr[i].model = item;\r\n                    this.itemsArr[i + 1] = item.children;\r\n                    this.showList(i);\r\n                    // 如果是初始有值，不加setTimeout不能滚到正确的位置\r\n                    setTimeout((): void => {\r\n                        this.listComsArr[i].scrollToSelected();\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.listComsArr[0].model = undefined;\r\n                this.showList(0);\r\n            }\r\n        }\r\n\r\n        this.focus();\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.listComsArr = this.listComs.toArray();\r\n        this.setFocusableElems(this.dominatorCom.getFocusableElems());\r\n        this.renderer.setStyle(this.dropCom.nativeElement, 'width', '');\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public close(): void {\r\n        this.dropshow = false;\r\n        this.dropCom.hide();\r\n        this.wideDroplist.hide();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onBlur(): void {\r\n        this.close();\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onSelect($event: TpCascaderItem, panelIndex: number): void {\r\n        // 处理面板\r\n        if ($event.children?.length > 0) {\r\n            // 关闭次次级面板\r\n            for (let i: number = panelIndex + 1; i < this.listComsArr.length - 1; i++) {\r\n                this.renderer.setStyle(this.listComsArr[i + 1].nativeElement, 'display', 'none');\r\n            }\r\n            // 打开次级面板\r\n            this.itemsArr[panelIndex + 1] = $event.children;\r\n            this.showList(panelIndex + 1);\r\n        } else {\r\n            // 关闭次级以后所有面板\r\n            this.close();\r\n        }\r\n        this.listModel = this.listModel || [];\r\n        this.listModel.splice(panelIndex);\r\n        this.listModel.push($event);\r\n        if (!this.onlySelectLeaf || !$event.children || $event.children.length === 0) {\r\n            this.modelWhole = [...this.listModel];\r\n            this.handleModel($event, panelIndex);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClear(): void {\r\n        this.model = [];\r\n        this.clear.emit();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onMouseleave(panelIndex: number): void {\r\n        this.listComsArr[panelIndex].hoverOption = undefined;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public showList(panelIndex: number): void {\r\n        this.renderer.setStyle(this.listComsArr[panelIndex].nativeElement, 'display', 'inline-block');\r\n        this.renderer.setStyle(this.dropCom.nativeElement, 'width', this.panelWidthNum * (panelIndex + 1) + 'px');\r\n        if (!this.listComsArr[panelIndex].model) {\r\n            this.listComsArr[panelIndex].hoverOption = undefined;\r\n        }\r\n    }\r\n\r\n    private handleModel($event: TpCascaderItem, panelIndex: number): void {\r\n        // 处理数据\r\n        this.listModel.splice(panelIndex);\r\n        this.listModel[panelIndex] = $event;\r\n        this.joinDominatorModel();\r\n    }\r\n\r\n    /**\r\n     * 通过model拼接dominatorModel，显示在dominator上\r\n     */\r\n    private joinDominatorModel(): void {\r\n        this.dominatorModel = '';\r\n        if (this.showAllLevel) {\r\n            this.modelWhole.forEach((item: any, index: number): void => {\r\n                if (index === 0) {\r\n                    this.dominatorModel += `${item[this.labelKey]}`;\r\n                } else {\r\n                    this.dominatorModel += `${this.separator}${item[this.labelKey]}`;\r\n                }\r\n            });\r\n        } else {\r\n            this.dominatorModel = this.modelWhole[this.model.length - 1][this.labelKey];\r\n        }\r\n    }\r\n\r\n    writeValue(model): void {\r\n        // super.writeValue(model);\r\n        if (model && this.valueKey) {\r\n            this._modelWhole = this.items.filter((item) => model.includes(this.valueFn(item)));\r\n            if (this._modelWhole[0].children) {\r\n                const nextModelWhole: TpCascaderItem = this._modelWhole[0].children.filter((item) => model.includes(this.valueFn(item)))[0];\r\n                this._modelWhole.push(nextModelWhole);\r\n                if (nextModelWhole.children) {\r\n                    const nextModelWhole1: TpCascaderItem =\r\n                        nextModelWhole.children.filter((item) => model.includes(this.valueFn(item)))[0];\r\n                    nextModelWhole1 && this._modelWhole.push(nextModelWhole1);\r\n                }\r\n            }\r\n        } else {\r\n            this._modelWhole = model;\r\n        }\r\n        super.writeValue(model);\r\n    }\r\n\r\n    private get modelWhole(): any {\r\n        return this._modelWhole;\r\n    }\r\n\r\n    /**\r\n     * 点选时modelWhole改变，要同时更改model\r\n     */\r\n    private set modelWhole(value: any) {\r\n        this._modelWhole = value;\r\n        if (this.valueKey && value !== undefined && value !== null) {\r\n            // 存在valueKey，且value不为空\r\n            this.model = value.map((item) => this.valueFn(item));\r\n        } else {\r\n            this.model = value;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TiDominatorModule, TiDroplistModule, TiDropModule, TiListModule, TiTipModule } from '@cloud/tiny3';\r\n\r\nimport { TpCascaderComponent } from './TpCascaderComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TiDominatorModule,\r\n    TiDropModule,\r\n    TiListModule,\r\n    TiDroplistModule,\r\n    TiTipModule\r\n  ],\r\n  exports: [TpCascaderComponent],\r\n  declarations: [TpCascaderComponent]\r\n})\r\n\r\nexport class TpCascaderModule {}\r\nexport { TpCascaderComponent, TpCascaderItem } from './TpCascaderComponent';\r\n","\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * 折叠框组件 collapsebox\r\n *\r\n * collapsebox组件是一个带有关闭操作的容器类组件，服务可自定义内容。\r\n *\r\n * <example-url>../tinyplus3demo/#/collapsebox/collapsebox-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-collapsebox',\r\n    templateUrl: './collapsebox.html',\r\n    styleUrls: ['./collapsebox.less']\r\n})\r\n\r\nexport class TpCollapseboxComponent extends TiBaseComponent {\r\n    /**\r\n     * @ignore\r\n     * 设置折叠框默认展开\r\n     */\r\n    public collapsed: boolean = false;\r\n    /**\r\n     * 是否可关闭\r\n     * 10.0.3新增\r\n     */\r\n    @Input() closeable: boolean = true;\r\n    /**\r\n     * 关闭事件\r\n     * 10.0.3新增\r\n     */\r\n    @Output() readonly close: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     * 10.0.3新增\r\n     */\r\n    public onClickClose(event: Event): void {\r\n        if (this.close.observers.length > 0) {\r\n            this.close.emit();\r\n        } else {\r\n            this.collapsed = true;\r\n        }\r\n    }\r\n }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { TiCollapseModule, TiOutlineModule } from '@cloud/tiny3';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpCollapseboxComponent } from './TpCollapseboxComponent';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    TiCollapseModule,\r\n    TpIconModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpCollapseboxComponent],\r\n  declarations: [TpCollapseboxComponent]\r\n})\r\n\r\nexport class TpCollapseboxModule {}\r\nexport { TpCollapseboxComponent } from './TpCollapseboxComponent';\r\n","import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * 折叠按钮组件，在高级搜索场景中使用\r\n *\r\n * <example-url>../tinyplus3demo/#/collapsebutton/collapsebutton-all</example-url>\r\n */\r\n@Component({\r\n  selector: 'tp-collapsebutton',\r\n  templateUrl: './collapsebutton.html',\r\n  styleUrls: ['./collapsebutton.less'],\r\n  host: {\r\n    '[class.tp-collapsebutton-uncollapsed]': '!collapsed'\r\n  }\r\n})\r\nexport class TpCollapsebuttonComponent extends TiBaseComponent {\r\n\r\n  /**\r\n   * 是否折叠，true：折叠状态 false：非折叠状态，双向绑定\r\n   */\r\n  @Input() collapsed: boolean = true;\r\n  /**\r\n   * 高级搜索显示的筛选条件数目（10.0.4 版本新增）\r\n   */\r\n  @Input() searchCount: number = 0;\r\n  /**\r\n   *  折叠状态改变事件，用于实现折叠状态双向绑定，也可单独使用\r\n   */\r\n  @Output() readonly collapsedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  /**\r\n   * @ignore\r\n   * 用户自定义按钮文本\r\n   */\r\n  @ContentChild(TemplateRef) textTemplateRef: TemplateRef<any>;\r\n\r\n  /**\r\n   * @ignore\r\n   * 按钮点击事件处理\r\n   */\r\n  public onClickToggle($event: Event): void {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedChange.emit(this.collapsed);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\n/**\r\n * 高级搜索中的面板，可选择使用。\r\n */\r\n@Component({\r\n  selector: 'tp-collapsepanel',\r\n  template: `\r\n    <ng-content></ng-content>\r\n  `,\r\n  styleUrls: ['./collapsepanel.less']\r\n})\r\nexport class TpCollapsepanelComponent {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TiButtonModule, TiLocaleModule } from '@cloud/tiny3';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpCollapsebuttonComponent } from './TpCollapsebuttonComponent';\r\nimport { TpCollapsepanelComponent } from './TpCollapsepanelComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiButtonModule,\r\n    TiLocaleModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [\r\n    TpCollapsebuttonComponent,\r\n    TpCollapsepanelComponent\r\n  ],\r\n  declarations: [\r\n    TpCollapsebuttonComponent,\r\n    TpCollapsepanelComponent\r\n  ]\r\n})\r\n\r\nexport class TpCollapsebuttonModule { }\r\nexport { TpCollapsebuttonComponent } from './TpCollapsebuttonComponent';\r\nexport { TpCollapsepanelComponent } from './TpCollapsepanelComponent';\r\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { TiFormComponent, TiLocale } from '@cloud/tiny3';\r\n\r\n/**\r\n * NPS评分组件\r\n *\r\n * <example-url>../tinyplus3demo/#/score/score-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-score',\r\n    templateUrl: './score.html',\r\n    styleUrls: ['./score.less'],\r\n    providers: [ TiFormComponent.getValueAccessor(TpScoreComponent) ]\r\n})\r\n\r\nexport class TpScoreComponent extends TiFormComponent {\r\n    /**\r\n     * 设置最小评分值文本描述\r\n     */\r\n    @Input() minText: string;\r\n    /**\r\n     * 设置最大评分值文本描述\r\n     */\r\n    @Input() maxText: string;\r\n\r\n    /**\r\n     * @ignore\r\n     * 定义含有11项成员的数组\r\n     */\r\n    public scoreArray: Array<any> = new Array(11);\r\n\r\n    constructor(protected hostRef: ElementRef, protected renderer: Renderer2) {\r\n        super(hostRef, renderer);\r\n        this.minText = this.minText || TiLocale.getLocaleWords().tpScore.minText;\r\n        this.maxText = this.maxText || TiLocale.getLocaleWords().tpScore.maxText;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 选择评分时，触发事件\r\n     */\r\n    public onClick(value: number): void {\r\n        this.model = value;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpScoreComponent } from './TpScoreComponent';\r\nimport { TiOutlineModule } from '@cloud/tiny3';\r\n@NgModule({\r\n  imports: [CommonModule, TiOutlineModule],\r\n  exports: [TpScoreComponent],\r\n  declarations: [TpScoreComponent]\r\n})\r\n\r\nexport class TpScoreModule { }\r\nexport { TpScoreComponent } from './TpScoreComponent';\r\n","import { Component, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';\r\n\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\n\r\nimport { TpUtil } from './../../utils/TpUtil';\r\n\r\nexport interface TpQuestionInfo {\r\n    /**\r\n     * 问题Id\r\n     *\r\n     */\r\n    questionId: string;\r\n    /**\r\n     * 问题的类型，有radio和essay、两种类型\r\n     *\r\n     */\r\n    type: 'radio' | 'essay';\r\n    /**\r\n     * 问题是否呈现\r\n     */\r\n    show: boolean;\r\n    /**\r\n     * 问题是否是必选\r\n     *\r\n     */\r\n    require: boolean;\r\n    /**\r\n     * 问题的名称\r\n     *\r\n     */\r\n    title: string;\r\n}\r\n\r\nexport interface TpSurveyOptions {\r\n    /**\r\n     * 服务Id，各个服务需要唯一\r\n     *\r\n     */\r\n    serviceId: string;\r\n    /**\r\n     * 触点Id，一个服务内的触点Id需要保证唯一\r\n     *\r\n     */\r\n    contactId: string;\r\n    /**\r\n     * 触点名称，用于拼接问题\r\n     *\r\n     */\r\n    contactName: string;\r\n}\r\n/**\r\n * 满意度调查组件\r\n *\r\n * 10.0.3版本新增\r\n *\r\n * <example-url>../tinyplus3demo/#/contactsurvey/contactsurvey-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-contactsurvey',\r\n    templateUrl: './contactsurvey.html',\r\n    styleUrls: ['./contactsurvey.less'],\r\n    host: {\r\n        class: 'tp-contactsurvey-container' // 给最外层元素加样式类\r\n    }\r\n})\r\n\r\nexport class TpContactsurveyComponent extends TiBaseComponent implements OnInit {\r\n    /**\r\n     * 常量配置(90天对应的毫秒数)\r\n     */\r\n    private static readonly MILLISECONDS_PER_MONTH: number =  90 * 24 * 60 * 60 * 1000;\r\n    /**\r\n     * 组件传入数据\r\n     *\r\n     */\r\n    @Input() options: TpSurveyOptions;\r\n    /**\r\n     * @ignore\r\n     * 是否显示满意度调查组件，默认不显示。符合某些条件才会展示出来。\r\n     */\r\n    public showContactsurvey: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * 控制提交按钮是否禁用，默认为禁用\r\n     */\r\n    public submitDisabled: boolean = true;\r\n    /**\r\n     * @ignore\r\n     * 国际化词条对象\r\n     */\r\n    public tpContactsurvey: any = TiLocale.getLocaleWords().tpContactsurvey;\r\n    /**\r\n     * @ignore\r\n     * 评分值\r\n     */\r\n    public scoreValue: number;\r\n    /**\r\n     * @ignore\r\n     * 文本框组件输入值\r\n     */\r\n    public textareaValue: string;\r\n    /**\r\n     * @ignore\r\n     * 模板中展示的题目\r\n     */\r\n    public displayData: Array<TpQuestionInfo> = [];\r\n    /**\r\n     * @ignore\r\n     * 用户反馈的答案\r\n     */\r\n    public submitAnswer: Array<any> = [];\r\n    /**\r\n     * 类生产环境的请求数据\r\n     */\r\n    private devConfig: any = {\r\n        backend: 'https://console.ulanqab.huawei.com/nps-api',\r\n        surveyId: 'hwcloudbusurvey_key_fbd25bdbdb89'\r\n    };\r\n    /**\r\n     * 现网环境的请求数据\r\n     */\r\n    private prodConfig: any = {\r\n        backend: 'https://voc.huaweicloud.com/survey-api',\r\n        surveyId: 'hwcloudbusurvey_key_fbd25bdbdb89'\r\n    };\r\n    /**\r\n     * 用户ID，作为用户的唯一标识\r\n     */\r\n    private userId: string = '';\r\n    /**\r\n     * 默认为类生产环境配置\r\n     */\r\n    public config: any = this.devConfig;\r\n    constructor(private elementRef: ElementRef, private renderer2: Renderer2) {\r\n        super(elementRef, renderer2);\r\n        if (location.hostname.indexOf('huaweicloud.com') > -1) {\r\n            this.config = this.prodConfig;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        CfUtil.getUser()\r\n            .then((user: any): void => {\r\n                const root: any = user;\r\n                const camel: any = CfUtil.getHttpService();\r\n                const msgService: any = CfUtil.getMessage();\r\n                if (!camel || !msgService || !root || !Util.isFunction(camel.get) || !Util.isFunction(msgService.showSuccess)) {\r\n                    return;\r\n                }\r\n                const userId: string = root.domainId;\r\n                this.userId = userId;\r\n                const url: string = `${this.config.backend}/api/get/commit/date?surveyId={survey_id}&userId={user_id}&serviceId={service_id}&contactId={contact_id}`;\r\n                if (userId) {\r\n                    camel.get({\r\n                        url: {\r\n                            s: url,\r\n                            o: {\r\n                                survey_id: this.config.surveyId,\r\n                                user_id: userId,\r\n                                service_id: this.options.serviceId,\r\n                                contact_id: this.options.contactId\r\n                            }\r\n                        }\r\n                    })\r\n                    .then((response: any): void => {\r\n                        // 后台返回的日期格式yyyy-MM-dd，在IE下Date.parse为NaN，导致组件提交成功后还会出现。需要转成yyyy/mm/dd，目前这种格式在3个浏览器都OK\r\n                        const submitDate: any = Date.parse(response.data.replace(/-/g, '/'));\r\n                        // 如果是非法日期，或者没有提交为''，则重新赋值为0。否则会出现NaN，组件展示不出来。\r\n                        const milliSeconds: number = isNaN(submitDate) ? 0 : submitDate;\r\n\r\n                        // 查询上次提交的日期，如果小于90天则不显示。否则，看之前用户是否点击关闭按钮\r\n                        if (new Date().getTime() - milliSeconds > TpContactsurveyComponent.MILLISECONDS_PER_MONTH) {\r\n                            const tinyContactSurvey: string =\r\n                            Util.isUndefined(TpUtil.getCookie('tinyContactSurvey')) ? '' : TpUtil.getCookie('tinyContactSurvey');\r\n\r\n                            if (tinyContactSurvey.indexOf(`${userId}${this.options.serviceId}${this.options.contactId}`) === -1) {\r\n                                this.showContactsurvey = true;\r\n                            }\r\n                        }\r\n                    }, (): void => {\r\n                        // 数据请求失败，不出现该组件。如果出现错误提示，会给用户带来困扰。\r\n                    });\r\n                }\r\n            });\r\n        // 在模板中用于展示的问题数据\r\n        this.displayData = [{\r\n            questionId: 'question1',\r\n            type: 'radio',\r\n            show: true, // 初始是否需要显示\r\n            require: true, // 是够是必选\r\n            title: Util.formatEntry(this.tpContactsurvey.contactSurvey_question1_title, [this.options.contactName])\r\n        }, {\r\n            questionId: 'question2',\r\n            type: 'essay',\r\n            show: false,\r\n            require: false,\r\n            title: this.tpContactsurvey.contactSurvey_question2_title\r\n        }];\r\n    }\r\n    /**\r\n     * @ignore\r\n     *  叉号图标点击事件\r\n     */\r\n    public onClickClose(): void {\r\n        const closedList: string = Util.isUndefined(TpUtil.getCookie('tinyContactSurvey')) ? '' : TpUtil.getCookie('tinyContactSurvey');\r\n        TpUtil.setCookie('tinyContactSurvey', `${closedList}${this.userId}${this.options.serviceId}${this.options.contactId},`);\r\n        this.showContactsurvey = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 调查结果提交事件\r\n     */\r\n    public onClickSubmit(): void {\r\n        CfUtil.getUser().then((user: any): void => {\r\n            const root: any = user;\r\n            const camel: any = CfUtil.getHttpService();\r\n            const msgService: any = CfUtil.getMessage();\r\n            if (!camel || !msgService || !root || !Util.isFunction(camel.post) || !Util.isFunction(msgService.showSuccess)) {\r\n                return;\r\n            }\r\n            const url: string = `${this.config.backend}/api/save`;\r\n            // 发送请求，向后台发送问卷结果\r\n            const sendData: any = {\r\n                data: {\r\n                    surveyId: this.config.surveyId,\r\n                    serviceId: this.options.serviceId,\r\n                    contactId: this.options.contactId,\r\n                    w3account: root.domainId, // 用户ID\r\n                    answers: this.submitAnswer\r\n                }\r\n            };\r\n\r\n            camel.post({\r\n                url: {\r\n                    s: url\r\n                },\r\n                params: sendData\r\n            })\r\n            .then((): void => { }, (): void => { });\r\n\r\n            this.showContactsurvey = false;\r\n            msgService.showSuccess(this.tpContactsurvey.contactSurvey_submit_success);\r\n        }, (): void => { });\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击评分组件\r\n     */\r\n    public changeScore(score: number): void {\r\n        if (!this.displayData[1].show) {\r\n            this.displayData[1].show = true;\r\n        }\r\n\r\n        this.initAnswerArrray();\r\n\r\n        // 对于单选来说，answer和subRemark的值一样\r\n        this.submitAnswer[0].answer = score;\r\n        this.submitAnswer[0].subRemark = score;\r\n\r\n        this.submitDisabled = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 文本框失焦事件\r\n     */\r\n    public onBlur(value: string): void {\r\n        this.submitAnswer[1].answer = value;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 初始化答案对象，用于给后台下发\r\n     */\r\n    public initAnswerArrray(): void {\r\n        for (let i: number = 0; i < this.displayData.length; i++) {\r\n            this.submitAnswer[i] = { };\r\n            this.submitAnswer[i].questionId = this.displayData[i].questionId;\r\n            this.submitAnswer[i].subQuestionId = null;\r\n            this.submitAnswer[i].subName = this.displayData[i].title;\r\n            this.submitAnswer[i].answer = '';\r\n            this.submitAnswer[i].subRemark = '';\r\n            if (this.displayData[i].type === 'essay') {\r\n                this.submitAnswer[i].subRemark = null;\r\n            }\r\n            this.submitAnswer[i].reason = '0';\r\n        }\r\n    }\r\n}\r\n","import { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiButtonModule, TiIconModule, TiLocaleModule, TiOutlineModule, TiTextareaModule } from '@cloud/tiny3';\r\n\r\nimport { TpScoreModule } from '../score/TpScoreModule';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpContactsurveyComponent } from './TpContactsurveyComponent';\r\n@NgModule({\r\n    imports: [\r\n        TiTextareaModule,\r\n        TpScoreModule,\r\n        TpIconModule,\r\n        TiButtonModule,\r\n        CommonModule,\r\n        TiIconModule,\r\n        FormsModule,\r\n        TiLocaleModule,\r\n        TiOutlineModule],\r\n    exports: [TpContactsurveyComponent],\r\n    declarations: [TpContactsurveyComponent]\r\n})\r\n\r\nexport class TpContactsurveyModule { }\r\nexport { TpContactsurveyComponent, TpQuestionInfo, TpSurveyOptions } from './TpContactsurveyComponent';\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@Component({\r\n    selector: 'tp-toast',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./toast.less']\r\n})\r\n\r\nexport class TpToastComponent {\r\n}\r\n","import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale, TiPopUpRef, TiPopupService, TiPosition } from '@cloud/tiny3';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { delay, throttleTime } from 'rxjs/operators';\r\n\r\nimport { TpToastComponent } from './TpToastComponent';\r\n\r\n/**\r\n * 复制组件，用于复制文本\r\n *\r\n * <example-url>../tinyplus3demo/#/copy/copy-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-copy',\r\n    templateUrl: './copy.html',\r\n    styleUrls: ['./copy.less']\r\n})\r\n\r\nexport class TpCopyComponent extends TiBaseComponent {\r\n    constructor(\r\n        protected hostRef: ElementRef,\r\n        private Renderer: Renderer2,\r\n        private tiPopup: TiPopupService<any>\r\n    ) { super(hostRef, Renderer); }\r\n    @Input() content: string;\r\n    /**\r\n     * 复制后的<strong>即时提示信息</strong>(小黑框)，\r\n     *\r\n     * 缺省值：复制成功/Copied successfully.（国际化），支持自定义\r\n     */\r\n    @Input() successTip: string;\r\n\r\n    private clickObserve: Subject<string> = new Subject();\r\n    private clickSub: Subscription;\r\n    private hideToast: Subject<string> = new Subject();\r\n    private hideToastSub: Subscription;\r\n    private deleteToast: Subject<string> = new Subject();\r\n    private deleteToastSub: Subscription;\r\n\r\n    private toast: TiPopUpRef;\r\n    private toastRef: any;\r\n    private hostSpace: number = 4; // toast距copy图标的距离\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // 创建点击事件的observe\r\n        this.createClickObserve();\r\n        // 创建hideToast的observe\r\n        this.createHideToastObserve();\r\n        // 创建deleteToast的observe\r\n        this.createDeleteToastObserve();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 图标点击事件\r\n     */\r\n    public onClick(): void {\r\n        if (!this.content) {\r\n            return;\r\n        }\r\n        this.clickObserve.next();\r\n    }\r\n    private createClickObserve(): void {\r\n        this.clickSub = this.clickObserve.pipe(\r\n            throttleTime(2000)\r\n        )\r\n        .subscribe((): void => {\r\n            // 创建textarea\r\n            const textarea: any = this.Renderer.createElement('textarea');\r\n            this.Renderer.appendChild(document.body, textarea);\r\n            this.Renderer.setStyle(textarea, 'postion', 'absolute');\r\n            this.Renderer.setStyle(textarea, 'top', '-9999px');\r\n            this.Renderer.setStyle(textarea, 'left', '-9999px');\r\n            this.Renderer.setProperty(textarea, 'value', this.content);\r\n            textarea.select();\r\n            document.execCommand('Copy');\r\n            this.Renderer.removeChild(document.body, textarea);\r\n            // 复制成功后，显示即时提示信息\r\n            this.showToast();\r\n            // 显示后隐藏\r\n            this.hideToast.next();\r\n        });\r\n    }\r\n    private createHideToastObserve(): void {\r\n        this.hideToastSub = this.hideToast.pipe(delay(1000))\r\n            .subscribe(() => {\r\n                this.Renderer.addClass(this.toastRef.location.nativeElement, 'fadeout');\r\n                // 隐藏后删除\r\n                this.deleteToast.next();\r\n            });\r\n    }\r\n    private createDeleteToastObserve(): void {\r\n        this.deleteToastSub = this.deleteToast.pipe(delay(300))\r\n            .subscribe(() => {\r\n                this.toast.hide();\r\n            });\r\n    }\r\n    /**\r\n     * 复制成功后，显示toast提示\r\n     */\r\n    private showToast(): void {\r\n        this.toast = this.tiPopup.create(TpToastComponent);\r\n        this.toastRef = this.toast.show({\r\n            content: this.successTip || TiLocale.getLocaleWords().tpCopy.successTip,\r\n            container: 'body'\r\n        });\r\n        TiPosition.setPosition({\r\n            hostEle: this.hostRef.nativeElement,\r\n            targetEle: this.toastRef.location.nativeElement,\r\n            hostSpace: this.hostSpace,\r\n            fixMaxHeight: true,\r\n            determinPositionFn: (layout: any): string => {\r\n                if (layout.avilableLayout.right >= layout.targetLayout.width + this.hostSpace) {\r\n                    return 'right';\r\n                } else {\r\n                    return 'left';\r\n                }\r\n            }\r\n\r\n        });\r\n        this.Renderer.addClass(this.toastRef.location.nativeElement, 'fadein');\r\n    }\r\n    ngOnDestroy(): void {\r\n        if (this.toast) {\r\n            this.toast.hide();\r\n        }\r\n        this.clickSub.unsubscribe();\r\n        this.hideToastSub.unsubscribe();\r\n        this.deleteToastSub.unsubscribe();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TiPopupModule, TiOutlineModule } from '@cloud/tiny3';\r\nimport { TpCopyComponent } from './TpCopyComponent';\r\nimport { TpToastComponent } from './TpToastComponent';\r\n\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiPopupModule,\r\n    TpIconModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpCopyComponent],\r\n  declarations: [TpCopyComponent, TpToastComponent],\r\n  entryComponents: [TpToastComponent]\r\n})\r\n\r\nexport class TpCopyModule {}\r\nexport { TpCopyComponent } from './TpCopyComponent';\r\n","// tslint:disable-next-line: no-implicit-dependencies\r\nimport { Component, Input } from '@angular/core';\r\nimport { TiLocale, TiBaseComponent } from '@cloud/tiny3';\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\nimport { TpDatePipe } from '../../pipes/locale/TpLocaleModule';\r\n\r\n/*\r\n* 倒计时类别, 详情参考“云运营公共接口说明”文档，2.21云服务倒计时信息查询\r\n*/\r\nexport type TpCountDownCode = 'hws_countdown_period_using'\r\n    | 'hws_countdown_period_gracing'\r\n    | 'hws_countdown_period_frozen'\r\n    | 'hws_countdown_period_illegalfrozen'\r\n    | 'hws_countdown_period_policefrozen'\r\n    | 'hws_countdown_period_toondemand'\r\n    | 'hws_countdown_ondemand_using'\r\n    | 'hws_countdown_ondemand_gracing'\r\n    | 'hws_countdown_ondemand_frozen'\r\n    | 'hws_countdown_ondemand_illegalfrozen'\r\n    | 'hws_countdown_ondemand_illegalfrozen_arrear'\r\n    | 'hws_countdown_ondemand_policefrozen';\r\n\r\n/**\r\n * 倒计时信息，接口是根据\"云运营公共接口说明\"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口\r\n */\r\nexport interface TpCountDownInfos {\r\n    status: number;\r\n    nextOperationRemainingDay: number;\r\n    nextOperationRemainingHour: number;\r\n    nextOperationRemainingMinute: number;\r\n    nextOperationRemainingSecond: number;\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 倒计时信息提示信息，接口是根据\"云运营公共接口说明\"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口\r\n */\r\nexport interface TpCountDownTips {\r\n    effTime: string; // 资源生效时间（即资源创建时间）\r\n    expTime: string; // 资源到期时间，如果已经欠费，则为资源欠费时间。\r\n    graceTime: string; // 宽限期结束时间\r\n    releaseTime: string; // 资源释放时间\r\n    frozenTime: string; // 资源冻结时间\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 资源倒计时组件\r\n * <example-url>../tinyplus3demo/#/countdown/countdown-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-countdown',\r\n    templateUrl: './countdown.html',\r\n    styleUrls: ['./countdown.less']\r\n})\r\n\r\nexport class TpCountdownComponent extends TiBaseComponent {\r\n\r\n    /**\r\n     * 是否显示资源的状态\r\n     */\r\n    @Input() showStatus: boolean = true;\r\n    /**\r\n     * 倒计时类别，即倒计时countDownCode字段\r\n     */\r\n    @Input() countDownCode: TpCountDownCode;\r\n    /**\r\n     * 倒计时数据, 和2.21云服务倒计时信息查询接口返回的countDownInfos一致\r\n     */\r\n    @Input() countDownInfos: TpCountDownInfos;\r\n    /**\r\n     * tip提示数据，和2.21云服务倒计时信息查询接口返回的TpCountDownTips一致\r\n     */\r\n    @Input() countDownTips: TpCountDownTips;\r\n\r\n    /**\r\n     * @ignore\r\n     * 倒计时最后显示的文本\r\n     */\r\n    public countdownText: string = '';\r\n    /**\r\n     * @ignore\r\n     * tip 的内容\r\n     */\r\n    public tipContext: any = [];\r\n    /**\r\n     * @ignore\r\n     * tip 的最大宽度\r\n     */\r\n    public tipMaxWidth: string = '500px';\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // 生成倒计时内容\r\n        this.generateContent();\r\n        // 生成tip内容\r\n        this.generateTipContent();\r\n    }\r\n\r\n    /**\r\n     * 生成倒计时内容\r\n     */\r\n    private generateContent(): void {\r\n       // 时间间隔\r\n       let timespan: string = '';\r\n       // 时间信息\r\n       let hourInfo: string = '';\r\n       let minuteInfo: string = '';\r\n       //  根据返回时间拼接出时间间隔  {d} 天数 {h} 小时数 {m} 分钟数\r\n       if (this.countDownInfos) {\r\n           if (this.countDownInfos.nextOperationRemainingDay) {\r\n               timespan = this.countDownInfos.nextOperationRemainingDay > 1 ?\r\n                   TiLocale.getLocaleWords().tpCountdown.day\r\n                       .replace(/{d}/, this.countDownInfos.nextOperationRemainingDay) :\r\n                   TiLocale.getLocaleWords().tpCountdown.day\r\n                       .replace(/s/, '')\r\n                       .replace(/{d}/, this.countDownInfos.nextOperationRemainingDay);\r\n           } else if (this.countDownInfos.nextOperationRemainingSecond) {\r\n               timespan = TiLocale.getLocaleWords().tpCountdown.second;\r\n           } else if (this.countDownInfos.nextOperationRemainingHour) {\r\n               hourInfo = this.countDownInfos.nextOperationRemainingHour > 1 ?\r\n                   TiLocale.getLocaleWords().tpCountdown.hour\r\n                       .replace(/{h}/, this.countDownInfos.nextOperationRemainingHour) :\r\n                   TiLocale.getLocaleWords().tpCountdown.hour\r\n                       .replace(/s/, '')\r\n                       .replace(/{h}/, this.countDownInfos.nextOperationRemainingHour);\r\n\r\n               minuteInfo = this.countDownInfos.nextOperationRemainingMinute > 1 ?\r\n                   TiLocale.getLocaleWords().tpCountdown.minute\r\n                       .replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute) :\r\n                   TiLocale.getLocaleWords().tpCountdown.minute\r\n                       .replace(/s/, '')\r\n                       .replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute);\r\n\r\n               timespan = hourInfo + ' ' + minuteInfo;\r\n           } else if (this.countDownInfos.nextOperationRemainingMinute) {\r\n               timespan = this.countDownInfos.nextOperationRemainingMinute > 1 ?\r\n                   TiLocale.getLocaleWords().tpCountdown.minute.replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute) :\r\n                   TiLocale.getLocaleWords().tpCountdown.minute.replace(/s/, '').replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute);\r\n           }\r\n       }\r\n\r\n       // 根据状态码，得到倒计时整体字符串。 {TS} 时间间隔\r\n       const statusKey: string = this.countDownCode ? this.countDownCode.slice(14) : '';\r\n       if (TiLocale.getLocaleWords().tpCountdown[statusKey]) {\r\n           this.countdownText = TiLocale.getLocaleWords().tpCountdown[statusKey]\r\n               .replace(/{TS}/, timespan);\r\n       }\r\n\r\n       // 如果是按需正常使用，没有倒计时，只提示创建时间，单独处理 {ymdhms} 是 格式为本地化日期时间\r\n       if (this.countDownCode === 'hws_countdown_ondemand_using') {\r\n           this.countdownText = this.countdownText.replace(/{ymdhms}/, new TpDatePipe().transform(this.countDownTips.effTime, 'dateTime'));\r\n       }\r\n\r\n       // 是否展示状态\r\n       if (!this.showStatus) {\r\n           this.countdownText = this.countdownText.split(TiLocale.getLocaleWords().tpCountdown.spliter)\r\n               .pop();\r\n       }\r\n\r\n       // 添加样式类 宽限期，冻结期，违规冻结 提示红色，正常使用，如果小于七天，提示黄色\r\n       if (this.countDownInfos.status > 2) {\r\n           this.nativeElement.classList.add('tp-countdown-alarm');\r\n       } else if ((this.countDownCode === 'hws_countdown_period_using' || this.countDownCode === 'hws_countdown_period_toondemand')\r\n           && this.isDayLess7()) {\r\n           this.nativeElement.classList.add('tp-countdown-warn');\r\n       }\r\n    }\r\n\r\n    // 倒计时是否小于七天\r\n    private isDayLess7(): boolean {\r\n        return !(this.countDownInfos.nextOperationRemainingDay && this.countDownInfos.nextOperationRemainingDay > 7);\r\n    }\r\n\r\n    /**\r\n     * 生成tips 内容\r\n     */\r\n    private generateTipContent(): void {\r\n        switch (this.countDownCode) {\r\n            case 'hws_countdown_period_using':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.create_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.effTime)}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: ` ${TiLocale.getLocaleWords().tpCountdown.expire_time} `,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.expTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_gracing':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.expire_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.expTime)}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time} `,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.graceTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_frozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.frozenTime)}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.releaseTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_illegalfrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time} `,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.frozenTime)}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.releaseTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_policefrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time} `,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.frozenTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_toondemand':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.create_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.effTime)}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.toonneed_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.expTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_using':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.create_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.effTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_gracing':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.arrears_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.expTime)}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.graceTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_frozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.frozenTime)}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time} `,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.releaseTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_illegalfrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.frozenTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_illegalfrozen_arrear':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: ` ${this.formatLocaleDateTime(this.countDownTips.frozenTime)} `\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.releaseTime)}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_policefrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.formatLocaleDateTime(this.countDownTips.frozenTime)}`\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 日期时间戳转换成带时区的\r\n     */\r\n    private formatLocaleDateTime(req: string): string {\r\n        return CfUtil.formatLocaleDateTime(req);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpCountdownComponent } from './TpCountdownComponent';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiTipModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports:[\r\n    CommonModule,\r\n    TiTipModule\r\n  ],\r\n  exports: [TpCountdownComponent],\r\n  declarations: [TpCountdownComponent]\r\n})\r\n\r\nexport class TpCountdownModule {}\r\nexport { TpCountdownComponent, TpCountDownCode, TpCountDownInfos, TpCountDownTips} from './TpCountdownComponent';\r\n","import { Component, Input, SimpleChanges } from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiBaseComponent, TiLocale } from '@cloud/tiny3';\r\n\r\nimport { TpDatePipe } from '../../pipes/locale/TpDatePipe';\r\n\r\nimport { TpCountCode, TpCountDownStateLevel, TpCountInfos, TpCountTips } from './TpCountComponent';\r\n\r\n/**\r\n * 表格倒计时组件\r\n *\r\n * <example-url>../tinyplus3demo/#/count/count-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-count-time',\r\n    templateUrl: './count-time.html',\r\n    styleUrls: ['./count-time.less'],\r\n    host: {\r\n        // 标记 tp-count-time 是单独使用还是在tp-count中和tp-count-state一起使用\r\n        '[class.tp-count-time-only]': 'pattern === \"only\" '\r\n    }\r\n})\r\nexport class TpCountTimeComponent extends TiBaseComponent {\r\n    /**\r\n     * 倒计时类别，即倒计时countDownCode字段\r\n     */\r\n    @Input() countDownCode: TpCountCode;\r\n    /**\r\n     * 倒计时数据, 和2.21云服务倒计时信息查询接口返回的countDownInfos一致\r\n     */\r\n    @Input() countDownInfos: TpCountInfos;\r\n    /**\r\n     * tip提示数据，和2.21云服务倒计时信息查询接口返回的TpCountDownTips一致\r\n     */\r\n    @Input() countDownTips: TpCountTips;\r\n    /**\r\n     * @ignore\r\n     * 内部使用，only 单独使用，combine 和tp-count-state 一起使用\r\n     */\r\n    @Input() pattern: 'only' | 'combine' = 'only';\r\n\r\n    /**\r\n     * @ignore\r\n     * 倒计时最后显示的文本\r\n     */\r\n    public countdownText: string = '';\r\n    /**\r\n     * @ignore\r\n     * 文字提示的颜色等级\r\n     */\r\n    public stateLevel: TpCountDownStateLevel;\r\n    /**\r\n     * @ignore\r\n     * tip 的内容\r\n     */\r\n    public tipContext: any = [];\r\n    /**\r\n     * @ignore\r\n     * tip 的最大宽度\r\n     */\r\n    public tipMaxWidth: string = '500px';\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // 生成倒计时内容\r\n        this.generateContent();\r\n        // 生成tip内容\r\n        if (this.showTip()) {\r\n            this.generateTipContent();\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        // 倒计时内容跟countDownCode和countDownInfos有关\r\n        // 倒计时的颜色提示类别跟countDownCode和countDownInfos有关\r\n        // 倒计时tip提示内容跟 countDownCode和countDownTips有关\r\n        if (changes['countDownCode'] && !changes['countDownCode'].firstChange) {\r\n            this.generateContent();\r\n            this.updateStateLevel();\r\n            this.generateTipContent();\r\n\r\n            return;\r\n        }\r\n        if (changes['countDownInfos'] && !changes['countDownInfos'].firstChange) {\r\n            this.generateContent();\r\n            this.updateStateLevel();\r\n        }\r\n        if (changes['countDownTips'] && !changes['countDownTips'].firstChange) {\r\n            this.generateTipContent();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 是否需要tip\r\n     */\r\n    public showTip(): boolean {\r\n        // tp-count-time 单独使用且资源倒计时不是按需使用状态\r\n        return this.countDownTips && this.countDownCode !== 'hws_countdown_ondemand_using';\r\n    }\r\n\r\n    /**\r\n     * 生成倒计时内容\r\n     */\r\n    private generateContent(): void {\r\n        // 时间间隔\r\n        let timespan: string = '';\r\n        // 时间信息\r\n        let hourInfo: string = '';\r\n        let minuteInfo: string = '';\r\n        //  根据返回时间拼接出时间间隔  {d} 天数 {h} 小时数 {m} 分钟数\r\n        if (this.countDownInfos) {\r\n            if (this.countDownInfos.nextOperationRemainingDay) {\r\n                timespan = this.countDownInfos.nextOperationRemainingDay > 1 ?\r\n                    TiLocale.getLocaleWords().tpCountdown.day\r\n                        .replace(/{d}/, this.countDownInfos.nextOperationRemainingDay) :\r\n                    TiLocale.getLocaleWords().tpCountdown.day\r\n                        .replace(/s/, '')\r\n                        .replace(/{d}/, this.countDownInfos.nextOperationRemainingDay);\r\n            } else if (this.countDownInfos.nextOperationRemainingHour) {\r\n                hourInfo = this.countDownInfos.nextOperationRemainingHour > 1 ?\r\n                    TiLocale.getLocaleWords().tpCountdown.hour\r\n                        .replace(/{h}/, this.countDownInfos.nextOperationRemainingHour) :\r\n                    TiLocale.getLocaleWords().tpCountdown.hour\r\n                        .replace(/s/, '')\r\n                        .replace(/{h}/, this.countDownInfos.nextOperationRemainingHour);\r\n\r\n                minuteInfo = this.countDownInfos.nextOperationRemainingMinute > 1 ?\r\n                    TiLocale.getLocaleWords().tpCountdown.minute\r\n                        .replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute) :\r\n                    TiLocale.getLocaleWords().tpCountdown.minute\r\n                        .replace(/s/, '')\r\n                        .replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute);\r\n\r\n                timespan = `${hourInfo} ${minuteInfo}`;\r\n            } else if (this.countDownInfos.nextOperationRemainingMinute) {\r\n                timespan = this.countDownInfos.nextOperationRemainingMinute > 1 ?\r\n                    TiLocale.getLocaleWords().tpCountdown.minute\r\n                        .replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute) :\r\n                    TiLocale.getLocaleWords().tpCountdown.minute\r\n                        .replace(/s/, '')\r\n                        .replace(/{m}/, this.countDownInfos.nextOperationRemainingMinute);\r\n            } else if (this.countDownInfos.nextOperationRemainingSecond) {\r\n                timespan = TiLocale.getLocaleWords().tpCountdown.second;\r\n            }\r\n        }\r\n\r\n        // 根据状态码，得到倒计时整体字符串。 {TS} 时间间隔\r\n        const statusKey: string = this.countDownCode ? this.countDownCode.slice(14) : '';\r\n        if (TiLocale.getLocaleWords().tpCount[statusKey]) {\r\n            this.countdownText = TiLocale.getLocaleWords().tpCount[statusKey]\r\n                .replace(/{TS}/, timespan);\r\n        }\r\n\r\n        // 如果是按需正常使用，没有倒计时，只提示创建时间，单独处理 {ymdhms} 是 格式为yyyy/mm/dd  hh:mm:ss 日期时间\r\n        if (this.countDownCode === 'hws_countdown_ondemand_using') {\r\n            // tslint:disable-next-line: max-line-length\r\n            this.countdownText = this.countdownText.replace(/{ymdhms}/, new TpDatePipe().transform(this.countDownInfos.createTime, 'dateTimeZone'));\r\n        }\r\n\r\n        // 更新样式提示\r\n        this.updateStateLevel();\r\n    }\r\n    private updateStateLevel(): void {\r\n        // 添加样式类 宽限期，冻结期，违规冻结 提示红色，正常使用，如果小于七天，提示黄色\r\n        if (this.countDownInfos.status > 2) {\r\n            this.stateLevel = 'alarm';\r\n        } else if ((this.countDownCode === 'hws_countdown_period_using' || this.countDownCode === 'hws_countdown_period_toondemand')\r\n            && this.isDayLess7()) {\r\n            this.stateLevel = 'warn';\r\n        }\r\n    }\r\n\r\n    // 倒计时是否小于七天\r\n    private isDayLess7(): boolean {\r\n        return !(this.countDownInfos.nextOperationRemainingDay && this.countDownInfos.nextOperationRemainingDay > 7);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 生成tips 内容\r\n     */\r\n    public generateTipContent(): void {\r\n        // 当tp-count-time 作为 tp-count 子元素时不传countDownTips\r\n        if (!this.countDownTips) {\r\n            return;\r\n        }\r\n        this.tipContext = [];\r\n        switch (this.countDownCode) {\r\n            case 'hws_countdown_period_using':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.create_time}`,\r\n                    time: `${this.countDownTips.effTime}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: ` ${TiLocale.getLocaleWords().tpCountdown.expire_time} `,\r\n                    time: `${this.countDownTips.expTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_gracing':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.expire_time}`,\r\n                    time: `${this.countDownTips.expTime}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time} `,\r\n                    time: `${this.countDownTips.graceTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_frozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.countDownTips.frozenTime}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time}`,\r\n                    time: `${this.countDownTips.releaseTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_illegalfrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time} `,\r\n                    time: `${this.countDownTips.frozenTime}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time}`,\r\n                    time: `${this.countDownTips.releaseTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_policefrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time} `,\r\n                    time: `${this.countDownTips.frozenTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_period_toondemand':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.create_time}`,\r\n                    time: `${this.countDownTips.effTime}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.toonneed_time}`,\r\n                    time: `${this.countDownTips.expTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_using':\r\n                // 按需正在使用不添加tip\r\n                break;\r\n            case 'hws_countdown_ondemand_gracing':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.arrears_time}`,\r\n                    time: `${this.countDownTips.expTime}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.countDownTips.graceTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_frozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.countDownTips.frozenTime}`\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time} `,\r\n                    time: `${this.countDownTips.releaseTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_illegalfrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.countDownTips.frozenTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_illegalfrozen_arrear':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: ` ${this.countDownTips.frozenTime} `\r\n                });\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.release_time}`,\r\n                    time: `${this.countDownTips.releaseTime}`\r\n                });\r\n                break;\r\n            case 'hws_countdown_ondemand_policefrozen':\r\n                this.tipContext.push({\r\n                    title: `${TiLocale.getLocaleWords().tpCountdown.frozen_time}`,\r\n                    time: `${this.countDownTips.frozenTime}`\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n","// tslint:disable-next-line: no-implicit-dependencies\r\nimport { Component, ElementRef, Input, Renderer2, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiLocale, TiTipRef, TiTipService, TiTipShowInfo } from '@cloud/tiny3';\r\n\r\nimport { TpCountTimeComponent } from './TpCountTimeComponent';\r\n\r\n/**\r\n * 倒计时类别, 详情参考“云运营公共接口说明”文档，2.21云服务倒计时信息查询\r\n */\r\nexport type TpCountCode = 'hws_countdown_period_using'\r\n    | 'hws_countdown_period_gracing'\r\n    | 'hws_countdown_period_frozen'\r\n    | 'hws_countdown_period_illegalfrozen'\r\n    | 'hws_countdown_period_policefrozen'\r\n    | 'hws_countdown_period_toondemand'\r\n    | 'hws_countdown_ondemand_using'\r\n    | 'hws_countdown_ondemand_gracing'\r\n    | 'hws_countdown_ondemand_frozen'\r\n    | 'hws_countdown_ondemand_illegalfrozen'\r\n    | 'hws_countdown_ondemand_illegalfrozen_arrear'\r\n    | 'hws_countdown_ondemand_policefrozen';\r\n\r\n/**\r\n * @ignore\r\n * 倒计时不同阶段对应的颜色提示类别\r\n */\r\nexport type TpCountDownStateLevel = 'normal' | 'warn' | 'alarm';\r\n\r\n/**\r\n * 倒计时信息，即countDownInfos对象类型,\r\n * 接口是根据\"云运营公共接口说明\"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口\r\n */\r\nexport interface TpCountInfos {\r\n    /**\r\n     * 资源的当前的状态,1：未生效（开通中，资源还未使用）2：生效中（未到期，可正常使用资源）\r\n     */\r\n    status: number;\r\n    /**\r\n     * 当前状态到下一步操作执行，还剩下的天数（XX>=24小时）\r\n     */\r\n    nextOperationRemainingDay?: number;\r\n    /**\r\n     * 当前状态到下一步操作执行，还剩下的小时数（24小时>XX>=1小时）\r\n     */\r\n    nextOperationRemainingHour?: number;\r\n    /**\r\n     * 当前状态到下一步操作执行，还剩下的分钟数（60分钟>XX>=1分钟）\r\n     */\r\n    nextOperationRemainingMinute?: number;\r\n    /**\r\n     * 当前状态到下一步操作执行，还剩下的秒数（60秒>XX）\r\n     *\r\n     */\r\n    nextOperationRemainingSecond?: number;\r\n    /**\r\n     * 资源创建时间\r\n     */\r\n    createTime?: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 倒计时信息提示信息，接口是根据\"云运营公共接口说明\"文档 2.21云服务倒计时信息查询接口返回数据设置，详情参考接口\r\n */\r\nexport interface TpCountTips {\r\n    /**\r\n     * 资源生效时间（即资源创建时间）\r\n     */\r\n    effTime?: string;\r\n    /**\r\n     * 资源到期时间，如果已经欠费，则为资源欠费时间。\r\n     */\r\n    expTime?: string;\r\n    /**\r\n     * 宽限期结束时间\r\n     */\r\n    graceTime?: string;\r\n    /**\r\n     * 资源释放时间\r\n     */\r\n    releaseTime?: string;\r\n    /**\r\n     * 资源冻结时间\r\n     */\r\n    frozenTime?: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n *  计费模式\r\n *  period-包周期，ondemand-按需\r\n */\r\nexport type TpCountChargingMode = 'period' | 'ondemand';\r\n\r\n/**\r\n * @ignore\r\n * 1行tip内容，内部使用\r\n */\r\nexport interface TpCountTipItem {\r\n    // 标题\r\n    title: string;\r\n    // 日期时间字符串\r\n    time: string;\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 表格倒计时组件\r\n *\r\n * tp-countdown 组件升级版，countdown组件的接口和功能保留，添加计费模式和资源状态\r\n *\r\n * 10.0.1 新增\r\n *\r\n * <example-url>../tinyplus3demo/#/count/count-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-count',\r\n    templateUrl: './count.html',\r\n    styleUrls: ['./count.less']\r\n})\r\nexport class TpCountComponent extends TpCountTimeComponent {\r\n    /**\r\n     * 计费模式\r\n     */\r\n    @Input() type: TpCountChargingMode = 'period';\r\n\r\n    /**\r\n     * @ignore\r\n     * 资源状态和倒计时的父容器，为添加tip\r\n     */\r\n    @ViewChild('stateTime', { static: false }) stateTimeRef: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 倒计时组件\r\n     */\r\n    @ViewChild(TpCountTimeComponent) countTimeCom: TpCountTimeComponent;\r\n    /**\r\n     * @ignore\r\n     * tip内容模板\r\n     */\r\n    @ViewChild('tipContent') tipContentTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     * tip实例\r\n     */\r\n    private tipInstance: TiTipRef;\r\n    /**\r\n     * @ignore\r\n     * tip 的内容\r\n     */\r\n    public tipContext: Array<TpCountTipItem> = [];\r\n\r\n    constructor(private element: ElementRef, private renderer2: Renderer2, private tipService: TiTipService) {\r\n        super(element, renderer2);\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n        if (this.showTip()) {\r\n            this.generateTipContent();\r\n            this.addTip();\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        // 倒计时tip提示内容跟 countDownCode和countDownTips有关\r\n        // 此处是资源状态和倒计时整体添加tip\r\n        if ((changes['countDownCode'] && !changes['countDownCode'].firstChange) ||\r\n            (changes['countDownTips'] && !changes['countDownTips'].firstChange)) {\r\n            // 按需正在使用阶段没有tip实例，处理按需正在使用变化成按需宽限期场景报错\r\n            if (this.tipInstance) {\r\n                this.tipInstance.destroy();\r\n            }\r\n            if (this.showTip()) {\r\n                // 按需正在使用阶段到按需宽限期，模板的ng-if 条件改变导致stateTimeRef是否存在也改变\r\n                // stateTimeRef无法立刻获取到\r\n                setTimeout((): void => {\r\n                    this.addTip();\r\n                }, 0);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     *\r\n     */\r\n    public showState(): boolean {\r\n        return !(this.countDownCode === 'hws_countdown_period_using' ||\r\n            this.countDownCode === 'hws_countdown_period_toondemand' ||\r\n            this.countDownCode === 'hws_countdown_ondemand_using');\r\n    }\r\n\r\n    private addTip(): void {\r\n        //  按需正在使用时因为显示内容和tip内容相同，所有不需要tip\r\n        if (Array.isArray(this.tipContext) && this.tipContext.length > 0\r\n            && this.countDownCode !== 'hws_countdown_ondemand_using' && this.stateTimeRef) {\r\n            this.tipInstance = this.tipService.create(this.stateTimeRef.nativeElement, {\r\n                trigger: 'mouse',\r\n                maxWidth: this.tipMaxWidth,\r\n                showFn: (): TiTipShowInfo => {\r\n                    return {\r\n                        content: this.tipContentTemplate\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","// tslint:disable-next-line: no-implicit-dependencies\r\nimport { Component, Input, SimpleChanges } from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiBaseComponent, TiLocale } from '@cloud/tiny3';\r\n\r\nimport { TpCountCode, TpCountDownStateLevel, TpCountInfos } from './TpCountComponent';\r\n\r\n/**\r\n * 表格倒计时组件\r\n *\r\n * <example-url>../tinyplus3demo/#/count/count-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-count-state',\r\n    template: `\r\n         {{ state }}{{ pattern === 'combine'? spliter:'' }}\r\n      `,\r\n    host: {\r\n        '[class.tp-count-alarm]': 'stateLevel === \"alarm\"',\r\n        '[class.tp-count-warn]': 'stateLevel === \"warn\"'\r\n    }\r\n})\r\nexport class TpCountStateComponent extends TiBaseComponent {\r\n    /**\r\n     * 倒计时类别，即倒计时countDownCode字段\r\n     */\r\n    @Input() countDownCode: TpCountCode;\r\n    /**\r\n     * 倒计时数据, 和2.21云服务倒计时信息查询接口返回的countDownInfos一致\r\n     */\r\n    @Input() countDownInfos: TpCountInfos;\r\n    /**\r\n     * @ignore\r\n     * 是单独使用，还是和tp-count-time一起使用，单独使用没有逗号，一起使用有逗号\r\n     */\r\n    @Input() pattern: 'only' | 'combine' = 'only';\r\n    /**\r\n     * @ignore\r\n     * 资源状态描述文字\r\n     */\r\n    public state: string = '';\r\n    /**\r\n     * @ignore\r\n     * 文字提示的颜色等级\r\n     */\r\n    public stateLevel: TpCountDownStateLevel;\r\n    /**\r\n     * @ignore\r\n     * 分割号，分隔号放在资源状态中，主要解决资源状态和倒计时一起使用，文字中间有空间。\r\n     */\r\n    public spliter: string = '';\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.updateState();\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        // 类型更新或倒计时更新，需要更新一下资源状态\r\n        if ((changes['countDownCode'] && !changes['countDownCode'].firstChange)\r\n            || (changes['countDownInfos'] && !changes['countDownInfos'].firstChange)) {\r\n            this.updateState();\r\n        }\r\n    }\r\n    // 更新状态文字和文字颜色类别\r\n    private updateState(): void {\r\n        switch (this.countDownCode) {\r\n            case 'hws_countdown_period_using':\r\n                this.state = TiLocale.getLocaleWords().tpCount.using;\r\n                // 包周期，资源倒计时小于7天时文字颜色区别显示\r\n                this.stateLevel = this.isDayLess7() ? 'warn' : 'normal';\r\n                break;\r\n            case 'hws_countdown_period_gracing':\r\n                this.state = TiLocale.getLocaleWords().tpCount.overdue;\r\n                // 此种倒计时需要分隔号\r\n                this.spliter = TiLocale.getLocaleWords().tpCountdown.spliter;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            case 'hws_countdown_period_frozen':\r\n                this.state = TiLocale.getLocaleWords().tpCount.frozened;\r\n                // 此种倒计时需要分隔号\r\n                this.spliter = TiLocale.getLocaleWords().tpCountdown.spliter;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            case 'hws_countdown_period_illegalfrozen':\r\n                this.state = TiLocale.getLocaleWords().tpCount.illegalFrozened;\r\n                // 此种倒计时需要分隔号\r\n                this.spliter = TiLocale.getLocaleWords().tpCountdown.spliter;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            case 'hws_countdown_period_policefrozen':\r\n                this.state = TiLocale.getLocaleWords().tpCount.illegalFrozened;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            case 'hws_countdown_period_toondemand':\r\n                this.state = TiLocale.getLocaleWords().tpCount.using;\r\n                this.stateLevel = 'warn';\r\n                break;\r\n            case 'hws_countdown_ondemand_using':\r\n                this.state = TiLocale.getLocaleWords().tpCount.using;\r\n                this.stateLevel = 'normal';\r\n                break;\r\n            case 'hws_countdown_ondemand_gracing':\r\n                this.state = TiLocale.getLocaleWords().tpCount.arrear;\r\n                this.stateLevel = 'alarm';\r\n                this.spliter = TiLocale.getLocaleWords().tpCountdown.spliter;\r\n                break;\r\n            case 'hws_countdown_ondemand_frozen':\r\n                this.state = TiLocale.getLocaleWords().tpCount.frozened;\r\n                // 此种倒计时需要分隔号\r\n                this.spliter = TiLocale.getLocaleWords().tpCountdown.spliter;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            case 'hws_countdown_ondemand_illegalfrozen':\r\n                this.state = TiLocale.getLocaleWords().tpCount.illegalFrozened;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            case 'hws_countdown_ondemand_illegalfrozen_arrear':\r\n                this.state = TiLocale.getLocaleWords().tpCount.illegalFrozened;\r\n                // 此种倒计时需要分隔号\r\n                this.spliter = TiLocale.getLocaleWords().tpCountdown.spliter;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            case 'hws_countdown_ondemand_policefrozen':\r\n                this.state = TiLocale.getLocaleWords().tpCount.illegalFrozened;\r\n                this.stateLevel = 'alarm';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    // 倒计时是否小于七天\r\n    private isDayLess7(): boolean {\r\n        return !(this.countDownInfos.nextOperationRemainingDay && this.countDownInfos.nextOperationRemainingDay > 7);\r\n    }\r\n}\r\n","// tslint:disable-next-line: no-implicit-dependencies\r\nimport { Component, Input, SimpleChanges } from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiBaseComponent, TiLocale } from '@cloud/tiny3';\r\nimport { TpCountChargingMode } from './TpCountComponent';\r\n\r\n/**\r\n * 表格倒计时组件\r\n *\r\n * <example-url>../tinyplus3demo/#/count/count-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-count-pattern',\r\n    template: `\r\n      {{ text }}\r\n    `\r\n})\r\nexport class TpCountPatternComponent extends TiBaseComponent {\r\n    /**\r\n     * 计费模式\r\n     */\r\n    @Input() type: TpCountChargingMode = 'period';\r\n\r\n    /**\r\n     * @ignore\r\n     * 计费模式显示文本\r\n     */\r\n    public text: string;\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n\r\n        this.updateText();\r\n    }\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n\r\n        if (changes['type'] && !changes['type'].firstChange) {\r\n            this.updateText();\r\n        }\r\n    }\r\n\r\n    private updateText(): void {\r\n        this.text = this.type === 'period' ?\r\n            TiLocale.getLocaleWords().tpCount.periodCharging : TiLocale.getLocaleWords().tpCount.ondemandCharging;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiLocaleModule, TiOverflowModule, TiTipModule } from '@cloud/tiny3';\r\n\r\nimport { TpLocaleModule } from '../../pipes/locale/TpLocaleModule';\r\n\r\nimport { TpCountComponent } from './TpCountComponent';\r\nimport { TpCountTimeComponent } from './TpCountTimeComponent';\r\nimport { TpCountStateComponent } from './TpCountStateComponent';\r\nimport { TpCountPatternComponent } from './TpCountPatternComponent';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TiTipModule,\r\n        TpLocaleModule,\r\n        TiOverflowModule,\r\n        TiLocaleModule\r\n    ],\r\n    exports: [TpCountComponent, TpCountTimeComponent, TpCountStateComponent, TpCountPatternComponent],\r\n    declarations: [TpCountComponent, TpCountTimeComponent, TpCountStateComponent, TpCountPatternComponent]\r\n})\r\nexport class TpCountModule { }\r\nexport { TpCountComponent, TpCountCode, TpCountInfos, TpCountTips, TpCountChargingMode } from './TpCountComponent';\r\nexport { TpCountPatternComponent } from './TpCountPatternComponent';\r\nexport { TpCountStateComponent } from './TpCountStateComponent';\r\nexport { TpCountTimeComponent } from './TpCountTimeComponent';\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale } from '@cloud/tiny3';\r\nimport { TpCountDownCode, TpCountDownInfos } from '../countdown/TpCountdownModule';\r\n\r\n/**\r\n * 倒计时提示组件\r\n *\r\n * <example-url>../tinyplus3demo/#/countdownalert/countdownalert-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-countdownalert',\r\n    templateUrl: './countdownalert.html',\r\n    styleUrls: ['./countdownalert.less']\r\n})\r\n\r\nexport class TpCountdownalertComponent extends TiBaseComponent {\r\n    /**\r\n     * 告警类型， 默认为error\r\n     */\r\n    @Input() type: 'success' | 'error' | 'warn' | 'prompt' = 'error';\r\n    /**\r\n     * 是否显示左侧提示类型图标\r\n     */\r\n    @Input() typeIcon: boolean = true;\r\n    /**\r\n     * 是否显示关闭按钮\r\n     */\r\n    @Input() closeIcon: boolean = true;\r\n    /**\r\n     * 是否显示countdownalert\r\n     */\r\n    @Input() open: boolean = false;\r\n    /**\r\n     * 显示多长时间后消失，默认不延迟消失，只在点击关闭按钮时消失\r\n     */\r\n    @Input() dismissOnTimeout: number;\r\n    /**\r\n     * 是否触发下拉类组件消失的事件，适用于countdownalert的呈现状态影响页面下拉类组件位置的场景\r\n     */\r\n    @Input() triggerScroll: boolean = false;\r\n    /**\r\n     * 自定义告警内容\r\n     */\r\n    @Input() label: string;\r\n    /**\r\n     * 倒计时时间信息（未配置label时需要定义）\r\n     */\r\n    @Input() infos: TpCountDownInfos;\r\n    /**\r\n     * 资源状态（未配置label时需要定义）\r\n     */\r\n    @Input() status:  TpCountDownCode;\r\n    /**\r\n     * 资源名称\r\n     */\r\n    @Input() resource: string;\r\n    /**\r\n     * 链接地址\r\n     *\r\n     * 包周期为续费时（status = hws_countdown_period_gracing | hws_countdown_period_frozen），服务需要传自定义续费链接；\r\n     */\r\n    @Input() linkHref: string;\r\n    /**\r\n     * 自定义客服联系电话号码\r\n     * 10.1.2 版本新增\r\n     */\r\n    @Input() phoneNumber: string;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public innerLabel: string = '';\r\n    /**\r\n     * @ignore\r\n     */\r\n    public showBuyLink: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public linkText: string;\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        if (this.label) { return; }\r\n        // 处理label\r\n        const localeWords: any = TiLocale.getLocaleWords().tpCountdownalert;\r\n        let timespan: string = '';\r\n        if (this.infos) {\r\n            timespan = this.getTimespan(this.infos, localeWords);\r\n        }\r\n\r\n        if (this.status) {\r\n            const statusKey: string = this.status ? this.status.slice(14) : '';\r\n            if (Object.keys(localeWords).indexOf(statusKey) >= 0) {\r\n                this.innerLabel = localeWords[statusKey].replace(/{TS}/, String(timespan))\r\n                    .replace(/{RN}/, this.resource || '');\r\n            } else {\r\n                // 状态正常，不需要显示alert\r\n                this.open = false;\r\n            }\r\n        }\r\n\r\n        // 处理充值续费链接：包周期为续费，服务需要传自定义链接；按需为充值，充值为固定链接\r\n        if (this.status === 'hws_countdown_period_gracing' || this.status === 'hws_countdown_period_frozen') {\r\n            this.showBuyLink = true;\r\n            this.linkText = localeWords.renew;\r\n        } else if (this.status === 'hws_countdown_ondemand_gracing' || this.status === 'hws_countdown_ondemand_frozen') {\r\n            this.showBuyLink = true;\r\n            this.linkText = localeWords.recharge;\r\n            this.linkHref = 'https://account.huaweicloud.com/usercenter/#/userindex/balanceRecharge';\r\n        }\r\n\r\n        // 国际站 联系方式处理\r\n        const intlContactPath: string = '/ticket/?#/ticketindex/createfeedback'; // 国际站联系客服路径\r\n        const url: string = `${window.location.protocol}//${window.location.host}${intlContactPath}`;\r\n        this.innerLabel = this.innerLabel.replace(\r\n            /{contactLink}/,\r\n            `<a class=\"tp-countdownalert-link\" target=\"_blank\" rel=\"noopener noreferrer\"  href=\"${url}\">${localeWords.contact_customer_service}</a>`);\r\n\r\n        // 自定义客服联系电话号码处理\r\n        this.innerLabel = this.innerLabel.replace(/{phoneNumber}/, this.phoneNumber || localeWords.phoneNumber);\r\n    }\r\n\r\n    private getTimespan(infos: TpCountDownInfos, localeWords: any): string {\r\n        // tslint:disable-next-line: typedef\r\n        const { day, hour, minute, second } = localeWords;\r\n        if (infos.nextOperationRemainingDay) {\r\n            return day.replace(/{d}/, infos.nextOperationRemainingDay);\r\n        } else if (infos.nextOperationRemainingHour) {\r\n            return hour.replace(/{h}/, infos.nextOperationRemainingHour)\r\n                .replace(/{m}/, infos.nextOperationRemainingMinute);\r\n        } else if (infos.nextOperationRemainingMinute) {\r\n            return minute.replace(/{m}/, infos.nextOperationRemainingMinute);\r\n        } else if (infos.nextOperationRemainingSecond) {\r\n            return second;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TiAlertModule, TiLocaleModule } from '@cloud/tiny3';\r\nimport { TpCountdownalertComponent } from './TpCountdownalertComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiAlertModule,\r\n    TiLocaleModule\r\n  ],\r\n  exports: [TpCountdownalertComponent],\r\n  declarations: [TpCountdownalertComponent]\r\n})\r\n\r\nexport class TpCountdownalertModule {}\r\nexport { TpCountdownalertComponent } from './TpCountdownalertComponent';\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\nexport interface TpLink {\r\n    /* tslint:disable:no-redundant-jsdoc */\r\n    /**\r\n     * 设置链接文本内容;\r\n     */\r\n    label?: string;\r\n    /**\r\n     * 设置链接地址;\r\n     */\r\n    href?: string;\r\n    /**\r\n     * 设置链接打开方式\r\n     * @default '_self'\r\n     */\r\n    target?: '_self' | '_blank' | '_parent' | '_top';\r\n    /**\r\n     * 跳转路由\r\n     * 10.0.4 新增\r\n     */\r\n    routerLink?: string | Array<any>;\r\n    /**\r\n     * 跳转路由参数\r\n     * 10.1.0 新增\r\n     */\r\n    queryParams?: Params\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n *  crumb面包屑组件\r\n *\r\n * 面包屑组件除最后一级外，其余几级一般都为可跳转的链接，链接地址可以通过href属性设置;\r\n * 用户也可通过添加事件，实现业务逻辑。\r\n *\r\n * <example-url>../tinyplus3demo/#/crumb/crumb-all</example-url>\r\n */\r\n\r\n@Component({\r\n    selector: 'tp-crumb',\r\n    templateUrl: './crumb.html',\r\n    styleUrls: ['./crumb.less']\r\n})\r\n\r\nexport class TpCrumbComponent extends TiBaseComponent {\r\n    /**\r\n     * 组件数据\r\n     */\r\n    @Input() items: Array<TpLink>;\r\n    /**\r\n     * 用户设置href属性且不是最后一级时，触发事件\r\n     */\r\n    @Output() readonly select: EventEmitter<TpLink> = new EventEmitter<TpLink>();\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(item: TpLink): boolean {\r\n        this.select.emit(item);\r\n        // 不设置链接时，阻止跳转（a标签在click事件返回值为false时，会阻止默认行为）\r\n        if (!item.href) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TiOverflowModule } from '@cloud/tiny3';\r\n\r\nimport { TpCrumbComponent } from './TpCrumbComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    TiOverflowModule\r\n  ],\r\n  exports: [TpCrumbComponent],\r\n  declarations: [TpCrumbComponent]\r\n})\r\n\r\nexport class TpCrumbModule {}\r\nexport { TpCrumbComponent, TpLink } from './TpCrumbComponent';\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\nimport { TiBaseComponent, TiPositionType } from '@cloud/tiny3';\r\n\r\n/**\r\n * 描述及购买组件，用于解释说明服务，并提供了购买等操作按钮\r\n *\r\n * <example-url>../tinyplus3demo/#/descandbuy/descandbuy-all</example-url>\r\n */\r\n\r\nexport interface TpDescandbuyConfig {\r\n    /**\r\n     * helptip的配置对象\r\n     *\r\n     * 包含label、iconTip、iconTipPosition、iconTipMaxWidth（9.0.4 版本新增）属性，参考[TpHelptip组件]{@link ../components/TpHelptipComponent.html}\r\n     */\r\n    helptip: {\r\n        label?: string;\r\n        iconTip?: string | TemplateRef<any> | any;\r\n        iconTipPosition?: TiPositionType;\r\n        iconTipMaxWidth?: string;\r\n    };\r\n    buttons: Array<Button>;\r\n    /**\r\n     * 价格计算器的配置对象\r\n     *\r\n     * 包含values对象数组、url、detailHref三个属性换和beforeClick()方法，\r\n     * 参考[TpPricecalc组件]{@link ../components/TpPricecalcComponent.html}\r\n     */\r\n    pricecalc?: {\r\n        values?: Array<{\r\n            key: string;\r\n            value: string;\r\n        }>;\r\n        url?: string;\r\n        detailHref?: string;\r\n        beforeClick?(): void;\r\n    };\r\n}\r\n\r\nexport interface Button {\r\n    /**\r\n     * 按钮ID\r\n     */\r\n    id?: string;\r\n    /**\r\n     * 按钮文本\r\n     */\r\n    label: string;\r\n    /**\r\n     * 按钮颜色：默认按钮/强调色按钮/主题色按钮，参考[tiny3Button组件]{@link ../../tiny3doc/components/TiButtonComponent.html}\r\n     */\r\n    color?: string;\r\n    /**\r\n     * tinyPlus图标名称\r\n     */\r\n    iconName?: string;\r\n    /**\r\n     * 按钮禁用 9.0.4版本新增\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * tip内容 9.0.4版本新增\r\n     */\r\n    tip?: string | TemplateRef<any>;\r\n    /**\r\n     * tip方位 9.0.4版本新增\r\n     */\r\n    tipPosition?: TiPositionType;\r\n    /**\r\n     * 按钮是否显示 10.1.3版本新增\r\n     */\r\n    show?: boolean;\r\n    /**\r\n     * 点击事件\r\n     */\r\n    click?(): void;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n@Component({\r\n    selector: 'tp-descandbuy',\r\n    templateUrl: './descandbuy.html',\r\n    styleUrls: ['./descandbuy.less']\r\n})\r\n\r\nexport class TpDescandbuyComponent extends TiBaseComponent {\r\n    /**\r\n     * 组件的配置对象，详情可以参考TpDescandbuyConfig接口\r\n     */\r\n    @Input() config: TpDescandbuyConfig;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onButtonClick(button: Button): void {\r\n        if (typeof button.click === 'function') {\r\n            button.click();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onPricecalcClick(): void {\r\n        if (typeof this.config.pricecalc.beforeClick === 'function') {\r\n            this.config.pricecalc.beforeClick();\r\n        }\r\n    }\r\n}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * 帮助提示组件\r\n *\r\n * 由被提示的文本和一个问号图标构成，鼠标悬浮在图标上可以看到对文本内容的解释说明\r\n *\r\n * <example-url>../tinyplus3demo/#/helptip/helptip-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-helptip',\r\n    templateUrl: './helptip.html',\r\n    styleUrls: ['./helptip.less'],\r\n    // host: {\r\n    //     '[class.tp-helptip-wrapper]': 'true'\r\n    // }\r\n})\r\n\r\nexport class TpHelptipComponent extends TiBaseComponent {\r\n    /**\r\n     * 待解释的的文本内容\r\n     */\r\n    @Input() label: string;\r\n    /**\r\n     * 提示说明文本，可为字符串/ng-template/component\r\n     */\r\n    @Input() iconTip: string | TemplateRef<any> | any;\r\n    /**\r\n     * 提示说明方向\r\n     */\r\n    @Input() iconTipPosition: string;\r\n    /**\r\n     * 提示说明的最大宽度\r\n     *\r\n     * 9.0.4 版本新增\r\n     *\r\n     * @default '276px'\r\n     */\r\n    @Input() iconTipMaxWidth: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpHelptipComponent } from './TpHelptipComponent';\r\n\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { TiTipModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiTipModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [TpHelptipComponent],\r\n  declarations: [TpHelptipComponent]\r\n})\r\n\r\nexport class TpHelptipModule {}\r\nexport { TpHelptipComponent } from './TpHelptipComponent';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpDescandbuyComponent } from './TpDescandbuyComponent';\r\nimport { TpHelptipModule } from '../helptip/TpHelptipModule';\r\nimport { TpPricecalcModule } from '../pricecalc/TpPricecalcModule';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TiButtonModule, TiTipModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiButtonModule,\r\n    TiTipModule,\r\n    TpIconModule,\r\n    TpHelptipModule,\r\n    TpPricecalcModule\r\n  ],\r\n  exports: [TpDescandbuyComponent],\r\n  declarations: [TpDescandbuyComponent]\r\n})\r\n\r\nexport class TpDescandbuyModule {}\r\nexport { TpDescandbuyComponent, TpDescandbuyConfig } from './TpDescandbuyComponent';\r\n","import { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent, Util, TiKeymap } from '@cloud/tiny3';\r\n/**\r\n * 右侧半屏弹窗组件\r\n *\r\n * 半屏弹窗分为两种，1.不带灰色背景层，点击弹窗外会关闭弹窗；2.带灰色背景层，点击弹窗外不能关闭弹窗。\r\n *\r\n * 两种弹窗都可以通过点击右上角“X”图标或者hide()方法关闭弹窗\r\n *\r\n * 注：第一类弹窗，点击弹窗外关闭的原理是在document上注册点击事件触发`TpHalfmodalComponent.hide()`，如果不想关闭弹窗可以阻止事件冒泡。\r\n *\r\n * <example-url>../tinyplus3demo/#/halfmodal/halfmodal-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-halfmodal',\r\n    templateUrl: './halfmodal.html',\r\n    styleUrls: ['./halfmodal.less'],\r\n    host: {\r\n        '[style.width]': 'width',\r\n        '[style.top]': 'clientRectTop',\r\n        '[style.right]': 'width ? \"-\" + width : \"-600px\"',\r\n        '[hidden]': '!isShow'\r\n    }\r\n})\r\n\r\nexport class TpHalfmodalComponent extends TiBaseComponent {\r\n    constructor(protected elementRef: ElementRef, protected renderer2: Renderer2) {\r\n        super(elementRef, renderer2);\r\n    }\r\n    /**\r\n     * 设置弹窗宽度\r\n     */\r\n    @Input() width: string;\r\n    /**\r\n     * 10.0.2新增\r\n     *\r\n     * 是否含有遮罩层，默认没有遮罩层；\r\n     */\r\n    @Input() backdrop: boolean = false;\r\n    /**\r\n     * 10.1.3新增\r\n     * 弹窗顶部距窗口顶部的距离\r\n     */\r\n    @Input() clientRectTop: string = '50px';\r\n    /**\r\n     * 10.1.3新增\r\n     * 是否显示关闭图标\r\n     */\r\n    @Input() closeIcon: boolean = true;\r\n    /**\r\n     * 10.1.3新增\r\n     * 关闭前的事件接口，如果监听beforeHide，则由业务关闭弹窗\r\n     */\r\n    @Output() readonly beforeHide: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     */\r\n    public isShow: boolean = false;\r\n\r\n    private isWantShow: boolean = false;\r\n\r\n    private unlistenClick: () => void;\r\n    // 背景遮罩层元素\r\n    private backdropEle: Element;\r\n    // 可聚焦元素\r\n    private focusableElementsString: string = `a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']),\r\n    button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']),\r\n    textarea:not([disabled]):not([tabindex=\\'-1\\']),\r\n    iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]`;\r\n    private unListenDocumentKeydown: () => void;\r\n\r\n    /**\r\n     * @description 向上查找最近的指定祖先元素\r\n     * @param ele 子元素\r\n     * @param parentNode 祖先元素标签名\r\n     * @return 找到的祖先元素或者undefined\r\n     */\r\n    private static findClosest(ele: any, parentNodeName: string): Element | undefined {\r\n        if (ele.nodeName === 'HTML' || Util.isNull(ele.parentNode)) {\r\n            return undefined;\r\n        } else if (ele.parentNode.nodeName === parentNodeName) {\r\n            return ele.parentNode;\r\n        } else {\r\n            return this.findClosest(ele.parentNode, parentNodeName);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 弹窗显示事件\r\n     * @param element 通过事件触发halfModal显示的元素\r\n     *\r\n     * 10.1.3版本前，如果完全是通过JS调用打开半屏弹窗，则不需该参数，点击弹窗外任意位置会关闭弹窗\r\n     * 10.1.3及以上不需要参数\r\n     */\r\n    public show(element?: Element): void {\r\n        this.isShow = true;\r\n        this.isWantShow = true;\r\n        this.renderer2.addClass(this.nativeElement, 'tp-halfmodal-animation');\r\n        if (this.backdrop && !this.backdropEle) {\r\n            this.backdropEle = this.renderer2.createElement('div');\r\n            this.renderer2.addClass(this.backdropEle, 'tp-halfmodal-backdrop');\r\n            this.renderer2.appendChild(document.body, this.backdropEle);\r\n            // 防止多次打开半屏弹窗的时候，事件注册多次。\r\n            if (!this.unListenDocumentKeydown) {\r\n                this.unListenDocumentKeydown = this.renderer2.listen(document, 'keydown', (event: KeyboardEvent): void => {\r\n                    switch (event.which) {\r\n                        case TiKeymap.KEY_TAB: // tab键用于处理在提示框内循环获取焦点\r\n                            this.clickTab(event);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            if (!this.unlistenClick) {\r\n                this.unlistenClick = this.renderer2.listen(document, 'click', ($event: MouseEvent): void => {\r\n                    if (element && element.contains($event.target as Node) || this.isWantShow) {\r\n                        this.isWantShow = false;\r\n\r\n                        return;\r\n                    }\r\n                    if (TpHalfmodalComponent.findClosest($event.target, 'TI-MESSAGE') || TpHalfmodalComponent.findClosest($event.target, 'TI-MODAL-WRAPPER')) {\r\n                        return;\r\n                    }\r\n                    // 判断鼠标是否在弹窗范围内\r\n                    if (document.documentElement.clientWidth - $event.clientX > this.nativeElement.offsetWidth\r\n                        || document.documentElement.clientHeight - $event.clientY > this.nativeElement.offsetHeight) {\r\n                            this.wantHide();\r\n                        }\r\n                });\r\n            }\r\n        }\r\n    }\r\n     private clickTab(event: KeyboardEvent): void {\r\n        const introModal: HTMLElement = document.querySelector('.tp-halfmodal-animation');\r\n        const focusableElements: NodeList = introModal?.querySelectorAll(this.focusableElementsString);\r\n        Util.focusInDialogOnTabchange(event, focusableElements);\r\n     }\r\n    /**\r\n     * @ignore\r\n     * 即将关闭，如果监听beforeHide，则由业务关闭弹窗\r\n     */\r\n    public wantHide(): void {\r\n        if (this.beforeHide.observers.length > 0) {\r\n            this.beforeHide.emit(this);\r\n        } else {\r\n            this.hide();\r\n        }\r\n    }\r\n    /**\r\n     * 10.0.2对外提供\r\n     *\r\n     * 弹窗隐藏事件\r\n     */\r\n    public hide(): void {\r\n        this.hideBackdrop();\r\n\r\n        this.isShow = false;\r\n        if (this.unlistenClick) {\r\n            this.unlistenClick();\r\n            this.unlistenClick = undefined;\r\n        }\r\n    }\r\n\r\n    private hideBackdrop(): void {\r\n        if (this.backdropEle) {\r\n            this.renderer2.removeChild(document.body, this.backdropEle);\r\n            this.backdropEle = undefined;\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.hideBackdrop();\r\n        if (this.unlistenClick) {\r\n            this.unlistenClick();\r\n            this.unlistenClick = undefined;\r\n        }\r\n        if (this.unListenDocumentKeydown) {\r\n            this.unListenDocumentKeydown();\r\n            this.unListenDocumentKeydown = undefined;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpHalfmodalComponent } from './TpHalfmodalComponent';\r\nimport { TiOutlineModule } from '@cloud/tiny3';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpIconModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpHalfmodalComponent],\r\n  declarations: [TpHalfmodalComponent]\r\n})\r\n\r\nexport class TpHalfmodalModule {}\r\nexport { TpHalfmodalComponent } from './TpHalfmodalComponent';\r\n","import { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors } from '@angular/forms';\r\nimport { TiBaseComponent, TiBrowser, TiLocale, TiValidationConfig, TiValidators, Util } from '@cloud/tiny3';\r\n\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\n\r\nimport { TpFeedbackOptions, TpQuestionOption } from './TpFeedbackInterface';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@Component({\r\n    selector: 'tp-feedback-content',\r\n    templateUrl: './feedback-content.html',\r\n    styleUrls: ['./feedback-content.less']\r\n})\r\n\r\nexport class TpFeedbackContentComponent extends TiBaseComponent {\r\n    // 类生产测试环境\r\n    private static devConfig: any = {\r\n        backend: 'https://console.ulanqab.huawei.com/nps-api',\r\n        surveyId: 'hwcloudbusurvey_key_fbd25bdbdb87'\r\n    };\r\n    // 现网环境\r\n    private static prodConfig: any = {\r\n        backend: 'https://voc.huaweicloud.com/survey-api',\r\n        surveyId: 'hwcloudbusurvey_key_fbd25bdbdb87'\r\n    };\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public static config: any = TpFeedbackContentComponent.devConfig;\r\n    /**\r\n     * 组件数据\r\n     */\r\n    @Input() options: TpFeedbackOptions;\r\n    /**\r\n     * 10.1.4新增\r\n     * 提交问卷成功后事件\r\n     */\r\n    @Output() readonly submit: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public showheader: boolean = true;\r\n\r\n    /**\r\n     * @ignore\r\n     * 初始化用来存储答案的数组\r\n     */\r\n    public displayData: any;\r\n\r\n    /**\r\n     * 初始化用来存储答案的数组\r\n     */\r\n    private submitAnswer: Array<any> = [];\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public questions: any;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public validation: TiValidationConfig;\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public form: FormGroup;\r\n\r\n    private vaildrules: any = {};\r\n\r\n    constructor(protected hostRef: ElementRef, protected renderer2: Renderer2,\r\n                private fb: FormBuilder) {\r\n        super(hostRef, renderer2);\r\n        if (location.hostname.indexOf('huaweicloud.com') > -1) {\r\n            TpFeedbackContentComponent.config = TpFeedbackContentComponent.prodConfig;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.showQuestions();\r\n    }\r\n\r\n    // 初始化展示题目\r\n    private showQuestions(): void {\r\n        const questionArray: Array<TpQuestionOption> = this.options.customQuestion;\r\n        this.options.customQuestion = Util.isArray(questionArray) ? questionArray : [];\r\n        // 问题的个数必须是3的倍数\r\n        if (questionArray && questionArray.length % 3 !== 0) {\r\n            console.log('自定义题目的格式不符合规范！'); // 供服务查看\r\n            this.showheader = false;\r\n\r\n            return;\r\n        }\r\n\r\n        // 获取Feedback词条\r\n        const tpFeedback: any = TiLocale.getLocaleWords().tpFeedback;\r\n\r\n        // 模板中最终渲染的数据\r\n        this.displayData = {\r\n            title: Util.formatEntry(tpFeedback.title, [this.options.serviceName]),\r\n            startDesc: tpFeedback.title_desc,\r\n            questions: [\r\n                {\r\n                    type: 'radio',\r\n                    show: true,\r\n                    require: true,\r\n                    title: [\r\n                        {\r\n                            title: Util.formatEntry(tpFeedback.question1_title, [this.options.serviceName]),\r\n                            type: 'main'\r\n                        },\r\n                        {\r\n                            title: tpFeedback.question1_title_desc\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'checkbox',\r\n                    show: false,\r\n                    require: true,\r\n                    title: [\r\n                        {\r\n                            title: tpFeedback.question1_title_unSati\r\n                        }\r\n                    ],\r\n                    hasOtherReason: true,\r\n                    options: [\r\n                        {\r\n                            value: '1',\r\n                            remark: tpFeedback.question_unSati_options1\r\n                        },\r\n                        {\r\n                            value: '2',\r\n                            remark: tpFeedback.question_unSati_options2\r\n                        },\r\n                        {\r\n                            value: '3',\r\n                            remark: tpFeedback.question_unSati_options3\r\n                        },\r\n                        {\r\n                            value: '4',\r\n                            remark: tpFeedback.question_unSati_options4\r\n                        },\r\n                        {\r\n                            value: '5',\r\n                            remark: tpFeedback.question_unSati_options5\r\n                        },\r\n                        {\r\n                            value: '6',\r\n                            remark: tpFeedback.question_unSati_options6\r\n                        },\r\n                        {\r\n                            value: '7',\r\n                            remark: tpFeedback.question_unSati_options7\r\n                        },\r\n                        {\r\n                            value: '8',\r\n                            remark: tpFeedback.question_unSati_options8\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'checkbox',\r\n                    show: false,\r\n                    require: true,\r\n                    title: [\r\n                        {\r\n                            title: tpFeedback.question1_title_sati\r\n                        }\r\n                    ],\r\n                    hasOtherReason: true,\r\n                    options: [\r\n                        {\r\n                            value: '1',\r\n                            remark: tpFeedback.question_sati_options1\r\n                        },\r\n                        {\r\n                            value: '2',\r\n                            remark: tpFeedback.question_sati_options2\r\n                        },\r\n                        {\r\n                            value: '3',\r\n                            remark: tpFeedback.question_sati_options3\r\n                        },\r\n                        {\r\n                            value: '4',\r\n                            remark: tpFeedback.question_sati_options4\r\n                        },\r\n                        {\r\n                            value: '5',\r\n                            remark: tpFeedback.question_sati_options5\r\n                        },\r\n                        {\r\n                            value: '6',\r\n                            remark: tpFeedback.question_sati_options6\r\n                        },\r\n                        {\r\n                            value: '7',\r\n                            remark: tpFeedback.question_sati_options7\r\n                        },\r\n                        {\r\n                            value: '8',\r\n                            remark: tpFeedback.question_sati_options8\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'essay',\r\n                    show: true,\r\n                    require: false,\r\n                    title: [\r\n                        {\r\n                            title: Util.formatEntry(TiLocale.getLocaleWords().tpFeedback.questionLast_title, [this.options.serviceName])\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n\r\n        // 用户自定义题目\r\n        if (this.options.allQuestion) {\r\n            this.displayData = { ...this.options.allQuestion };\r\n        } else if (this.options.customQuestion.length > 0) {\r\n            const customQuestionCopy: any = { ...this.options.customQuestion };\r\n            const keys: any = Object.keys(customQuestionCopy);\r\n            for (const key of keys) {\r\n                this.displayData.questions.splice(this.displayData.questions.length - 1, 0, customQuestionCopy[key]); // 返回修改后数组\r\n            }\r\n        }\r\n        this.questions = this.displayData.questions;\r\n\r\n        for (let i: number = 0; i < this.questions.length; i++) {\r\n            this.questions[i].questionId = 'question_' + i;\r\n            if (this.questions[i].type === 'checkbox' && this.questions[i].hasOtherReason) {\r\n                this.questions[i].showOtherReason = false;\r\n\r\n                // 为每个otherreason创建表单control\r\n                this.vaildrules[`reasonInput_${i}`] = new FormControl('');\r\n                this.form = this.fb.group(this.vaildrules);\r\n\r\n            }\r\n\r\n            // 存储问题答案\r\n            this.submitAnswer[i] = {\r\n                questionId: this.questions[i].questionId, // 题目Id\r\n                subQuestionId: null, // Nps约束，矩阵题非null\r\n                subName: this.questions[i].title[0].title, // 只存放主标题\r\n                answer: [],\r\n                subRemark: [],\r\n                reason: '0'\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 满意度评分触发事件\r\n     * @param value 选择评分值\r\n     * @param index 题目下标值\r\n     */\r\n    onChangeScore(value: number, index: number): void {\r\n        // 单选的回调函数，每次选择都要清空数组\r\n        this.submitAnswer[index].answer = [];\r\n        this.submitAnswer[index].subRemark = [];\r\n\r\n        // 单选题answer和remark是保持一致的。\r\n        this.submitAnswer[index].answer.push(value);\r\n        this.submitAnswer[index].subRemark.push(value);\r\n\r\n        /**\r\n         * 约束:\r\n         * （1）题目格式：要求的一个母题需要带两个子题的格式\r\n         * （2）题目顺序：母题，第一个子题目（index+1），第二个子题(index+2)\r\n         */\r\n        if (index % 3 === 0) {\r\n            const firstIndex: number = index + 1;\r\n            const secondIndex: number = index + 2;\r\n            const oldFirstShow: boolean = this.questions[firstIndex].show;\r\n            const oldSecondShow: boolean = this.questions[secondIndex].show;\r\n\r\n            this.questions[firstIndex].show = value <= 7 ? true : false;\r\n            this.questions[secondIndex].show = value > 7 ? true : false;\r\n\r\n            /**\r\n             * 多选题目且其它原因输入框显示时，重置对应控件\r\n             * IE下，输入框（titext，titextarea）placeholder为中文时，初始化时表单控件会被标记为dirty，进行校验，\r\n             * 通过markAsPristine方法在输入框显示时，将该表单控件标记为 pristine（原始状态），需进行延迟处理\r\n             * 先在该组件进行处理，后续优化\r\n             */\r\n            if (this.questions[firstIndex].show !== oldFirstShow && this.questions[firstIndex].showOtherReason) {\r\n                if (TiBrowser.isIE()) {\r\n                    setTimeout(() => {\r\n                        this.form.controls[`reasonInput_${firstIndex}`].markAsPristine();\r\n                    }, 0);\r\n                }\r\n                this.form.setControl(`reasonInput_${firstIndex}`, new FormControl('', [TiValidators.required, TiValidators.maxLength(400)]));\r\n            }\r\n\r\n            if (this.questions[secondIndex].show !== oldSecondShow && this.questions[secondIndex].showOtherReason) {\r\n                if (TiBrowser.isIE()) {\r\n                    setTimeout(() => {\r\n                        this.form.controls[`reasonInput_${secondIndex}`].markAsPristine();\r\n                    }, 0);\r\n                }\r\n                this.form.setControl(`reasonInput_${secondIndex}`, new FormControl('', [TiValidators.required, TiValidators.maxLength(400)]));\r\n            }\r\n        }\r\n\r\n        this.questions[index].hasfinshed = true;\r\n\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 选中项超过三项时，其余项不可选中，并设置\"最多选择三项\"的样式。\r\n     */\r\n    onClickItem(event: Event): void {\r\n        // IE下选择选项后触发click事件，会冒泡到父级触发halfmodal点击事件，导致弹窗关闭，此处阻止事件冒泡，防止弹窗关闭\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 复选框选中事件，最多选择三项\r\n     * @param item 复选项数据\r\n     * @param question 题目数据\r\n     * @param index 复选项下标\r\n     */\r\n    onChangeCheckbox(item: any, question: any, index: number): void {\r\n        const questionIndex: number = this.getIndexByQuestionId(question.questionId);\r\n        const submitQuestion: any = this.submitAnswer[questionIndex];\r\n\r\n        // 失焦校验，输入不能为空且字符个数最多为400\r\n        this.validation = {\r\n            type: 'blur'\r\n        };\r\n\r\n        if (this.getCheckedNumber(question.options) > 3) {\r\n            question.checkLimit = true;\r\n            /**\r\n             * 此处使用延时处理\r\n             * 原因：在选择第四个选项后，更改checked属性值为false，会再次触发ngModalChange事件，导致再次选择时，该选项会被选中\r\n             */\r\n            setTimeout(() => {\r\n                item.checked = false;\r\n            }, 0);\r\n\r\n            return;\r\n        }\r\n\r\n        question.checkLimit = false;\r\n        // 约束：其它原因是多选项中的最后一项\r\n        if (question.hasOtherReason && index === question.options.length - 1) {\r\n            question.showOtherReason = item.checked;\r\n\r\n            // 其它输入框显示添加校验规则\r\n            if (question.showOtherReason) {\r\n                this.form.setControl(`reasonInput_${questionIndex}`, new FormControl('', [TiValidators.required, TiValidators.maxLength(400)]));\r\n                /**\r\n                 * IE下，输入框（titext，titextarea）placeholder为中文时，初始化时表单控件会被校验，\r\n                 * 通过markAsPristine方法在输入框显示时，将该表单控件标记为 pristine（原始状态），需进行延迟处理\r\n                 * 先在该组件进行处理，后续优化\r\n                 */\r\n                if (TiBrowser.isIE()) {\r\n                    setTimeout(() => {\r\n                        this.form.controls[`reasonInput_${questionIndex}`].markAsPristine();\r\n                    }, 0);\r\n                }\r\n            } else {\r\n                submitQuestion.reason = '0';\r\n            }\r\n        }\r\n\r\n        if (item.checked) {\r\n            this.questions[questionIndex].hasfinshed = true;\r\n            submitQuestion.answer.push(index);\r\n            submitQuestion.subRemark.push(item.remark);\r\n        } else {\r\n            submitQuestion.answer = submitQuestion.answer.filter((answer: any) => answer !== index);\r\n            submitQuestion.subRemark = submitQuestion.subRemark.filter((remark: any) => remark !== item.remark);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 复选项为其它原因，存储用户输入内容\r\n     * @param question 题目数据\r\n     */\r\n    updateOtherReason(question: any): void {\r\n        const questionIndex: number = this.getIndexByQuestionId(question.questionId);\r\n        this.submitAnswer[questionIndex].reason = this.form.controls[`reasonInput_${questionIndex}`].value;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 题目为essay时，存储用户输入文本域内容\r\n     * @param textareaValue 文本域输入内容\r\n     * @param index 题目下标\r\n     */\r\n    updateTextarea(textareaValue: number, index: number): void {\r\n        this.submitAnswer[index].answer[0] = textareaValue;\r\n        this.submitAnswer[index].subRemark[0] = 'null';\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 提交问卷\r\n     */\r\n    onSubmit(): void {\r\n        CfUtil.getUser().then((user: any) => {\r\n            const root: any = user;\r\n            const camel: any = CfUtil.getHttpService();\r\n            const msgService: any = CfUtil.getMessage();\r\n            if (!camel || !msgService || !root || !Util.isFunction(camel.post) || !Util.isFunction(msgService.showSuccess)) {\r\n                return;\r\n            }\r\n\r\n            // 题目未显示或其它原因不显示时，移除对应控件\r\n            for (let i: number = 0; i < this.questions.length; i++) {\r\n                if (!this.questions[i].show || !this.questions[i].showOtherReason) {\r\n                    this.form.removeControl(`reasonInput_${i}`);\r\n                }\r\n            }\r\n\r\n            const errors: ValidationErrors | null = TiValidators.check(this.form);\r\n\r\n            if (this.isRequiredComplete(this.questions, this.submitAnswer) && !errors) {\r\n\r\n                for (let i: number = 0; i < this.submitAnswer.length; i++) {\r\n                    this.submitAnswer[i].answer = this.submitAnswer[i].answer.join();\r\n                    this.submitAnswer[i].subRemark = this.submitAnswer[i].subRemark.join();\r\n                    this.submitAnswer[i].show = this.questions[i].show; // 过滤不显示的题目\r\n                }\r\n\r\n                // 过滤未显示题目及删除show属性，不需要发送给后台\r\n                this.submitAnswer = this.submitAnswer.filter((answer: any) => answer.show !== false);\r\n                for (const answer of this.submitAnswer) {\r\n                    delete answer.show;\r\n                }\r\n\r\n                const url: string = `${TpFeedbackContentComponent.config.backend}/api/save`;\r\n\r\n                // 发送请求，向后台发送问卷结果\r\n                const sendData: any = {\r\n                    data: {\r\n                        surveyId: TpFeedbackContentComponent.config.surveyId,\r\n                        serviceId: this.options.serviceId,\r\n                        w3account: root.domainId, // 用户ID\r\n                        answers: this.submitAnswer\r\n                    }\r\n                };\r\n\r\n                camel.post({\r\n                    url: {\r\n                        s: url\r\n                    },\r\n                    params: sendData\r\n                })\r\n                    .then(() => { }, () => { });\r\n\r\n                this.submit.emit();\r\n                msgService.showSuccess(TiLocale.getLocaleWords().tpFeedback.submit_success);\r\n            } else {\r\n                // 未完成则显示'选择不能为空'提示\r\n                this.checkQuestion(this.questions, this.submitAnswer);\r\n            }\r\n        });\r\n    }\r\n\r\n    // 通过问题ID得到属于第几道题目\r\n    private getIndexByQuestionId(questionId: string): number {\r\n        for (let i: number = 0; i < this.submitAnswer.length; i++) {\r\n            if (this.submitAnswer[i].questionId === questionId) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // 得到复选框选中项的个数\r\n    private getCheckedNumber: (itemArray: any) => number = (itemArray: any) => {\r\n        let checkedNum: number = 0;\r\n        for (const item of itemArray) {\r\n            if (item.checked) {\r\n                checkedNum++;\r\n            }\r\n        }\r\n\r\n        return checkedNum;\r\n    }\r\n\r\n    // 检查每个题目的完成情况，返回一个数组\r\n    private checkQuestion: (questionArray: any, answerArray: any) => any = (questionArray: any, answerArray: any) => {\r\n        const resultArray: Array<boolean> = [];\r\n        for (let i: number = 0; i < questionArray.length - 1; i++) {\r\n            // 判断问题是否已正确填写. （1）必填 （2）show=true (3)有填写问卷\r\n            if (questionArray[i].show === true && questionArray[i].require === true && answerArray[i].answer.length === 0) {\r\n                questionArray[i].hasfinshed = false;\r\n                resultArray[i] = false;\r\n            }\r\n        }\r\n\r\n        return resultArray;\r\n\r\n    }\r\n\r\n    // 题目是否已完成\r\n    private isRequiredComplete(questionArray: any, answerArray: any): boolean {\r\n        const resultArray: any = this.checkQuestion(questionArray, answerArray);\r\n        for (const result of resultArray) {\r\n            if (result === false) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n}\r\n","import { Component, Input, ViewChild } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';\r\n\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\nimport { TpHalfmodalComponent } from '../halfmodal/TpHalfmodalModule';\r\n\r\nimport { TpFeedbackContentComponent } from './TpFeedbackContentComponent';\r\nimport { TpFeedbackOptions } from './TpFeedbackInterface';\r\nimport { TpUtil } from './../../utils/TpUtil';\r\n/**\r\n * 问卷调查组件 feedback\r\n *\r\n * 该组件支持服务去自定义题目，但是题目的类型要求是单选题目，并且会关联出两个多选题目。如果多选题目中有其它原因这个选项，要求这个选项放在最后。\r\n *\r\n * 使用该组件需注意以下几点：\r\n *\r\n * 1.该组件与console相关，需要使用到@cloud/cfdata;<br>\r\n * 2.options.allQuestion和options.customQuestion两个接口互斥。customQuestion是在默认的题目中去新增题目，allQuestion是由服务去定制所有的问卷内容（适用于CBC、客服、IAM等服务）；<br>\r\n * 3.本地调试确保端口是<b>8888</b>，目前NPS后台已经将http://localhost:8888 放开；<br>\r\n * 4.同一个用户数据提交之后，90（10.1.0 版本规范变更，由31变更为90）天内组件不显示。如果调测需要，可自行修改源码中阈值MILLISECONDS_PER_MONTH(含义：N毫秒之后可以显示)；<br>\r\n * 5.用户提交的数据下发到NPS后台，如需查看数据，请联系NPS后台同事孙正东 30009929\"；<br>\r\n * 6.华为云各服务可根据http://csbi.huawei.com/#/home 查找对应编号或英文简称设置<b>serviceId</b>；\r\n *\r\n * <example-url>../tinyplus3demo/#/feedback/feedback-all</example-url>\r\n */\r\n\r\n@Component({\r\n    selector: 'tp-feedback',\r\n    templateUrl: './feedback.html',\r\n    styleUrls: ['./feedback.less'],\r\n    host: {\r\n        '[hidden]': '!showFeedBack'\r\n    }\r\n})\r\n\r\nexport class TpFeedbackComponent extends TiBaseComponent {\r\n    /**\r\n     * 组件数据\r\n     */\r\n    @Input() options: TpFeedbackOptions;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('halfModal', { static: true }) halfmodalCom: TpHalfmodalComponent;\r\n\r\n    // 常量配置\r\n    private CONST_ANT: any = {\r\n        MILLISECONDS_PER_MONTH: 90 * 24 * 60 * 60 * 1000 // 90天对应的毫秒数\r\n    };\r\n\r\n    /**\r\n     * @ignore\r\n     * 是否显示问卷入口\r\n     */\r\n    public showFeedBack: boolean = false;\r\n\r\n    /**\r\n     * @ignore\r\n     * 是否显示弹出框\r\n     */\r\n    public openModalAlert: boolean = false;\r\n\r\n    /**\r\n     * @ignore\r\n     * 打开弹窗链接文本\r\n     */\r\n    public alertLinkText: string;\r\n    private useId: string = '';\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        CfUtil.getUser()\r\n            .then((user: any) => {\r\n                const root: any = user;\r\n                const camel: any = CfUtil.getHttpService();\r\n                const msgService: any = CfUtil.getMessage();\r\n\r\n                if (!camel || !Util.isFunction(camel.get) || !root || !msgService || !Util.isFunction(msgService.showSuccess)) {\r\n                    return;\r\n                }\r\n\r\n                this.alertLinkText = Util.formatEntry(\r\n                    TiLocale.getLocaleWords().tpFeedback.open_halfModal.click, [this.options.serviceName]);\r\n\r\n                const useId: string = root.domainId;\r\n                const url: string = `${TpFeedbackContentComponent.config.backend}/api/get/commit/date?surveyId={survey_id}&userId={user_id}&serviceId={service_id}`;\r\n                this.useId = useId;\r\n                if (this.useId) {\r\n                    camel.get({\r\n                        url: {\r\n                            s: url,\r\n                            o: {\r\n                                survey_id: TpFeedbackContentComponent.config.surveyId,\r\n                                user_id: this.useId, // 此处取值实际是domainId而不是userId\r\n                                service_id: this.options.serviceId\r\n                            }\r\n                        }\r\n                    })\r\n                        .then((response: any) => {\r\n                            // 后台返回的日期格式yyyy-MM-dd，在IE下Date.parse为NaN，需要转成yyyy/mm/dd\r\n                            const submitDate: number = Date.parse(response.data.replace(/-/g, '/'));\r\n\r\n                            // 如果是非法日期，或者没有提交为''，则重新赋值为0.否则会出现NaN，组件展示不出来。\r\n                            const milliSeconds: number = isNaN(submitDate) ? 0 : submitDate;\r\n\r\n                            // 查询上次提交的日期，如果小于90天则不显示。否则，看之前用户是否点击关闭按钮\r\n                            if (new Date().getTime() - milliSeconds > this.CONST_ANT.MILLISECONDS_PER_MONTH) {\r\n                                const tinyVocValue: string = Util.isUndefined(TpUtil.getCookie('tinyVoc')) ? '' : TpUtil.getCookie('tinyVoc');\r\n                                if (tinyVocValue.indexOf(`${this.options.serviceId}${this.useId}`) === -1) {\r\n                                    this.showFeedBack = true;\r\n                                    this.openModalAlert = true;\r\n                                }\r\n                            }\r\n                        }, () => {\r\n                            // 数据请求失败，不出现该组件。如果出现错误提示，会给用户带来困扰。\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 关闭弹出框\r\n     */\r\n    closeModalAlert(): void {\r\n        const serverlist: string = Util.isUndefined(TpUtil.getCookie('tinyVoc')) ? '' : TpUtil.getCookie('tinyVoc');\r\n        TpUtil.setCookie('tinyVoc', `${serverlist}${this.options.serviceId}${this.useId},`);\r\n        this.showFeedBack = false;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 提交问卷\r\n     */\r\n    onSubmit(): void {\r\n        this.halfmodalCom.hide(); // 弹窗关闭\r\n        this.openModalAlert = false; // 入口关闭\r\n        this.showFeedBack = false;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  TiAlertModule,\r\n  TiButtonModule,\r\n  TiCheckboxModule,\r\n  TiIconModule,\r\n  TiLocaleModule,\r\n  TiOutlineModule,\r\n  TiTextareaModule,\r\n  TiTextModule,\r\n  TiValidationModule\r\n} from '@cloud/tiny3';\r\n\r\nimport { TpHalfmodalModule } from '../halfmodal/TpHalfmodalModule';\r\nimport { TpScoreModule } from '../score/TpScoreModule';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpFeedbackComponent } from './TpFeedbackComponent';\r\nimport { TpFeedbackContentComponent } from './TpFeedbackContentComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TiLocaleModule,\r\n    TiAlertModule,\r\n    TiButtonModule,\r\n    TiCheckboxModule,\r\n    TiIconModule,\r\n    TiTextareaModule,\r\n    TiTextModule,\r\n    TiValidationModule,\r\n    TiOutlineModule,\r\n    TpHalfmodalModule,\r\n    TpScoreModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [TpFeedbackComponent, TpFeedbackContentComponent],\r\n  declarations: [TpFeedbackComponent, TpFeedbackContentComponent ],\r\n})\r\n\r\nexport class TpFeedbackModule { }\r\nexport { TpFeedbackComponent } from './TpFeedbackComponent';\r\nexport { TpFeedbackContentComponent } from './TpFeedbackContentComponent';\r\nexport { TpFeedbackOptions, TpQuestionOption, TpAllquestionOption } from './TpFeedbackInterface';\r\n","import { Component, Input, SimpleChanges } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale } from '@cloud/tiny3';\r\n\r\n/**\r\n * 折叠文本\r\n *\r\n * 10.0.1 新增\r\n *\r\n * <example-url>../tinyplus3demo/#/foldtext/foldtext-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-foldtext',\r\n    templateUrl: './foldtext.html',\r\n    styleUrls: ['./foldtext.less']\r\n})\r\nexport class TpFoldtextComponent extends TiBaseComponent {\r\n    /**\r\n     * 文本内容\r\n     */\r\n    @Input() texts: Array<string> = [];\r\n    /**\r\n     * 折叠时显示几行\r\n     */\r\n    @Input() line: number = 2;\r\n    /**\r\n     * @ignore\r\n     * “查看全部” 词条\r\n     */\r\n    public showMore: string = TiLocale.getLocaleWords().tpFoldtext.showMore;\r\n    /**\r\n     * @ignore\r\n     * “收起” 词条\r\n     */\r\n    public showLess: string = TiLocale.getLocaleWords().tpFoldtext.showLess;\r\n\r\n    /**\r\n     * @ignore\r\n     * 显示文本内容的高度\r\n     */\r\n    public height: string;\r\n    /**\r\n     * @ignore\r\n     * 是否折叠\r\n     */\r\n    public folded: boolean = true;\r\n    // 表格中的默认font-size:12px, 默认line-height:1.5, 所以默认值取18px\r\n    private lineHeight: string = '18px';\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n\r\n        const CSSStyles: CSSStyleDeclaration = getComputedStyle(this.nativeElement);\r\n        const lineHeight: string = CSSStyles.getPropertyValue('line-height');\r\n\r\n        if (!Number.isNaN(parseFloat(lineHeight))) {\r\n            this.lineHeight = lineHeight;\r\n        }\r\n        // 修改了页面的数据height，消除ExpressionChangedAfterItHasBeenCheckedError报错使用setTimeout\r\n        setTimeout(() => {\r\n            this.height = (this.line * parseFloat(this.lineHeight)) + 'px';\r\n        }, 0);\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n\r\n        if (changes['texts'] && !changes['texts'].firstChange || changes['line'] && !changes['line'].firstChange) {\r\n            this.height = (this.line * parseFloat(this.lineHeight)) + 'px';\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 切换文本的点击事件\r\n     */\r\n    public onClick(event: Event): void {\r\n        this.folded = !this.folded;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpFoldtextComponent } from './TpFoldtextComponent';\r\nimport { TiLocaleModule, TiOverflowModule, TiOutlineModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TiOverflowModule,\r\n        TiLocaleModule,\r\n        TiOutlineModule\r\n    ],\r\n  exports: [TpFoldtextComponent],\r\n  declarations: [TpFoldtextComponent]\r\n})\r\n\r\nexport class TpFoldtextModule {}\r\nexport { TpFoldtextComponent } from './TpFoldtextComponent';\r\n","import {\r\n    Component, ElementRef, EventEmitter, Input, Output, Renderer2, TemplateRef, ViewChild\r\n    // tslint:disable-next-line: no-implicit-dependencies\r\n} from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiBaseComponent, TiTipRef, TiTipService, TiTipShowInfo, Util } from '@cloud/tiny3';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\n\r\n/**\r\n * @ignore\r\n * 每条受限信息\r\n */\r\nexport interface TpFrozenInfo {\r\n    /**\r\n     * 1 冻结，2 解冻结\r\n     */\r\n    status: number;\r\n    /**\r\n     * 1-表示公安冻结, 2表示未实名认证冻结,3-表示欠费冻结,4-合作伙伴冻结,5-账号销户前冻结,6-违规冻结\r\n     */\r\n    type: number;\r\n    /**\r\n     * json 字符串，可以解析为一个数组，包含两个冻结信息\r\n     * 详情参考 云运营公共接口文档 4.10 查询账号冻结场景\r\n     */\r\n    statusMsg: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n\r\n}\r\n\r\n/**\r\n * @ignore\r\n * 消息类型，'POP' 为提示块中的消息，'TIP' 为tip 提示消息\r\n */\r\ntype TpFrozenMessageType = 'POP' | 'TIP';\r\n\r\n/**\r\n * @ignore\r\n *\r\n */\r\nexport interface TpFrozenStatusMsg {\r\n    /**\r\n     * 消息类型，'POP' 为提示块中的消息，'TIP' 为tip 提示消息\r\n     */\r\n    msgType: TpFrozenMessageType;\r\n    /**\r\n     * 消息字符串\r\n     */\r\n    msgContent: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n\r\n}\r\n/**\r\n * @ignore\r\n * 4.10\t查询账号冻结场景 http 返回数据类型\r\n */\r\nexport interface TpFrozenResponse {\r\n    /**\r\n     * 接口返回值设置\r\n     */\r\n    frozenInfos: Array<TpFrozenInfo>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 账号冻结组件，组件查询CBC查询账号冻结场景接口，获取冻结信息，展示块提示，给目标元素添加tip提示。\r\n *\r\n * 9.0.3版本新增\r\n *\r\n * <example-url>../tinyplus3demo/#/frozen/frozen-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-frozen',\r\n    templateUrl: './frozen.html',\r\n    styleUrls: ['./frozen.less']\r\n})\r\nexport class TpFrozenComponent extends TiBaseComponent {\r\n    /**\r\n     * 添加tip的按钮元素\r\n     */\r\n    @Input() buttonElem: HTMLElement;\r\n    /**\r\n     * 获取数据成功事件\r\n     */\r\n    @Output() readonly response: EventEmitter<TpFrozenResponse | Error> = new EventEmitter<TpFrozenResponse | Error>();\r\n    /**\r\n     * @ignore\r\n     * tip 内容template\r\n     */\r\n    @ViewChild('tipContentTemplate', { static: false }) tipContentTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     * 内部alert 打开关闭\r\n     */\r\n    public open: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * alert 类型\r\n     */\r\n    public alertType: string = 'error';\r\n    /**\r\n     * @ignore\r\n     * 内部alert类型图标\r\n     */\r\n    public typeIcon: boolean = true;\r\n    /**\r\n     * @ignore\r\n     * 内部alert关闭图标\r\n     */\r\n    public closeIcon: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * alert 内容\r\n     */\r\n    public label: string = '';\r\n    /**\r\n     * @ignore\r\n     * tip 提示内容\r\n     */\r\n    public tipContent: string;\r\n    /**\r\n     * @ignore\r\n     * tip实例，销毁tip作用\r\n     */\r\n    private tipInstance: TiTipRef;\r\n    /**\r\n     * @ignore\r\n     * 从http返回数据中获取内容字符串\r\n     */\r\n    public static getMsgContent(data: TpFrozenResponse, msgType: TpFrozenMessageType): string {\r\n        if (data && Array.isArray(data.frozenInfos) && data.frozenInfos.length > 0) {\r\n            // 返回数据中 frozenInfos按优先级排序，所以取第一个\r\n            const frozenInfo: TpFrozenInfo = data.frozenInfos[0] as TpFrozenInfo;\r\n            // status 1 冻结 2 解冻\r\n            if (frozenInfo.status !== 1 || !Util.isString(frozenInfo.statusMsg)) {\r\n                return;\r\n            }\r\n            try {\r\n                frozenInfo.statusMsgs = JSON.parse(frozenInfo.statusMsg) as Array<TpFrozenStatusMsg>;\r\n            } catch (error) {\r\n                console.warn(error);\r\n\r\n                return;\r\n            }\r\n            const msg: TpFrozenStatusMsg = frozenInfo.statusMsgs.find((item: TpFrozenStatusMsg) => {\r\n                return item.msgType === msgType;\r\n            });\r\n            if (msg && Util.isString(msg.msgContent)) {\r\n                return msg.msgContent;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static getUserInfo(config?: any): Promise<string> {\r\n        // config 本地测试使用，实际使用时请忽略此参数\r\n        if (config) {\r\n            return new Promise((resolve, reject) => {\r\n                resolve(config.domainId);\r\n            });\r\n        } else {\r\n            return CfUtil.getUser().then((user: any) => user.domainId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 请求账号冻结场景接口\r\n     * config 本地测试使用，实际使用时请忽略此参数\r\n     */\r\n    public static queryFrozenInfo(config?: any): Promise<TpFrozenResponse> {\r\n        const queryFrozenInfoPromise: Promise<TpFrozenResponse> = TpFrozenComponent.getUserInfo(config)\r\n            .then((domainId: string) => {\r\n                const camel: any = config ? config.camel : CfUtil.getHttpService();\r\n                const customerId: string = domainId;\r\n                if (customerId && camel) {\r\n                    let url: string = '/rest/cbc/cbccustmgrservice/v1/customer/frozen';\r\n                    // AppWebPath 为console.home框架的设置,例如'/console'路径\r\n                    const appWebPath: string = CfUtil.getAppWebPath();\r\n                    if (Util.isString(appWebPath)) {\r\n                        url = appWebPath + url;\r\n                    }\r\n\r\n                    return camel.get({\r\n                        url: {\r\n                            s: url\r\n                        },\r\n                        params: { customerId }\r\n                    });\r\n                } else {\r\n                    return Promise.reject(new Error('frozen 依赖camel服务，使用前请先注入'));\r\n                }\r\n            });\r\n\r\n        return queryFrozenInfoPromise;\r\n    }\r\n\r\n    constructor(\r\n        protected hostRef: ElementRef,\r\n        protected renderer2: Renderer2,\r\n        private tipService: TiTipService\r\n    ) {\r\n        super(hostRef, renderer2);\r\n    }\r\n\r\n    /**\r\n     * 查询冻结\r\n     * config 为方便测试设置，实际使用时请忽略\r\n     */\r\n    public queryFrozen(config?: any): void {\r\n        TpFrozenComponent.queryFrozenInfo(config)\r\n            .then((response: any) => {\r\n                this.label = TpFrozenComponent.getMsgContent(response, 'POP');\r\n                // 是字符串显示\r\n                this.open = Util.isString(this.label);\r\n\r\n                // 给按钮添加tip\r\n                this.tipContent = TpFrozenComponent.getMsgContent(response, 'TIP');\r\n                if (Util.isString(this.tipContent) && this.buttonElem) {\r\n                    this.addTip(this.buttonElem);\r\n                }\r\n\r\n                if (!this.label && !this.tipContent) {\r\n                    this.unfrozen();\r\n                }\r\n                // 获取数据成功，触发response事件，将后台原始响应数据传递出去，方便使用者自行处理相关逻辑\r\n                this.response.emit(response);\r\n            }, (error: Error) => {\r\n                this.response.emit(error);\r\n                this.open = false;\r\n            });\r\n    }\r\n\r\n    /**\r\n     * 隐藏提示块,销毁tip\r\n     */\r\n    private unfrozen(): void {\r\n        this.open = false;\r\n        // @ts-ignore:忽略destroy检查\r\n        if (this.tipInstance && Util.isFunction(this.tipInstance.destroy)) {\r\n            // @ts-ignore:外层有判断\r\n            this.tipInstance.destroy();\r\n            this.tipInstance = undefined;\r\n        }\r\n    }\r\n    /**\r\n     *  给目标元素添加tip\r\n     *  v9.0.4 版本添加\r\n     */\r\n    public addTip(...targets: Array<HTMLElement>): void {\r\n        if (this.tipContentTemplate && this.tipContent) {\r\n            targets.forEach((element: HTMLElement) => {\r\n                this.tipInstance = this.tipService.create(element, {\r\n                    trigger: 'mouse',\r\n                    showFn: (): TiTipShowInfo => {\r\n                        return {\r\n                            content: this.tipContentTemplate\r\n                        };\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n","// tslint:disable-next-line: no-implicit-dependencies\r\nimport { NgModule } from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { CommonModule } from '@angular/common';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiAlertModule, TiTipServiceModule } from '@cloud/tiny3';\r\n\r\nimport { TpFrozenComponent } from './TpFrozenComponent';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        TiAlertModule,\r\n        TiTipServiceModule\r\n    ],\r\n    exports: [TpFrozenComponent],\r\n    declarations: [TpFrozenComponent]\r\n})\r\nexport class TpFrozenModule { }\r\nexport { TpFrozenComponent, TpFrozenResponse } from './TpFrozenComponent';\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TiLocale, Util, TiBaseComponent } from '@cloud/tiny3';\r\nimport { TpFrozenComponent } from '../frozen/TpFrozenModule';\r\n/**\r\n * 冻结页面组件\r\n *\r\n * <example-url>../tinyplus3demo/#/frozenpage/frozenpage-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-frozenpage',\r\n    templateUrl: './frozenpage.html',\r\n    styleUrls: ['./frozenpage.less']\r\n})\r\n\r\nexport class TpFrozenpageComponent extends TiBaseComponent {\r\n    /**\r\n     * 服务名称\r\n     */\r\n    @Input() serviceName: string;\r\n    /**\r\n     * 触发返回服务列表事件\r\n     */\r\n    @Output() readonly backServiceList: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     */\r\n    public backService: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public content: string = '';\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.backService = Util.formatEntry(TiLocale.getLocaleWords().tpFrozenpage.back_service, [this.serviceName]);\r\n        TpFrozenComponent.queryFrozenInfo()\r\n            .then((response: any) => {\r\n                this.content = TpFrozenComponent.getMsgContent(response, 'POP');\r\n            }, () => { });\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(): void {\r\n        this.backServiceList.emit();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpFrozenpageComponent } from './TpFrozenpageComponent';\r\nimport { TiLocaleModule } from '@cloud/tiny3'\r\n\r\n@NgModule({\r\n  imports: [TiLocaleModule],\r\n  exports: [TpFrozenpageComponent],\r\n  declarations: [TpFrozenpageComponent]\r\n})\r\n\r\nexport class TpFrozenpageModule {}\r\nexport { TpFrozenpageComponent } from './TpFrozenpageComponent';\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\n/**\r\n *  @ignore\r\n *\r\n *  栅格样式组件\r\n *\r\n *  10.0.4及之前的版本grid.less是全局的。10.1.0版本为了实现样式按需加载，将grid.less封装在一个组件模块，所以该组件实际只提供了样式。\r\n *\r\n * 使用示例在 card 组件示例中\r\n *\r\n */\r\n@Component({\r\n    selector: '.tp-row', // 兼容延用栅格样式选择器\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./grid.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class TpGridComponent { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { TpGridComponent } from './TpGridComponent';\r\n\r\n/**\r\n *  @ignore\r\n *\r\n */\r\n@NgModule({\r\n  exports: [TpGridComponent],\r\n  declarations: [TpGridComponent]\r\n})\r\nexport class TpGridModule {}\r\nexport { TpGridComponent } from './TpGridComponent';\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * 情景引导组件\r\n *\r\n * <example-url>../tinyplus3demo/#/guides/guides-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-guides',\r\n    template: `<ng-content></ng-content>`,\r\n    styleUrls: ['./guides.less'],\r\n    // host: {\r\n    //     '[class.tp-guides-container]': 'true'\r\n    // }\r\n})\r\n\r\nexport class TpGuidesComponent extends TiBaseComponent {\r\n    /**\r\n     * 设置activeIndex属性，指定当前激活项，默认值为-1，表示无激活状态；激活状态从0开始，在设置值之前的guide为完成项，之后则为待办项。\r\n     */\r\n    @Input() activeIndex: number = -1;\r\n}\r\n","import { Component, ElementRef, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\nimport { TpGuidesComponent } from './TpGuidesComponent';\r\n/**\r\n * TiGuideComponent 是单个引导模块组件\r\n */\r\n@Component({\r\n    selector: 'tp-guide',\r\n    templateUrl: './guide.html',\r\n    styleUrls: ['./guide.less'],\r\n    host: {\r\n        '[class.tp-guide-card-container]': 'true',\r\n        '[class.tp-guide-card-undo]': 'isUndo(cardIndex)',\r\n        '[class.tp-guide-card-active]': 'isActive(cardIndex)',\r\n        '[class.tp-guide-card-done]': 'isDone(cardIndex)'\r\n    }\r\n})\r\n\r\nexport class TpGuideComponent extends TiBaseComponent {\r\n    constructor(protected elementRef: ElementRef, protected renderer2: Renderer2, private guidesComp: TpGuidesComponent) {\r\n        super(elementRef, renderer2);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 下标值\r\n     */\r\n    public cardIndex: number = -1;\r\n    /**\r\n     * @ignore\r\n     * 是否含有body\r\n     */\r\n    public hasBody: boolean = false;\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngAfterContentInit(): void {\r\n        super.ngAfterContentInit();\r\n        this.setCardIndex();\r\n        this.cardIndex = this.nativeElement.cardIndex;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 设置步骤标志\r\n     */\r\n    private setCardIndex(): void {\r\n        const cardNum: number = this.guidesComp.nativeElement.children.length;\r\n        for (let i: number = 0; i < cardNum; i++) {\r\n            this.guidesComp.nativeElement.children[i].cardIndex = i;\r\n            if (cardNum <= 2) {\r\n                this.renderer.setStyle(this.guidesComp.nativeElement.children[i], 'max-width', '445px');\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 是否待办项\r\n     */\r\n    public isUndo(index: number): boolean {\r\n        return this.guidesComp.activeIndex >= 0 && index > this.guidesComp.activeIndex;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 是否当前项\r\n     */\r\n    public isActive(index: number): boolean {\r\n        return this.guidesComp.activeIndex >= 0 && index === this.guidesComp.activeIndex;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 是否已完成\r\n     */\r\n    public isDone(index: number): boolean {\r\n        return this.guidesComp.activeIndex >= 0 && index < this.guidesComp.activeIndex;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 是否含有间距\r\n     */\r\n    public hasSpace(index: number): boolean {\r\n        return this.isActive(index) && this.hasBody;\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n/**\r\n * TiGuideHeaderComponent 是单个引导模块组件的标题头\r\n */\r\n@Component({\r\n    selector: 'tp-guide-header',\r\n    template: `<span><ng-content></ng-content></span>`,\r\n    styleUrls: ['./guide-header.less'],\r\n})\r\n\r\nexport class TpGuideHeaderComponent {}\r\n","import { Component } from '@angular/core';\r\n/**\r\n * TiGuideContentComponent 是单个引导模块组件的content区域\r\n */\r\n@Component({\r\n    selector: 'tp-guide-content',\r\n    template: `<ng-content></ng-content>`,\r\n    styleUrls: ['./guide-content.less'],\r\n})\r\n\r\nexport class TpGuideContentComponent {}\r\n","import { Component, ElementRef, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent, TiRenderer } from '@cloud/tiny3';\r\n\r\nimport { TpGuideComponent } from './TpGuideComponent';\r\nimport { TpGuidesComponent } from './TpGuidesComponent';\r\n/**\r\n * TiGuideBodyComponent 是单个引导模块的body区域\r\n */\r\n@Component({\r\n    selector: 'tp-guide-body',\r\n    templateUrl: './guide-body.html',\r\n    styleUrls: ['./guide-body.less']\r\n})\r\n\r\nexport class TpGuideBodyComponent extends TiBaseComponent {\r\n    constructor(private elementRef: ElementRef, private renderer2: Renderer2, private tiRenderer: TiRenderer,\r\n                private guideComp: TpGuideComponent, private guidesComp: TpGuidesComponent) {\r\n        super(elementRef, renderer2);\r\n    }\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.guideComp.hasBody = true;\r\n        this.tiRenderer.insertAfter(this.nativeElement, this.guidesComp.nativeElement);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 展示激活项body\r\n     */\r\n    public showActiveBody(): boolean {\r\n        return this.guidesComp.activeIndex === this.guideComp.cardIndex;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpGuidesComponent } from './TpGuidesComponent';\r\nimport { TpGuideComponent } from './TpGuideComponent';\r\nimport { TpGuideHeaderComponent } from './TpGuideHeaderComponent';\r\nimport { TpGuideContentComponent } from './TpGuideContentComponent';\r\nimport { TpGuideBodyComponent } from './TpGuideBodyComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [TpGuidesComponent, TpGuideComponent, TpGuideHeaderComponent, TpGuideContentComponent, TpGuideBodyComponent],\r\n  declarations: [TpGuidesComponent, TpGuideComponent, TpGuideHeaderComponent, TpGuideContentComponent, TpGuideBodyComponent]\r\n})\r\n\r\nexport class TpGuidesModule {}\r\nexport { TpGuidesComponent } from './TpGuidesComponent';\r\nexport { TpGuideComponent } from './TpGuideComponent';\r\nexport { TpGuideHeaderComponent } from './TpGuideHeaderComponent';\r\nexport { TpGuideContentComponent } from './TpGuideContentComponent';\r\nexport { TpGuideBodyComponent } from './TpGuideBodyComponent';\r\n","import { Component } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * 小步骤引导组件\r\n *\r\n * <example-url>../tinyplus3demo/#/guidesteps/guidesteps-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-guidesteps',\r\n    template: `<ng-content></ng-content>`,\r\n    styleUrls: ['./guidesteps.less']\r\n})\r\n\r\nexport class TpGuidestepsComponent extends TiBaseComponent {}\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * TiGuidestepComponent 是单个小步骤模块组件\r\n */\r\n@Component({\r\n    selector: 'tp-guidestep',\r\n    template: `<ng-content></ng-content>`,\r\n    styleUrls: ['./guidestep.less']\r\n})\r\n\r\nexport class TpGuidestepComponent extends TiBaseComponent {\r\n    /**\r\n     * 当前步骤是否已经完成\r\n     */\r\n    @Input() isComplete: boolean = false;\r\n}","import { Component, ElementRef, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\nimport { TpGuidestepComponent } from './TpGuidestepComponent';\r\n\r\n/**\r\n * TpGuidestepHeaderComponent 是单个小步骤模块组件的标题头\r\n */\r\n@Component({\r\n    selector: 'tp-guidestep-header',\r\n    template: `<span><ng-content></ng-content></span>`,\r\n    styleUrls: ['./guidestep-header.less'],\r\n    host: {\r\n        '[class.tp-guidestep-dot-complete]': 'guidestepComp.isComplete'\r\n    }\r\n})\r\n\r\nexport class TpGuidestepHeaderComponent extends TiBaseComponent {\r\n    constructor(private elementRef: ElementRef, private renderer2: Renderer2, public guidestepComp: TpGuidestepComponent) {\r\n        super(elementRef, renderer2);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * TpGuidestepContentComponent 是单个小步骤模块组件的content区域\r\n */\r\n@Component({\r\n    selector: 'tp-guidestep-content',\r\n    template: `<ng-content></ng-content>`,\r\n    styleUrls: ['./guidestep-content.less']\r\n})\r\n\r\nexport class TpGuidestepContentComponent extends TiBaseComponent {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpGuidestepsComponent } from './TpGuidestepsComponent';\r\nimport { TpGuidestepComponent } from './TpGuidestepComponent';\r\nimport { TpGuidestepHeaderComponent } from './TpGuidestepHeaderComponent';\r\nimport { TpGuidestepContentComponent } from './TpGuidestepContentComponent';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [TpGuidestepsComponent, TpGuidestepComponent, TpGuidestepHeaderComponent, TpGuidestepContentComponent],\r\n  declarations: [TpGuidestepsComponent, TpGuidestepComponent, TpGuidestepHeaderComponent, TpGuidestepContentComponent]\r\n})\r\n\r\nexport class TpGuidestepsModule {}\r\nexport { TpGuidestepsComponent } from './TpGuidestepsComponent';\r\nexport { TpGuidestepComponent } from './TpGuidestepComponent';\r\nexport { TpGuidestepHeaderComponent } from './TpGuidestepHeaderComponent';\r\nexport { TpGuidestepContentComponent } from './TpGuidestepContentComponent';\r\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\r\nimport { TiFormComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n *  Icon组件\r\n *\r\n *  Icon组件可以设置显示Icon。\r\n *\r\n * <example-url>../tinyplus3demo/#/iconaction/iconaction-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-iconaction',\r\n    templateUrl: './iconaction.html',\r\n    styleUrls: ['./iconaction.less']\r\n})\r\nexport class TpIconactionComponent extends TiFormComponent {\r\n  // TODO: add explicit constructor\r\n\r\n  // TODO: add explicit constructor\r\n\r\n    /**\r\n     * icon名称\r\n     */\r\n    @Input() iconName: string = 'cloud-action-add2';\r\n    /**\r\n     * icon名称\r\n     */\r\n    @Input() label: string;\r\n    /**\r\n     * 跳转链接\r\n     *\r\n     * 10.1.2新增\r\n     */\r\n    @Input() href: string;\r\n    /**\r\n     * 跳转方式\r\n     *\r\n     * 10.1.2新增\r\n     */\r\n    @Input() target: string = '_blank';\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('a', { static: true }) aRef: ElementRef;\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        // 基类中做了设置宿主id的操作\r\n        super.ngOnInit();\r\n        this.setFocusableElems([this.aRef.nativeElement]);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClickFn(event: Event): void {\r\n        if(!this.href) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 不传href时，禁用右键打开新窗口功能\r\n     */\r\n    public oncontextmenu(): boolean {\r\n        return !!this.href;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpIconactionComponent } from './TpIconactionComponent';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TpIconModule],\r\n  exports: [TpIconactionComponent],\r\n  declarations: [TpIconactionComponent]\r\n})\r\nexport class TpIconactionModule {}\r\nexport { TpIconactionComponent } from './TpIconactionComponent';\r\n","import { FormControl, ValidatorFn } from '@angular/forms';\r\nimport {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    Renderer2,\r\n    ViewChild,\r\n    NgZone,\r\n    AfterViewChecked\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TiFormComponent, TiTextareaComponent, TiTextComponent, TiValidationConfig, Util } from '@cloud/tiny3';\r\n\r\n/**\r\n * 可编辑文本组件，主要实现了编辑文本的功能。组件有两种状态：编辑状态和非编辑状态。\r\n * 在非编辑状态:点击右侧笔图标时，切换到编辑状态。\r\n * 在编辑状态:点击右侧对号图标时，切换到非编辑状态，\r\n * 并且将输入框中内容显示在非编辑状态的文本中;\r\n * 点击右侧叉图标时，切换到非编辑状态，非编辑状态的文本保持之前的不变，用户输入不生效。\r\n *\r\n * <example-url>../tinyplus3demo/#/labeleditor/labeleditor-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-labeleditor',\r\n    templateUrl: 'labeleditor.html',\r\n    styleUrls: ['./labeleditor.less'],\r\n    providers: [TiFormComponent.getValueAccessor(TpLabeleditorComponent)]\r\n})\r\n// extends TiFormComponent\r\nexport class TpLabeleditorComponent extends TiFormComponent {\r\n    constructor(\r\n        protected elementRef: ElementRef,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        protected renderer2: Renderer2,\r\n        private zone: NgZone) {\r\n        super(elementRef, renderer2);\r\n    }\r\n    /**\r\n     * 是否超出显示TIP\r\n     */\r\n    @Input() autoTip: boolean = true;\r\n    /**\r\n     * 是否为多行文本编辑\r\n     */\r\n    @Input() multiline: boolean;\r\n    /**\r\n     * 用来调整文本框大小，该属性提供了四个属性值:\r\n     *\r\n     * none(不可调整组件大小):\r\n     *\r\n     * vertical(仅可调整垂直方向的大小，即调整组件的高度)\r\n     *\r\n     * horizontal(仅可调节水平方向的大小，即调整组件的宽度)\r\n     *\r\n     * both(水平和垂直方向均可调节，宽高都可调节)\r\n     */\r\n    @Input() resize: 'none' | 'vertical' | 'horizontal' | 'both' = 'both';\r\n    /**\r\n     * 显示文本length\r\n     */\r\n    @Input() maxlength: number;\r\n    /**\r\n     * 编辑图标Tip内容\r\n     */\r\n    @Input() iconTip: string;\r\n    /**\r\n     * 配置校验相关信息，详见接口TiValidationConfig\r\n     */\r\n    @Input() validation: TiValidationConfig;\r\n    /**\r\n     * 用户自定义校验规则\r\n     *\r\n     * 接口值被当作new FormControl()的第二个参数\r\n     *\r\n     * 接口类型与new FormControl()的第二个参数格式一致，详情参考angular表单部分\r\n     */\r\n    @Input() validationRules: Array<ValidatorFn>;\r\n    /**\r\n     * 新增10.1.2\r\n     * 用来配置文本框的宽\r\n     */\r\n    @Input() width: string;\r\n    /**\r\n     * 新增10.1.2\r\n     * 用来配置文本框的高\r\n     */\r\n    @Input() height: string;\r\n    /**\r\n     * 编辑事件接口\r\n     */\r\n    @Output() readonly editor: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * 确认事件接口\r\n     */\r\n    @Output() readonly confirm: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * 取消事件接口\r\n     */\r\n    @Output() readonly cancel: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('textarea', {static: false}) textareaComp: TiTextareaComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('text', {static: false}) textComp: TiTextComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('confirmIcon') confirmIconEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('edit', {static: false}) editEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public isEditing: boolean = false; // 是否处于编辑状态\r\n    /**\r\n     * @ignore\r\n     */\r\n    public value: string; // value内容\r\n    /**\r\n     * @ignore\r\n     */\r\n    public oldValue: string; // value内容\r\n    /**\r\n     * @ignore\r\n     */\r\n    public emptyValue: string = '--'; // 内容为空时显示‘--’\r\n    /**\r\n     * @ignore\r\n     */\r\n    public control: FormControl;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public valueInvalid: boolean = false;\r\n    private subscription: Subscription;\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.control = new FormControl(this.model, this.validationRules);\r\n        // 校验提示tip默认top方向展开\r\n        if (this.validation) {\r\n            this.validation.tipPosition = Util.isUndefined(this.validation.tipPosition) ? 'top' :\r\n            this.validation.tipPosition;\r\n        }\r\n        this.subscription = this.control.statusChanges.subscribe((status: string) => {\r\n            this.valueInvalid = status === 'INVALID';\r\n            this.changeDetectorRef.detectChanges();\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    // tslint:disable-next-line:typedef\r\n    ngOnModelChange() {\r\n        if (this.model) {\r\n            this.control.setValue(this.model.slice(0, this.maxlength));\r\n        } else {\r\n            this.control.setValue('');\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnDestroy(): void {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n          }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 点击编辑图标事件\r\n     */\r\n    public onClickEdit(): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n\r\n        this.isEditing = true;\r\n        this.oldValue = this.model;\r\n        this.editor.emit(this.model);\r\n        if (this.model) {\r\n            this.control.setValue(this.model.slice(0, this.maxlength));\r\n        }\r\n        setTimeout((): void => {\r\n            if (this.multiline) {\r\n                this.textareaComp.nativeElement.focus();\r\n                if (Util.isUndefined(this.maxlength)) {\r\n                    this.renderer2.removeAttribute(this.textareaComp.nativeElement, 'maxlength');\r\n                } else {\r\n                    this.renderer2.setAttribute(this.textareaComp.nativeElement, 'maxlength', String(this.maxlength));\r\n                }\r\n            } else {\r\n                this.textComp.nativeElement.focus();\r\n            }\r\n        }, 0);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击确认图标事件\r\n     */\r\n    public onClickConfirm(): void {\r\n        if (this.valueInvalid) {\r\n            return;\r\n        }\r\n        this.isEditing = false;\r\n        this.model = this.control.value;\r\n        this.confirm.emit(this.model);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击取消图标事件\r\n     */\r\n    public onClickCancel(): void {\r\n        this.isEditing = false;\r\n        this.cancel.emit(this.model);\r\n        this.control.setValue(this.oldValue);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpLabeleditorComponent } from './TpLabeleditorComponent';\r\nimport { TiOutlineModule, TiIconModule, TiOverflowModule, TiTextareaModule, TiTextModule, TiTipModule, TiValidationModule } from '@cloud/tiny3';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    TiOutlineModule,\r\n    TiIconModule,\r\n    TiOverflowModule,\r\n    TpIconModule,\r\n    TiTextareaModule,\r\n    TiTipModule,\r\n    TiTextModule,\r\n    TiValidationModule\r\n  ],\r\n  exports: [TpLabeleditorComponent],\r\n  declarations: [TpLabeleditorComponent]\r\n})\r\n\r\nexport class TpLabeleditorModule {}\r\nexport { TpLabeleditorComponent } from './TpLabeleditorComponent';\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * 布局组件，提供整个页面内容区域的布局\r\n *\r\n * 头部\r\n *\r\n * <example-url>../tinyplus3demo/#/layout/layout-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-layout-header',\r\n    template: '<div class=\"tp-layout-header-content\"><ng-content></ng-content></div>',\r\n    styleUrls: ['./layout-header.less'],\r\n    host: {\r\n        '[class.tp-layout-header]': 'true'\r\n    }\r\n})\r\nexport class TpLayoutHeaderComponent {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * 布局组件，提供整个页面内容区域的布局\r\n *\r\n * 内容容器\r\n *\r\n * <example-url>../tinyplus3demo/#/layout/layout-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-layout-content',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./layout-content.less'],\r\n    host: {\r\n        '[class.tp-layout-content]': 'true'\r\n    }\r\n})\r\nexport class TpLayoutContentComponent {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * 布局组件，提供整个页面内容区域的布局\r\n *\r\n * 内部分区\r\n *\r\n * <example-url>../tinyplus3demo/#/layout/layout-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-layout-section',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./layout-section.less'],\r\n    host: {\r\n        '[class.tp-layout-section]': 'true'\r\n    }\r\n})\r\nexport class TpLayoutSectionComponent {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * 布局组件，提供整个页面内容区域的布局\r\n *\r\n * 内容主体\r\n *\r\n * <example-url>../tinyplus3demo/#/layout/layout-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-layout-content-body',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./layout-content-body.less']\r\n})\r\nexport class TpLayoutContentBodyComponent {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * 布局组件，提供整个页面内容区域的布局\r\n *\r\n * 内容头部\r\n *\r\n * <example-url>../tinyplus3demo/#/layout/layout-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-layout-content-header',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./layout-content-header.less']\r\n})\r\nexport class TpLayoutContentHeaderComponent {\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * 布局组件，提供整个页面内容区域的布局\r\n *\r\n * 内容容器\r\n *\r\n * <example-url>../tinyplus3demo/#/layout/layout-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-layout-column',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./layout-column.less']\r\n})\r\nexport class TpLayoutColumnComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpLayoutHeaderComponent } from './TpLayoutHeaderComponent';\r\nimport { TpLayoutContentComponent } from './TpLayoutContentComponent';\r\nimport { TpLayoutSectionComponent } from './TpLayoutSectionComponent';\r\nimport { TpLayoutContentBodyComponent } from './TpLayoutContentBodyComponent';\r\nimport { TpLayoutContentHeaderComponent } from './TpLayoutContentHeaderComponent';\r\nimport { TpLayoutColumnComponent } from './TpLayoutColumnComponent';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [ TpLayoutContentComponent,\r\n             TpLayoutContentBodyComponent,\r\n             TpLayoutHeaderComponent,\r\n             TpLayoutSectionComponent,\r\n             TpLayoutContentHeaderComponent,\r\n             TpLayoutColumnComponent],\r\n  declarations: [TpLayoutContentComponent,\r\n                 TpLayoutContentBodyComponent,\r\n                 TpLayoutHeaderComponent,\r\n                 TpLayoutSectionComponent,\r\n                 TpLayoutContentHeaderComponent,\r\n                 TpLayoutColumnComponent]\r\n})\r\nexport class TpLayoutModule {}\r\nexport { TpLayoutContentComponent } from './TpLayoutContentComponent';\r\nexport { TpLayoutContentBodyComponent } from './TpLayoutContentBodyComponent';\r\nexport { TpLayoutHeaderComponent } from './TpLayoutHeaderComponent';\r\nexport { TpLayoutSectionComponent } from './TpLayoutSectionComponent';\r\nexport { TpLayoutContentHeaderComponent } from './TpLayoutContentHeaderComponent';\r\nexport { TpLayoutColumnComponent } from './TpLayoutColumnComponent';\r\n","import { Component, ContentChild, ElementRef, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { TiBaseComponent, TiLeftmenuItem } from '@cloud/tiny3';\r\n\r\nexport interface TpLeftmenuConfig {\r\n    /**\r\n     * 设置服务名称\r\n     */\r\n    serviceName: string;\r\n    /**\r\n     * 控制右侧内容区的刷新\r\n     *\r\n     * 注意：当重复点击当前激活菜单项时，需要刷新右侧内容区，为了实现此功能设置了该接口；\r\n     * 该接口是双向绑定的，当重复点击当前激活菜单项时，reloadState的值会经历 true(上次的值) -> false -> true\r\n     * 的变化过程，开发者给改接口与其右侧区域容器上ngIf接口绑定的是同一个变量，所以ngIf的值也会经历同样的变化，\r\n     * 从而做到右侧内容区的刷新。\r\n     */\r\n    reloadState: boolean;\r\n    /**\r\n     * 是否开启左侧菜单面板可折叠功能，默认开启。\r\n     */\r\n    toggleable?: boolean;\r\n    /**\r\n     * 左侧菜单面板是否为收起状态，用于设置面板收起/展开状态，默认展开。\r\n     */\r\n    collapsed?: boolean;\r\n    /**\r\n     * 左侧菜单面板收起/展开状态改变时向外通知\r\n     */\r\n    collapsedChangeFn?: (collapsed: boolean) => void;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\nexport interface TpLeftmenuItem extends TiLeftmenuItem {\r\n    /**\r\n     * 菜单项文本内容\r\n     */\r\n    label: string;\r\n    /**\r\n     * 分组或一级菜单项可设置该属性\r\n     */\r\n    children?: Array<TpLeftmenuItem>;\r\n    /**\r\n     * 是否隐藏菜单项\r\n     */\r\n    hide?: boolean;\r\n    /**\r\n     * 是否为分组项\r\n     */\r\n    isGroup?: boolean;\r\n    /**\r\n     * 如果是分组项，是否展开该组\r\n     */\r\n    expanded?: boolean;\r\n    // click: () => {}; TODO:\r\n    // hyperlink: string; TODO:\r\n}\r\n\r\n/**\r\n * TpLeftmenu组件主要用于左侧导航，是基于Tiny3中的TiLeftmenu组件进行封装的，详细的数据接口说明可参照Tiny3中的TiLeftmenu。\r\n *\r\n * <example-url>../tinyplus3demo/#/leftmenu/leftmenu-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-leftmenu',\r\n    templateUrl: './leftmenu.html',\r\n    styleUrls: ['./leftmenu.less']\r\n})\r\nexport class TpLeftmenuComponent extends TiBaseComponent {\r\n    private static readonly CHINESE_REG: RegExp = new RegExp('[\\u4e00-\\u9fa5]'); // 汉字\r\n    /**\r\n     * 左侧菜单配置项\r\n     */\r\n    @Input() config: TpLeftmenuConfig;\r\n    /**\r\n     * 左侧菜单数据\r\n     *\r\n     * 其中的 href 属性 在v10.0.1 ~ v10.1.3版本存在XSS攻击(url类型)风险，v10.1.4 版本做了安全处理，已不存在安全问题，建议业务尽快升级版本。\r\n     *\r\n     */\r\n    @Input() items: Array<TpLeftmenuItem>;\r\n    /**\r\n     * 设置激活菜单项。这个值应该是 TiLeftmenuLevel1 和 TiLeftmenuLevel2 组件的 item 接口传入的值的集合中的一个(item)\r\n     *\r\n     * 此接口是双向绑定的，设置时中括号“[]”和圆括号“()”要同时使用\r\n     */\r\n    @Input() active: TpLeftmenuItem;\r\n    /**\r\n     * 激活菜单项改变时向外通知\r\n     */\r\n    @Output() readonly activeChange: EventEmitter<TpLeftmenuItem> = new EventEmitter();\r\n    /**\r\n     * @ignore\r\n     * 底部元素\r\n     */\r\n    @ContentChild('foot') leftmenuFoot: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 模板中使用\r\n     */\r\n    public getHeaderTextClass(): string {\r\n        return this.config && TpLeftmenuComponent.CHINESE_REG.test(this.config.serviceName) && this.config.serviceName.length > 8 ?\r\n            'tp-leftmenu-title-long' : 'tp-leftmenu-title';\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 激活菜单项改变时向外通知\r\n     */\r\n    onActiveChange(item: TpLeftmenuItem): void {\r\n        this.activeChange.emit(item);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 触发点击事件\r\n     */\r\n    triggerClick(item: TpLeftmenuItem): void { // TODO: 暂未开放click事件\r\n        if (typeof(item.click) === 'function') {\r\n            item.click(item);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TiIconModule, TiLeftmenuModule } from '@cloud/tiny3';\r\nimport { TpLeftmenuComponent } from './TpLeftmenuComponent';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiIconModule,\r\n    TiLeftmenuModule\r\n  ],\r\n  exports: [TpLeftmenuComponent],\r\n  declarations: [TpLeftmenuComponent]\r\n})\r\n\r\nexport class TpLeftmenuModule {}\r\nexport { TpLeftmenuComponent, TpLeftmenuItem, TpLeftmenuConfig } from './TpLeftmenuComponent';\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChange,\r\n    SimpleChanges,\r\n    ElementRef,\r\n    Renderer2,\r\n    TemplateRef\r\n} from '@angular/core';\r\nimport { Util, TiBaseComponent } from '@cloud/tiny3';\r\nimport { ActivatedRoute, NavigationEnd, NavigationExtras, Router, UrlTree } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface TpLeftmenuthinItem {\r\n    /**\r\n     * 设置当前菜单项对应的路由，与 Router.navigate方法的第一个参数一样\r\n     */\r\n    router: Array<any>;\r\n    // routerExtras?: { relativeTo?: string, queryParams?: Object, fragment?: string };\r\n    /**\r\n     * 设置当前菜单项对应路由的配置信息，与 Router.navigate方法的第二个参数一样\r\n     */\r\n    routerExtras?: NavigationExtras;\r\n    /**\r\n     * 设置一个router路由列表，当该列表中的路由被激活时，其对应的菜单项被激活处于高亮状态。\r\n     * 其使用场景为多个路由对应同一个左侧菜单项。\r\n     *\r\n     * routerList 数组中每一个元素与 Router.navigate方法的第一个参数一样\r\n     */\r\n    routerList?: Array<Array<any>>; // 数组中元素也为数组\r\n    /**\r\n     * 选项label\r\n     */\r\n    label: string;\r\n    /**\r\n     * 选项图标名称\r\n     */\r\n    iconName?: string;\r\n    /**\r\n     * 非云服务或非入库图标使用展示\r\n     *\r\n     * 10.1.0 新增\r\n     */\r\n    customizeIcon?: TemplateRef<any>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * 组件功能与leftMenu组件相似。\r\n *\r\n * <example-url>../tinyplus3demo/#/leftmenuthin/leftmenuthin-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-leftmenuthin',\r\n    templateUrl: './leftmenuthin.html',\r\n    styleUrls: ['./leftmenuthin.less']\r\n})\r\n\r\nexport class TpLeftmenuthinComponent extends TiBaseComponent {\r\n    /**\r\n     * 设置激活菜单项。接口传入的值的集合中的一个(item)\r\n     *\r\n     * 此接口是双向绑定的，设置时中括号“[]”和圆括号“()”要同时使用\r\n     */\r\n    @Input() active: TpLeftmenuthinItem;\r\n    /**\r\n     * 激活菜单项改变时向外通知\r\n     */\r\n    @Output() readonly activeChange: EventEmitter<TpLeftmenuthinItem> = new EventEmitter();\r\n    /**\r\n     * 点击菜单项触发此事件\r\n     */\r\n    @Output() readonly select: EventEmitter<TpLeftmenuthinItem> = new EventEmitter();\r\n    /**\r\n     * 控制右侧内容区的刷新\r\n     *\r\n     * 注意：当重复点击当前激活菜单项时，需要刷新右侧内容区，为了实现此功能设置了该接口；\r\n     * 该接口是双向绑定的，当重复点击当前激活菜单项时，reloadState的值会经历 true(上次的值) -> false -> true\r\n     * 的变化过程，开发者给改接口与其右侧区域容器上ngIf接口绑定的是同一个变量，所以ngIf的值也会经历同样的变化，\r\n     * 从而做到右侧内容区的刷新。\r\n     */\r\n    @Input() reloadState: boolean = true;\r\n    /**\r\n     * 菜单数据列表\r\n     */\r\n    @Input() items: Array<TpLeftmenuthinItem>;\r\n    /**\r\n     * 右侧内容区是否需要刷新的状态值改变时向外通知\r\n     */\r\n    @Output() readonly reloadStateChange: EventEmitter<boolean> = new EventEmitter();\r\n    /**\r\n     * @ignore\r\n     */\r\n    public readonly resolvedPromise: Promise<any> = Promise.resolve(null);\r\n    /**\r\n     * 标志量，是否为url改变(需要去改变active)\r\n     */\r\n    private isUrlChange: boolean = false;\r\n    private navigationSubscription: Subscription;\r\n    constructor(\r\n        private router: Router,\r\n        private activeRoute: ActivatedRoute,\r\n        protected hostRef: ElementRef, protected renderer: Renderer2 ) {\r\n            super(hostRef, renderer)\r\n    }\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // 初始时右侧内容区默认显示，需使外部用户的reloadState值为true。\r\n        // 双向绑定数据时，对初始传入的值立即修改并传出时会报错，\r\n        // 此处参考ngModel源码setValue的处理，使用promise延后执行时序\r\n        this.resolvedPromise.then(() => {\r\n            this.reloadStateChange.emit(true);\r\n        });\r\n    }\r\n    ngAfterViewInit(): void {\r\n        // 直接输入url(刷新页面)改变状态时，leftmenu能同步修改激活状态\r\n        const urlActiveItem: TpLeftmenuthinItem = this.getActiveItemByUrl(this.items);\r\n        if (urlActiveItem) {\r\n            // 双向绑定数据时，对初始传入的值立即修改并传出时会报错，\r\n            // 此处参考ngModel源码setValue的处理，使用promise延后执行时序\r\n            this.resolvedPromise.then(() => {\r\n                if (urlActiveItem !== this.active) {\r\n                    this.isUrlChange = true;\r\n                    this.active = urlActiveItem;\r\n                    this.activeChange.emit(this.active);\r\n                }\r\n            });\r\n        } else {\r\n            this.link();\r\n        }\r\n        // 从非leftMenu处跳转改变状态时，leftmenu能同步修改激活状态\r\n        this.navigationSubscription = this.router.events.subscribe((evt: any) => {\r\n            if (evt instanceof NavigationEnd) {\r\n                const newActiveItem: TpLeftmenuthinItem = this.getActiveItemByUrl(this.items);\r\n                if (newActiveItem && newActiveItem !== this.active) {\r\n                    this.active = newActiveItem;\r\n                    this.activeChange.emit(this.active);\r\n                    this.isUrlChange = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        const activeObj: SimpleChange = changes['active'];\r\n        if (activeObj && !activeObj.firstChange) {\r\n            if (!this.isUrlChange) {\r\n                this.link();\r\n                this.isUrlChange = false;\r\n            } else {\r\n                this.navigate(activeObj.currentValue);\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        if (this.navigationSubscription) {\r\n            this.navigationSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 模板中使用\r\n     */\r\n    public selectFn(item: any): void {\r\n        const oldactive: TpLeftmenuthinItem = this.active;\r\n        const newactive: TpLeftmenuthinItem = item;\r\n        // 点击当前已经激活的item时，刷新对应路由\r\n        if (newactive === oldactive) {\r\n            this.triggerReload(item);\r\n        } else if (newactive !== oldactive) {\r\n            this.active = newactive;\r\n            this.navigate(item);\r\n            this.activeChange.emit(this.active);\r\n        }\r\n        this.select.emit(item);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击当前选中项时，触发内容区重载\r\n     * @param item 当前点击项\r\n     */\r\n    public triggerReload(item: TpLeftmenuthinItem): void {\r\n        // 使reloadState由false变为true,配合内容区的ngIf做到内容区的重载\r\n        this.reloadStateChange.emit(false);\r\n        setTimeout(() => {\r\n            this.reloadStateChange.emit(true);\r\n            this.navigate(item);\r\n        }, 0);\r\n    }\r\n    private navigate(item: TpLeftmenuthinItem): void {\r\n        this.router.navigate(item.router, this.getNavigationExtras(item.routerExtras));\r\n    }\r\n    private getNavigationExtras(routerExtras: Object): Object {\r\n        return { relativeTo: this.activeRoute, ...routerExtras };\r\n    }\r\n    private getActiveItemByUrl(arr: Array<any>): TpLeftmenuthinItem {\r\n        let resultItem: TpLeftmenuthinItem;\r\n        for (const item of arr) {\r\n            if (this.isActived(item)) {\r\n                resultItem = item;\r\n\r\n                return resultItem;\r\n            }\r\n        }\r\n\r\n        return resultItem;\r\n    }\r\n    private isActived(item: TpLeftmenuthinItem): boolean {\r\n        const relativeRoute: NavigationExtras = this.getRelativeRoute(item.routerExtras);\r\n        if (this.isMatchCurrentUrl(item.router, relativeRoute)) {\r\n            return true;\r\n        }\r\n\r\n        if (Util.isArray(item.routerList) && item.routerList.length > 0) {\r\n            for (const router of item.routerList) {\r\n                if (this.isMatchCurrentUrl(router, relativeRoute)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    private getRelativeRoute(routerExtras: Object): NavigationExtras {\r\n        if (!routerExtras || !routerExtras['relativeTo']) {\r\n            return { relativeTo: this.activeRoute };\r\n        }\r\n\r\n        return { relativeTo: routerExtras['relativeTo'] };\r\n    }\r\n    private isMatchCurrentUrl(router: Array<any>, relativeRoute: NavigationExtras): boolean {\r\n        if (!Util.isArray(router)) {\r\n            return false;\r\n        }\r\n        const itemUrlTree: UrlTree = this.router.createUrlTree(router, relativeRoute);\r\n\r\n        return this.router.isActive(itemUrlTree, false);\r\n    }\r\n    private link(): void {\r\n        if (this.active) {\r\n            this.navigate(this.active);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpLeftmenuthinComponent } from './TpLeftmenuthinComponent';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { TiOutlineModule } from '@cloud/tiny3';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, TpIconModule, TiOutlineModule],\r\n  exports: [TpLeftmenuthinComponent],\r\n  declarations: [TpLeftmenuthinComponent]\r\n})\r\n\r\nexport class TpLeftmenuthinModule {}\r\nexport { TpLeftmenuthinComponent, TpLeftmenuthinItem } from './TpLeftmenuthinComponent';\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiFormComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * 链接按钮组件 linkbutton\r\n *\r\n * 该属性指令需要结合a标签使用，实现链接按钮样式\r\n *\r\n * <example-url>../tinyplus3demo/#/linkbutton/linkbutton-all</example-url>\r\n */\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: '[tpLinkbutton]',\r\n    templateUrl: './linkbutton.html',\r\n    styleUrls: ['./linkbutton.less']\r\n})\r\n\r\nexport class TpLinkbuttonComponent extends TiFormComponent {\r\n  // TODO: add explicit constructor\r\n\r\n  // TODO: add explicit constructor\r\n\r\n    /**\r\n     * icon名称\r\n     */\r\n    @Input() iconName: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpLinkbuttonComponent } from './TpLinkbuttonComponent';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, TpIconModule],\r\n  exports: [TpLinkbuttonComponent],\r\n  declarations: [TpLinkbuttonComponent]\r\n})\r\n\r\nexport class TpLinkbuttonModule {}\r\nexport { TpLinkbuttonComponent } from './TpLinkbuttonComponent';\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\nimport { TpLink } from '../crumb/TpCrumbModule';\r\n\r\nexport interface TpLinkOption {\r\n    /* tslint:disable:no-redundant-jsdoc */\r\n    /**\r\n     * 链接块的标题;\r\n     */\r\n    title?: string;\r\n    /**\r\n     * 设置链接是否为导航链接的默认样式（导航链接默认显示为蓝色）;\r\n     * @default false\r\n     */\r\n    isNavigation?: boolean;\r\n    /**\r\n     * 设置链接块是否隐藏;\r\n     * @default false\r\n     */\r\n    hide?: boolean;\r\n    /**\r\n     * 链接块的链接列表数据;\r\n     */\r\n    items?: Array<TpLinkItem>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\nexport interface TpLinkItem extends TpLink {\r\n    /**\r\n     * 设置链接是否隐藏;\r\n     * @default false\r\n     */\r\n    hide?: boolean;\r\n}\r\n/**\r\n * 链接列表组件 linklist\r\n *\r\n * <example-url>../tinyplus3demo/#/linklist/linklist-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-linklist',\r\n    templateUrl: './linklist.html',\r\n    styleUrls: ['./linklist.less']\r\n})\r\n\r\nexport class TpLinklistComponent extends TiBaseComponent {\r\n    /**\r\n     * 组件数据\r\n     */\r\n    @Input() options: Array<TpLinkOption>;\r\n    /**\r\n     * 点击某个链接文本触发此事件\r\n     */\r\n    @Output() readonly select: EventEmitter<TpLinkItem> = new EventEmitter<TpLinkItem>();\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(item: TpLinkItem): boolean {\r\n        this.select.emit(item);\r\n        // 不设置链接时，阻止跳转（a标签在click事件返回值为false时，会阻止默认行为）\r\n        if (!item.href) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpLinklistComponent } from './TpLinklistComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [TpLinklistComponent],\r\n  declarations: [TpLinklistComponent]\r\n})\r\n\r\nexport class TpLinklistModule { }\r\nexport { TpLinklistComponent, TpLinkOption, TpLinkItem } from './TpLinklistComponent';\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\nimport { TiModalBodyComponent } from '@cloud/tiny3'\r\n\r\n/**\r\n *\r\n *  业务典型场景用到的弹窗组件\r\n *\r\n *  10.1.0新增\r\n *\r\n *  提供了UI规范推荐的四种尺寸的弹窗样式，还有带alert提示的弹窗和典型confirm弹窗的样式\r\n *\r\n *  10.0.4及之前的版本是以模板的形式提供(相关的样式是全局的）；10.1.0版本为了实现样式按需加载，去掉了之前的模板，将其封装在一个组件模块，所以该组件实际只提供了样式。\r\n *\r\n *  <example-url>../tinyplus3demo/#/modalbody/modalbody-all</example-url>\r\n *\r\n */\r\n@Component({\r\n    selector: 'tp-modal-body', // 兼容延用之前的样式选择器\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./modalbody.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    host: {\r\n        '[class.ti3-modal-body]': 'true' // 1. tiny3中的 .ti3-modal-body 有些样式；2. TiModalComponent 中有通过该样式类获取dom的逻辑\r\n    }\r\n})\r\nexport class TpModalBodyComponent extends TiModalBodyComponent { }\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { TpModalBodyComponent } from './TpModalBodyComponent';\r\n\r\n@NgModule({\r\n  exports: [TpModalBodyComponent],\r\n  declarations: [TpModalBodyComponent]\r\n})\r\nexport class TpModalBodyModule {}\r\nexport { TpModalBodyComponent } from './TpModalBodyComponent';\r\n","import { ChangeDetectorRef, Component, ElementRef, Input, Renderer2, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * 该接口定义与console框架数据结构保持一致\r\n *\r\n * 10.1.0/9.1.0新增\r\n */\r\nexport interface TpRegionData {\r\n    /**\r\n     * 当前region数据，对象类型\r\n     */\r\n    region?: any;\r\n    /**\r\n     * 当前服务自行处理后支持的region列表，数组对象类型\r\n     */\r\n    supportRegions?: Array<any>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 区域服务不支持页面组件\r\n *\r\n * 该组件与console框架相关，框架处理数据，组件获取数据显示；\r\n * 有些服务无法在servicecm配置支持的region列表，可通过regionData接口配置\r\n *\r\n * <b>注</b>：支持列表中的region区域是服务已配置的可支持的区域。\r\n *\r\n * <example-url>../tinyplus3demo/#/nonsupportregion/nonsupportregion-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-nonsupportregion',\r\n    templateUrl: './nonsupportregion.html',\r\n    styleUrls: ['./nonsupportregion.less']\r\n})\r\n\r\nexport class TpNonsupportregionComponent extends TiBaseComponent {\r\n    /**\r\n     * 配置当前区域数据和当前服务下支持的区域列表数据，默认数据来源于console框架getRegionData()中提供的region及supportRegions\r\n     *\r\n     * 业务侧可自行处理console框架getRegionData()中提供的区域数据后传入\r\n     *\r\n     * 10.1.0/9.1.0新增\r\n     */\r\n    @Input() regionData: TpRegionData;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('container') containerEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    label: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    supportRegions: Array<any>;\r\n    private regionsDataSub: Subscription;\r\n\r\n    constructor(\r\n        private elementRef: ElementRef,\r\n        private renderer2: Renderer2,\r\n        private changeDetector: ChangeDetectorRef) {\r\n        super(elementRef, renderer2);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        if (this.regionData) {\r\n            this.setViewInfo(this.regionData);\r\n\r\n            return;\r\n        }\r\n\r\n        this.setRegionsData();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        const regionsObj: SimpleChange = changes['regionData'];\r\n        if (regionsObj && regionsObj.currentValue && !regionsObj.isFirstChange()) {\r\n            this.setViewInfo(regionsObj.currentValue);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        if (this.regionsDataSub) {\r\n            this.regionsDataSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    private setRegionsData(): void {\r\n        if (!(window as any).cfRegionSubject) {\r\n            return;\r\n        }\r\n        this.regionsDataSub = (window as any).cfRegionSubject.subscribe({\r\n            next: (items: TpRegionData): void => {\r\n                this.setViewInfo(items);\r\n            }\r\n        });\r\n    }\r\n\r\n    private setViewInfo(items: any): void {\r\n        if (items.region && items.region.displayName) {\r\n            const displayName: any = `<span>${items.region.displayName}</span>`;\r\n            this.label = Util.formatEntry(TiLocale.getLocaleWords().tpNonsupportregion.label, [displayName]);\r\n        }\r\n        this.supportRegions = items.supportRegions;\r\n        this.changeDetector.detectChanges();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpNonsupportregionComponent } from './TpNonsupportregionComponent';\r\nimport { TpSupportregionlistModule } from '../supportregionlist/TpSupportregionlistModule';\r\n\r\n@NgModule({\r\n  imports: [TpSupportregionlistModule],\r\n  exports: [TpNonsupportregionComponent],\r\n  declarations: [TpNonsupportregionComponent]\r\n})\r\n\r\nexport class TpNonsupportregionModule { }\r\nexport { TpNonsupportregionComponent, TpRegionData} from './TpNonsupportregionComponent';","// tslint:disable-next-line: no-implicit-dependencies\r\nimport { Component, ElementRef, Input, Renderer2, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiButtongroupComponent, TiButtonItem, TiFormComponent, TiLocale, Util } from '@cloud/tiny3';\r\n\r\n/**\r\n * @ignore\r\n * 内部使用\r\n */\r\nexport interface TpPricelineRect {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n    active: boolean;\r\n    text: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n\r\n}\r\n/**\r\n * 价格曲线每个按钮选项数据\r\n */\r\nexport interface TpPricelineItem extends TiButtonItem {\r\n    /**\r\n     * 每个选项对应的价格\r\n     */\r\n    price: number;\r\n}\r\n\r\n/**\r\n *  价格曲线组件, 对应tiny2中btnSlider组件price-option接口配置后的功能\r\n *\r\n *  9.0.4版本新增\r\n *\r\n * <example-url>../tinyplus3demo/#/priceline/priceline-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-priceline',\r\n    templateUrl: './priceline.html',\r\n    styleUrls: ['./priceline.less'],\r\n    providers: [TiFormComponent.getValueAccessor(TpPricelineComponent)]\r\n})\r\nexport class TpPricelineComponent extends TiFormComponent {\r\n\r\n    /**\r\n     * 按钮配置数据\r\n     */\r\n    @Input() items: Array<TpPricelineItem> = [];\r\n    /**\r\n     * 设置单选按钮组是否可以取消选中\r\n     */\r\n    @Input() deselectable: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * canvas 元素引用\r\n     */\r\n    @ViewChild('canvas') canvasRef: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * canvas 包裹元素，\r\n     */\r\n    @ViewChild('canvasWrap') canvasWrapRef: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 按钮组\r\n     */\r\n    @ViewChild(TiButtongroupComponent) buttonGroupCom: TiButtongroupComponent;\r\n\r\n    // 当前画笔\r\n    private ctx: CanvasRenderingContext2D;\r\n    // canvas 画板的配置\r\n    private canvasOption: any;\r\n    private canvasWidth: number;\r\n    // 动画当前第几步，动画使用，\r\n    private step: number;\r\n    // 上一次的items 数据，用于动画\r\n    private previousItems: Array<any>;\r\n    // 每个背景柱子和\r\n    private rects: Array<TpPricelineRect>;\r\n    // 统计点的坐标\r\n    private x: number;\r\n    private y: number;\r\n    private lastX: number;\r\n    private lastButton: DOMRect;\r\n    // 最大价格，价格曲线可以升，最大值不是items[0].price\r\n    private maxPrice: number;\r\n    // IE11 CSSVar 补丁初始化样式的生效有延迟，initCanvas函数中获取不到主题相关的样式，所以需要定时器多次获取\r\n    private timer: any;\r\n\r\n    constructor(hostRef: ElementRef, renderer: Renderer2) {\r\n        super(hostRef, renderer);\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n        this.initCanvas();\r\n        if (this.canvasOption) {\r\n            // 视图渲染后修改了视图相关数据，所以使用setTimeout\r\n            setTimeout(() => {\r\n                this.draw(this.items);\r\n            }, 0);\r\n        } else {\r\n            this.timer = setInterval(() => {\r\n                this.initCanvas();\r\n                if (this.canvasOption) {\r\n                    this.draw(this.items);\r\n                    clearInterval(this.timer);\r\n                }\r\n               // 测试IE11刷新需要40ms左右完成，URL访问需要80ms左右完成，真实业务场景比较复杂取100\r\n            }, 100);\r\n        }\r\n\r\n        // tslint:disable-next-line: newline-per-chained-call\r\n        this.setFocusableElems(this.buttonGroupCom.getFocusableElems().concat(this.nativeElement));\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        // 价格变化\r\n        const items: SimpleChange = changes['items'];\r\n        if (items && !items.firstChange) {\r\n            this.step = 10;\r\n            this.previousItems = items.previousValue;\r\n            this.changeDraw();\r\n        }\r\n    }\r\n\r\n    onNgModelChange(data: TiButtonItem): void {\r\n        // 选中项变化，折线的标题会变化，重新绘制\r\n        if (this.model) {\r\n            this.draw(this.items);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        clearInterval(this.timer);\r\n    }\r\n    // 价格变动时重绘动画\r\n    // 实现思路，动画时间是200ms，每一次绘制间隔设置20ms，分10步绘制，\r\n    // todo 1.绘制间隔设置为16.66接近 60帧动效，2.使用 requestAnimationFrame 代替 setTimeout\r\n    private changeDraw(): void {\r\n        // 动画过程中变化的items\r\n        const currentItems: Array<TiButtonItem> = this.items.map((item: any, index: number) => {\r\n            // 重新生成一个新对象，避免修改原始数据\r\n            const newItem: TiButtonItem = { ...item };\r\n            newItem.price = newItem.price - (newItem.price - this.previousItems[index].price) * (this.step / 10);\r\n\r\n            return newItem;\r\n        });\r\n\r\n        this.draw(currentItems);\r\n        this.step--;\r\n        // 20 每一帧间隔时间20ms\r\n        setTimeout(() => {\r\n            if (this.step > -1) {\r\n                this.changeDraw();\r\n            }\r\n        }, 20);\r\n\r\n    }\r\n\r\n    // 初始化价格曲线 canvas\r\n    private initCanvas(): void {\r\n\r\n        let lineColor: string;\r\n        let color: string;\r\n        let activeColor: string;\r\n        let startColor: string;\r\n        let endColor: string;\r\n\r\n        if (Util.supportsCssVars()) {\r\n            // Chrome等支持CSSVar的浏览器，正常操作,  从CSSVar变量中取出颜色。\r\n            const cSSStyleDeclaration: CSSStyleDeclaration = getComputedStyle(document.documentElement);\r\n            lineColor = cSSStyleDeclaration.getPropertyValue('--ti-common-color-line-active');\r\n            color = cSSStyleDeclaration.getPropertyValue('--ti-common-color-text-weaken');\r\n            activeColor = cSSStyleDeclaration.getPropertyValue('--ti-common-color-text-primary');\r\n            startColor = cSSStyleDeclaration.getPropertyValue('--ti-common-color-bg-emphasize');\r\n            endColor = startColor;\r\n        } else {\r\n            // IE和低版Edge不支持CSSVar的浏览器，从一个CSS样式中取出颜色。\r\n            const cSSStyleDeclaration: CSSStyleDeclaration = getComputedStyle(this.canvasRef.nativeElement);\r\n            color = cSSStyleDeclaration.getPropertyValue('flood-color');\r\n            activeColor = cSSStyleDeclaration.getPropertyValue('lighting-color');\r\n\r\n            const cSSStyleDeclaration2: CSSStyleDeclaration = getComputedStyle(this.canvasWrapRef.nativeElement);\r\n            lineColor = cSSStyleDeclaration2.getPropertyValue('flood-color');\r\n            startColor = cSSStyleDeclaration2.getPropertyValue('lighting-color');\r\n            endColor = cSSStyleDeclaration2.getPropertyValue('stop-color');\r\n            // tslint:disable-next-line: max-line-length\r\n        }\r\n\r\n        if (!lineColor || !color || !activeColor || !startColor || !endColor) {\r\n\r\n            return;\r\n        }\r\n\r\n        // canvas曲线配置项\r\n        this.canvasOption = {\r\n            // 整个画板的高度\r\n            height: 60,\r\n            carveHeight: 40,\r\n            // 经验值，设置为1折线不平滑\r\n            lineWidth: 1.4,\r\n            // chrome  拿到的颜色有前后空格\r\n            lineColor: lineColor.trim(),\r\n            title: TiLocale.getLocaleWords().tpPriceline.carveTitle,\r\n            color: color.trim(),\r\n            titleX: 0,\r\n            titleY: 14,\r\n            fontSize: '12px',\r\n            fontFamily: 'Roboto,Microsoft YaHei,微软雅黑,Sans-serif',\r\n            activeColor: activeColor.trim(),\r\n            tagOffset: 6,\r\n            tagUnit: '/' + TiLocale.getLocaleWords().tpPriceline.tagUnit,\r\n            tagPrefix: TiLocale.getLocaleWords().tpPriceline.tagPrefix,\r\n            currency: TiLocale.getLocaleWords().tpPriceline.tagCurrency,\r\n            startColor: this.color2rgba(startColor.trim(), 0.26),\r\n            endColor: this.color2rgba(endColor.trim(), 0)\r\n        };\r\n\r\n        // 设置canvas的高度\r\n        this.renderer.setAttribute(this.canvasRef.nativeElement, 'height', this.canvasOption.height);\r\n\r\n        // 设置canvas 宽度和canvas上下文，在IE11环境 ngAfterViewInit中设置，获取宽度有误差，所以放在此处\r\n        const wrapStyles: CSSStyleDeclaration = getComputedStyle(this.canvasWrapRef.nativeElement);\r\n        this.canvasWidth = parseInt(wrapStyles.width, 10);\r\n        this.renderer.setAttribute(this.canvasRef.nativeElement, 'width', String(this.canvasWidth));\r\n\r\n        this.ctx = (this.canvasRef.nativeElement as HTMLCanvasElement).getContext('2d');\r\n    }\r\n\r\n    // ie11 canvas 渐变透明不支持# 开头的八位颜色写法，所有需要转化成rgba表示形式\r\n    // tslint:disable-next-line: prefer-function-over-method\r\n    private color2rgba(hex: string, alpha?: number): string {\r\n        const colorRegex: RegExp = /^#?[a-fA-F0-9]+$/;\r\n        if (!colorRegex.test(hex) || hex.length !== 7) {\r\n            return hex;\r\n        }\r\n        const values: Array<number> = [\r\n            parseInt(hex.slice(1, 3), 16),\r\n            parseInt(hex.slice(3, 5), 16),\r\n            parseInt(hex.slice(5), 16)\r\n        ];\r\n        if (alpha >= 0 && alpha <= 1) {\r\n            values.push(alpha);\r\n        } else {\r\n            values.push(1);\r\n        }\r\n\r\n        return `rgba(${values.join(',')})`;\r\n    }\r\n    // 画图实现思路：1 获取按钮的位置和宽度，2.根据按钮的位置宽度和items中的price数据，在每个价格变化时生成一个记录对象放在rects中，\r\n    // 3. 根据记录的对象数组rects, 先画矩形背景和价格标签，4. 再根据rects画折线\r\n    private draw(items: Array<any>): void {\r\n        if (!items || items.length < 2 || !this.canvasOption) {\r\n            return;\r\n        }\r\n        // 每次重绘前清空画板\r\n        this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasOption.height);\r\n        this.rects = [];\r\n        this.x = 0;\r\n        this.lastX = 0;\r\n        this.maxPrice = items[0].price;\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let index: number = 1; index < this.items.length; index++) {\r\n            if (items[index].price > this.maxPrice) {\r\n                this.maxPrice = items[index].price;\r\n            }\r\n        }\r\n        this.y = this.canvasOption.height - this.canvasOption.carveHeight * items[0].price / this.maxPrice;\r\n\r\n        const buttons: NodeListOf<Element> = (this.nativeElement as HTMLElement).querySelectorAll('.ti3-btn-item-radio');\r\n        //  曲线图的背景和选择按钮的的\r\n        this.lastButton = buttons[0].getBoundingClientRect();\r\n\r\n        // 画标题\r\n        this.drawText({\r\n            x: this.canvasOption.titleX,\r\n            y: this.canvasOption.titleY,\r\n            text: this.canvasOption.title\r\n        });\r\n\r\n        // 遍历按钮数据\r\n        const len: number = this.items.length;\r\n        for (let index: number = 1; index < len; index++) {\r\n\r\n            // 不是最后一条并且价格没有变化，不需要处理\r\n            if (index !== len - 1 && this.items[index].price === this.items[index - 1].price) {\r\n                continue;\r\n            }\r\n\r\n            const button: DOMRect = buttons[index].getBoundingClientRect();\r\n            // 最后一条数据，有价格变化，需要画2次\r\n            if (index === len - 1 && items[index].price !== items[index - 1].price) {\r\n                this.x = this.x + (button.left - this.lastButton.left);\r\n                this.record(items, index);\r\n                // 最后一次\r\n                this.lastX = this.x;\r\n                this.y = this.canvasOption.height - this.getCurrentHeight(items[index].price, items);\r\n                this.lastButton = button;\r\n                this.x = this.x + button.width;\r\n                this.record(items, index, true);\r\n                // 最后一个数据没有价格变化\r\n            } else if (index === len - 1 && items[index].price === items[index - 1].price) {\r\n                this.x = this.x + ((button.left + button.width) - this.lastButton.left);\r\n                this.record(items, index, true);\r\n                // 中间的按钮数据\r\n            } else {\r\n                this.x = this.x + button.left - this.lastButton.left;\r\n                this.record(items, index);\r\n                this.lastX = this.x;\r\n                this.y = this.canvasOption.height - this.getCurrentHeight(items[index].price, items);\r\n                this.lastButton = button;\r\n            }\r\n\r\n        }\r\n\r\n        // 画柱状背景和标题\r\n        this.rects.forEach((rect: TpPricelineRect) => {\r\n            this.drawRect(rect);\r\n        });\r\n\r\n        // 画折线\r\n        this.drawLine(this.ctx, { width: this.canvasOption.lineWidth, color: this.canvasOption.lineColor });\r\n    }\r\n\r\n    // 根据第一个按钮数据的价格计算当前价格柱状高度\r\n    private getCurrentHeight(curPrice: number, items: Array<any>): number {\r\n        return this.canvasOption.carveHeight * curPrice / this.maxPrice;\r\n    }\r\n\r\n    // 每一步遍历数据，记录一个配置点\r\n    private record(items: Array<any>, currrentIndex: number, isEnd?: boolean): void {\r\n        const price: number = this.items[isEnd ? currrentIndex : currrentIndex - 1].price;\r\n        // 柱状背景\r\n        const rectOption: TpPricelineRect = {\r\n            x: this.lastX,\r\n            y: this.y,\r\n            width: isEnd ? (this.x - this.lastX) : (this.x - this.lastX - 2),\r\n            height: this.canvasOption.height - this.y,\r\n            // tslint:disable-next-line: max-line-length\r\n            text: `${this.rects.length === 0 ? this.canvasOption.tagPrefix : ''}${this.canvasOption.currency}${price.toFixed(2)}${this.canvasOption.tagUnit}`,\r\n            active: price === this.model.price\r\n        };\r\n        this.rects.push(rectOption);\r\n    }\r\n\r\n    // canvas 画文字\r\n    private drawText(config: any): void {\r\n        const option: any = {\r\n            offset: this.canvasOption.tagOffset,\r\n            color: this.canvasOption.color,\r\n            fontSize: this.canvasOption.fontSize,\r\n            fontFamily: this.canvasOption.fontFamily,\r\n            ...config\r\n        };\r\n\r\n        this.ctx.fillStyle = option.active ? this.canvasOption.activeColor : this.canvasOption.color;\r\n        // font 同时设置字体大小和字体时，需用空格隔开\r\n        this.ctx.font = `${option.fontSize} ${option.fontFamily}`;\r\n\r\n        if (option.alignRight) {\r\n            const textMetrics: TextMetrics = this.ctx.measureText(option.text);\r\n            option.x = (option.x + option.width) - textMetrics.width;\r\n            option.y = option.y - 6;\r\n        }\r\n        this.ctx.fillText(option.text, option.x, option.y);\r\n    }\r\n    // 画线\r\n    private drawLine(ctx: CanvasRenderingContext2D, option: { width: number, color: string }): void {\r\n        ctx.lineJoin = 'round';\r\n        ctx.lineWidth = option.width;\r\n        ctx.strokeStyle = option.color;\r\n        ctx.beginPath();\r\n\r\n        for (let index: number = 0; index < this.rects.length; index++) {\r\n            const rect: TpPricelineRect = this.rects[index];\r\n\r\n            // 第一个矩形，从起点开始\r\n            if (index === 0) {\r\n                ctx.moveTo(Math.round(rect.x), Math.round(rect.y));\r\n            } else {\r\n                // 非第一个，竖线部分\r\n                ctx.lineTo(Math.round(rect.x - 1), Math.round(rect.y));\r\n            }\r\n            // 矩形的左边到右边\r\n            ctx.lineTo(Math.round(rect.x + rect.width + 1), Math.round(rect.y));\r\n        }\r\n\r\n        ctx.stroke();\r\n    }\r\n    // 画背景和文字\r\n    private drawRect(option: TpPricelineRect): void {\r\n        // tslint:disable-next-line: max-line-length\r\n        const canvasGradient: CanvasGradient = this.ctx.createLinearGradient(0, this.canvasOption.height - this.canvasOption.carveHeight, 0, this.canvasOption.height);\r\n        canvasGradient.addColorStop(0, this.canvasOption.startColor);\r\n        canvasGradient.addColorStop(1, this.canvasOption.endColor);\r\n        this.ctx.fillStyle = canvasGradient;\r\n        this.ctx.fillRect(option.x, option.y, option.width, option.height);\r\n        this.drawText({ ...option, alignRight: true });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpPricelineComponent } from './TpPricelineComponent';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiButtongroupModule } from '@cloud/tiny3';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports:[\r\n    CommonModule,\r\n    FormsModule,\r\n    TiButtongroupModule\r\n  ],\r\n  exports: [TpPricelineComponent],\r\n  declarations: [TpPricelineComponent]\r\n})\r\n\r\nexport class TpPricelineModule {}\r\nexport { TpPricelineComponent, TpPricelineItem } from './TpPricelineComponent';\r\n","import { AfterViewInit, Component, ElementRef, Input, OnChanges, OnInit, Renderer2, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { TiFilePreviewInfo, TiImagepreviewComponent, TiModalService , TiBaseComponent} from '@cloud/tiny3';\r\n\r\n/**\r\n * 商品预览组件\r\n *\r\n * 该组件用来展示商品的预览内容，包括上方的主预览图和下方的缩略图\r\n *\r\n * 10.0.3 增加\r\n *\r\n * <example-url>../tinyplus3demo/#/productpreview/productpreview-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-productpreview',\r\n    templateUrl: './productpreview.html',\r\n    styleUrls: ['./productpreview.less']\r\n})\r\nexport class TpProductpreviewComponent extends TiBaseComponent implements OnInit, OnChanges, AfterViewInit {\r\n    /**\r\n     * 每页显示的小图个数\r\n     */\r\n    private static readonly ITEM_PER_PAGE: number = 4;\r\n\r\n    /**\r\n     * 预览文件列表\r\n     */\r\n    @Input() files: Array<TiFilePreviewInfo> = [];\r\n\r\n    /**\r\n     * @ignore\r\n     * 缩略图列表，翻页时重新设置\r\n     */\r\n    public thumbList: Array<TiFilePreviewInfo> = [];\r\n\r\n    /**\r\n     * @ignore 记录当前预览的商品索引\r\n     */\r\n    public currentPreviewIndex: number = -1;\r\n\r\n    /**\r\n     * @ignore 缩略图当前页\r\n     */\r\n    public currentThumbPage: number = 1;\r\n\r\n    /**\r\n     * @ignore 缩略图总页数\r\n     *\r\n     */\r\n    public totalThumbPage: number = 1;\r\n\r\n    /**\r\n     * @ignore 内部变量\r\n     */\r\n    @ViewChild('productThumb') productThumbEle: ElementRef;\r\n\r\n    constructor(private tiModal: TiModalService, private render: Renderer2, private hostEleRef: ElementRef) {\r\n        super(hostEleRef, render);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.render.addClass(this.productThumbEle.nativeElement.children[0], 'tp-product-preview-thumb-item-active');\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.files && changes.files.firstChange === false) {\r\n            this.files = changes.files.currentValue;\r\n            this.initThumb();\r\n            if (this.productThumbEle) {\r\n                this.setThumbList();\r\n            }\r\n            // 确保files接口变化时，第一个缩略图的选中样式生效\r\n            setTimeout((): void => {\r\n                if (this.productThumbEle) {\r\n                    this.render.addClass(this.productThumbEle.nativeElement.children[0], 'tp-product-preview-thumb-item-active');\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.initThumb();\r\n    }\r\n\r\n    /**\r\n     * 初始化缩略图相关变量\r\n     */\r\n    private initThumb(): void {\r\n        if (this.files && this.files.length > 0) {\r\n            this.currentPreviewIndex = 0;\r\n            // 计算总页数\r\n            this.totalThumbPage = Math.ceil(this.files.length / TpProductpreviewComponent.ITEM_PER_PAGE);\r\n            this.currentThumbPage = 1;\r\n            this.files.length >= TpProductpreviewComponent.ITEM_PER_PAGE ?\r\n                this.thumbList = this.files.slice(0, TpProductpreviewComponent.ITEM_PER_PAGE) : this.thumbList = this.files;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore 主图查看\r\n     * @param event: 事件\r\n     * @param index: 当前选中项在this.thumbList中的索引,this.thumbList中始终只有4项\r\n     */\r\n    onMouseenterThumb(event: any, index: number): void {\r\n        this.currentPreviewIndex = (this.currentThumbPage - 1) * TpProductpreviewComponent.ITEM_PER_PAGE + index ;\r\n        // 计算最后一页的缩略图个数\r\n        const thumbItemNumber: number = this.files.length % TpProductpreviewComponent.ITEM_PER_PAGE;\r\n        // 如果是最后一页，且最后一页不满4个\r\n        if (this.totalThumbPage > 1 && this.currentThumbPage === this.totalThumbPage && thumbItemNumber !== 0) {\r\n            this.currentPreviewIndex -= (TpProductpreviewComponent.ITEM_PER_PAGE - thumbItemNumber);\r\n        }\r\n\r\n        // 设置选中样式\r\n        const thumbItemEles: any = this.productThumbEle.nativeElement.children;\r\n        for (const item of thumbItemEles) {\r\n            this.render.removeClass(item, 'tp-product-preview-thumb-item-active');\r\n        }\r\n        this.render.addClass(event.target.parentElement, 'tp-product-preview-thumb-item-active');\r\n    }\r\n\r\n    /**\r\n     * @ignore 弹框中预览大图\r\n     */\r\n    onClickMain(event: any): void {\r\n        this.tiModal.open(TiImagepreviewComponent, {\r\n            id: this.id + '_productPreviewModal',\r\n            modalClass: 'tp-product-preview-modal',\r\n            context: {\r\n                index: this.currentPreviewIndex, // 当前文件索引\r\n                fileList: this.files, // 预览列表\r\n                id: this.id // 传递id\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @ignore 缩略图上一页\r\n     */\r\n    prev(): void {\r\n        if (this.currentThumbPage === 1) {\r\n            return;\r\n        }\r\n        this.currentThumbPage--;\r\n        this.setThumbList();\r\n    }\r\n\r\n    /**\r\n     * @ignore 缩略图下一页\r\n     */\r\n    next(): void {\r\n        if (this.currentThumbPage === this.totalThumbPage) {\r\n            return;\r\n        }\r\n        this.currentThumbPage++;\r\n        this.setThumbList();\r\n    }\r\n\r\n    /**\r\n     * 设置缩略图列表\r\n     */\r\n    private setThumbList(): void {\r\n        // undefined、null、false、string情况下，不处理\r\n        if (!this.files || typeof this.files === 'string' || (this.files && this.files.slice === undefined)) {\r\n            return;\r\n        }\r\n        // tslint:disable-next-line: max-line-length\r\n        this.thumbList = this.files.slice((this.currentThumbPage - 1) * TpProductpreviewComponent.ITEM_PER_PAGE, this.currentThumbPage * TpProductpreviewComponent.ITEM_PER_PAGE);\r\n\r\n        // 计算最后一页的缩略图个数\r\n        const thumbItemNumber: number = this.files.length % TpProductpreviewComponent.ITEM_PER_PAGE;\r\n        if (this.totalThumbPage > 1 && this.currentThumbPage === this.totalThumbPage && thumbItemNumber !== 0) {\r\n            this.thumbList = this.files.slice(this.files.length - TpProductpreviewComponent.ITEM_PER_PAGE, this.files.length);\r\n        }\r\n\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiIconModule, TiImagepreviewModule, TiModalModule, TiZoomModule, TiOutlineModule } from '@cloud/tiny3';\r\n\r\nimport { TpProductpreviewComponent } from './TpProductpreviewComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiImagepreviewModule,\r\n    TiIconModule,\r\n    TiModalModule,\r\n    TiZoomModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpProductpreviewComponent],\r\n  declarations: [TpProductpreviewComponent]\r\n})\r\nexport class TpProductpreviewModule {}\r\nexport { TpProductpreviewComponent } from './TpProductpreviewComponent';\r\n","import { Component, Input, SimpleChanges } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * 进度条提示类型，percent-百分数 fraction-分数\r\n */\r\nexport type TpProgressbarLabelType = 'percent' | 'fraction';\r\n\r\n/**\r\n * @ignore\r\n * 内部使用\r\n */\r\nexport type TpProgressbarWarnLevel = 'normal' | 'warn' | 'alarm';\r\n\r\n/**\r\n *  进度条组件\r\n *\r\n *  本组件是ti-progressbar 的业务封装，有2种使用场景：\r\n *\r\n *  1.无预警：进度条[必选]+百分比或分数[必选]\r\n *\r\n *  2.有预警：进度条[必选]+百分比或分数[必选]\r\n *\r\n *  场景2设置了warn 和 alarm 接口后生效\r\n *\r\n *  10.0.1 新增\r\n *\r\n * <example-url>../tinyplus3demo/#/progressbar/progressbar-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-progressbar',\r\n    templateUrl: './progressbar.html',\r\n    styleUrls: ['./progressbar.less']\r\n})\r\nexport class TpProgressbarComponent extends TiBaseComponent {\r\n    /**\r\n     * label 显示类型，\r\n     */\r\n    @Input() labelType: TpProgressbarLabelType = 'percent';\r\n    /**\r\n     * 当前值\r\n     */\r\n    @Input() value: number;\r\n    /**\r\n     * 最大值\r\n     */\r\n    @Input() max: number;\r\n    /**\r\n     * 橙色（告警）的临界值,\r\n     */\r\n    @Input() warn: number;\r\n    /**\r\n     * 红色（告警）的临界值\r\n     */\r\n    @Input() alarm: number;\r\n    /**\r\n     * label单位\r\n     */\r\n    @Input() unit: string;\r\n    /**\r\n     * @ignore\r\n     * 预警类型样式类别\r\n     */\r\n    public warnLevel: TpProgressbarWarnLevel;\r\n\r\n    /**\r\n     * @ignore\r\n     * 显示文字内容\r\n     */\r\n    public label: string;\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.updateLabel();\r\n        this.updateWarnLevel();\r\n    }\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n\r\n        if (changes['value'] && !changes['value'].firstChange ||\r\n            (changes['warn'] && !changes['warn'].firstChange) ||\r\n            changes['alarm'] && !changes['alarm'].firstChange) {\r\n            this.updateLabel();\r\n            this.updateWarnLevel();\r\n        }\r\n        if (changes['labelType'] && !changes['labelType'].firstChange) {\r\n            this.updateLabel();\r\n        }\r\n    }\r\n\r\n    private updateWarnLevel(): void {\r\n        if (this.warn && this.alarm) {\r\n            if (this.value > this.alarm) {\r\n                this.warnLevel = 'alarm';\r\n            } else if (this.value > this.warn) {\r\n                this.warnLevel = 'warn';\r\n            } else {\r\n                this.warnLevel = 'normal';\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateLabel(): void {\r\n        // 百分比保留两位小数\r\n        this.label = this.labelType === 'percent' ? `${Math.round(this.value / this.max * 10000) / 100}%` : `${this.value}/${this.max}`;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpProgressbarComponent } from './TpProgressbarComponent';\r\nimport { TiProgressbarModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports: [\r\n      CommonModule,\r\n      TiProgressbarModule\r\n  ],\r\n  exports: [TpProgressbarComponent],\r\n  declarations: [TpProgressbarComponent]\r\n})\r\nexport class TpProgressbarModule {}\r\nexport { TpProgressbarComponent, TpProgressbarLabelType } from './TpProgressbarComponent';\r\n","import { Component, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\r\nimport { TiBaseComponent, Util } from '@cloud/tiny3';\r\nimport { TpDiscoutsConfig } from '../discounts/TpDiscountsModule';\r\n\r\nexport interface TpHelpOptions {\r\n    /**\r\n     * 提示说明文本\r\n     */\r\n    iconTip: string;\r\n    /**\r\n     * 提示框最大宽度\r\n     */\r\n    iconTipMaxWidth?: string;\r\n    /**\r\n     * 提示语方向\r\n     */\r\n    iconTipPosition?: string;\r\n}\r\n\r\n/**\r\n * 购买清单组件\r\n * <example-url>../tinyplus3demo/#/purchaselist/purchaselist-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-purchaselist',\r\n    templateUrl: './purchaselist.html',\r\n    styleUrls: ['./purchaselist.less']\r\n})\r\n\r\nexport class TpPurchaselistComponent extends TiBaseComponent {\r\n    /**\r\n     * 购物清单名称\r\n     */\r\n    @Input() purchaseTitle: string;\r\n    /**\r\n     * 是否存在一键清空功能\r\n     */\r\n    @Input() enableClear: boolean = true;\r\n    /**\r\n     * 费用总金额\r\n     */\r\n    @Input() totalPrice: number = 0;\r\n    /**\r\n     * 优惠金额\r\n     */\r\n    @Input() discountPrice: number = 0;\r\n    /**\r\n     * 货币精度设置接口\r\n     * 自定义保留位数，例如：1.2-4，表示整数部分最少保留1位，小数部分最小保留2位，小数部分最大保留4位。\r\n     * 默认值取自各局点\r\n     */\r\n    @Input() numFormat: string;\r\n    /**\r\n     * 优惠详情配置接口。参考discounts组件\r\n     */\r\n    @Input() purchaseDiscoutsConfig: TpDiscoutsConfig;\r\n    /**\r\n     * @ignore\r\n     * 清单是否没有商品\r\n     */\r\n    @Input() hasNodata: boolean;\r\n    /**\r\n     * tip配置\r\n     */\r\n    @Input() helpOptions: TpHelpOptions;\r\n    /**\r\n     * 底部协议部分\r\n     */\r\n    @Input() footerProtocol: string;\r\n    /**\r\n     * 底部温馨提示语部分\r\n     */\r\n    @Input() footerPrompt: string;\r\n    /**\r\n     * 订单确认按钮文本\r\n     */\r\n    @Input() buttonText: string;\r\n    /**\r\n     * 用户可根据实际场景决定确认按钮是否禁用（比如未实名认证等）\r\n     *\r\n     * 10.1.1新增接口\r\n     */\r\n    @Input() buttonDisabled: boolean = true;\r\n    /**\r\n     * 采购产品数量统计\r\n     */\r\n    @Input() total: number = 0;\r\n    /**\r\n     * 订单确认按钮点击事件\r\n     */\r\n    @Output() readonly confirm: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * 头部一键清空按钮点击事件\r\n     */\r\n    @Output() readonly clear: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * 可选优惠项切换选择项时触发\r\n     *\r\n     * 10.1.2 新增接口\r\n     */\r\n    @Output() readonly discountChange: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * @ignore\r\n     */\r\n    public emptyText: string = '--';\r\n    /**\r\n     * @ignore\r\n     * 协议是否勾选\r\n     */\r\n    public checked: boolean = false;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public discountsChange($event: any) {\r\n        this.discountChange.emit($event);\r\n    }\r\n    onCheckboxNgModelChange(model: boolean) {\r\n        // Todo 禁用tip\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 确认按钮点击触发\r\n     */\r\n    public clickFn(): void {\r\n        this.confirm.emit();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 一键清空\r\n     */\r\n    public clearFn(): void {\r\n        this.clear.emit();\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * <example-url>../tinyplus3demo/#/purchaselist/purchaselist-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-purchaseheader-item',\r\n    templateUrl: './purchaseitem.html',\r\n    styleUrls: ['./purchaselist-item.less']\r\n})\r\n\r\nexport class TpPurchaseitemComponent extends TiBaseComponent {\r\n    /**\r\n     * 商品信息是否带有region\r\n     */\r\n    @Input() hasArea: boolean = false;\r\n    /**\r\n     * 单个产品右侧叉号点击事件\r\n     */\r\n    @Output() readonly close: EventEmitter<any> = new EventEmitter();\r\n    /**\r\n     * @ignore\r\n     */\r\n    public closeFn(): void {\r\n        this.close.emit();\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n/**\r\n * <example-url>../tinyplus3demo/#/purchaselist/purchaselist-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-purchase-nodata',\r\n    templateUrl: './purchase-nodata.html',\r\n    styleUrls: ['./purchaselist-nodata.less']\r\n})\r\n\r\nexport class TpPurchaseNodataComponent {\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TiLocaleModule, TiCheckboxModule, TiButtonModule, TiOutlineModule } from '@cloud/tiny3';\r\nimport { TpLocaleModule } from '../../pipes/locale/TpLocaleModule';\r\nimport { TpPurchaselistComponent } from './TpPurchaselistComponent';\r\nimport { TpPurchaseitemComponent } from './TpPurchaseitemComponent';\r\nimport { TpPurchaseNodataComponent } from './TpPurchaseNodataComponent';\r\nimport { TpDiscountsModule } from '../discounts/TpDiscountsModule';\r\nimport { TpHelptipModule } from '../helptip/TpHelptipModule';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\n@NgModule({\r\n  imports: [TiButtonModule,\r\n            CommonModule,\r\n            FormsModule,\r\n            TpIconModule,\r\n            TpLocaleModule,\r\n            TiLocaleModule,\r\n            TpDiscountsModule,\r\n            TpHelptipModule,\r\n            TiOutlineModule,\r\n            TiCheckboxModule],\r\n  exports: [TpPurchaselistComponent, TpPurchaseitemComponent, TpPurchaseNodataComponent],\r\n  declarations: [TpPurchaselistComponent, TpPurchaseitemComponent, TpPurchaseNodataComponent]\r\n})\r\n\r\nexport class TpPurchaselistModule {}\r\nexport { TpHelpOptions, TpPurchaselistComponent } from './TpPurchaselistComponent';\r\nexport { TpPurchaseitemComponent } from './TpPurchaseitemComponent';\r\nexport { TpPurchaseNodataComponent } from './TpPurchaseNodataComponent';\r\n","import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\nimport { TiBaseComponent, TiLocale, TiPositionType } from '@cloud/tiny3';\r\n\r\nexport interface TpRecommendItem {\r\n    /**\r\n     * 显示的区域名称\r\n     */\r\n    displayName: string;\r\n    /**\r\n     * 资源数量\r\n     */\r\n    num?: number;\r\n    /**\r\n     * tip提示的内容\r\n     */\r\n    tip?: string | TemplateRef<any>;\r\n    /**\r\n     * tip提示方位\r\n     */\r\n    tipPosition?: TiPositionType;\r\n    /**\r\n     * 是否显示资源数量，默认显示\r\n     */\r\n    showNum?: boolean;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 推荐组件，优先向用户推荐可用区中的某些区域\r\n *\r\n * <example-url>../tinyplus3demo/#/recommend/recommend-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-recommend',\r\n    templateUrl: './recommend.html',\r\n    styleUrls: ['./recommend.less'],\r\n    // host: {\r\n    //     '[class.tp-recommend-wrapper]': 'true'\r\n    // }\r\n})\r\n\r\nexport class TpRecommendComponent extends TiBaseComponent {\r\n    /**\r\n     * 供选择的数据\r\n     */\r\n    @Input() items: Array<TpRecommendItem>;\r\n    /**\r\n     * 组件左侧的文本\r\n     */\r\n    @Input() label: string;\r\n    /**\r\n     * 选中事件，点击某项时向外通知该选中项\r\n     */\r\n    @Output() readonly select: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     * 自定义item左侧的DOM\r\n     */\r\n    @ContentChild('beforeItem', { static: true }) beforeItemTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * @ignore 处理资源数量\r\n     */\r\n    public getNum(num: number): string {\r\n        return num > 99 ? '99+' : String(num);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public clickFn(item: any): void {\r\n        this.select.emit(item);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.label = this.label || TiLocale.getLocaleWords().tpRecommend.label;\r\n    }\r\n}\r\n","import { Component, ContentChild, Input, TemplateRef } from \"@angular/core\";\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n *\r\n * 智能提示组件\r\n *\r\n * <example-url>../tinyplus3demo/#/smartalert/smartalert-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-smartalert',\r\n    templateUrl: 'smartalert.html',\r\n    styleUrls: ['./smartalert.less']\r\n})\r\n\r\nexport class TpSmartalertComponent extends TiBaseComponent {\r\n    /**\r\n     * 提示类型\r\n     */\r\n    @Input() type: 'prompt' | 'warn' | 'error' = 'prompt';\r\n    /**\r\n     * 样式大小\r\n     */\r\n    @Input() size: 'normal' | 'small' = 'normal';\r\n    /**\r\n     * 边框一直显示或是悬浮显示\r\n     */\r\n    @Input() border: 'always' | 'hover' = 'always';\r\n    /**\r\n     * @ignore 自定义左侧图标\r\n     */\r\n    @ContentChild('leftIcon', { static: true }) leftIconTemplate: TemplateRef<any>;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpSmartalertComponent } from './TpSmartalertComponent';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiIconModule } from '@cloud/tiny3';\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiIconModule\r\n  ],\r\n  exports: [TpSmartalertComponent],\r\n  declarations: [TpSmartalertComponent]\r\n})\r\n\r\nexport class TpSmartalertModule {}\r\nexport { TpSmartalertComponent } from './TpSmartalertComponent';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpRecommendComponent } from './TpRecommendComponent';\r\n\r\nimport { TpSmartalertModule } from '../smartalert/TpSmartalertModule';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TiOverflowModule, TiTipModule, TiOutlineModule } from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpSmartalertModule,\r\n    TiTipModule,\r\n    TiOverflowModule,\r\n    TpIconModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpRecommendComponent],\r\n  declarations: [TpRecommendComponent]\r\n})\r\n\r\nexport class TpRecommendModule {}\r\nexport { TpRecommendComponent, TpRecommendItem } from './TpRecommendComponent';\r\n","import { Component, ContentChild, EventEmitter, Input, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\r\nimport { TiDominatorComponent, TiDropComponent, TiDroplistComponent, TiFormComponent, TiLocale } from '@cloud/tiny3';\r\n\r\nexport interface TpRegionItem {\r\n    /**\r\n     * 当前大区的名称文本\r\n     */\r\n    displayName: string;\r\n    /**\r\n     * 大区的一组地区\r\n     */\r\n    regions?: Array<TpRegion>;\r\n    /**\r\n     * 大区的另一组地区，亚太区下某些需要特殊处理的区域\r\n     */\r\n    special?: Array<TpRegion>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\nexport interface TpRegion {\r\n    /**\r\n     * 当前区域的名称\r\n     */\r\n    displayName: string;\r\n    disabled?: boolean;\r\n    tipContent?: string;\r\n    tipPosition?: string;\r\n    /**\r\n     * 灰化的原因\r\n     */\r\n    title?: string;\r\n    /**\r\n     * 设置选项的标志块\r\n     *\r\n     * 对象类型，包含两个属性:1.text: 显示的文本；2.class:标志的样式；eg:{text: string; class: string}\r\n     */\r\n    sup?: {\r\n        text?: string;\r\n        class?: string;\r\n        /**\r\n         * 允许有多余的属性字段\r\n         */\r\n        [propName: string]: any;\r\n    };\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 区域选择组件\r\n *\r\n * 组件提供了[TpRegionUtil]{@link ../classes/TpRegionUtil.html}供某些业务处理数据。\r\n *\r\n * <example-url>../tinyplus3demo/#/region/region-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-region',\r\n    templateUrl: './region.html',\r\n    styleUrls: ['./region.less'],\r\n    providers: [TiFormComponent.getValueAccessor(TpRegionComponent)],\r\n    host: {\r\n        '(blur)': 'onBlur()'\r\n    }\r\n})\r\n// TODO：和Select有重复代码，未来设法消除。\r\nexport class TpRegionComponent extends TiFormComponent {\r\n  // TODO: add explicit constructor\r\n\r\n  // TODO: add explicit constructor\r\n\r\n    /**\r\n     * 下拉面板展示的数据列表\r\n     */\r\n    @Input() items: Array<TpRegionItem>;\r\n    /**\r\n     * 预留文本\r\n     */\r\n    // tslint:disable-next-line: no-input-rename\r\n    @Input('placeholder') placeholderText: string;\r\n    /**\r\n     * 选中事件，选中项没有变化\r\n     */\r\n    @Output() readonly select: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * 选中事件，选中项变化\r\n     */\r\n    // @Output() readonly change: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiDominatorComponent, { static: true }) TiDominatorCom: TiDominatorComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiDropComponent, {static: false}) dropCom: TiDropComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiDroplistComponent, {static: false}) droplistCom: TiDroplistComponent;\r\n    /**\r\n     * @ignore\r\n     * 获取到用户自定义的按钮标志模板\r\n     */\r\n    @ContentChild('sup', { static: true }) public supTemplate: TemplateRef<any>;\r\n   /**\r\n    * @ignore\r\n    * 灰化时默认提示文本\r\n    */\r\n    public dafaultDisableReason: string = TiLocale.getLocaleWords().tpRegion.unSupport;\r\n    /**\r\n     * @ignore\r\n     * 是否为ctc局点，面板结构类似于hws，选块较小\r\n     */\r\n    public isSmallItem: boolean = TiLocale.getLocaleWords().tpRegionSmallItem;\r\n    /**\r\n     * @ignore\r\n     * 是否为非hws非ctc局点，面板使用droplist，以select形式呈现\r\n     */\r\n    public isUseDroplist: boolean = TiLocale.getLocaleWords().tpRegionSelectStyle;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public selectedItem: TpRegionItem;\r\n    // ngOnInit(): void {\r\n    //     // TODO：兼容disable和disabled\r\n    // }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['items']?.currentValue?.length > 0 && this.model) {\r\n            this.loopItemsFindSelectedItem();\r\n        }\r\n    }\r\n    ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n        if (this.isUseDroplist) {\r\n            this.setFocusableElems(this.TiDominatorCom.getFocusableElems());\r\n        } else {\r\n            this.setFocusableElems(this.TiDominatorCom.getFocusableElems()\r\n            .concat(this.dropCom.nativeElement));\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    ngOnModelChange(): void {\r\n        if (this.model && this.items?.length > 0) {\r\n            this.loopItemsFindSelectedItem();\r\n        } else {\r\n            this.selectedItem = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onMousedown(event: MouseEvent): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        this.togglePanel();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(item: any, event: MouseEvent): void {\r\n        if (item.disabled) {\r\n            // 防止dominator 失焦blur\r\n            event.preventDefault();\r\n\r\n            return;\r\n        }\r\n        if (!this.model || this.model !== item) {\r\n            this.model = item;\r\n        } else {\r\n            this.select.emit(item);\r\n        }\r\n        this.dropCom.hide();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onBlur(): void {\r\n        this.dropCom && this.dropCom.hide();\r\n        this.droplistCom && this.droplistCom.hide();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 记录下拉面板展开状态\r\n     */\r\n    public get dropshow(): boolean {\r\n        if (this.isUseDroplist) {\r\n            return this.droplistCom ? this.droplistCom.isShow : false;\r\n        } else {\r\n            return  this.dropCom ? this.dropCom.isShow : false;\r\n        }\r\n    }\r\n    /**\r\n     * 面板的打开或关闭，统一处理drop和droplist\r\n     */\r\n    private togglePanel(): void {\r\n        if (this.dropshow) {\r\n            this.dropCom && this.dropCom.hide();\r\n            this.droplistCom && this.droplistCom.hide();\r\n        } else {\r\n            this.dropCom && this.dropCom.show();\r\n            this.droplistCom && this.droplistCom.show();\r\n        }\r\n    }\r\n    private loopItemsFindSelectedItem(): void {\r\n        this.items.some((item: TpRegionItem): boolean => {\r\n            if (item.regions && this.findSelectedItem(item.regions, item)) {\r\n                return true;\r\n            } else if (item.special) {\r\n                return this.findSelectedItem(item.special, item);\r\n            }\r\n\r\n            return false;\r\n        });\r\n    }\r\n\r\n    private findSelectedItem(data: Array<TpRegion>, item: TpRegionItem): boolean {\r\n        const flag: boolean =  data.some((region: TpRegion): boolean => {\r\n            if (region === this.model) {\r\n                this.selectedItem = item;\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return flag;\r\n    }\r\n}\r\n","import { TiLocale, Util } from '@cloud/tiny3';\r\n\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\n\r\nimport { TpRegionItem } from './TpRegionComponent';\r\n/**\r\n * 提供了转化数据的方法，可以将特定的不可用的数据转化为[TpRegionComponent]{@link ../components/TpRegionComponent.html}的可用数据\r\n */\r\nexport class TpRegionUtil {\r\n    public static getRegionList(regionArr: Array<any>): Array<TpRegionItem> {\r\n        let result: Array<TpRegionItem> = [];\r\n        if (!Util.isArray(regionArr)) {\r\n            return result;\r\n        }\r\n        const isSmallItem: boolean = TiLocale.getLocaleWords().tpRegionSmallItem;\r\n        result = isSmallItem ? this.processCTCData(regionArr) : TpRegionUtil.processHWSData(regionArr);\r\n\r\n        return result;\r\n    }\r\n    /**\r\n     * 在对象数组中，查找某一个对象，可以模糊匹配，返回其索引\r\n     */\r\n    private static findIndex(arr: Array<any>, target: any): number {\r\n        if (!Util.isArray(arr)) {\r\n            return -1;\r\n        }\r\n        let result: any;\r\n        for (const item of arr) {\r\n            const itemKey: Array<string> = Object.keys(item);\r\n            const targetKey: Array<string> = Object.keys(target);\r\n            let flag: boolean = true;\r\n            for (const key of targetKey) {\r\n                if (itemKey.indexOf(key) === -1 || target[key] !== item[key]) {\r\n                    flag = false;\r\n                }\r\n            }\r\n            if (flag) {\r\n                result = arr.indexOf(item);\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (result === undefined) {\r\n            result = -1;\r\n        }\r\n\r\n        return result;\r\n    }\r\n    /**\r\n     * 类似于findIndex，返回最后一个模糊匹配元素的索引\r\n     */\r\n    private static findLastIndex(arr: any, item: any) {\r\n        if (!Util.isArray(arr)) {\r\n            return -1;\r\n        }\r\n        const originalArr: Array<any> = arr;\r\n        const reservedArr: Array<any> = arr.reverse();\r\n        const index: number = TpRegionUtil.findIndex(reservedArr, item);\r\n        if (index === -1) {\r\n            return -1;\r\n        } else {\r\n            return originalArr.indexOf(reservedArr[index]);\r\n        }\r\n\r\n    }\r\n    private static processHWSData(regionArr): Array<TpRegionItem> {\r\n        let result: Array<TpRegionItem> = [];\r\n\r\n        for (let region of regionArr) {\r\n            // 过滤掉属性isAlliance 或 isSelfDevelop为true的region\r\n            if (region.isAlliance || region.isSelfDevelop) {\r\n                continue;\r\n            }\r\n            const index: number = TpRegionUtil.findLastIndex(result, {displayName: region.geoCategory}); // 判断已处理数据中有无该大区\r\n            const key: string = region.geoArea === '31' ? 'special' : 'regions'; // 当geoArea为31时，则表示当前项属于亚太区下需要做特殊处理\r\n\r\n            // result中没有该大区时：大区名称和id都取geoCategory；存放各区域的属性为special/regions，为数组类型，直接将当前项push到该数组中\r\n            if (index === -1) {\r\n                let itemObj: TpRegionItem = {\r\n                    displayName: region.geoCategory\r\n                };\r\n                itemObj[key] = [];\r\n                itemObj[key].push(region);\r\n                result.push(itemObj);\r\n                continue;\r\n            }\r\n\r\n            // result中有该大区时：判断存放当前项的属性为special/regions是否存在，如果不存在则令该属性为空数组，存在直接将当前项push到该数组中\r\n            if (Util.isUndefined(result[index][key])) {\r\n                result[index][key] = [];\r\n            }\r\n\r\n            result[index][key].push(region);\r\n\r\n            CfUtil.getUser()\r\n                .then((user: any) => {\r\n                const isNonsupportRegionFn: (nonsupportRegions: any, regionId: any,\r\n                                             supportRegions: any) => boolean = CfUtil.isNonsupportRegion();\r\n                if (typeof isNonsupportRegionFn === 'function') {\r\n                    region.disabled = isNonsupportRegionFn(user.nonsupportRegions, region.regionId, user.supportRegions);\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static processCTCData(regionArr): Array<TpRegionItem> {\r\n        // ctc下的数据，由组件装配成A-G, H-K, L-S, T-Z四个大区，先定义四个大区对象，循环传入参数，装入四个对象\r\n        let result: Array<TpRegionItem> = [\r\n            {displayName: 'A-G', regions: []},\r\n            {displayName: 'H-K', regions: []},\r\n            {displayName: 'L-S', regions: []},\r\n            {displayName: 'T-Z', regions: []}\r\n        ];\r\n\r\n        regionArr.forEach((region: {shortName: string}): void => {\r\n            if (!region.shortName) {\r\n                return;\r\n            }\r\n            if (region.shortName.charCodeAt(0) >= 65 && region.shortName.charCodeAt(0) <= 71\r\n                || region.shortName.charCodeAt(0) >= 97 && region.shortName.charCodeAt(0) <= 103) {\r\n                    TpRegionUtil.pushRegion(result[0].regions, region);\r\n            } else if (region.shortName.charCodeAt(0) >= 72 && region.shortName.charCodeAt(0) <= 75\r\n                || region.shortName.charCodeAt(0) >= 104 && region.shortName.charCodeAt(0) <= 107) {\r\n                TpRegionUtil.pushRegion(result[1].regions, region);\r\n            } else if (region.shortName.charCodeAt(0) >= 76 && region.shortName.charCodeAt(0) <= 83\r\n                || region.shortName.charCodeAt(0) >= 108 && region.shortName.charCodeAt(0) <= 115) {\r\n                TpRegionUtil.pushRegion(result[2].regions, region);\r\n            } else if (region.shortName.charCodeAt(0) >= 84 && region.shortName.charCodeAt(0) <= 90\r\n                || region.shortName.charCodeAt(0) >= 116 && region.shortName.charCodeAt(0) <= 122) {\r\n                TpRegionUtil.pushRegion(result[3].regions, region);\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private static pushRegion(regions: Array<TpRegionItem>, region: any): void {\r\n        const index: number = regions.findIndex((item: TpRegionItem): boolean => item.displayName === region.ascription);\r\n        if (index > -1) {\r\n            regions[index].project.push(region);\r\n        } else {\r\n            const regionObj: TpRegionItem = {\r\n                displayName: region.ascription,\r\n                project: [region]\r\n            };\r\n            regions.push(regionObj);\r\n        }\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TiDominatorModule, TiDroplistModule, TiDropModule, TiIconModule, TiListModule, TiTipModule } from '@cloud/tiny3';\r\n\r\nimport { TpRegionComponent } from './TpRegionComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TiDroplistModule,\r\n    TiDominatorModule,\r\n    TiListModule,\r\n    TiDropModule,\r\n    TiIconModule,\r\n    TiTipModule\r\n  ],\r\n  exports: [TpRegionComponent],\r\n  declarations: [TpRegionComponent]\r\n})\r\n\r\nexport class TpRegionModule {}\r\nexport { TpRegionComponent, TpRegionItem } from './TpRegionComponent';\r\nexport { TpRegionUtil } from './TpRegionUtil';\r\n","import { Component, ElementRef, EventEmitter, Input, Output, Renderer2, ViewChild } from '@angular/core';\r\nimport { TiLocale, TiFormComponent, Util, TiDominatorComponent, TiDropsearchComponent, TiButtongroupComponent } from '@cloud/tiny3';\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n */\r\nexport interface TpRegionselectOption {\r\n    /**\r\n     * 地区名称\r\n     */\r\n    label: string;\r\n    /**\r\n     * 地区对应序列ID\r\n     */\r\n    id: string;\r\n    /**\r\n     * 当前地区的下级地区列表\r\n     */\r\n    nextLevel?: Array<TpRegionselectOption>;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n *\r\n * regionselect组件提供省、市、县三级区域的选择\r\n *\r\n * <example-url>../tinyplus3demo/#/regionselect/regionselect-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-regionselect',\r\n    templateUrl: './regionselect.html',\r\n    styleUrls: ['./regionselect.less'],\r\n    providers: [TiFormComponent.getValueAccessor(TpRegionselectComponent)],\r\n    host: {\r\n        '(blur)': 'onBlur()'\r\n    }\r\n})\r\n\r\nexport class TpRegionselectComponent extends TiFormComponent {\r\n    constructor(protected hostRef: ElementRef, protected renderer: Renderer2) {\r\n        super(hostRef, renderer);\r\n    }\r\n    /**\r\n     * 区域选择总数据\r\n     */\r\n    @Input() regionselectOption: Array<TpRegionselectOption>; // 下拉总数据\r\n    /**\r\n     * 无数据时组件下展显示，需服务自行配置\r\n     */\r\n    @Input() noDataText: string = '...';\r\n    /**\r\n     * 是否支持搜索\r\n     */\r\n    @Input() searchable: boolean = false;\r\n    /**\r\n     * 区域点击选择之后触发该事件\r\n     */\r\n    @Output() readonly change: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiDominatorComponent, { static: true }) TiDominatorCom: TiDominatorComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiDropsearchComponent, { static: true }) dropCom: TiDropsearchComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiButtongroupComponent, { static: true }) btnGroupCom: TiButtongroupComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('wrapper', { static: false }) wrapperEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('buttongroup', { static: false }) buttongroupEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public labelKey: string = 'label';\r\n    /**\r\n     * @ignore\r\n     */\r\n    public showText: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public btnItems: Array<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public btnSelected: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public options: Array<TpRegionselectOption> = []; // 下拉实际数据,默认空数组\r\n    /**\r\n     * @ignore\r\n     */\r\n    public currentmodel: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public dropshow: boolean; // 记录下拉面板展开状态\r\n    private regionArr: Array<any> = [];\r\n    private hasFoundId: boolean; // 标志量 是否根据id找到匹配项\r\n    private isSpecialZone: boolean; // 标志量 是否为直辖市\r\n    private isNotLastOne: boolean = true; // 标志量 是否为最后一级\r\n    private classifications: Array<any>;\r\n    private classificationLevel: number = 0; // 当前正在选择区域项的等级，省为0，市为1，区为2\r\n    private currentClassificationsLength: number = 0; // 当前已选择区域项的等级，省为0，市为1，区为2\r\n    private cfRegionSelectSeparativeSign: string = '-';\r\n    private originSuggestions: Array<TpRegionselectOption>;\r\n    private hasadjustWidth: boolean;\r\n    private oldSearchable: boolean = undefined;\r\n    /**\r\n     * @ignore\r\n     */\r\n    writeValue(val: any): void {\r\n        if (!val) {\r\n            return;\r\n        } else {\r\n            this.model = val;\r\n        }\r\n        this.initSelectedData();\r\n    }\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.classifications = [\r\n            {\r\n                id: 'province',\r\n                text: TiLocale.getLocaleWords().tpRegionselect.regionSelect_province_label\r\n            }, {\r\n                id: 'city',\r\n                text: TiLocale.getLocaleWords().tpRegionselect.regionSelect_city_label\r\n            }, {\r\n                id: 'country',\r\n                text: TiLocale.getLocaleWords().tpRegionselect.regionSelect_county_label\r\n            }\r\n        ];\r\n        this.model = Util.isUndefined(this.model) ? {} : this.model;\r\n        this.hasadjustWidth = false;\r\n        this.options = this.regionselectOption;\r\n        this.getBtnItems();\r\n        this.changePlaceholder();\r\n        this.changeBtnRight();\r\n        this.changeSelectedData();\r\n    }\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n        this.setFocusableElems(this.TiDominatorCom.getFocusableElems());\r\n    }\r\n    // tslint:disable-next-line:use-life-cycle-interface\r\n    ngAfterViewChecked(): void {\r\n        super.ngAfterViewChecked();\r\n        if (this.searchable !== this.oldSearchable) {\r\n            this.oldSearchable = this.searchable;\r\n            if (this.searchable) {\r\n                this.setFocusableElems(this.TiDominatorCom.getFocusableElems()\r\n                    .concat(this.dropCom.getFocusableElems()));\r\n            } else {\r\n                this.setFocusableElems(this.TiDominatorCom.getFocusableElems());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onMousedownFn(event: MouseEvent): void {\r\n        event.preventDefault();  // 防止按钮聚焦\r\n        event.stopPropagation();  // 阻止事件冒泡到document\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onBlur(): void {\r\n        this.dropCom.hideWithoutFocus();\r\n        this.dropshow = false;\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击关闭或隐藏下拉面板\r\n     */\r\n    public onClickFn(event: MouseEvent): void {\r\n        if (this.dropCom.isShow) {\r\n            this.dropCom.hide();\r\n            this.dropshow = false;\r\n        } else {\r\n            this.dropCom.show();\r\n            this.dropshow = true;\r\n            if (!this.hasadjustWidth) {\r\n                const btns: NodeListOf<Element> = document.querySelectorAll('.ti3-btn-item');\r\n                const extraWidth: number = this.getExtraWidth();\r\n                const width: number = extraWidth / btns.length;\r\n                btns.forEach((btn: any) => {\r\n                    const oriWidth: number = btn.offsetWidth;\r\n                    this.renderer.setStyle(btn, 'width', oriWidth + width + 'px');\r\n                });\r\n                this.hasadjustWidth = true;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 选择数据之后触发事件\r\n     */\r\n    public onSelect(option: any): void {\r\n        this.onSelectFn(option);\r\n        this.change.emit(option);\r\n        const event: any = window.event;\r\n    }\r\n\r\n    private onSelectFn(selectedRegion: TpRegionselectOption): void {\r\n        const currentBtn: any = this.btnItems[this.classificationLevel]; // 当前准备选择的按钮等级\r\n        currentBtn.selectedText = selectedRegion.label; // 等级名称获取\r\n        // 判断选择项是否是曾经已选择项\r\n        const isChosenOption: boolean = this.btnItems.some((btnItem: any) => {\r\n            return btnItem.selectedId === selectedRegion.id;\r\n        });\r\n        if (!isChosenOption) {\r\n            this.currentClassificationsLength = this.btnItems.findIndex((btnItem: any) =>\r\n                btnItem.id === this.btnSelected.id); // 获取当前已选择的级别（0、1、2）\r\n            this.btnItems.forEach((item: any, index: number) => {\r\n                if (index > this.currentClassificationsLength) {\r\n                    item.selectedText = item.text;\r\n                    item.originId = '';\r\n                    item.selectedId = '';\r\n                }\r\n            });\r\n        }\r\n\r\n        this.btnItems[this.classificationLevel].selectedId = selectedRegion.id;\r\n        this.changeSelectedData();\r\n        this.isNotLastOne = this.classificationLevel < this.btnItems.length - 1;\r\n        if (this.isNotLastOne) {\r\n            this.classificationLevel++;\r\n            this.currentClassificationsLength++;\r\n            this.btnItems[this.classificationLevel].originId = this.btnItems[this.classificationLevel].originId || selectedRegion.id;\r\n            this.handleOriginSuggestions();\r\n            this.changeDropdownSuggestions();\r\n\r\n            /**\r\n             * 1、当子选项只有一项，且子选项id与当前项id相同，证明为同一区域级别\r\n             * 2、同一区域级别情况下，如果子选项不是最后一级，证明为直辖市，需要自动跳过子选项的选择\r\n             * 3、同一区域级别情况下，如果子选项是最后一级，证明为直辖县，则正常显示\r\n             */\r\n            if (this.originSuggestions.length === 1 &&\r\n                (this.originSuggestions[0].id === selectedRegion.id\r\n                    && this.classificationLevel < this.btnItems.length - 1)) {\r\n                this.btnItems[this.classificationLevel].noDataDisable = true;\r\n                this.onSelectFn(this.originSuggestions[0]);\r\n            } else {\r\n                this.btnItems[this.classificationLevel].noDataDisable = false;\r\n                this.btnSelected = this.btnItems[this.classificationLevel];\r\n                this.btnChangeFn();\r\n            }\r\n        } else {\r\n            // 点击最低级别地区之后，面板会收起\r\n            this.dropshow = false;\r\n        }\r\n        this.changePlaceholder();\r\n        this.changeBtnRight();\r\n    }\r\n\r\n    // 当选择区域后，会更改selectedData数据\r\n    private changeSelectedData(): void {\r\n        const selectedTextArr: Array<any> = [];\r\n        this.btnItems.forEach((item: any, index: number) => {\r\n            const hasChosen: boolean = item.selectedText !== item.text;\r\n            if (hasChosen) {\r\n                if (index === this.classificationLevel) {\r\n                    this.model[item.id] = {\r\n                        id: item.selectedId,\r\n                        label: item.selectedText\r\n                    };\r\n                }\r\n                if (item.selectedText && !item.noDataDisable) {\r\n                    selectedTextArr.push(item.selectedText);\r\n                }\r\n                this.model.id = item.selectedId;\r\n                this.model.level = index;\r\n            } else {\r\n                this.model[item.id] = {};\r\n            }\r\n        });\r\n        this.model.text = selectedTextArr.join(this.cfRegionSelectSeparativeSign);\r\n        // 改变model地址触发modelchange事件发生\r\n        this.model = {...this.model};\r\n    }\r\n\r\n    // 获取按钮配置项\r\n    private getBtnItems(): void {\r\n        this.btnItems = this.classifications.map((classification: any) => {\r\n            classification.selectedText = classification.text;\r\n\r\n            return classification;\r\n        });\r\n        this.btnSelected = this.btnItems[0];\r\n    }\r\n    // 根据selected初始配置,逻辑处理\r\n    private initSelectedData(): void {\r\n        if ((this.model && !this.model.id) || !this.regionselectOption || !this.regionselectOption.length) {\r\n            return;\r\n        }\r\n        const regionIdArr: Array<any> = this.getRegionIdArr();\r\n        if (regionIdArr.length) {\r\n            this.getBtnItems();\r\n            this.btnChangeFn();\r\n            for (const item of regionIdArr) {\r\n                this.onSelectFn(item);\r\n            }\r\n        }\r\n    }\r\n    // tslint:disable-next-line:typedef\r\n    private getRegionIdArr() {\r\n        this.getSelectedOption(this.regionselectOption);\r\n\r\n        return this.regionArr;\r\n    }\r\n    // 根据selectedId 获取已选择数据详情\r\n    private getSelectedOption(items: Array<any>): void {\r\n        this.hasFoundId = false;\r\n        this.regionArr = [];\r\n        // tslint:disable-next-line:prefer-for-of\r\n        for (let i: number = 0; i < items.length; i++) {\r\n            if (items[i].id === this.model.id) {\r\n                this.hasFoundId = true;\r\n                const nextLevel: Array<TpRegionselectOption> = items[i].nextLevel;\r\n                if (nextLevel && nextLevel.length && nextLevel[0].id === items[i].id) {\r\n                    this.isSpecialZone = true;\r\n                }\r\n                if (this.isSpecialZone && !items[i].nextLevel[0].nextLevel) { // 直辖县\r\n                    this.regionArr.unshift({\r\n                        id: items[i].id,\r\n                        label: items[i].label\r\n                    });\r\n                }\r\n                this.regionArr.unshift({\r\n                    id: items[i].id,\r\n                    label: items[i].label\r\n                });\r\n                break;\r\n            }\r\n            if (items[i].nextLevel && items[i].nextLevel.length) {\r\n                this.getSelectedOption(items[i].nextLevel);\r\n                if (this.hasFoundId) {\r\n                    this.regionArr.unshift({\r\n                        id: items[i].id,\r\n                        label: items[i].label\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public btnChangeFn(): void {\r\n        const selectedBtn: any = this.btnItems.find((item: any) => item.id === this.btnSelected.id);\r\n        this.classificationLevel = this.btnItems.findIndex((item: any) => item === selectedBtn);\r\n        this.isNotLastOne = this.classificationLevel < this.btnItems.length - 1;\r\n        this.handleOriginSuggestions();\r\n        this.changeDropdownSuggestions();\r\n        if (this.model && this.model[selectedBtn.id]) {\r\n            const index: number = this.options.findIndex((item: any) => item.id === this.model[selectedBtn.id].id);\r\n            this.currentmodel = this.options[index];\r\n        }\r\n    }\r\n\r\n    private findIndex(): number {\r\n        return this.options.findIndex((item: any) => item.id === this.model.id);\r\n    }\r\n\r\n    private handleOriginSuggestions(): void {\r\n        let dropdownSuggestions: Array<any> = this.regionselectOption;\r\n        this.originSuggestions = [];\r\n        this.btnItems.forEach((item: any, index: number) => {\r\n            if (index > this.classificationLevel) {\r\n                return;\r\n            }\r\n            const currentData: any = dropdownSuggestions.find((dropdown: any): boolean => {\r\n                return dropdown.id === item.originId;\r\n            });\r\n            if (currentData && currentData.nextLevel && currentData.nextLevel.length) {\r\n                dropdownSuggestions = currentData.nextLevel;\r\n            }\r\n        });\r\n        if (!dropdownSuggestions) {\r\n            return;\r\n        }\r\n        // 根据id从小到大进行排序\r\n        dropdownSuggestions = dropdownSuggestions.sort((a: any, b: any) => {\r\n            return a.id - b.id;\r\n        });\r\n        dropdownSuggestions.forEach((item1: any) => {\r\n            this.originSuggestions.push({\r\n                id: item1.id,\r\n                label: item1.label,\r\n                nextLevel: item1.nextLevel\r\n            });\r\n        });\r\n    }\r\n\r\n    // 根据originId从原始数据中第一级往下寻找\r\n    private changeDropdownSuggestions(): void {\r\n        this.options = this.originSuggestions;\r\n    }\r\n\r\n    // 更改选择区域显示文本\r\n    private changePlaceholder(): void {\r\n        let showText: string = '';\r\n        this.btnItems.forEach((item: any, index: number) => {\r\n            if (item.noDataDisable) {\r\n                return;\r\n            }\r\n            const text: string = item.selectedText + ' ';\r\n            if (index === 0) {\r\n                showText += text;\r\n            } else {\r\n                // tslint:disable-next-line:prefer-template\r\n                showText += this.cfRegionSelectSeparativeSign + ' ' + text;\r\n            }\r\n        });\r\n        this.showText = showText;\r\n    }\r\n\r\n    // 判断按钮组disable权限\r\n    private changeBtnRight(): void {\r\n        this.btnItems.map((item: any, index: number) => {\r\n            item.disabled = (index > this.currentClassificationsLength) || item.noDataDisable;\r\n\r\n            return item;\r\n        });\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 判断是否溢出并获取超出宽度\r\n     */\r\n    public getExtraWidth(): number {\r\n        const wrapperWidth: number = this.wrapperEle.nativeElement.offsetWidth;\r\n        const buttonsWidth: number = this.buttongroupEle.nativeElement.offsetWidth;\r\n        const isOverflow: boolean = wrapperWidth > buttonsWidth;\r\n        if (!isOverflow) {\r\n            return 0;\r\n        } else {\r\n            const extraWidth: number = wrapperWidth - buttonsWidth;\r\n\r\n            return extraWidth;\r\n        }\r\n    }\r\n}\r\n","import { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TpRegionselectComponent } from './TpRegionselectComponent';\r\nimport { TiButtongroupModule, TiDominatorModule, TiDropsearchModule } from '@cloud/tiny3';\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n */\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, TiButtongroupModule, TiDominatorModule, TiDropsearchModule],\r\n  exports: [TpRegionselectComponent],\r\n  declarations: [TpRegionselectComponent]\r\n})\r\n\r\nexport class TpRegionselectModule {}\r\nexport { TpRegionselectComponent } from './TpRegionselectComponent';\r\n","import { Component } from '@angular/core';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@Component({\r\n    selector: 'tp-renamemodal',\r\n    styleUrls: ['./renamecontainer.less'],\r\n    template: '<ng-content></ng-content>'\r\n})\r\n\r\nexport class TpRenameModalContainerComponent {\r\n}\r\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\r\nimport { TiLocale, TiValidationConfig, TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@Component({\r\n    templateUrl: './TpRenameModalComponent.html',\r\n    styleUrls: ['./renamemodal.less']\r\n})\r\n\r\nexport class TpRenameModalComponent extends TiBaseComponent {\r\n    @Input() value: string;\r\n    @Input() modalHeader: string;\r\n\r\n    @ViewChild('input', { static: true }) input: ElementRef;\r\n\r\n    public okLabel: string = TiLocale.getLocaleWords().tpRename.okButton;\r\n    public cancelLabel: string = TiLocale.getLocaleWords().tiCommon.cancelBtn;\r\n    public model: string;\r\n\r\n    public validation: TiValidationConfig = {\r\n        errorMessage: {\r\n            regExp: TiLocale.getLocaleWords().tpRename.inValidMessage\r\n        }\r\n    };\r\n    // 此处的close并不是按钮真正的close()，参数form的类型本应是FormGroup，所以没有引入FormGroup，指定为any\r\n    close(form: any): void {\r\n    }\r\n    dismiss(): void {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.model = this.value;\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.input.nativeElement.focus();\r\n        this.input.nativeElement.setSelectionRange(0, 0, 'backward');\r\n    }\r\n\r\n}\r\n","import { Component, ContentChild, ElementRef, EventEmitter, Input,  NgZone,  Output, Renderer2, TemplateRef } from '@angular/core';\r\nimport { FormGroup, ValidationErrors } from '@angular/forms';\r\nimport { TiBaseComponent, TiLocale, TiPopUpRef, TiPopupService, TiPosition, TiPositionType, TiValidators } from '@cloud/tiny3';\r\n\r\nimport { TpRenameModalContainerComponent } from './TpRenameModalContainerComponent';\r\nimport { TpRenameModalComponent } from './TpRenameModalComponent';\r\n\r\n/**\r\n * rename组件生产的弹窗实例，提供hide()方法，用于关闭弹窗\r\n */\r\nexport interface TpRenameModalRef {\r\n    /**\r\n     * 关闭弹窗的方法\r\n     */\r\n    hide(): void;\r\n}\r\n/**\r\n * 名称编辑组件\r\n *\r\n * <example-url>../tinyplus3demo/#/rename/rename-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-rename',\r\n    templateUrl: './rename.html',\r\n    styleUrls: ['./rename.less']\r\n})\r\n\r\nexport class TpRenameComponent extends TiBaseComponent {\r\n    constructor(\r\n        protected hostRef: ElementRef,\r\n        protected renderer2: Renderer2,\r\n        private tiPopup: TiPopupService<any>,\r\n        private zone: NgZone\r\n    ) {\r\n        super(hostRef, renderer2);\r\n        this.defaultModalHeader = TiLocale.getLocaleWords().tpRename.modalHeader;\r\n    }\r\n    /**\r\n     * 待编辑的内容\r\n     */\r\n    @Input() value: string;\r\n    /**\r\n     * 标识该行数据是否为new\r\n     */\r\n    @Input() isNew: boolean = false;\r\n    /**\r\n     * 组件是否可用\r\n     */\r\n    @Input() disabled: boolean = false;\r\n    /**\r\n     * 弹窗标题\r\n     */\r\n    @Input() modalHeader: string;\r\n    /**\r\n     * @ignore\r\n     * 铅笔图标的tip提示信息\r\n     *\r\n     * 根据华为云4.0规范变更，使用原生title代替tip解释图标的作用，10.0.1版本起该接口隐藏，并取消缺省值（编辑/Edit（国际化））\r\n     */\r\n    @Input() iconTip: string;\r\n    /**\r\n     * @ignore\r\n     * 铅笔图标的tip提示信息方位，10.0.1版本起该接口隐藏\r\n     */\r\n    @Input() iconTipPosition: TiPositionType = 'top';\r\n    /**\r\n     * 10.0.1新增\r\n     *\r\n     * 图标的title属性，用于说明图标的作用\r\n     */\r\n    @Input() iconTitle: string = TiLocale.getLocaleWords().tpRename.tip;\r\n    /**\r\n     * 10.0.3新增\r\n     *\r\n     * 是否通过组件显示被编辑的内容，组件以文本的形式显示，默认显示\r\n     */\r\n    @Input() showValue: boolean = true;\r\n    /**\r\n     * 确认/OK按钮点击事件，参数：输入框的内容\r\n     */\r\n    @Output() readonly confirm: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * 确认/OK按钮点击事件，为开发者提供关闭弹窗的时机\r\n     *\r\n     * 参数：弹窗实例[TpRenameModalRef]{@link ../interfaces/TpRenameModalRef.html}\r\n     */\r\n    @Output() readonly beforeClose: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     * 自定义弹窗模板\r\n     */\r\n    @ContentChild('renameModal', { static: true }) customModal: TemplateRef<any>;\r\n\r\n    private hostSpace: number = 5; // 弹窗距rename的距离\r\n\r\n    private defaultModalHeader: string;\r\n\r\n    private unlistenDocumentClick: () => void;\r\n\r\n    private renameModal: TiPopUpRef;\r\n\r\n    private TpRenameModalComponentRef: any;\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.iconTitle = this.iconTip ? '' : this.iconTitle;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(): void {\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        // 初始create一次即可，多次点击编辑图标避免重复生成的逻辑，在popupService内部已有处理\r\n        if (!this.renameModal) {\r\n            this.renameModal = this.tiPopup.create(TpRenameModalContainerComponent);\r\n        }\r\n        // open modal\r\n        this.TpRenameModalComponentRef =  this.renameModal.show({\r\n            content: this.customModal || TpRenameModalComponent,\r\n            contentContext: this.customModal ?\r\n                {\r\n                    renameModal: this.renameModal,\r\n                    value: this.value\r\n                } : {\r\n                value: this.value,\r\n                id: this.id + '_renameModal',\r\n                modalHeader: this.modalHeader || this.defaultModalHeader,\r\n                close: (form: FormGroup): void => {\r\n                    // 因为非常明确该组件只有一个表单元素 校验结果定义为error而不是errors，直接通过input获取校验失败的元素\r\n                    const error: ValidationErrors | null = TiValidators.check(form);\r\n                    if (error) {\r\n                        this.TpRenameModalComponentRef.location.nativeElement.querySelector('input')\r\n                            .focus();\r\n                    } else {\r\n                        this.beforeClose.emit(this.renameModal);\r\n                        this.confirm.emit(this.TpRenameModalComponentRef.location.nativeElement.querySelector('input').value);\r\n                        // tslint:disable-next-line: no-unused-expression\r\n                        this.destroyRenameModal();\r\n                    }\r\n                },\r\n                dismiss: (): void => {\r\n                    this.destroyRenameModal();\r\n                }\r\n            },\r\n            container: 'body'\r\n        });\r\n        const modal: ElementRef = this.TpRenameModalComponentRef.location.nativeElement;\r\n        this.renderer2.setStyle(modal, 'left', '-9999px');\r\n        this.renderer2.setStyle(modal, 'top', '-9999px');\r\n\r\n        const td: ElementRef = this.findClosestTD(this.hostRef.nativeElement);\r\n        TiPosition.setPosition({\r\n            targetEle: modal,\r\n            hostEle: this.hostRef.nativeElement,\r\n            hostEleX: td || this.hostRef.nativeElement,\r\n            hOffset: td ? 10 : 0,\r\n            hostSpace: this.hostSpace,\r\n            fixMaxHeight: true,\r\n            determinPositionFn: this.DeterminePosition\r\n        });\r\n\r\n        this.addDocumentClickEvent();\r\n    }\r\n\r\n    private DeterminePosition: (layout: any) => string = (layout: any) => {\r\n        if (layout.avilableLayout.bottom >= layout.targetLayout.height + this.hostSpace) {\r\n            return 'bottom-left';\r\n        } else {\r\n            return 'top-left';\r\n        }\r\n    }\r\n\r\n    private findClosestTD: (ele: any) => ElementRef = (ele: any) => {\r\n        if (ele.nodeName === 'HTML') {\r\n            return undefined;\r\n        } else if (ele.parentNode.nodeName === 'TD') {\r\n            return ele.parentNode;\r\n        } else {\r\n            return this.findClosestTD(ele.parentNode);\r\n        }\r\n    }\r\n\r\n    private addDocumentClickEvent(): void {\r\n        this.zone.runOutsideAngular((): void => {\r\n            this.unlistenDocumentClick = this.renderer2.listen(document, 'click', (event: MouseEvent): void => {\r\n                // 编辑图标被点击，触发其绑定的click事件，这里不做处理。\r\n                if (this.hostRef.nativeElement.contains(event.target)) {\r\n                    return;\r\n                }\r\n                if (this.TpRenameModalComponentRef) {\r\n                    const tpRenameModalHostElement: any = this.TpRenameModalComponentRef.location.nativeElement;\r\n                    // renameModal之外的元素被点击，销毁renameModal\r\n                    if (!(tpRenameModalHostElement && tpRenameModalHostElement.contains(event.target))) {\r\n                        this.zone.run((): void => {\r\n                            this.destroyRenameModal();\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    // 销毁弹窗、取消document的click事件\r\n    private destroyRenameModal(): void {\r\n        // tslint:disable-next-line: no-unused-expression\r\n        this.renameModal && this.renameModal.hide();\r\n        if (this.unlistenDocumentClick) {\r\n            this.unlistenDocumentClick();\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnDestroy(): void {\r\n        super.ngOnDestroy();\r\n        this.destroyRenameModal();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { TpRenameComponent } from './TpRenameComponent';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpRenameModalContainerComponent } from './TpRenameModalContainerComponent';\r\nimport { TpRenameModalComponent } from './TpRenameModalComponent';\r\n\r\nimport {\r\n  TiButtonModule,\r\n  TiLocaleModule,\r\n  TiModalModule,\r\n  TiPopupModule,\r\n  TiTableModule,\r\n  TiTextModule,\r\n  TiTipModule,\r\n  TiValidationModule\r\n} from '@cloud/tiny3';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TiButtonModule,\r\n    TiLocaleModule,\r\n    TiModalModule,\r\n    TiPopupModule,\r\n    TiTipModule,\r\n    TiValidationModule,\r\n    TiTableModule,\r\n    TiTextModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [TpRenameComponent],\r\n  declarations: [TpRenameComponent, TpRenameModalComponent, TpRenameModalContainerComponent],\r\n  entryComponents: [TpRenameModalComponent, TpRenameModalContainerComponent]\r\n})\r\n\r\nexport class TpRenameModule {}\r\nexport { TpRenameComponent, TpRenameModalRef } from './TpRenameComponent';\r\nexport { TpRenameModalComponent } from './TpRenameModalComponent';\r\nexport { TpRenameModalContainerComponent } from './TpRenameModalContainerComponent';\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TpResourceItem } from './TpResourceItemComponent';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * 资源列表 resources\r\n *\r\n * <example-url>../tinyplus3demo/#/resources/resources-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-resources',\r\n    templateUrl: './resources.html',\r\n    styleUrls: ['./resources.less']\r\n})\r\n\r\nexport class TpResourcesComponent extends TiBaseComponent {\r\n    /**\r\n     * 资源列表标题\r\n     */\r\n    @Input() title: string;\r\n    /**\r\n     * 列表对象主接口；用于列表中每个内容中参数的传递。\r\n     */\r\n    @Input() items: Array<TpResourceItem>;\r\n    /**\r\n     * 选中某项资源时，触发事件\r\n     */\r\n    @Output() readonly select: EventEmitter<TpResourceItem> = new EventEmitter<TpResourceItem>();\r\n    /**\r\n     * 选中某项资源异常数时，触发事件\r\n     */\r\n    @Output() readonly errorSelect: EventEmitter<TpResourceItem> = new EventEmitter<TpResourceItem>();\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(item: TpResourceItem): void {\r\n        this.select.emit(item);\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onErrorSelect(item: TpResourceItem): void {\r\n        this.errorSelect.emit(item);\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { TiBaseComponent, TiPositionType } from '@cloud/tiny3';\r\n\r\nexport interface TpResourceItem {\r\n    /* tslint:disable:no-redundant-jsdoc */\r\n    /**\r\n     * 设置资源内容；\r\n     */\r\n    name: string;\r\n    /**\r\n     * 设置资源总数。\r\n     */\r\n    total?: number;\r\n    /**\r\n     * 设置资源异常数；\r\n     */\r\n    error?: number;\r\n    /**\r\n     * 设置资源异常数最大值；\r\n     * @default 99\r\n     */\r\n    errorMax?: number;\r\n    /**\r\n     * 设置资源名称的提示信息，文本溢出时，鼠标悬停会显示提示信息\r\n     *\r\n     * content：默认文本为name属性内容；\r\n     *\r\n     * position：默认显示位置：'top'；\r\n     */\r\n    nameTip?: TpResourceTip;\r\n    /**\r\n     * 设置资源总数的提示信息：\r\n     *\r\n     * content：默认无提示信息；\r\n     *\r\n     * position：默认显示位置 'bottom-left'；\r\n     */\r\n    totalTip?: TpResourceTip;\r\n    /**\r\n     * 设置资源异常数的提示信息:\r\n     *\r\n     * content：默认无提示信息；\r\n     *\r\n     * position：默认显示位置 'bottom-left'；\r\n     */\r\n    errorTip?: TpResourceTip;\r\n    /**\r\n     * 设置资源项是否隐藏;\r\n     * @default false\r\n     */\r\n    hide?: boolean;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\nexport interface TpResourceTip {\r\n    /**\r\n     * 提示信息内容\r\n     */\r\n    content?: string;\r\n    /**\r\n     * 提示信息显示位置，有以下值可选，其中auto代表自适应位置显示；\r\n     *\r\n     * \"top\" | \"top-left\" | \"top-right\" | \"bottom\" | \"bottom-left\" | \"bottom-right\" | \"left\" | \"left-top\" | \"left-bottom\" | \"right\" | \"right-top\" | \"right-bottom\" | \"center\" | \"auto\" | \"none\"\r\n     */\r\n    position?: TiPositionType;\r\n}\r\n\r\n/**\r\n * @ignore\r\n */\r\n@Component({\r\n    selector: 'tp-resource-item',\r\n    templateUrl: './resource-item.html',\r\n    styleUrls: ['./resource-item.less'],\r\n    // host: {\r\n    //     '[class.tp-resource-item]': 'true'\r\n    // }\r\n})\r\n\r\nexport class TpResourceItemComponent extends TiBaseComponent {\r\n    /**\r\n     * 每项资源配置对象内容\r\n     */\r\n    @Input() item: TpResourceItem;\r\n\r\n    /**\r\n     * 选中某项资源异常数时，触发事件\r\n     */\r\n    @Output() readonly errorSelect: EventEmitter<TpResourceItem> = new EventEmitter<TpResourceItem>();\r\n\r\n    /**\r\n     * @ignore\r\n     * 获取显示异常资源数\r\n     */\r\n    public getErrorNumber(error: number, errorMax: number): any {\r\n        const baseValue: any = errorMax && errorMax > 0 ? errorMax : 99;\r\n\r\n        return error > baseValue ? `${baseValue}+` : error;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClickError(item: TpResourceItem, event: Event): void {\r\n        // 阻止事件冒泡，触发父级事件\r\n        event.stopPropagation();\r\n        this.errorSelect.emit(item);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TpResourcesComponent } from './TpResourcesComponent';\r\nimport { TpResourceItemComponent } from './TpResourceItemComponent';\r\nimport { TiOverflowModule, TiTipModule, TiOutlineModule } from '@cloud/tiny3';\r\nimport { TpCardModule } from '../card/TpCardModule';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TpCardModule,\r\n    TiOverflowModule,\r\n    TiTipModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpResourcesComponent, TpResourceItemComponent],\r\n  declarations: [TpResourcesComponent, TpResourceItemComponent]\r\n})\r\n\r\nexport class TpResourcesModule {}\r\nexport { TpResourcesComponent } from './TpResourcesComponent';\r\nexport { TpResourceItemComponent } from './TpResourceItemComponent';\r\nexport { TpResourceItem } from './TpResourceItemComponent';\r\n","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * @ignore\r\n * goandback模板组件定义\r\n */\r\n@Component({\r\n    templateUrl: './goandback.html',\r\n    styleUrls: ['./goandback.less']\r\n})\r\n\r\nexport class TpGoandbackComponent {\r\n    @Input() warn: any;\r\n    @Input() error: any;\r\n    @Input() href: string;\r\n    @Input() words: any;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpGoandbackComponent } from './TpGoandbackComponent';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiAlertModule, TiLocaleModule, TiMessageModule } from '@cloud/tiny3';\r\n\r\n/**\r\n * @ignore\r\n *\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiAlertModule,\r\n    TiMessageModule,\r\n    TiLocaleModule\r\n  ],\r\n  exports: [TpGoandbackComponent],\r\n  declarations: [TpGoandbackComponent],\r\n  entryComponents: [TpGoandbackComponent]\r\n})\r\n\r\nexport class TpGoandbackModule {}\r\nexport { TpGoandbackComponent } from './TpGoandbackComponent';\r\n","import { Injectable, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { TpGoandbackModule } from './TpGoandbackModule';\r\nimport { TpGoandbackComponent } from './TpGoandbackComponent';\r\nimport { TiMessageService, TiMessageType, TiModalRef, Util } from '@cloud/tiny3';\r\nimport { TpUtil } from '../../utils/TpUtil';\r\n\r\nexport interface TpGoAndBackConfig {\r\n    /**\r\n     * 去绑定|认证|充值跳转链接\r\n     *\r\n     * v10.1.3及之前版本存在XSS攻击(url类型)风险，v10.1.4 版本做了安全处理，已不存在安全问题，建议业务尽快升级版本。\r\n     */\r\n    url?: string;\r\n    /**\r\n     * 标准key:value的参数，总体对象形式\r\n     */\r\n    params?: { [propName: string]: string };\r\n    /**\r\n     * @ignore\r\n     * 受限组件词条\r\n     */\r\n    words?: any;\r\n    /**\r\n     * @ignore\r\n     * url是否添加params（restrict受限组件需略过goToUrl方法中对url的处理）\r\n     * 10.1.2 版本添加\r\n     */\r\n    addUrlParams?: boolean;\r\n    /**\r\n     * 点击已绑定|充值|认证按钮的函数回调接口，该函数存在两个参数（instances,openAlert）：\r\n     *\r\n     * 1.instances:弹窗的示例，可调用instances.dismiss()方法关闭弹窗<br>\r\n     * 2.openAlert(alertType):控制提示信息的种类和显示隐藏的方法；alertType有两个可选值：\r\n     *\r\n     * a.\"error\"：系统繁忙状态；b.\"warn\"：未绑定|认证|充值状态\r\n     */\r\n    confirmFn?(instances?: TiModalRef, openAlertFn?: Function): void;\r\n    /**\r\n     * 弹窗关闭时的函数回调接口，该函数存在一个参数（instances）\r\n     * 只有一级弹窗时，关闭回调在一级弹窗关闭时执行；存在二级弹窗时，关闭回调在二级弹窗关闭时执行\r\n     * 10.1.4 版本添加\r\n     */\r\n    closeFn?(instances?: TiModalRef): void;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n\r\n/**\r\n * 组件内部封装基类服务，只供内部使用\r\n */\r\n@Injectable({\r\n    providedIn: TpGoandbackModule\r\n})\r\n/**\r\n * @internal\r\n */\r\nexport class TpGoandbackService {\r\n    /**\r\n     * 获取词条\r\n     */\r\n    protected words: any;\r\n    /**\r\n     * 弹窗类型\r\n     */\r\n    protected firstMessageType: TiMessageType = 'warn';\r\n    constructor(protected tiMessage: TiMessageService, private domSanitizer: DomSanitizer) {\r\n    }\r\n\r\n    public open(config?: TpGoAndBackConfig): void {\r\n        // 受限组件需通过调用方法传入词条\r\n        this.words = config.words ? config.words : this.words;\r\n        this.firstMessage(config);\r\n    }\r\n    /**\r\n     * 触发去绑定|认证|充值按钮事件\r\n     * @param configObj 用户配置对象\r\n     */\r\n    private firstMessage(configObj: TpGoAndBackConfig): void {\r\n        const configId = Util.isString(configObj.id) && configObj.id !== '' ? configObj.id : 'tp_message_modal'; // 用户未设置id时，设置默认id用于拼接\r\n        const contentHref: string = this.words.firstMessageContentLabel ?\r\n    `<a tiNavigation target=\"_blank\" rel=\"noopener noreferrer\" href=\"${this.words.firstMessageContentHref}\">${this.words.firstMessageContentLabel}</a>` : '';\r\n        const instances: TiModalRef = this.tiMessage.open({\r\n            id: configId,\r\n            type: this.firstMessageType,\r\n            title: this.words.firstMessageTitle,\r\n            content: Util.formatEntry(this.words.firstMessageContent, [contentHref]),\r\n            okButton: {\r\n                text: this.words.firstMessageOkButtonText,\r\n                autofocus: true,\r\n                click: (): void => {\r\n                    const handleUrl: string = this.goToUrl(configObj);\r\n                    instances.close();\r\n                    // 受限组件存在无第二个弹窗的情况；此处添加判断，是否需要触发该弹窗出现\r\n                    if (this.words.secondMessageTitle) {\r\n                        this.secondMessage(configObj, handleUrl, configId);\r\n                    }\r\n                }\r\n            },\r\n            cancelButton: {\r\n                show: false\r\n            },\r\n            close: (messageRef: TiModalRef): void => {\r\n                // 如果不需要二级弹窗，关闭回调在一级弹窗关闭时执行\r\n                if (!this.words.secondMessageTitle && configObj.closeFn && Util.isFunction(configObj.closeFn)) {\r\n                    configObj.closeFn(messageRef);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 触发已绑定|认证|充值按钮事件\r\n     * @param configObj 用户配置对象\r\n     * @param handleUrl 跳转链接\r\n     */\r\n    private secondMessage(configObj: TpGoAndBackConfig, handleUrl: string, promptId: string): void {\r\n        const instances: TiModalRef = this.tiMessage.open({\r\n            id: promptId + '_prompt',\r\n            type: 'prompt',\r\n            title: this.words.secondMessageTitle,\r\n            modalClass: 'tp-goandback-body',\r\n            content: TpGoandbackComponent,\r\n            // context定义上下文对象，对应组件@Input属性，可设置/获取这些接口属性\r\n            context: {\r\n                words: this.words,\r\n                href: handleUrl,\r\n                label: this.words.secondMessageFail,\r\n                warn: {\r\n                    type: 'warn',\r\n                    open: false,\r\n                    id: promptId + '_prompt_warn'\r\n                },\r\n                error: {\r\n                    type: 'error',\r\n                    open: false,\r\n                    id: promptId + '_prompt_error'\r\n                }\r\n            },\r\n            okButton: {\r\n                text: this.words.secondMessageOkButtonText,\r\n                autofocus: true,\r\n                click: (): void => {\r\n                    if (configObj.confirmFn && Util.isFunction(configObj.confirmFn)) {\r\n                        // tslint:disable-next-line: no-use-before-declare\r\n                        configObj.confirmFn(instances, openAlertFn);\r\n                    }\r\n                }\r\n            },\r\n            close: (messageRef: TiModalRef): void => {\r\n                // 关闭回调在二级弹窗关闭时执行\r\n                if (configObj.closeFn && Util.isFunction(configObj.closeFn)) {\r\n                    configObj.closeFn(messageRef);\r\n                }\r\n            }\r\n        });\r\n\r\n        /**\r\n         * 用户调用该函数，打开对应弹框\r\n         * @param alertType (error: 系统繁忙) || (warn: 未完成绑定|认证|充值)\r\n         */\r\n        const openAlertFn: (alertType: string) => void = (alertType: string): void => {\r\n            const context: any = instances.content.instance.context;\r\n            context.warn.open = alertType === 'warn' ? true : false;\r\n            context.error.open = alertType === 'error' ? true : false;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param definedUrl 跳转链接\r\n     * @param params 链接参数\r\n     */\r\n    private goToUrl(configObj: TpGoAndBackConfig): string {\r\n        // 未配置addUrlParams属性时，默认赋值true\r\n        configObj.addUrlParams = Util.isUndefined(configObj.addUrlParams)\r\n                                 ? true : configObj.addUrlParams;\r\n        const [definedUrl, params] = [configObj.url, configObj.params];\r\n        let url: string = Util.isString(definedUrl) ? definedUrl : this.words.path;\r\n        // 判断是否需要url添加params处理（restrict受限组件需略过 issues-#1830）\r\n        if (configObj.addUrlParams) {\r\n            url = TpUtil.addDefaultParam(url, params);\r\n        }\r\n        const win: any = window.open(this.domSanitizer.sanitize(SecurityContext.URL, url), '_blank');\r\n\r\n        // IE浏览器下，有些场景下window.open()无返回值时不用处理\r\n        if (win) {\r\n            // 处理打开一个新的标签，新标签中的页面如果存在恶意代码，就可以将原网站直接导航到一个虚假网站的安全漏洞\r\n            win.opener = null;\r\n        }\r\n\r\n        return url;\r\n    }\r\n}\r\n","import { Component, ElementRef, Renderer2, TemplateRef, ViewChild } from '@angular/core';\r\nimport { TiBaseComponent, TiModalRef, TiTipRef, TiTipService, TiTipShowInfo } from '@cloud/tiny3';\r\nimport { TpGoandbackService } from '../../services/goandback/TpGoandbackService';\r\n\r\n/**\r\n * @ignore\r\n * 内部使用\r\n */\r\nexport interface TpRestrictMessage {\r\n    label: string;\r\n    href: string;\r\n    link: string;\r\n}\r\n\r\n/**\r\n * 用户受限组件\r\n * <example-url>../tinyplus3demo/#/restrict/restrict-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-restrict',\r\n    templateUrl: './restrict.html',\r\n    styleUrls: ['./restrict.less']\r\n})\r\nexport class TpRestrictComponent extends TiBaseComponent {\r\n\r\n    /**\r\n     * @ignore\r\n     * tip 内容template\r\n     */\r\n    @ViewChild('tipContentTemplate', { static: false }) tipContentTemplate: TemplateRef<any>;\r\n\r\n    /**\r\n     * @ignore\r\n     * alert 是否展示控制项\r\n     */\r\n    public open: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * alert 类型\r\n     */\r\n    public alertType: string = 'error';\r\n    /**\r\n     * @ignore\r\n     * 内部alert类型图标\r\n     */\r\n    public typeIcon: boolean = true;\r\n    /**\r\n     * @ignore\r\n     * 内部alert关闭图标\r\n     */\r\n    public closeIcon: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * alert 内容\r\n     */\r\n    public alertContent: string = '';\r\n    /**\r\n     * @ignore\r\n     * tipcontent 内容\r\n     */\r\n    public tipContent: string = '';\r\n\r\n    constructor(\r\n        protected hostRef: ElementRef,\r\n        protected renderer2: Renderer2,\r\n        private tipService: TiTipService,\r\n        private tpGoandbackService: TpGoandbackService\r\n    ) {\r\n        super(hostRef, renderer2);\r\n    }\r\n\r\n    /**\r\n     * 显示提示块\r\n     */\r\n    public openAlert(content?: string): void {\r\n        if (content) {\r\n            this.alertContent = content;\r\n            this.open = true;\r\n        } else {\r\n            this.open = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 给目标元素添加tip\r\n     */\r\n    public addTip(target: HTMLElement, content: string): TiTipRef {\r\n        this.tipContent = content;\r\n        if (this.tipContentTemplate) {\r\n            return this.tipService.create(target, {\r\n                trigger: 'mouse',\r\n                showFn: (): TiTipShowInfo => {\r\n                    return {\r\n                        content: this.tipContentTemplate\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * 打开弹窗\r\n     */\r\n    public openMessage(messageOption: any, confirmFn?: (instances: TiModalRef, openAlertFn: Function) => void): void {\r\n        let words: any;\r\n        if (messageOption.firstMessage) {\r\n            const message: TpRestrictMessage = this.getMessageInfo(messageOption.firstMessage);\r\n\r\n            words = {\r\n                firstMessageContent: message.label,\r\n                firstMessageOkButtonText: message.link,\r\n                path: message.href,\r\n                ...messageOption\r\n            };\r\n        } else {\r\n            words = messageOption;\r\n        }\r\n        this.tpGoandbackService.open({\r\n            words,\r\n            confirmFn,\r\n            // 略过url添加params处理（restrict受限组件需略过tpGoandbackService中goToUrl方法对url的处理）\r\n            addUrlParams: false\r\n        });\r\n\r\n    }\r\n\r\n    //  message 弹窗的内容和按钮需要 alert 的内容转化\r\n    // tslint:disable-next-line: prefer-function-over-method\r\n    private getMessageInfo(content: string): TpRestrictMessage {\r\n        let href: string;\r\n        let link: string;\r\n        let matchedString: string;\r\n        // 返回数据中可能没有href属性，所有正则匹配两次\r\n        // 提取出a 标签中的所有字符\r\n        const reg: RegExp = /<a([^>]*)>(.*?)<\\/a>/g;\r\n\r\n        let regExeRes: RegExpExecArray = reg.exec(content);\r\n        while (regExeRes && reg.lastIndex !== content.length) {\r\n            regExeRes = reg.exec(content);\r\n        }\r\n        if (regExeRes) {\r\n            // 提取a属性字符中的href内容\r\n            const reg2: RegExp = /href=['\"]?([^\"]*)['\"]?/g;\r\n            matchedString = regExeRes[0];\r\n            link = regExeRes[2];\r\n            // 提取 href 的值\r\n            const attrsStr: string = regExeRes[1];\r\n            const regExeRes2: RegExpExecArray = reg2.exec(attrsStr);\r\n            href = regExeRes2 ? regExeRes2[1] : '';\r\n        }\r\n\r\n        return {\r\n            label: content.replace(matchedString, ''),\r\n            link,\r\n            href\r\n        };\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TiAlertModule, TiTipServiceModule } from '@cloud/tiny3';\r\nimport { TpGoandbackModule } from '../../services/goandback/TpGoandbackModule';\r\nimport { TpRestrictComponent } from './TpRestrictComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiAlertModule,\r\n    TpGoandbackModule,\r\n    TiTipServiceModule\r\n  ],\r\n  exports: [TpRestrictComponent],\r\n  declarations: [TpRestrictComponent]\r\n})\r\nexport class TpRestrictModule {}\r\nexport { TpRestrictComponent } from './TpRestrictComponent';\r\n","import {\r\n    ChangeDetectorRef,\r\n    Component,\r\n    ElementRef,\r\n    EventEmitter,\r\n    Input,\r\n    Output,\r\n    Renderer2,\r\n    SimpleChanges,\r\n    ViewChild,\r\n    ViewChildren,\r\n    QueryList\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\nimport {\r\n    TiBrowser, TiDateComponent, TiDominatorComponent, TiDropComponent, TiDropsearchComponent,\r\n    TiFormComponent, TiKeymap, TiLocale, TiLocaleFormat, TiValidators, Util\r\n    // tslint:disable-next-line: no-implicit-dependencies\r\n} from '@cloud/tiny3';\r\n\r\nimport { TpIconComponent } from '../icon/TpIconModule';\r\n\r\n/**\r\n * tag类型, radio-默认单选， noValue-非正常tag，tag值为空，  checkbox-多选，map-键值tag, numRange-数字范围tag,\r\n * dateRange-日期范围tag。tag 的分类是根据键值的结果划分\r\n */\r\nexport type TpSearchboxTagType = 'radio' | 'noValue' | 'checkbox' | 'map' | 'numRange' | 'dateRange';\r\n/**\r\n * 候选tag数据配置项\r\n */\r\nexport interface TpSearchboxItem {\r\n    /**\r\n     * 搜索字段，tag的键\r\n     */\r\n    field: string;\r\n    /**\r\n     * tag 键的显示值，实际结果是field\r\n     */\r\n    label: string;\r\n    /**\r\n     * 配置项可生产的tag类型\r\n     */\r\n    type?: TpSearchboxTagType;\r\n    /**\r\n     * tag 值的选择项数据\r\n     */\r\n    options: Array<TpSearchboxOption>;\r\n    /**\r\n     * 自动识别匹配正则\r\n     * 10.0.2 新增\r\n     */\r\n    regexp?: RegExp;\r\n    /**\r\n     * radio 单选类型可设置, 设置为false时,单选属性可以多次选择\r\n     */\r\n    replace?: boolean;\r\n    /**\r\n     * 单选或多选值的选中项键值\r\n     * 10.0.2 新增\r\n     */\r\n    optionValueKey?: string;\r\n    /**\r\n     * dateRange 类型日期显示和结果格式，dateRange时必选\r\n     */\r\n    format?: string;\r\n    /**\r\n     * numRange 最小值，类型为number\r\n     * dateRange开始日期，类型为Date\r\n     */\r\n    start?: number | Date;\r\n    /**\r\n     * numRange 最大值，类型为number\r\n     * dateRange起始日期，类型为Date\r\n     */\r\n    end?: number | Date;\r\n    /**\r\n     * numRange 可填最小值，用于校验\r\n     * dateRange可选最小值，用于校验\r\n     */\r\n    min?: number | Date;\r\n    /**\r\n     * numRange 可填最大值，用于校验\r\n     * dateRange可选最大值，用于校验\r\n     */\r\n    max?: number | Date;\r\n    /**\r\n     * 每个item对应的提示文本\r\n     */\r\n    placeholder?: string;\r\n    [propName: string]: any;\r\n}\r\n\r\nexport interface TpSearchboxOption {\r\n    /**\r\n     * 选项显示值\r\n     */\r\n    label: string;\r\n    /**\r\n     * 搜索目标字段，只有‘label’才需要\r\n     */\r\n    field?: string;\r\n    /**\r\n     * 控制map类型二级选项是否出现内置所有值，map类型需要\r\n     */\r\n    allValues?: boolean;\r\n    /**\r\n     * 控制map类型二级选项是否出现内置空值，map类型需要\r\n     */\r\n    emptyValue?: boolean;\r\n    /**\r\n     * map类型二级选项数据\r\n     */\r\n    options?: Array<any>;\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * 每个选中tag的类型\r\n */\r\nexport interface TpSearchboxTag {\r\n    /**\r\n     * 搜索目标搜字段\r\n     */\r\n    field: string;\r\n    /**\r\n     * tag键，field的显示值\r\n     */\r\n    label: string;\r\n    /**\r\n     * tag值\r\n     */\r\n    value: string;\r\n    /**\r\n     * 类型\r\n     */\r\n    type: TpSearchboxTagType;\r\n    /**\r\n     * 数字范围和日期范围tag 开始值\r\n     */\r\n    start?: number | string;\r\n    /**\r\n     * 数字范围和日期范围tag 结束值\r\n     */\r\n    end?: number | string;\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * search 事件回调参数的数据对象，对象的键对应field，对象的值是字符串数组，单选单个，多选多个\r\n */\r\nexport interface TpSearchboxFilter {\r\n    [propName: string]: Array<String>;\r\n}\r\n\r\n/**\r\n * ip正则\r\n * 10.0.2 新增\r\n */\r\nexport const TP_REGEXP_IP: RegExp = /^(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d{1,2}|1\\d\\d|2[0-4]\\d|25[0-5])){3}$/;\r\n/**\r\n * UUID正则\r\n * 10.0.2 新增\r\n */\r\nexport const TP_REGEXP_UUID: RegExp = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\n\r\n/**\r\n * 综合搜索组件。\r\n * 用户通过该组件，选择出数据过滤需要的参数\r\n *\r\n * <example-url>../tinyplus3demo/#/searchbox/searchbox-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-searchbox',\r\n    templateUrl: './searchbox.html',\r\n    styleUrls: ['./searchbox.less'],\r\n    host: {\r\n        '(blur)': 'onBlur()',\r\n        '(click)': 'onClick($event)'\r\n    },\r\n    providers: [TiFormComponent.getValueAccessor(TpSearchboxComponent)]\r\n})\r\nexport class TpSearchboxComponent extends TiFormComponent {\r\n    /**\r\n     * @ignore\r\n     * formControl 校验状态，通过了所有有效性检查\r\n     */\r\n    public static readonly VALID: string = 'VALID';\r\n    /**\r\n     * @ignore\r\n     * formControl 校验状态，至少有一个有效性检查失败了\r\n     */\r\n    public static readonly INVALID: string = 'INVALID';\r\n\r\n    /**\r\n     * 设置默认的过滤范围字段\r\n     */\r\n    @Input() defaultField: string = '';\r\n    /**\r\n     * 没有生成tag时的占位提示文本\r\n     *\r\n     */\r\n    @Input() emptyPlaceholder: string = '';\r\n\r\n    /**\r\n     * 输入框的宽度\r\n     */\r\n    @Input() inputWidth: string;\r\n\r\n    /**\r\n     * 是否显示帮助图标\r\n     *\r\n     */\r\n    @Input() showHelp: boolean = true;\r\n    /**\r\n     * 是否显示设置defaultField图标\r\n     */\r\n    @Input() showSettings: boolean = false;\r\n    /**\r\n     * 源数据\r\n     */\r\n    @Input() items: Array<TpSearchboxItem> = [];\r\n    /**\r\n     * 设置组件最多显示几行，\r\n     */\r\n    @Input() maxLine: number = 2;\r\n\r\n    /**\r\n     * 下拉框最大高度，单位为px，\r\n     *\r\n     */\r\n    @Input() panelMaxHeight: string = '999px';\r\n\r\n    /**\r\n     * 设置属性面板宽度\r\n     */\r\n    @Input() propPanelWidth: string = '200px';\r\n\r\n    /**\r\n     * 设置属性值面板宽度\r\n     */\r\n    @Input() valuePanelWidth: string = '200px';\r\n    /**\r\n     * 设置tag的最大宽度，解决tag太长，属性值\r\n     */\r\n    @Input() tagMaxWidth: string = '400px';\r\n\r\n    /**\r\n     * help 图标提示事件\r\n     */\r\n    @Output() readonly help: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * 清除事件\r\n     */\r\n    @Output() readonly clear: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * 搜索事件\r\n     */\r\n    @Output() readonly search: EventEmitter<TpSearchboxFilter> = new EventEmitter<TpSearchboxFilter>();\r\n    /**\r\n     * 值面板打开前事件,用于懒加载值选项\r\n     */\r\n    @Output() readonly beforeOpen: EventEmitter<TpSearchboxComponent> = new EventEmitter<TpSearchboxComponent>();\r\n    /**\r\n     * @ignore\r\n     * 选中项后，输入值变化事件\r\n     * 10.0.2 新增\r\n     */\r\n    @Output() readonly inputValueChange: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * 默认匹配字段发生改变事件\r\n     * 10.1.2 新增\r\n     */\r\n    @Output() readonly defaultFieldChange: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     * 内部标签donimator组件\r\n     */\r\n    @ViewChild(TiDominatorComponent, { static: true }) dominatorCom: TiDominatorComponent;\r\n    /**\r\n     * @ignore\r\n     * 属性面板\r\n     */\r\n    @ViewChild('propDrop', { static: true }) propDropCom: TiDropsearchComponent;\r\n    /**\r\n     * @ignore\r\n     * 值面板\r\n     */\r\n    @ViewChild('valueDrop', { static: true }) valueDropCom: TiDropsearchComponent;\r\n    /**\r\n     * @ignore\r\n     * 多选值面板\r\n     */\r\n    @ViewChild('valueMultiDrop', { static: false }) valueMultiDropCom: TiDropsearchComponent;\r\n    /**\r\n     * @ignore\r\n     * 自定义面板 numRange / daterange\r\n     */\r\n    @ViewChild('customDrop', { static: false }) customDropCom: TiDropComponent;\r\n    /**\r\n     * @ignore\r\n     * 设置面板\r\n     */\r\n    @ViewChild('settingsDrop', { static: false }) settingsDropCom: TiDropComponent;\r\n    /**\r\n     * @ignore\r\n     * 日期范围开始日期\r\n     */\r\n    @ViewChild('dateRangeStart', { static: false }) dateRangeStartCom: TiDateComponent;\r\n    /**\r\n     * @ignore\r\n     * 日期范围结束日期\r\n     */\r\n    @ViewChild('dateRangeEnd', { static: false }) dateRangeEndCom: TiDateComponent;\r\n    /**\r\n     * @ignore\r\n     * 搜索输入框\r\n     */\r\n    @ViewChild('searchInput', { static: false }) searchInputRf: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * settings 设置图标 用于drop 设置dominatorElem\r\n     */\r\n    @ViewChild('settings', { static: false }) settingsCom: TpIconComponent;\r\n    /**\r\n     * @ignore\r\n     * 右侧图标（help、setting、search）\r\n     */\r\n    @ViewChildren('rightIcon') rightIconsRef: QueryList<TpIconComponent>;\r\n    /**\r\n     * @ignore\r\n     * 分割符号，默认是中文冒号\r\n     */\r\n    public tagSeperator: string = '：';\r\n    /**\r\n     * @ignore\r\n     * 有选中标签后的placeholder\r\n     */\r\n    public inputPlaceholder: string = TiLocale.getLocaleWords().tpSearchbox.addPlaceholder;\r\n    /**\r\n     * @ignore\r\n     * 属性选项\r\n     */\r\n    public propDropOptions: Array<any> = [];\r\n    /**\r\n     * @ignore\r\n     * 值选项\r\n     */\r\n    public valueDropOptions: Array<any> = [];\r\n    /**\r\n     * @ignore\r\n     * 输入框的值\r\n     */\r\n    public inputValue: string = '';\r\n    /**\r\n     * @ignore\r\n     * 选中item, 编辑和选择中都会存在\r\n     */\r\n    public selectedItem: TpSearchboxItem;\r\n    /**\r\n     * @ignore\r\n     * map类型标签,第一级选中的选项\r\n     */\r\n    public selectedOption: TpSearchboxOption;\r\n    /**\r\n     * @ignore\r\n     * 正在编辑tag\r\n     */\r\n    public editingTag: TpSearchboxTag;\r\n\r\n    /**\r\n     * @ignore\r\n     * 值面板dominator\r\n     */\r\n    public valueDropDominator: HTMLElement;\r\n    /**\r\n     * @ignore\r\n     * 值面板dominator\r\n     */\r\n    public settingsDropDominatorElem: HTMLElement;\r\n    /**\r\n     * @ignore\r\n     * 帮助图标提示内容\r\n     */\r\n    public helpTipContent: string = TiLocale.getLocaleWords().tpSearchbox.help;\r\n    /**\r\n     * @ignore\r\n     * 清空图标提示内容\r\n     */\r\n    public clearTipContent: string = TiLocale.getLocaleWords().tpSearchbox.clearAll;\r\n    /**\r\n     * @ignore\r\n     * 设置默认搜索项图标提示内容\r\n     */\r\n    public settingTipContent: string = TiLocale.getLocaleWords().tpSearchbox.switchText;\r\n    /**\r\n     * @ignore\r\n     * 单选值面板选中项\r\n     */\r\n    public propDropSelected: TpSearchboxOption;\r\n    /**\r\n     * @ignore\r\n     * 单选值面板选中项\r\n     */\r\n    public valueDropSelected: TpSearchboxOption;\r\n    /**\r\n     * @ignore\r\n     * 多选值面板选中项\r\n     */\r\n    public valueDropSelecteds: Array<TpSearchboxOption> = [];\r\n    /**\r\n     * @ignore\r\n     * 设置defaultField面板选中项\r\n     */\r\n    public settingsDropSelected: TpSearchboxOption;\r\n    /**\r\n     * @ignore\r\n     * 设置defaultField面板选项\r\n     */\r\n    public settingDropOptions: Array<TpSearchboxOption> = [];\r\n\r\n    /**\r\n     * @ignore\r\n     * drop 面板到触发元素的距离，编辑标签时，距离是6px,所以使用变量\r\n     */\r\n    public dominatorSpace: string = '7px';\r\n    /**\r\n     * 记录默认选中项旧值，用于判断两次选中是否是同一个值。如果是，则不触发defaultFieldChange事件。\r\n     */\r\n    private oldDefaultField: string = '';\r\n\r\n    public dominatorPlaceholder: string = '';\r\n\r\n    // 存储一致需要聚焦的元素\r\n    private alwaysFocusableElems: Array<any> = [];\r\n    // 范围tag 使用的特殊字符串'-'\r\n    private rangeLine: string = '-';\r\n    // 范围tag 使用的特殊字符串'≥'\r\n    private rangeLarge: string = '≥';\r\n    // 范围tag 使用的特殊字符串'≤'\r\n    private rangeLess: string = '≤';\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-parameter-properties\r\n    constructor(hostRef: ElementRef, render: Renderer2, private changeDetectorRef: ChangeDetectorRef) {\r\n        super(hostRef, render);\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.init();\r\n        // 非中文场景下，标签分割符号是英文冒号加空格。\r\n        if (TiLocale.getLocaleWords().tiLocaleKey !== 'zh-CN') {\r\n            this.tagSeperator = ': ';\r\n        }\r\n        this.oldDefaultField = this.defaultField;\r\n        this.setPlaceholder(this.model);\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        if (changes['items'] && this.items && !changes['items'].firstChange) {\r\n            this.init();\r\n        }\r\n\r\n        if (changes['showSettings'] && this.showSettings) {\r\n            // 初始化设置按钮下拉面板中的选项。\r\n            this.initSettingDropOptions();\r\n        } else if (changes['showSettings'] && !this.showSettings) {\r\n            this.settingsDropDominatorElem = null;\r\n        }\r\n\r\n        if (changes['emptyPlaceholder'] && !changes['emptyPlaceholder'].firstChange && this.emptyPlaceholder) {\r\n            this.setPlaceholder(this.model);\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked (): void {\r\n        if (this.settingsCom && !this.settingsDropDominatorElem) {\r\n            // 根据设置按钮dom，来设置下拉面板的宽度\r\n            this.settingsDropDominatorElem = this.settingsCom.nativeElement;\r\n            // ngAfterViewChecked是视图已经变化检测结束的钩子函数，如果此时再去改变视图上的接口会有报错.\r\n            // 报错信息：(ExpressionChangedAfterItHasBeenCheckedError) 所以需要强制执行一次变化检测。\r\n            this.changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngAfterViewInit(): void {\r\n        super.ngAfterViewInit();\r\n        // 值面板可能对齐输入框，也可能对齐标签\r\n        this.valueDropDominator = this.searchInputRf.nativeElement;\r\n        if (this.showSettings) {\r\n            this.settingsDropDominatorElem = this.settingsCom.nativeElement;\r\n        }\r\n\r\n        this.alwaysFocusableElems.push(this.dominatorCom.nativeElement, this.searchInputRf.nativeElement,\r\n            );\r\n        this.rightIconsRef.forEach((item: TpIconComponent): void => {\r\n            this.alwaysFocusableElems.push(item.nativeElement);\r\n        });\r\n        this.setFocusableElems(this.alwaysFocusableElems);\r\n\r\n        //  因为改变了valueDropDominator ，所以强制刷新一次\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 设置默认field字段面板选中项\r\n     */\r\n    public onSettingDropSelect(option: TpSearchboxOption): void {\r\n        this.defaultField = option.field;\r\n        this.settingsDropCom.hide();\r\n        // 如果最新的选中项和之前不一样，才会触发defaultFieldChange事件。\r\n        if (this.oldDefaultField !== this.defaultField) {\r\n            this.oldDefaultField = this.defaultField;\r\n            this.defaultFieldChange.emit(option);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * tag发生改变（删减、新增）时触发。\r\n     * TODO: 为什么只有在tag删除的时候，才会触发该函数\r\n     */\r\n    public onDominatorModelChange(): void {\r\n        this.setPlaceholder(this.model);\r\n    }\r\n\r\n    private setPlaceholder(model: any): void {\r\n        this.dominatorPlaceholder = model?.length > 0 ? this.inputPlaceholder : this.emptyPlaceholder;\r\n    }\r\n\r\n    // 输入框处理\r\n    /**\r\n     * @ignore\r\n     * 输入点击事件\r\n     */\r\n    public onClickInput(event: Event): void {\r\n\r\n        this.valueDropDominator = this.searchInputRf.nativeElement;\r\n        // 键已经选中\r\n        if (this.selectedItem) {\r\n            // 如果没有可选项，不显示\r\n            if (!this.selectedItem.options && (!this.selectedItem.type || this.selectedItem.type === 'radio')) {\r\n                return;\r\n            }\r\n            this.setValueDropSearchResult(this.getValueDropOptions(this.selectedItem.field));\r\n            this.showValueDrop();\r\n\r\n        } else {\r\n            this.propDropSearch(this.inputValue);\r\n        }\r\n    }\r\n    // 属性面板根据输入框中的值搜索选项\r\n    private propDropSearch(value: string): void {\r\n        const searchResult: Array<TpSearchboxOption> = this.searchOptions(value, this.propDropOptions);\r\n        if (searchResult.length > 0) {\r\n            this.propDropCom.searchResult = searchResult;\r\n            this.propDropCom.show();\r\n        } else {\r\n            this.propDropCom.hide();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 输入框按键按下处理Backspace和Enter键\r\n     */\r\n    public onKeydownInput(event: KeyboardEvent): void {\r\n        // tslint:disable-next-line: deprecation\r\n        switch (event.keyCode) {\r\n            case TiKeymap.KEY_BACKSPACE:\r\n                this.responseBackspace();\r\n                this.setPlaceholder(this.model);\r\n                break;\r\n            case TiKeymap.KEY_ENTER:\r\n                this.responseEnter(event);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 输入框值变化处理，\r\n     * 输入值时，如果展开的是属性面板，搜索属性，如果是值面板，单选搜索选项，多选匹配选项\r\n     */\r\n    public onInputValueChange(value: string): void {\r\n        // 值面板\r\n        if (this.selectedItem) {\r\n            // 有选中项后，输入值之间通知出去，用于值选项数据过多，自己处理搜索。\r\n            this.inputValueChange.emit({\r\n                value,\r\n                item: this.selectedItem\r\n            });\r\n            // 单选搜索\r\n            if (this.selectedItem.type === 'radio') {\r\n                this.dealRadioItemSearch(value);\r\n            // 多选只匹配\r\n            } else if (this.selectedItem.type === 'checkbox') {\r\n                this.matchCheckboxInput(value.trim());\r\n                this.showValueDrop();\r\n            }\r\n\r\n        } else { // 属性面板\r\n            //  ie11 初始化和placeholder改变会触发ngModelChange事件，所有此处屏蔽属性搜索\r\n            if (TiBrowser.isIE()) {\r\n                return;\r\n            }\r\n            this.propDropSearch(value);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 输入框失去焦点\r\n     *\r\n     */\r\n    public onBlurInput(): void {\r\n        this.valueDropCom.hide();\r\n        this.propDropCom.hide();\r\n        this.valueMultiDropCom.hide();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 输入框聚焦\r\n     */\r\n    public onFocusInput(): void {\r\n        if (this.selectedItem && this.selectedItem.type === 'radio') {\r\n            this.dealRadioItemSearch(this.inputValue);\r\n        }\r\n    }\r\n\r\n    // 整体\r\n    /**\r\n     * @ignore\r\n     * 整体失去焦点\r\n     */\r\n    public onBlur(): void {\r\n        this.hideAllDrops();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 删除单个tag\r\n     */\r\n    public onDelete(): void {\r\n        // 删除一项后，输入框位置改变，防止drop对齐问题，隐藏所有drop\r\n        this.hideAllDrops();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 整体点击\r\n     */\r\n    public onClick(event: Event): void {\r\n        this.searchInputRf.nativeElement.focus();\r\n        this.onClickInput(event);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 清除所有tag\r\n     */\r\n    public onClickClear(event: Event): void {\r\n        event.stopPropagation(); // 防止事件冒泡到dominator后，dominator聚焦之后面板打开。\r\n        // 有选中tag才清空，防止多触发ngmodelchange\r\n        if (this.model.length > 0) {\r\n            this.model = [];\r\n        }\r\n        this.selectedItem = undefined;\r\n        this.inputValue = '';\r\n        this.clear.emit();\r\n        this.setPlaceholder(this.model);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击搜索\r\n     */\r\n    public onClickSearch(event: Event): void {\r\n        event.stopPropagation();\r\n\r\n        // 先把输入的内容生成tag\r\n        if (this.inputValue) {\r\n            this.generateTagByInputValue();\r\n        }\r\n\r\n        this.hideAllDrops();\r\n\r\n        const filter: TpSearchboxFilter = this.getFilter();\r\n        this.search.emit(filter);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击help图标\r\n     */\r\n    public onClickHelp(event: Event): void {\r\n        event.stopPropagation();\r\n        this.help.emit(event);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击设置默认搜索项图标\r\n     */\r\n    public onClickSetting(event: Event): void {\r\n        event.stopPropagation();\r\n        this.settingsDropCom.show();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 是否有label 类型，用于label 类型的特殊处理\r\n     */\r\n    public hasLabeltag(): boolean {\r\n\r\n        const index: number = this.items.findIndex((item: TpSearchboxItem): boolean => {\r\n            return item.type === 'noValue';\r\n        });\r\n\r\n        return index > -1;\r\n    }\r\n\r\n    // 两个tag点击切换，事件顺序 mousedown => blur => focus => click\r\n    // tag-value 点击事件 因为要设置焦点，所以要绑定在mousedown上\r\n    /**\r\n     * @ignore\r\n     * 是否有label 类型，用于label 类型的特殊处理\r\n     */\r\n    public onMousedownTagValue(event: Event): void {\r\n        this.setFocusableElems(this.alwaysFocusableElems.concat(event.target as HTMLElement));\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClickTagValue(event: Event, tag: TpSearchboxTag): void {\r\n        if (!this.tagEditable(tag.type)) {\r\n            return;\r\n        }\r\n        event.stopPropagation();\r\n        this.valueDropDominator = event.target as HTMLElement;\r\n        this.editingTag = tag;\r\n\r\n        this.hideValueDrops();\r\n\r\n        this.selectedItem = this.items.find((item: TpSearchboxItem): boolean => {\r\n            return item.field === tag.field;\r\n        });\r\n\r\n        this.setValueDropSearchResult(this.getValueDropOptions(tag.field));\r\n        // 多选需要匹配已经选中的选项\r\n        if (this.selectedItem.type === 'checkbox') {\r\n            this.setValueDropSelecteds();\r\n        }\r\n\r\n        // 展开面板前更新了面板的参数，所以需要强制变检一次\r\n        this.changeDetectorRef.detectChanges();\r\n\r\n        // 如果没有可选项，不显示\r\n        if (!this.selectedItem.options && (!this.selectedItem.type || this.selectedItem.type === 'radio')) {\r\n            return;\r\n        }\r\n        // 在输入框选择时，再点击已选中标签编辑，面板无法展开，\r\n        // 原因当前mousedown事件回调函数在 输入框blur事件之前，先打开后关闭，\r\n        // 所以这里要添加延迟\r\n        setTimeout((): void => {\r\n            this.showValueDrop();\r\n        }, 0);\r\n\r\n    }\r\n    /**\r\n     * @ignore\r\n     * tag值聚焦\r\n     */\r\n    public onFocusTagValue(event: Event, tag: TpSearchboxTag): void {\r\n        event.preventDefault();\r\n        const elem: HTMLElement = event.target as HTMLElement;\r\n        this.valueDropDominator = elem;\r\n        // 可编辑类型才选中\r\n        if (tag.type === 'radio' || tag.type === 'checkbox') {\r\n            this.selectHTMLElementText(elem);\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * tag值失去焦点\r\n     */\r\n    public onBlurTagValue(): void {\r\n        // 非编辑状态，保持面板的dominator在input上\r\n        this.valueDropDominator = this.searchInputRf.nativeElement;\r\n        this.propDropCom.hide();\r\n        this.valueDropCom.hide();\r\n        this.valueMultiDropCom.hide();\r\n        if (this.selectedItem && (this.selectedItem.type === 'radio' || this.selectedItem.type === 'checkbox' || this.selectedItem.type === 'map')) {\r\n            this.selectedItem = undefined;\r\n            this.editingTag = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * tag 编辑输入框keydown事件，处理编辑状态下 enter 键操作\r\n     */\r\n    public onKeydownTagInput(event: KeyboardEvent): void {\r\n        // tslint:disable-next-line: deprecation\r\n        if (event.keyCode === TiKeymap.KEY_ENTER) {\r\n            const tagValue: string = (event.target as HTMLElement).textContent;\r\n            if (this.isTagExist(this.selectedItem, tagValue)) {\r\n                return;\r\n            }\r\n            this.generateTag(this.selectedItem, tagValue);\r\n            this.emitChange();\r\n            this.selectedItem = undefined;\r\n            this.editingTag = undefined;\r\n            this.hideValueDrops();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 标签编辑时只有多选需要处理匹配\r\n     */\r\n    public onTagInput(event: Event): void {\r\n        if (this.selectedItem.type === 'checkbox') {\r\n            const value: string = (event.target as HTMLElement).textContent.trim();\r\n            this.matchCheckboxInput(value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 是否可以编辑\r\n     */\r\n    public tagEditable(type: TpSearchboxTagType): boolean {\r\n        // map 类型标签、日期范围和数字范围不能编辑\r\n        return type === 'radio' || type === 'checkbox';\r\n    }\r\n    /**\r\n     * @ignore\r\n     *  属性面板选中回调\r\n     */\r\n    public onPorpDropSelect(option: TpSearchboxOption): void {\r\n        // label类型tag 只在属性面板中选择一次\r\n        if (option.type === 'noValue') {\r\n            this.generateTagByPropDrop(option);\r\n            this.propDropCom.hide();\r\n\r\n            return;\r\n        }\r\n\r\n        this.selectedItem = this.items.find((item: TpSearchboxItem): boolean => {\r\n            return item.field === option.field;\r\n        });\r\n        // 有beforeOpen懒加载，面板展开交给用户\r\n        if (this.beforeOpen.observers.length > 0) {\r\n            this.beforeOpen.emit(this);\r\n\r\n            return;\r\n        }\r\n\r\n        this.dominatorPlaceholder = option?.placeholder || (this.model.length > 0 ? this.inputPlaceholder : this.emptyPlaceholder);\r\n\r\n        // 如果没有可选项，则不显示值面板。\r\n        if (!this.selectedItem || !this.selectedItem.options && (!this.selectedItem.type || this.selectedItem.type === 'radio')) {\r\n            // 先触发动态变化检测，再清除选中属性值（属性面板不允许有选中状态）\r\n            this.changeDetectorRef.detectChanges();\r\n            this.clearPropDropSelected();\r\n\r\n            return;\r\n        }\r\n\r\n        const options: Array<TpSearchboxOption> = this.getValueDropOptions(option.field);\r\n        this.valueDropOptions = options;\r\n        this.setValueDropSearchResult(options);\r\n\r\n        if (this.selectedItem.type === 'checkbox') {\r\n            this.setValueDropSelecteds();\r\n        }\r\n\r\n         // 面板展开前清空输入内容\r\n         this.inputValue = '';\r\n\r\n        // 展开面板前更新了面板的参数，所以需要强制变检一次\r\n        this.changeDetectorRef.detectChanges();\r\n        this.showValueDrop();\r\n    }\r\n\r\n    /**\r\n     * 暴露外面的打开值面板接口\r\n     */\r\n    public open(options: Array<TpSearchboxOption>): void {\r\n        this.setCustomValueDropSearchResult(options);\r\n        this.showValueDrop();\r\n    }\r\n    /**\r\n     * 获取但前选中数据项\r\n     */\r\n    public getSelectedItem(): TpSearchboxItem {\r\n        return this.selectedItem;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 单选值面板选中，(包括map类型)\r\n     */\r\n    public onValueDropSelect(selected: TpSearchboxOption): void {\r\n        // 复选时，点击确定按钮结束选择\r\n        if (!this.selectedItem || !selected ) {\r\n            return;\r\n        }\r\n        // 处理map类型，map类型需要选择两次\r\n        if (this.selectedItem.type === 'map') {\r\n            this.mapItemSelect(selected);\r\n            return;\r\n        }\r\n\r\n        this.generateTagByValuePanel();\r\n        this.clearState();\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 多选底部确定按钮\r\n     */\r\n    public onClickValueDropOK(event: Event): void {\r\n        //  阻止按钮获取焦点，输入框失去焦点\r\n        event.preventDefault();\r\n        this.generateTagByValuePanel();\r\n        this.clearState();\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 多选底部取消按钮\r\n     */\r\n    public onClickValueDropCancel(): void {\r\n        this.valueMultiDropCom.hide();\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 数字范围\r\n     */\r\n    public onClickCustomDropOK(): void {\r\n\r\n        if (!this.selectedItem) {\r\n            return;\r\n        }\r\n        if (this.selectedItem.type === 'numRange') {\r\n            this.generateNumRangetag();\r\n        } else if (this.selectedItem.type === 'dateRange') {\r\n            this.generateDateRangeTag();\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 自定义面板取消按钮回调\r\n     */\r\n    public onClickCustomDropCancel(): void {\r\n        this.hideCustomDrop();\r\n        if (this.editingTag) {\r\n            this.selectedItem = undefined;\r\n            this.editingTag = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * numRange 和 dateRange 面板的宽度需要固定值\r\n     */\r\n    public customDropWidth(): string {\r\n        if (!this.selectedItem) {\r\n            return;\r\n        } else if (this.selectedItem.type === 'numRange') {\r\n            return '200px';\r\n        } else if (this.selectedItem.type === 'dateRange') {\r\n            // 根据最宽小语种pt_BR词条\r\n            return '300px';\r\n        }\r\n    }\r\n\r\n    private init(): void {\r\n        this.initItems();\r\n        this.initPropDropOptions();\r\n    }\r\n    private initItems(): void {\r\n        // 初始化 allValues/ emptyValue\r\n        this.items.forEach((item: TpSearchboxItem): void => {\r\n            // items 中不写type, 默认单选'radio'\r\n            if (Util.isUndefined(item.type)) {\r\n                item.type = 'radio';\r\n            } else if (item.type === 'map' && Array.isArray(item.options)) {\r\n                item.options.forEach((option: TpSearchboxOption): void => {\r\n                    // 所有值项\r\n                    if (option.allValues !== false && Array.isArray(option.options)) {\r\n                        const allValues: string = TiLocale.getLocaleWords().tpSearchbox.allValues;\r\n                        const allValueOption: TpSearchboxOption = option.options.find((currentOption: TpSearchboxOption): boolean => {\r\n                            return currentOption.label === allValues;\r\n                        });\r\n\r\n                        if (!allValueOption) {\r\n                            option.options.unshift({\r\n                                label: allValues\r\n                            });\r\n                        }\r\n                    }\r\n                    // 空值项 emptyValue\r\n                    if (option.emptyValue !== false && Array.isArray(option.options)) {\r\n                        const emptyValue: string = TiLocale.getLocaleWords().tpSearchbox.emptyValue;\r\n                        const emptyValueOption: TpSearchboxOption = option.options.find((currentOption: TpSearchboxOption): boolean => {\r\n                            return currentOption.label === emptyValue;\r\n                        });\r\n                        if (!emptyValueOption) {\r\n                            option.options.unshift({\r\n                                label: emptyValue\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n                // 数字范围\r\n            } else if (item.type === 'numRange') {\r\n\r\n                const start: FormControl = new FormControl(item.start,\r\n                    [TiValidators.rangeValue(item.min as number, item.max as number),\r\n                    this.lessMax('end')]);\r\n                const end: FormControl = new FormControl(item.end,\r\n                    [TiValidators.rangeValue(item.min as number, item.max as number),\r\n                    this.moreMin('start')]);\r\n                item.formControls = new FormGroup({\r\n                    start,\r\n                    end\r\n                });\r\n                // 开始值的校验状态改变后，更新一下结束值的校验状态\r\n                start.statusChanges.subscribe((status: string): void => {\r\n                    if (status === TpSearchboxComponent.VALID && end.status === TpSearchboxComponent.INVALID) {\r\n                        end.updateValueAndValidity({\r\n                            onlySelf: true,\r\n                            emitEvent: false\r\n                        });\r\n                    }\r\n                });\r\n\r\n                // 结束值的校验状态改变后，更新一下开始值的校验状态\r\n                end.statusChanges.subscribe((status: string): void => {\r\n                    if (status === TpSearchboxComponent.VALID && start.status === TpSearchboxComponent.INVALID) {\r\n                        start.updateValueAndValidity({\r\n                            onlySelf: true,\r\n                            emitEvent: false\r\n                        });\r\n                    }\r\n                });\r\n                // 日期范围\r\n            } else if (item.type === 'dateRange') {\r\n                // tslint:disable-next-line: no-null-keyword\r\n                const startDate: Date = this.isValidDate(new Date(item.start)) ? new Date(item.start) : null;\r\n                // tslint:disable-next-line: no-null-keyword\r\n                const endDate: Date = this.isValidDate(new Date(item.end)) ? new Date(item.end) : null;\r\n                const start: FormControl = new FormControl(startDate);\r\n                const end: FormControl = new FormControl(endDate);\r\n                item.formControls = new FormGroup({\r\n                    start,\r\n                    end\r\n                });\r\n\r\n                // 开始日期的max是结束日期的选中值，如果结束日期没有选择，使用item中设置的max\r\n                item.startMax = endDate ? endDate : item.max;\r\n                // 结束日期的min是开始日期的选中值，如果开始日期没有选择，使用item中设置的min\r\n                item.endMin = startDate ? startDate : item.min;\r\n                start.valueChanges.subscribe((value: Date): void => {\r\n                    // tslint:disable-next-line: prefer-conditional-expression\r\n                    if (this.isValidDate(value)) {\r\n                        item.endMin = value;\r\n                    } else if (this.isValidDate(item.min as Date)) {\r\n                        item.endMin = item.min;\r\n                    } else {\r\n                        // 没有设置 min,开始日期选中又清除后，需要设置一个min的缺省值\r\n                        item.endMin = undefined;\r\n                    }\r\n                });\r\n                end.valueChanges.subscribe((value: Date): void => {\r\n                    // tslint:disable-next-line: prefer-conditional-expression\r\n                    if (this.isValidDate(value)) {\r\n                        item.startMax = value;\r\n                    } else if (this.isValidDate(item.max as Date)) {\r\n                        item.startMax = item.max;\r\n                    } else {\r\n                        // 没有设置 max, 结束日期选中又清除后，需要设置一个max的缺省值\r\n                        item.startMax = undefined;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    // Invalid Date判断\r\n    // tslint:disable-next-line: prefer-function-over-method\r\n    private isValidDate(date: Date | string): boolean {\r\n        return Object.prototype.toString.call(date) === '[object Date]' && String(date) !== 'Invalid Date';\r\n    }\r\n\r\n    // 自定义校验规则小于最大值\r\n    // 静态方法返回箭头函数生成环境打包错误，所以使用\r\n    // tslint:disable-next-line: prefer-function-over-method\r\n    private lessMax(field: string): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            if (control.parent && control.parent.get(field)) {\r\n                const end: number = control.parent.get(field).value;\r\n                // 开始和结束值都存在时，判断开始可结束值的大小\r\n                if (end && control.value && control.value > end) {\r\n                    return {\r\n                        minValue: {\r\n                            actualValue: control.value,\r\n                            tiErrorMessage: TiLocale.getLocaleWords().tpSearchbox.rangeMinErr\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        };\r\n    }\r\n    // 自定义校验规则，大于最小值\r\n    // tslint:disable-next-line: prefer-function-over-method\r\n    private moreMin(field: string): ValidatorFn {\r\n        return (control: AbstractControl): ValidationErrors | null => {\r\n            if (control.parent && control.parent.get(field)) {\r\n                const start: number = control.parent.get(field).value;\r\n                // 开始和结束值都存在时，判断开始可结束值的大小\r\n                if (start && control.value && control.value < start) {\r\n                    return {\r\n                        minValue: {\r\n                            actualValue: control.value,\r\n                            tiErrorMessage: TiLocale.getLocaleWords().tpSearchbox.rangeMaxErr\r\n                        }\r\n                    };\r\n                }\r\n            }\r\n\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        };\r\n    }\r\n\r\n    // 初始化属性面板选项\r\n    private initPropDropOptions(): void {\r\n        const options: Array<TpSearchboxOption> = [];\r\n        this.items.forEach((item: TpSearchboxItem): void => {\r\n            const option: TpSearchboxOption = {\r\n                field: item.field,\r\n                label: item.label,\r\n                type: item.type,\r\n                placeholder: item?.placeholder\r\n            };\r\n            // label\r\n            if (item.type === 'noValue') {\r\n                option['children'] = item.children.map((childOption: TpSearchboxOption): TpSearchboxOption => {\r\n                    childOption.type = 'noValue';\r\n\r\n                    return childOption;\r\n                });\r\n            }\r\n            options.push(option);\r\n        });\r\n\r\n        this.propDropOptions = options;\r\n    }\r\n    private initSettingDropOptions(): void {\r\n        // 只有noValue类型不能设置为默认搜索项\r\n        const options: Array<TpSearchboxOption> = this.items.filter((item: TpSearchboxItem): boolean => {\r\n            return item.type !== 'noValue';\r\n        })\r\n            .map((item: TpSearchboxItem): TpSearchboxOption => {\r\n                const option: TpSearchboxOption = {\r\n                    label: item.label,\r\n                    field: item.field\r\n                };\r\n                // 如果设置了defaultField，面板中高亮显示\r\n                if (this.defaultField === option.field) {\r\n                    this.settingsDropSelected = option;\r\n                }\r\n\r\n                return option;\r\n            });\r\n        // 使用分组来显示面板标题\r\n        this.settingDropOptions = [{\r\n            label: this.settingTipContent,\r\n            children: options\r\n        }];\r\n    }\r\n\r\n    private matchCheckboxInput(value: string): void {\r\n        const valueArray: Array<string> = value.split('|')\r\n            .map((span: string): string => {\r\n                return span.trim();\r\n            });\r\n        this.valueDropSelecteds = [];\r\n        this.selectedItem.options.forEach((option: TpSearchboxOption): void => {\r\n            if (valueArray.includes(option.label)) {\r\n                this.valueDropSelecteds.push(option);\r\n            }\r\n        });\r\n    }\r\n\r\n    private dealRadioItemSearch(value: string): void {\r\n        const searchResult: Array<TpSearchboxOption> = this.searchOptions(value, this.valueDropOptions);\r\n        if (searchResult.length > 0) {\r\n            this.setValueDropSearchResult(searchResult);\r\n            this.showValueDrop();\r\n        } else {\r\n            this.valueDropCom.hide();\r\n        }\r\n    }\r\n\r\n    // 设置值面板的选项\r\n    private setValueDropSearchResult(options: Array<TpSearchboxOption>): void {\r\n        if (this.selectedItem.type === 'checkbox') {\r\n            this.valueMultiDropCom.searchResult = options;\r\n        } else if (this.selectedItem.type === 'radio' || this.selectedItem.type === 'map') {\r\n            this.valueDropCom.searchResult = options;\r\n        }\r\n    }\r\n    // 懒加载时，设置值面板选项\r\n    private setCustomValueDropSearchResult(options: Array<TpSearchboxOption>): void {\r\n        if (this.selectedItem.type === 'checkbox') {\r\n            this.selectedItem.options = options;\r\n            this.valueMultiDropCom.searchResult = options;\r\n        } else if (this.selectedItem.type === 'radio') {\r\n            this.selectedItem.options = options;\r\n            this.valueDropCom.searchResult = options;\r\n        } else if (this.selectedItem.type === 'map') {\r\n            this.selectedItem.options = options;\r\n            this.valueDropCom.searchResult = [{\r\n                label: TiLocale.getLocaleWords().tpSearchbox.tagKey,\r\n                children: options\r\n            }];\r\n\r\n        }\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    // 根据输入内容生成tag\r\n    private generateTagByInputValue(): void {\r\n        // 有选中项且可编辑\r\n        if (this.selectedItem) {\r\n            if (this.tagEditable(this.selectedItem.type) || this.selectedItem.type === 'map') {\r\n                if (this.isTagExist(this.selectedItem, this.inputValue)) {\r\n                    return;\r\n                }\r\n                this.generateTag(this.selectedItem, this.inputValue);\r\n                this.emitChange();\r\n                this.selectedItem = undefined;\r\n                this.inputValue = '';\r\n                this.hideValueDrops();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // 没有选中项，按默认值处理\r\n        if (!this.defaultField || this.inputValue === '') {\r\n            return;\r\n        }\r\n\r\n        // 属性面板展开，会触发dropsearch的快捷键，所以先关闭\r\n        this.propDropCom.hide();\r\n        // 输入字符串之间可能使用中英文','分割\r\n        const values: Array<string> = this.inputValue.split(/[，,]/)\r\n            .map((value: string) => {\r\n                return value.trim();\r\n            })\r\n            .filter((value: string) => {\r\n                return value !== '';\r\n            });\r\n        if (values.length === 0) {\r\n            return;\r\n        }\r\n        // 因为要多次生成tag, 会多次更新model,\r\n        // 用此变量标记在最后一次生成更新model后发射ngModelChange事件\r\n        let modelChanged: boolean = false;\r\n        // 只支持每次输入都是同一类型的，所以多个值用第一个匹配，找到匹配项\r\n        const matchedItem: TpSearchboxItem = this.items.find((item: TpSearchboxItem): boolean => {\r\n            return item.regexp && item.regexp.test(values[0]);\r\n        });\r\n\r\n        if (matchedItem) {\r\n            values.forEach((value: string) => {\r\n                if (!this.isTagExist(matchedItem, value)) {\r\n                    modelChanged = true;\r\n                    this.generateTag(matchedItem, value);\r\n                }\r\n            });\r\n        } else if (this.defaultField) {\r\n            const defaultItem = this.items.find((item: TpSearchboxItem): boolean => {\r\n                return this.defaultField === item.field;\r\n            });\r\n            // 默认项生成tag,不支持逗号分隔，所以用inputValue整体\r\n            if (!this.isTagExist(defaultItem, this.inputValue)) {\r\n                modelChanged = true;\r\n                this.generateTag(defaultItem, this.inputValue);\r\n            }\r\n        }\r\n\r\n        this.inputValue = '';\r\n        if (modelChanged) {\r\n            this.emitChange();\r\n        }\r\n    }\r\n\r\n    // 属性面板没有选中项,所以要清除处理。如果不进行重置，则会出现选中样式~\r\n    private clearPropDropSelected(): void {\r\n        this.propDropSelected = undefined;\r\n    }\r\n\r\n    private responseEnter(event: Event): void {\r\n        this.generateTagByInputValue();\r\n    }\r\n    private responseBackspace(): void {\r\n        if (this.inputValue) {\r\n            return;\r\n        }\r\n        // 处理map类型标签tag\r\n        if (this.selectedOption) {\r\n            this.selectedOption = undefined;\r\n            this.valueDropCom.hide();\r\n            const searchResult: Array<TpSearchboxOption> = this.getValueDropOptions(this.selectedItem.field);\r\n            this.setValueDropSearchResult(searchResult);\r\n\r\n            // 展开面板前更新了面板的参数，所以需要强制变检一次\r\n            this.changeDetectorRef.detectChanges();\r\n\r\n            this.showValueDrop();\r\n\r\n        } else if (this.selectedItem) {\r\n            // 处理有选中属性\r\n\r\n            this.hideValueDrops();\r\n\r\n            this.selectedItem = undefined;\r\n\r\n            // 展开面板前更新了面板的参数，所以需要强制变检一次\r\n            this.changeDetectorRef.detectChanges();\r\n            this.propDropCom.show();\r\n        } else if (this.model.length > 0) {\r\n            // 处理已经选中的标签\r\n            this.propDropCom.hide();\r\n\r\n            // 清除items 中的选中项\r\n            this.model.pop();\r\n            // change事件\r\n            this.emitChange();\r\n        }\r\n\r\n    }\r\n\r\n    // 展示值面板封装单选和多选\r\n    private showValueDrop(): void {\r\n        // 当点击选中的tag值时，dominatorSpace 需要改变，\r\n        // 5px = （22 -16）/2 +2 ; 22-tag高度，16-文字高度，2-上下两边，2-tag和组件边框之间的距离\r\n        this.dominatorSpace = this.editingTag ? '10px' : '7px';\r\n        // 展开面板前更新了面板的参数，所以需要强制变检一次\r\n        this.changeDetectorRef.detectChanges();\r\n        this.clearPropDropSelected();\r\n\r\n        switch (this.selectedItem.type) {\r\n            case 'radio':\r\n                this.valueDropCom.show();\r\n                break;\r\n            case 'map':\r\n                this.valueDropCom.show();\r\n                break;\r\n            case 'checkbox':\r\n                this.valueMultiDropCom.show();\r\n                break;\r\n            case 'numRange':\r\n                this.customDropCom.show();\r\n                this.setNumRangeDropFocusableElems();\r\n                break;\r\n            case 'dateRange':\r\n                this.customDropCom.show();\r\n                this.setDateRangeDropFocusableElems();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private hideAllDrops(): void {\r\n        this.propDropCom.hide();\r\n        this.hideValueDrops();\r\n        if (this.showSettings) {\r\n            this.settingsDropCom.hide();\r\n        }\r\n    }\r\n    private hideValueDrops(): void {\r\n        this.valueDropCom.hide();\r\n        this.valueMultiDropCom.hide();\r\n        this.customDropCom.hide();\r\n    }\r\n\r\n    private hideCustomDrop(): void {\r\n        // 自定义面板隐藏前，让dominator重新聚焦，防止整体失焦\r\n        this.dominatorCom.focus();\r\n        this.customDropCom.hide();\r\n    }\r\n    // 根据关键词(忽略大小写)过滤options\r\n    // tslint:disable-next-line: prefer-function-over-method\r\n    private searchOptions(keyword: string, options: Array<TpSearchboxOption>): Array<TpSearchboxOption> {\r\n        const keywordUpper: string = keyword.toLocaleUpperCase();\r\n\r\n        return options.filter((option: TpSearchboxOption): boolean => {\r\n            const labelUpper: string = option.label.toLocaleUpperCase();\r\n\r\n            return labelUpper.indexOf(keywordUpper) !== -1;\r\n        });\r\n    }\r\n\r\n    // map 类型\r\n    private mapItemSelect(option: TpSearchboxOption): void {\r\n        if (this.selectedOption) {\r\n            const field: string = this.selectedItem.field;\r\n            const label: string = this.selectedItem.label;\r\n            const value: string = `${this.selectedOption.label}=${option.label}`;\r\n\r\n            const newTag: TpSearchboxTag = {\r\n                field,\r\n                label,\r\n                value,\r\n                type: 'map'\r\n            };\r\n\r\n            if (!this.model) {\r\n                this.model = [newTag];\r\n\r\n                return;\r\n            }\r\n\r\n            const index: number = this.model.findIndex((tag: TpSearchboxTag): boolean => {\r\n                return tag.field === field && tag.value === value;\r\n            });\r\n\r\n            // 标签编辑时，是替换\r\n            if (this.editingTag) {\r\n                this.editingTag = newTag;\r\n                this.model.splice(index, 1, newTag);\r\n            } else if (index === -1) {\r\n                this.model.push(newTag);\r\n            }\r\n            this.emitChange();\r\n            this.selectedItem = undefined;\r\n            this.selectedOption = undefined;\r\n            this.editingTag = undefined;\r\n\r\n            this.valueDropCom.hide();\r\n        } else {\r\n            this.selectedOption = option;\r\n\r\n            if (Array.isArray(this.selectedOption.options)) {\r\n                const children: Array<TpSearchboxOption> = this.selectedOption.options;\r\n                this.valueDropCom.searchResult = [{\r\n                    label: TiLocale.getLocaleWords().tpSearchbox.tagValue,\r\n                    children\r\n                }];\r\n\r\n            } else {\r\n                this.valueDropCom.searchResult = [];\r\n            }\r\n            this.changeDetectorRef.detectChanges();\r\n            // 点击选项后默认会关闭面板，所以延迟后再次打开\r\n            setTimeout((): void => {\r\n                this.showValueDrop();\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    private setValueDropSelecteds(): void {\r\n        const selectedTag: TpSearchboxTag = this.model.find((tag: TpSearchboxTag): boolean => {\r\n            return this.selectedItem.field === tag.field;\r\n        });\r\n        if (selectedTag) {\r\n            this.matchCheckboxInput(selectedTag.value);\r\n        }\r\n    }\r\n    // 清理临时状态\r\n    private clearState(): void {\r\n        this.editingTag = undefined;\r\n        this.selectedItem = undefined;\r\n        this.inputValue = '';\r\n        this.valueDropSelecteds = [];\r\n        this.valueDropSelected = undefined;\r\n        this.hideValueDrops();\r\n    }\r\n\r\n    private generateNumRangetag(): void {\r\n        const values: any = this.selectedItem.formControls.value;\r\n        if (this.selectedItem.formControls.status === TpSearchboxComponent.INVALID || (!values.start && !values.end)) {\r\n            return;\r\n        }\r\n        let tagValue: string;\r\n        if (values.start && values.end) {\r\n            tagValue = `${values.start}${this.rangeLine}${values.end}`;\r\n        } else if (values.start) {\r\n            tagValue = this.rangeLarge + values.start;\r\n        } else if (values.end) {\r\n            tagValue = this.rangeLess + values.end;\r\n        }\r\n        // 数字范围可能有单位\r\n        let label: string = this.selectedItem.label;\r\n        if (this.selectedItem.unit) {\r\n            label = `${label}(${this.selectedItem.unit})`;\r\n        }\r\n        const newTag: TpSearchboxTag = {\r\n            field: this.selectedItem.field,\r\n            label,\r\n            type: 'numRange',\r\n            start: values.start,\r\n            end: values.end,\r\n            value: tagValue\r\n        };\r\n\r\n        if (!this.model) {\r\n            this.model = [newTag];\r\n\r\n            return;\r\n        }\r\n\r\n        const tagIndex: number = this.model.findIndex((tag: TpSearchboxTag): boolean => {\r\n            return tag.field === this.selectedItem.field;\r\n        });\r\n\r\n        if (tagIndex === -1) {\r\n            this.model.push(newTag);\r\n        } else {\r\n            this.model.splice(tagIndex, 1, newTag);\r\n        }\r\n        this.afterGenerateTag();\r\n    }\r\n\r\n    private generateDateRangeTag(): void {\r\n        const values: any = this.selectedItem.formControls.value;\r\n        if (!values.start && !values.end) {\r\n            return;\r\n        }\r\n        let tagValue: string = '';\r\n        let start: string;\r\n        let end: string;\r\n        if (values.start && values.end) {\r\n            tagValue = `${this.formatDate2String(values.start as Date)}${this.rangeLine}${this.formatDate2String(values.end as Date)}`;\r\n            start = values.start.toISOString();\r\n            end = values.end.toISOString();\r\n        } else if (values.start) {\r\n            tagValue = this.rangeLarge + this.formatDate2String(values.start as Date);\r\n            start = values.start.toISOString();\r\n        } else if (values.end) {\r\n            tagValue = this.rangeLess + this.formatDate2String(values.end as Date);\r\n            end = values.end.toISOString();\r\n        }\r\n        const newTag: TpSearchboxTag = {\r\n            field: this.selectedItem.field,\r\n            label: this.selectedItem.label,\r\n            start,\r\n            end,\r\n            type: 'dateRange',\r\n            value: tagValue\r\n        };\r\n\r\n        if (!this.model) {\r\n            this.model = [newTag];\r\n\r\n            return;\r\n        }\r\n\r\n        const tagIndex: number = this.model.findIndex((curTag: TpSearchboxTag): boolean => {\r\n            return curTag.field === this.selectedItem.field;\r\n        });\r\n\r\n        if (tagIndex === -1) {\r\n            this.model.push(newTag);\r\n        } else {\r\n            this.model.splice(tagIndex, 1, newTag);\r\n        }\r\n        this.afterGenerateTag();\r\n    }\r\n\r\n    private afterGenerateTag(): void {\r\n        this.emitChange();\r\n        this.hideCustomDrop();\r\n        this.selectedItem = undefined;\r\n    }\r\n\r\n    private setNumRangeDropFocusableElems(): void {\r\n        const inputs: NodeList = this.customDropCom.nativeElement.querySelectorAll('[tiText]');\r\n        const inputElemsArray: Array<any> = [].slice.call(inputs);\r\n        this.setFocusableElems(this.alwaysFocusableElems.concat(inputElemsArray, this.getButtons(), this.customDropCom.nativeElement));\r\n    }\r\n\r\n    private setDateRangeDropFocusableElems(): void {\r\n        // 日期范围面板中的日期组件，存在焦点问题，\r\n        const elemsNodeList: Array<any> = this.alwaysFocusableElems.concat(\r\n            this.customDropCom.nativeElement,\r\n            this.dateRangeStartCom.getFocusableElems(),\r\n            this.dateRangeEndCom.getFocusableElems(),\r\n            this.getButtons()\r\n        );\r\n        this.setFocusableElems(elemsNodeList);\r\n        this.changeDetectorRef.detectChanges();\r\n        this.changeDetectorRef.markForCheck();\r\n    }\r\n\r\n    private getButtons(): Array<any> {\r\n        const buttons: NodeList = this.customDropCom.nativeElement.querySelectorAll('[tiButton]');\r\n\r\n        return [].slice.call(buttons);\r\n    }\r\n    // 日期对象转字符串\r\n    private formatDate2String(date: Date): string {\r\n        if (!this.isValidDate(date)) {\r\n            return '';\r\n        } else {\r\n            return TiLocaleFormat.formatDate(date, this.selectedItem.format);\r\n        }\r\n    }\r\n\r\n    private generateTagByValuePanel(): void {\r\n        let tagValue: string = '';\r\n        // 单选复选\r\n        if (this.selectedItem.type === 'checkbox') {\r\n             tagValue = this.valueDropSelecteds.reduce((acc: string, cur: TpSearchboxOption, index: number): string => {\r\n                return index === 0 ? cur.label : `${acc} | ${cur.label}`;\r\n            }, '');\r\n        } else {\r\n            tagValue = this.valueDropSelected.label;\r\n        }\r\n\r\n        if (this.isTagExist(this.selectedItem, tagValue)) {\r\n            return;\r\n        }\r\n        this.generateTag(this.selectedItem, tagValue);\r\n        // change 事件\r\n        this.emitChange();\r\n    }\r\n    // 当前要生成的tag是否已经存在\r\n    private isTagExist(selectedItem: TpSearchboxItem, tagValue: string): boolean {\r\n        // 新选中的tag是否已经存在\r\n        const selectedTagIndex: number = this.model.findIndex((tag: TpSearchboxTag): boolean => {\r\n            return tag.field === selectedItem.field && tag.value === tagValue;\r\n        });\r\n\r\n        return selectedTagIndex !== -1;\r\n    }\r\n\r\n    // label 类型的标签，只选择一次\r\n    private generateTagByPropDrop(option: any): void {\r\n        const newTag: TpSearchboxTag = {\r\n            field: option.field,\r\n            label: option.label,\r\n            value: '',\r\n            type: 'noValue'\r\n        };\r\n        if (!this.model) {\r\n            this.model = [newTag];\r\n\r\n            return;\r\n        }\r\n        // 只有一个label类型的tag\r\n        const index: number = this.model.findIndex((tag: TpSearchboxTag): boolean => {\r\n            return tag.type === 'noValue';\r\n        });\r\n        // 存在标签时替换，不存在时添加到最后\r\n        if (index > 0) {\r\n            this.model.splice(index, 1, newTag);\r\n        } else {\r\n            this.model.push(newTag);\r\n        }\r\n        this.emitChange();\r\n\r\n    }\r\n\r\n    // 生成tag\r\n    private generateTag(selectedItem: TpSearchboxItem, tagValue: string): void {\r\n\r\n        const newTag: TpSearchboxTag = {\r\n            field: selectedItem.field,\r\n            label: selectedItem.label,\r\n            value: tagValue,\r\n            type: selectedItem.type\r\n        };\r\n        // 如果选中field中设置了optionValueKey，给生成tag 添加额外的key, 单选为字符串，复选为字符串数组\r\n        if(selectedItem.optionValueKey){\r\n            this.addOtherOptionKey(newTag, selectedItem.optionValueKey);\r\n        }\r\n\r\n        this.updateModel(newTag, selectedItem);\r\n\r\n    }\r\n    private addOtherOptionKey(tag: TpSearchboxTag, valueKey: string): void {\r\n        // 只对单选和复选做处理\r\n        if (this.selectedItem.type === 'checkbox' && this.valueDropSelecteds) {\r\n            this.valueDropSelecteds.forEach((option: TpSearchboxOption) => {\r\n                if (Array.isArray(tag[valueKey])) {\r\n                    tag[valueKey].push(option[valueKey])\r\n                } else {\r\n                    tag[valueKey] = [option[valueKey]];\r\n                }\r\n            });\r\n\r\n        } else if (this.selectedItem.type === 'radio' && this.valueDropSelected) {\r\n            tag[valueKey] = this.valueDropSelected[valueKey];\r\n        }\r\n    }\r\n\r\n    private updateModel(newTag: TpSearchboxTag, selectedItem: TpSearchboxItem): void {\r\n\r\n        if (!this.model) {\r\n            this.model = [newTag];\r\n\r\n            return;\r\n        }\r\n\r\n        // 编辑模式\r\n        if (this.editingTag) {\r\n            const editingTagIndex: number = this.model.findIndex((tag: TpSearchboxTag): boolean => {\r\n                return tag.field === selectedItem.field && tag.value === this.editingTag.value;\r\n            });\r\n            this.model.splice(editingTagIndex, 1, newTag);\r\n        } else {\r\n            // tags中相同field\r\n            const fieldTagIndex: number = this.model.findIndex((tag: TpSearchboxTag): boolean => {\r\n                return tag.field === selectedItem.field;\r\n            });\r\n            // radio 类型可以设置是否替换，map默认不可替换,\r\n            if (fieldTagIndex === -1 || (selectedItem.type === 'radio' && selectedItem.replace === false) || selectedItem.type === 'map') {\r\n                this.model.push(newTag);\r\n            } else {\r\n                this.model.splice(fieldTagIndex, 1, newTag);\r\n            }\r\n        }\r\n\r\n    }\r\n    private emitChange(): void {\r\n        this.model = this.model.concat();\r\n        this.setPlaceholder(this.model);\r\n    }\r\n    private getValueDropOptions(field: string): Array<any> {\r\n\r\n        let options: Array<TpSearchboxOption> = this.selectedItem && Array.isArray(this.selectedItem.options) ?\r\n            this.selectedItem.options : [];\r\n        // map类型，利用分组标题显示面板标题\r\n        if (this.selectedItem.type === 'map') {\r\n            // 如果已经选中标签的键\r\n            if (this.selectedOption) {\r\n                options = [\r\n                    {\r\n                        label: TiLocale.getLocaleWords().tpSearchbox.tagValue,\r\n                        children: this.selectedOption.options\r\n                    }\r\n                ];\r\n            } else {\r\n                options = [\r\n                    {\r\n                        label: TiLocale.getLocaleWords().tpSearchbox.tagKey,\r\n                        children: this.selectedItem.options\r\n                    }\r\n                ];\r\n            }\r\n        }\r\n\r\n        return options;\r\n    }\r\n\r\n    // 生成结果 filter对象\r\n    private getFilter(): TpSearchboxFilter {\r\n        const filter: TpSearchboxFilter = {};\r\n        this.model.forEach((tag: TpSearchboxTag): void => {\r\n            // 已经存在，合并一起\r\n            if (Array.isArray(filter[tag.field])) {\r\n                filter[tag.field] = filter[tag.field].concat(tag.value.split('|')\r\n                    .map((value: string): string => {\r\n                        return value.trim();\r\n                    }));\r\n            } else {\r\n                filter[tag.field] = tag.value.split('|')\r\n                    .map((value: string): string => {\r\n                        return value.trim();\r\n                    });\r\n            }\r\n        });\r\n\r\n        return filter;\r\n    }\r\n    // 选中一段html，三种浏览器测试正常\r\n    // tslint:disable-next-line: prefer-function-over-method\r\n    private selectHTMLElementText(elem: HTMLElement): void {\r\n        const range: Range = document.createRange();\r\n        range.selectNodeContents(elem);\r\n        const selection: Selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n    // tslint:disable-next-line: max-file-line-count\r\n}\r\n","import { Component, ElementRef, Renderer2, TemplateRef, ViewChild } from '@angular/core';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiBaseComponent, TiLocale, TiModalService } from '@cloud/tiny3';\r\n\r\n@Component({\r\n    selector: 'tp-searchbox-help',\r\n    templateUrl: './searchbox-help.html',\r\n    styleUrls: ['./searchbox-help.less']\r\n})\r\nexport class TpSearchboxHelpComponent extends TiBaseComponent {\r\n    /**\r\n     * @ignore\r\n     * 默认字段\r\n     */\r\n    public defaultField: string = 'testName';\r\n    /**\r\n     * @ignore\r\n     * 示例1选中项\r\n     */\r\n    public tags1: Array<any>;\r\n    /**\r\n     * @ignore\r\n     * 示例二选中项\r\n     */\r\n    public tags2: Array<any>;\r\n    /**\r\n     * @ignore\r\n     * 示例二选中项\r\n     */\r\n    public tags3: Array<any>;\r\n    /**\r\n     * @ignore\r\n     * 输入项\r\n     */\r\n    public items: Array<any> = [];\r\n    /**\r\n     * @ignore\r\n     * 弹窗模板\r\n     */\r\n    @ViewChild(TemplateRef, { static: false }) helpModalTemplateRef: TemplateRef<any>;\r\n\r\n    constructor(hostRef: ElementRef, render: Renderer2, private tiModal: TiModalService) {\r\n        super(hostRef, render);\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // tslint:disable-next-line: typedef\r\n        const { name,\r\n            status,\r\n            running,\r\n            creating,\r\n            stopped,\r\n            restarting,\r\n            tag } = TiLocale.getLocaleWords().tpSearchbox;\r\n        // 初始化数据\r\n        this.items = [{\r\n            label: name,\r\n            field: 'testName',\r\n            type: 'radio',\r\n            options: [{\r\n                label: 'ecs-1'\r\n            }, {\r\n                label: 'obs-2'\r\n            }, {\r\n                label: 'vpc-1'\r\n            }]\r\n        },\r\n        {\r\n            label: status,\r\n            field: 'testStatus',\r\n            type: 'checkbox',\r\n            options: [{\r\n                label: running\r\n            }, {\r\n                label: creating\r\n            }, {\r\n                label: stopped\r\n            }, {\r\n                label: restarting\r\n            }]\r\n        },\r\n        {\r\n            id: '3',\r\n            label: tag,\r\n            field: 'testTag',\r\n            type: 'map',\r\n            options: [\r\n                {\r\n                    label: 'aaa',\r\n                    options: [\r\n                        {\r\n                            label: 'ddd'\r\n                        },\r\n                        {\r\n                            label: 'eee'\r\n                        },\r\n                        {\r\n                            label: 'fff'\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    label: 'bbb',\r\n                    options: [\r\n                        {\r\n                            label: 'ddd'\r\n                        },\r\n                        {\r\n                            label: 'eee'\r\n                        },\r\n                        {\r\n                            label: 'fff'\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    label: 'ccc',\r\n                    options: [\r\n                        {\r\n                            label: 'ddd'\r\n                        },\r\n                        {\r\n                            label: 'eee'\r\n                        },\r\n                        {\r\n                            label: 'fff'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }];\r\n        this.tags1 = [\r\n            {\r\n                field: 'testName',\r\n                label: name,\r\n                value: 'ecs-1',\r\n                type: 'radio'\r\n            }\r\n        ];\r\n        this.tags2 = [\r\n            {\r\n                field: 'testName',\r\n                label: name,\r\n                value: 'ecs-1',\r\n                type: 'radio'\r\n            },\r\n            {\r\n                field: 'testStatus',\r\n                label: status,\r\n                value: `${running} | ${creating} | ${stopped}`,\r\n                type: 'checkbox'\r\n            }\r\n        ];\r\n        this.tags3 = [\r\n            {\r\n                field: 'testName',\r\n                label: name,\r\n                value: 'ecs-1',\r\n                type: 'radio'\r\n            },\r\n            {\r\n                field: 'testStatus',\r\n                label: status,\r\n                value: running,\r\n                type: 'checkbox'\r\n            },\r\n            {\r\n                field: 'testTag',\r\n                label: tag,\r\n                value: 'aaa=',\r\n                type: 'map'\r\n            }\r\n        ];\r\n    }\r\n    /**\r\n     * 展示弹窗\r\n     */\r\n    public show(): void {\r\n        this.tiModal.open(this.helpModalTemplateRef, {\r\n            id: 'tp-searchbox-help-modal',\r\n            modalClass: 'tp-searchbox-help-modal'\r\n        });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport {\r\n    TiButtonModule, TiDateModule, TiDropModule,\r\n    TiDropsearchModule, TiLocaleModule, TiModalModule,\r\n    TiOverflowModule, TiTipModule, TiValidationModule,\r\n    TiDominatorModule, TiTextModule, TiOutlineModule\r\n} from '@cloud/tiny3';\r\nimport { TpSearchboxComponent } from './TpSearchboxComponent';\r\nimport { TpSearchboxHelpComponent } from './TpSearchboxHelpComponent';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TiButtonModule,\r\n        TiModalModule,\r\n        TiDateModule,\r\n        TiDropModule,\r\n        TiDropsearchModule,\r\n        TiDominatorModule,\r\n        TiLocaleModule,\r\n        TiOverflowModule,\r\n        TiTextModule,\r\n        TiTipModule,\r\n        TiValidationModule,\r\n        TpIconModule,\r\n        TiOutlineModule\r\n    ],\r\n    exports: [TpSearchboxComponent, TpSearchboxHelpComponent],\r\n    declarations: [TpSearchboxComponent, TpSearchboxHelpComponent]\r\n})\r\n\r\nexport class TpSearchboxModule { }\r\nexport { TpSearchboxComponent, TpSearchboxItem, TpSearchboxOption, TpSearchboxTag,\r\n    TpSearchboxTagType, TpSearchboxFilter, TP_REGEXP_IP, TP_REGEXP_UUID } from './TpSearchboxComponent';\r\nexport { TpSearchboxHelpComponent } from './TpSearchboxHelpComponent';\r\n","import { Component, Input } from '@angular/core';\r\nimport { TiFormComponent } from '@cloud/tiny3';\r\n/**\r\n * 选择组 组件\r\n *\r\n * 配合[TpSelectItemComponent]{@link ../components/TpSelectitemComponent.html}使用\r\n *\r\n * <example-url>../tinyplus3demo/#/selectgroup/selectgroup-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-selectgroup',\r\n    templateUrl: './selectgroup.html',\r\n    providers: [TiFormComponent.getValueAccessor(TpSelectgroupComponent)]\r\n})\r\n\r\nexport class TpSelectgroupComponent extends TiFormComponent {\r\n    /**\r\n     * 10.1.1 新增\r\n     *\r\n     * 选择组是否多选\r\n     */\r\n    @Input() multiple: boolean;\r\n}\r\n","import { Component, Input, ElementRef, Renderer2, ContentChild, TemplateRef } from '@angular/core';\r\nimport { TpSelectgroupComponent } from './TpSelectgroupComponent';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\nexport interface TpSelectgroupItem {\r\n    /**\r\n     * 卡片标题\r\n     */\r\n    title: string;\r\n    /**\r\n     * 卡片内容\r\n     */\r\n    content?: string;\r\n    /**\r\n     * 卡片是否禁用\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * 卡片左侧图标名\r\n     */\r\n    iconName: string;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * 配合[TpSelectgroupComponent]{@link ../components/TpSelectgroupComponent.html}使用\r\n *\r\n * <example-url>../tinyplus3demo/#/selectgroup/selectgroup-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-selectitem',\r\n    templateUrl: './selectitem.html',\r\n    styleUrls: ['./selectgroup.less'],\r\n    host: {\r\n        '[class.tp-selectitem-box]': 'true',\r\n        '[class.tp-selectitem-disabled]': 'item.disabled',\r\n        '[class.tp-selectitem-checked]': 'selectgroup.multiple ? isChecked() : selectgroup.model === item',\r\n        '[class.tp-selectitem-template]': 'itemTemplate',\r\n        '(click)': 'onClick()'\r\n    }\r\n})\r\n\r\nexport class TpSelectitemComponent extends TiBaseComponent{\r\n    /**\r\n     * 数据配置\r\n     */\r\n    @Input() item: TpSelectgroupItem;\r\n    /**\r\n     * 选中标识位置\r\n     */\r\n    @Input() checkPosition: 'right-top' | 'right-bottom' = 'right-top';\r\n    // item模板\r\n    @ContentChild('item', /* TODO: add static flag */ { static: true }) itemTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public selectgroup: any;\r\n    constructor(selectgroup: TpSelectgroupComponent, protected hostRef: ElementRef, protected renderer: Renderer2) {\r\n        super(hostRef, renderer);\r\n        this.selectgroup = selectgroup;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public onClick(): void {\r\n        if (this.item.disabled) {\r\n            return;\r\n        }\r\n        if (this.selectgroup.multiple) { // 多选\r\n            const index: number = this.selectgroup.model.indexOf(this.item);\r\n            if (index > -1) {\r\n                this.selectgroup.model.splice(index, 1);\r\n            } else {\r\n                this.selectgroup.model.push(this.item);\r\n            }\r\n        } else { // 单选\r\n            this.selectgroup.model = this.item;\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 是否选中（多选时）\r\n     */\r\n    public isChecked(): boolean {\r\n        if (this.selectgroup.model) {\r\n            return this.selectgroup.model.includes(this.item);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TiOverflowModule } from '@cloud/tiny3';\r\nimport { TpSelectgroupComponent } from './TpSelectgroupComponent';\r\nimport { TpSelectitemComponent } from './TpSelectitemComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiOverflowModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [TpSelectgroupComponent, TpSelectitemComponent],\r\n  declarations: [TpSelectgroupComponent, TpSelectitemComponent]\r\n})\r\n\r\nexport class TpSelectgroupModule {}\r\nexport { TpSelectgroupComponent } from './TpSelectgroupComponent';\r\nexport { TpSelectitemComponent, TpSelectgroupItem } from './TpSelectitemComponent';\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n\r\n/**\r\n * Selectsearchbox组件由下拉选择组件和搜索框组件构成。\r\n *\r\n * Selectsearchbox组件使用的时候需要和下拉框（TiSelect）及搜索框（TiSearchBox）一起使用。\r\n *\r\n * API详情请参考下拉框（TiSelect）及搜索框（TiSearchBox）。\r\n *\r\n * <example-url>../tinyplus3demo/#/selectsearchbox/selectsearchbox-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-selectsearchbox',\r\n    template: '<ng-content></ng-content>',\r\n    styleUrls: ['./selectsearchbox.less'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    host: {\r\n        '[class.tp-selectsearchbox-container]': 'true'\r\n    }\r\n})\r\n\r\nexport class TpSelectsearchboxComponent {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { TpSelectsearchboxComponent } from './TpSelectsearchboxComponent';\r\n\r\n@NgModule({\r\n  imports: [TpIconModule],\r\n  exports: [TpSelectsearchboxComponent],\r\n  declarations: [TpSelectsearchboxComponent]\r\n})\r\n\r\nexport class TpSelectsearchboxModule {}\r\nexport { TpSelectsearchboxComponent } from './TpSelectsearchboxComponent';\r\n","import {\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  SimpleChange,\r\n  SimpleChanges,\r\n  ViewChild\r\n  // tslint:disable-next-line: no-implicit-dependencies\r\n} from '@angular/core';\r\n\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n// tslint:disable-next-line: no-implicit-dependencies\r\nimport { TpCardComponent } from '../card/TpCardModule';\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n */\r\nexport interface TpSlidecardsPaginationEvent {\r\n  currentPage: number;\r\n  pageSize: number;\r\n  totalPage: number;\r\n  /**\r\n   * 允许有多余的属性字段\r\n   */\r\n  [propName: string]: any;\r\n}\r\n\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n * 滚动卡片列表，功能与轮播图相似，可以显示多屏展示卡片的效果，并且还提供了增加、删除卡片功能。详情参考测试用例。\r\n *\r\n * <example-url>../tinyplus3demo/#/slidecards/slidecards-all</example-url>\r\n */\r\n@Component({\r\n  selector: 'tp-slidecards',\r\n  templateUrl: './slidecards.html',\r\n  styleUrls: ['./slidecards.less']\r\n})\r\nexport class TpSlidecardsComponent extends TiBaseComponent {\r\n  /**\r\n   * 当前选中卡片在数组中的下标\r\n   */\r\n  @Input() currentIndex: number = 0;\r\n  /**\r\n   * 当前页改变事件\r\n   */\r\n  @Output() readonly pageChange: EventEmitter<TpSlidecardsPaginationEvent> = new EventEmitter<TpSlidecardsPaginationEvent>();\r\n  /**\r\n   * @ignore\r\n   * 卡片的可视区\r\n   */\r\n  @ViewChild('listWrapper') listWrapperEleRef: ElementRef;\r\n  /**\r\n   * @ignore\r\n   * 卡片父元素，用于监听内容变化\r\n   */\r\n  @ViewChild('list') listEleRef: ElementRef;\r\n  /**\r\n   * @ignore\r\n   * 所有的卡片集合\r\n   */\r\n  @ContentChildren(TpCardComponent, { descendants: false }) cardComRefs!: QueryList<TpCardComponent>;\r\n  /**\r\n   * @ignore\r\n   * 当前页\r\n   */\r\n  public currentPage: number = 1;\r\n  /**\r\n   * 每个卡片的宽度，用于计算分页\r\n   */\r\n  private cardWidth: number;\r\n  /**\r\n   * 卡片之间的距离，用于计算分页\r\n   */\r\n  private cardSpan: number = 0;\r\n  /**\r\n   * @ignore\r\n   * 卡片父元素的偏移距离，用于控制卡片左右滑动\r\n   */\r\n  public left: string = '0px';\r\n  /**\r\n   * @ignore\r\n   * 分页页码显示数据\r\n   */\r\n  public pageList: Array<string | number> = [];\r\n  /**\r\n   * 每页卡片数\r\n   */\r\n  private pageSize: number = 1;\r\n  /**\r\n   * @ignore\r\n   * 分页总页数\r\n   */\r\n  public totalPage: number = 1;\r\n  /**\r\n   * 总的卡片数量\r\n   */\r\n  private totalCard: number = 0;\r\n\r\n  private unlistenResize: () => void;\r\n  // 卡片父元素 MutationObserver 对象\r\n  private listObserver: MutationObserver;\r\n\r\n  constructor(\r\n    protected hostRef: ElementRef,\r\n    private renderer2: Renderer2,\r\n    private zone: NgZone\r\n  ) {\r\n    super(hostRef, renderer2);\r\n  }\r\n\r\n  // tslint:disable-next-line: use-life-cycle-interface\r\n  ngOnInit(): void {\r\n    super.ngOnInit();\r\n    // 一屏显示卡片的数目会随窗口大小而变化，所以监听窗口大小变化重新计算分页，\r\n    this.zone.runOutsideAngular(() => {\r\n      this.unlistenResize = this.renderer2.listen(window, 'resize', () => {\r\n        if (this.canCalculatePaging()) {\r\n          this.calculatePaging();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 因为初始化要展示当前索引卡片，所以在初始化后先计算一次分页，然后显示currentIndex卡片\r\n   * 分页的计算依赖视图可视区的宽度，视图加载完成后才能计算，\r\n   * 分页计算后，会改变数据，所以用setTimeout。\r\n   *  总卡片数及cardsComRef 长度， pageSize = 容器宽度/（卡片宽度 + 卡片间的距离）\r\n   */\r\n  ngAfterViewInit(): void {\r\n    super.ngAfterViewInit();\r\n    // 初始化时计算一次分页，然后把当前索引的卡片显示出来\r\n    if (this.canCalculatePaging()) {\r\n        setTimeout(() => {\r\n            this.calculatePaging();\r\n            this.showCurrentCard(this.currentIndex);\r\n        }, 0);\r\n    }\r\n\r\n    this.listObserver = new MutationObserver((mutationRecords) => {\r\n        this.calculatePaging();\r\n    });\r\n    // MutationObserver 对象的回调方法开始接收与给定选项匹配的DOM变化的通知\r\n    // 只需关注卡片增删和lef偏移值，所以只设置childList、attributes\r\n    this.listObserver.observe(this.listEleRef.nativeElement, {\r\n        childList: true, // 监视目标节点添加或删除新的子节点\r\n        attributes: true, // 观察受监视元素的属性值变更,主要是为了监听 style属性\r\n        attributeFilter: ['style'] // 要监视的特定属性名称的数组\r\n    });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    super.ngOnChanges(changes);\r\n    // currentIndex 改变跳转到对应页显示当前索引卡片\r\n    const currentIndexChange: SimpleChange = changes['currentIndex'];\r\n    if (!currentIndexChange.firstChange) {\r\n      this.showCurrentCard(currentIndexChange.currentValue);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy();\r\n    // 组件销毁时，注销窗口resize事件监听\r\n    if (this.unlistenResize) {\r\n      this.unlistenResize();\r\n    }\r\n    if (this.listObserver) {\r\n        this.listObserver.disconnect();\r\n    }\r\n  }\r\n  /**\r\n   * 是否能进行分页计算\r\n   * @returns boolean\r\n   */\r\n  private canCalculatePaging(): boolean {\r\n    return this.listWrapperEleRef && this.cardComRefs && this.cardComRefs.length > 0;\r\n  }\r\n  /**\r\n   * 先计算分页每页的卡片数pageSize，再计算总页数totalPage\r\n   */\r\n  private calculatePaging(): void {\r\n    this.calculatePageSize();\r\n    this.calculateTotalPage();\r\n  }\r\n  /**\r\n   * 计算分页总页数\r\n   */\r\n  private calculateTotalPage(): void {\r\n    this.totalCard = this.cardComRefs.length;\r\n    // 计算共有多少页\r\n    this.totalPage = Math.ceil(this.totalCard / this.pageSize);\r\n    // 生成分页器显示数组\r\n    this.generatePagesArray();\r\n    // 重新计算总页面后，需要处理当前页大于总页数的场景\r\n    if (this.currentPage > this.totalPage) {\r\n      this.goPage(this.totalPage);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 计算一次显示的卡片数\r\n   */\r\n  private calculatePageSize(): void {\r\n    // getComputedStyle 获取的宽度，在ie11下不包含padding和border,所以使用getBoundingClientRect（）\r\n    // 在初始化时，totalPage还没有计算出来，左右翻页按钮没有显示，但容器元素的可用宽度应该减去左右按钮的宽度之和30+30=60\r\n    const containerWidth: number = (this.listWrapperEleRef.nativeElement as HTMLElement).getBoundingClientRect().width - 60;\r\n    this.cardWidth = (this.cardComRefs.first.nativeElement as HTMLElement).getBoundingClientRect().width;\r\n    const cardStyle: CSSStyleDeclaration = getComputedStyle(this.cardComRefs.first.nativeElement);\r\n    this.cardSpan = parseFloat(cardStyle.marginRight);\r\n    // 当容器宽度小于card宽度时,需处理，避免分页不能正常生成\r\n    this.pageSize = containerWidth <= (this.cardWidth + this.cardSpan) ? 1 : Math.floor(containerWidth / (this.cardWidth + this.cardSpan));\r\n  }\r\n\r\n  /**\r\n   * 生成分页器显示的数组\r\n   */\r\n  private generatePagesArray(): void {\r\n    this.pageList = [];\r\n    // 判断总页数如果小于等于分页的长度，若小于则直接显示\r\n    if (this.totalPage <= 8) {\r\n      for (let i: number = 1; i <= this.totalPage; i++) {\r\n        this.pageList.push(i);\r\n      }\r\n    } else if (this.currentPage <= 3) {\r\n      // 右边...\r\n      for (let i: number = 1; i <= 5; i++) {\r\n        this.pageList.push(i);\r\n      }\r\n      this.pageList.push('...');\r\n      this.pageList.push(this.totalPage);\r\n    } else if (this.currentPage >= this.totalPage - 3) {\r\n      // 左边 ...\r\n      this.pageList.push(1);\r\n      this.pageList.push('...');\r\n      for (let i: number = 4; i >= 1; i--) {\r\n        this.pageList.push(this.totalPage - i);\r\n      }\r\n      this.pageList.push(this.totalPage);\r\n    } else {\r\n      // 最后一种情况，两边都有...\r\n      this.pageList.push(1);\r\n      this.pageList.push('...');\r\n      for (let i: number = 2; i >= 1; i--) {\r\n        this.pageList.push(this.currentPage - i);\r\n      }\r\n      this.pageList.push(this.currentPage);\r\n      for (let i: number = 1; i < 2; i++) {\r\n        this.pageList.push(this.currentPage + i);\r\n      }\r\n      this.pageList.push('...');\r\n      this.pageList.push(this.totalPage);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 指定页码翻页\r\n   * @param pageNum 跳转到的页码\r\n   * @ignore\r\n   */\r\n  public goPage(pageNum: number | string): void {\r\n    // ... 时，不做处理\r\n    if (typeof pageNum === 'string') {\r\n      return;\r\n    }\r\n\r\n    this.currentPage = pageNum;\r\n    // 偏移量=(当前页-1)*每页的卡片数量*（卡片宽度 + 卡片的Margin)\r\n    this.left = -(pageNum - 1) * this.pageSize * (this.cardWidth + this.cardSpan) + 'px';\r\n    // 触发pageChange事件\r\n    const data: TpSlidecardsPaginationEvent = {\r\n      currentPage: pageNum,\r\n      pageSize: this.pageSize,\r\n      totalPage: this.totalPage\r\n    };\r\n    this.pageChange.emit(data);\r\n\r\n  }\r\n\r\n  /**\r\n   * 向前跳转一页\r\n   * @ignore\r\n   */\r\n  public goPrev(): void {\r\n    if (this.currentPage > 1) {\r\n      this.goPage(this.currentPage - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 向后跳转一页\r\n   * @ignore\r\n   */\r\n  public goNext(): void {\r\n    if (this.currentPage < this.totalPage) {\r\n      this.goPage(this.currentPage + 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 展示指定索引的卡片，在初始化及currentIndex 改变时，如果指定索引不在当前页，跳转到能显示c索引对应卡片的页码\r\n   */\r\n  private showCurrentCard(index: number): void {\r\n    // 如果索引和卡片的数目不匹配，不做处理。\r\n    if (index < 0 && index > (this.totalCard - 1)) {\r\n      return;\r\n    }\r\n    // 当前一屏卡片的最大最小索引\r\n    const maxIndex: number = this.currentPage * this.pageSize - 1;\r\n    const minIndex: number = this.currentPage > 0 ? ((this.currentPage - 1) * this.pageSize - 1) : 0;\r\n    // 当前索卡片是否在当前页面\r\n    if (index < minIndex || index > maxIndex) {\r\n      const targetPage: number = Math.ceil((index + 1) / this.pageSize);\r\n      this.goPage(targetPage);\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\n\r\nimport { TpSlidecardsComponent } from './TpSlidecardsComponent';\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpIconModule\r\n  ],\r\n  declarations: [TpSlidecardsComponent],\r\n  exports: [TpSlidecardsComponent]\r\n})\r\n\r\nexport class TpSlidecardsModule {}\r\nexport { TpSlidecardsComponent, TpSlidecardsPaginationEvent} from './TpSlidecardsComponent';\r\n","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n * 步骤引导组件，用于静态展示操作步骤\r\n *\r\n * <example-url>../tinyplus3demo/#/stepguide/stepguide-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-stepguide',\r\n    templateUrl: './stepguide.html',\r\n    styleUrls: ['./stepguide.less']\r\n})\r\nexport class TpStepguideComponent extends TiBaseComponent {\r\n    /**\r\n     * 各步骤呈现涉及的信息配置\r\n     *\r\n     * 包含3个属性，1.label：该步骤的标题；2.iconClass：该步骤的图标/图片样式；3.description：该步骤的详细描述。\r\n     */\r\n    @Input() steps: Array<{\r\n        label: string;\r\n        iconClass: string;\r\n        description: string;\r\n    }>;\r\n    /**\r\n     * 每个步骤最大显示宽度，默认值为'156px'\r\n     */\r\n    @Input() stepMaxWidth: string;\r\n    /**\r\n     * @ignore\r\n     * 自定义description的模板\r\n     */\r\n    @ContentChild('description', { static: true }) description: TemplateRef<any>;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TpStepguideComponent } from './TpStepguideComponent';\r\n/**\r\n * @ignore\r\n * 规范提出，云业务通用场景不会使用该组件，10.1.3起，在官网隐藏该组件。\r\n */\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [TpStepguideComponent],\r\n  declarations: [TpStepguideComponent]\r\n})\r\nexport class TpStepguideModule {}\r\nexport { TpStepguideComponent } from './TpStepguideComponent';\r\n","import {\r\n   Component,\r\n   EventEmitter,\r\n   Input,\r\n   Output,\r\n   ViewChild\r\n  } from '@angular/core';\r\nimport { Params } from '@angular/router';\r\n\r\nimport { TiBaseComponent, TiSelectComponent, Util, TiPositionType } from '@cloud/tiny3';\r\n\r\n/**\r\n * items接口item项的数据接口\r\n */\r\nexport interface TpSubtitleItem {\r\n    label: string;\r\n    [propName: string]: any;\r\n}\r\n\r\n@Component({\r\n    selector: 'tp-subtitle',\r\n    templateUrl: './subtitle.html',\r\n    styleUrls: ['./subtitle.less'],\r\n    host: {\r\n        '[style.max-width]': 'maxWidth'\r\n    }\r\n})\r\n\r\n/**\r\n * 返回标题组件\r\n *\r\n * <example-url>../tinyplus3demo/#/subtitle/subtitle-all</example-url>\r\n */\r\nexport class TpSubtitleComponent extends TiBaseComponent {\r\n    /**\r\n     * 后退按钮链接\r\n     */\r\n    @Input() href: string = '';\r\n    /**\r\n     * 数据选项，如果选项大于1个，标题是下拉的形式\r\n     */\r\n    @Input() items: Array<TpSubtitleItem> = [];\r\n    /**\r\n     * items 大于1项时，展开面板中是否有搜索\r\n     */\r\n    @Input() searchable: boolean = false;\r\n    /**\r\n     * 指定在何处显示链接的资源, 即a标签的target属性\r\n     */\r\n    @Input() target: '_blank' | '_self' | '_parent' | '_top' = '_blank';\r\n    // select组件选中项模板引用名为#selected, 两个名字冲突，所以使用了别名\r\n    /**\r\n     * 选中项，items 的条数大于1时才生效，双向数据绑定\r\n     */\r\n    @Input('selected') selectedItem: TpSubtitleItem;\r\n    /**\r\n     * 后退按钮点击后的跳转路由, 设置后href和target失效\r\n     * 10.1.2 新增\r\n     */\r\n    @Input() backRouterLink: string | Array<any>;\r\n    /**\r\n     * 后退按钮点击后的跳转路由参数\r\n     * 10.1.0 新增\r\n     */\r\n    @Input() queryParams: Params;\r\n    /**\r\n     * 下拉面板宽度设置\r\n     * 10.1.2 新增\r\n     */\r\n    @Input() panelWidth: string;\r\n    /**\r\n     * 设置最大宽度\r\n     *  10.1.2 新增\r\n     */\r\n    @Input() maxWidth: string = '250px';\r\n    /**\r\n     * 设置标题溢出提示的方向\r\n     *  10.1.3 新增\r\n     */\r\n    @Input() tipPosition: TiPositionType = 'top';\r\n    /**\r\n     * 选中项，items 的条数大于1时才生效，双向数据绑定\r\n     */\r\n    @Output() readonly selectedChange: EventEmitter<TpSubtitleItem> = new EventEmitter();\r\n    /**\r\n     * 后退按钮点击回调\r\n     */\r\n    @Output() readonly back: EventEmitter<Event> = new EventEmitter();\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild(TiSelectComponent) selectComRef: TiSelectComponent;\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // 如果没有传入选中项，且items 条目数大于1 默认选中第一项，\r\n        if (Util.isUndefined(this.selectedItem) && this.items.length > 1) {\r\n            this.selectedItem = this.items[0];\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n      super.ngAfterViewInit();\r\n      // 选项数大于等于2 ，才出现select\r\n      if (this.items.length < 2) {\r\n          return ;\r\n      }\r\n      // 暗色背景，给ti-select 添加dark属性\r\n      const attrs: NamedNodeMap = this.hostRef.nativeElement.attributes;\r\n      if (!Util.isUndefined(attrs['dark'])) {\r\n          this.renderer.setAttribute(this.selectComRef.nativeElement, 'dark', '');\r\n      }\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 触发back 事件\r\n     */\r\n    public onClick($event: Event): void {\r\n      this.back.emit($event);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * select选中项改变，触发subtitle selectedChange事件\r\n     */\r\n    public onSelectedOptionChange(option: any): void {\r\n       this.selectedChange.emit(option as TpSubtitleItem);\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { TiOverflowModule, TiSelectModule, TiTipModule } from '@cloud/tiny3';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { TpSubtitleComponent } from './TpSubtitleComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    TiOverflowModule,\r\n    TiSelectModule,\r\n    TiTipModule,\r\n    TpIconModule\r\n  ],\r\n  exports: [TpSubtitleComponent],\r\n  declarations: [TpSubtitleComponent]\r\n})\r\n\r\nexport class TpSubtitleModule {}\r\nexport { TpSubtitleComponent, TpSubtitleItem} from './TpSubtitleComponent';\r\n","import { Component } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n/**\r\n * TpSwiperCard 是单个卡片组件\r\n */\r\n@Component({\r\n    selector: 'tp-swipercard',\r\n    template: `<ng-content></ng-content>`,\r\n    styleUrls: ['./swipercard.less']\r\n})\r\n\r\nexport class TpSwipercardComponent extends TiBaseComponent {}\r\n","import { Component, ContentChildren, ElementRef, EventEmitter, Input, NgZone, Output, QueryList, Renderer2, SimpleChange, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { TiBaseComponent } from '@cloud/tiny3';\r\n\r\nimport { TpSwipercardComponent } from './TpSwipercardComponent';\r\n\r\n/**\r\n * swiper组件每个展示块为一个card，点击左右按钮可以实现card切换功能\r\n *\r\n * <example-url>../tinyplus3demo/#/swiper/swiper-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-swiper',\r\n    templateUrl: './swiper.html',\r\n    styleUrls: ['./swiper.less'],\r\n    host: {\r\n        '[class.tp-swiper-multiple]': 'showCardNum > 1'\r\n    }\r\n})\r\n\r\nexport class TpSwiperComponent extends TiBaseComponent {\r\n    constructor(private elementRef: ElementRef, private renderer2: Renderer2, private zone: NgZone) {\r\n        super(elementRef, renderer2);\r\n    }\r\n    /**\r\n     * 指定当前激活项\r\n     */\r\n    @Input() activeIndex: number = 0;\r\n    /**\r\n     * 10.0.2新增\r\n     *\r\n     * 是否自动播放\r\n     */\r\n    @Input() autoplay: boolean = false;\r\n    /**\r\n     * 10.0.2新增\r\n     *\r\n     * 自动播放时，默认的播放（翻页）速度\r\n     */\r\n    @Input() autoplaySpeed: number = 3000;\r\n    /**\r\n     * 10.1.2新增\r\n     *\r\n     * 每页展示卡片数量\r\n     */\r\n    @Input() showCardNum: number = 1;\r\n    /**\r\n     * 10.1.2新增\r\n     *\r\n     * 多图轮播卡片间距，8-12px，默认为8px（规范建议使用偶数值，即8px，10px，12px）\r\n     */\r\n    @Input() cardGap: string = '8px';\r\n    /**\r\n     * 10.1.2新增\r\n     *\r\n     * 指示器位置，三个属性值，‘below’容器外部，‘bottom’容器内部底部，‘none’不显示\r\n     */\r\n    @Input() indicatorPosition: 'bottom' | 'below' | 'none' = 'below';\r\n    /**\r\n     * 10.1.2新增\r\n     *\r\n     * 是否无限循环\r\n     */\r\n    @Input() loop: boolean = true;\r\n    /**\r\n     * 当前卡片切换触发的事件\r\n     */\r\n    @Output() readonly activeIndexChange: EventEmitter<any> = new EventEmitter<any>();\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('cards', { static: true }) cards: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ContentChildren(TpSwipercardComponent) swipercardComs: QueryList<TpSwipercardComponent>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ViewChild('wrapper', { static: true }) wrapperEle: ElementRef;\r\n    /**\r\n    /**\r\n     * @ignore\r\n     * 卡片总页数\r\n     */\r\n    public totalPage: number = 0;\r\n    /**\r\n     * @ignore\r\n     * 当前页， 按照索引值从0开始\r\n     */\r\n    public currentPage: number = 0;\r\n    /**\r\n     * @ignore\r\n     * 面板指示点的集合\r\n     */\r\n    public swiperBullets: Array<any> = [];\r\n    // 卡片切换动画间隔，单位ms\r\n    private transitionSpeed: number = 600;\r\n    // 定时器任务\r\n    private autoplayId: any;\r\n    // 卡片总数量\r\n    private cardNum: number = 0;\r\n    private pageWidth: number;\r\n    private swiperCardWidth: number;\r\n    private cardSpace: number;\r\n    private totalWidth: number;\r\n    private unlistenResize: () => void;\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        // 一屏显示卡片的数目会随窗口大小而变化，所以监听窗口大小变化重新计算分页，\r\n        this.zone.runOutsideAngular(() => {\r\n            this.unlistenResize = this.renderer2.listen(window, 'resize', () => {\r\n                this.setCardsWidth();\r\n                this.setLeftPosition(this.currentPage);\r\n            });\r\n        });\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngAfterContentChecked(): void {\r\n        super.ngAfterContentChecked();\r\n        // 当卡片数量变化时，计算总数量\r\n        if (this.cards.nativeElement.children.length !== this.cardNum ) {\r\n            this.setCardNum();\r\n        }\r\n    }\r\n\r\n    // tslint:disable-next-line: use-life-cycle-interface\r\n    ngAfterViewInit(): void {\r\n        this.setCardsWidth();\r\n        this.setLeftPosition(this.currentPage);\r\n        this.renderer.setStyle(this.cards.nativeElement, 'transition', `left ${this.transitionSpeed}ms`);\r\n\r\n        // 只有一页时，不自动轮播\r\n        if (this.autoplay && this.autoplaySpeed && this.totalPage > 1) {\r\n            this.autoplayId = setInterval((): void => {\r\n                this.onClickNext();\r\n            }, this.autoplaySpeed);\r\n        }\r\n    }\r\n    ngAfterViewChecked():void {\r\n        // 外层容器宽度有变化时，重新计算宽度及位置\r\n        if (this.wrapperEle && this.wrapperEle.nativeElement.getBoundingClientRect().width !== this.pageWidth) {\r\n            this.setCardsWidth();\r\n            this.setLeftPosition(this.currentPage);\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        super.ngOnChanges(changes);\r\n        const indexObj: SimpleChange = changes['activeIndex'];\r\n        if (indexObj && !indexObj.firstChange) {\r\n            this.calculateCurrentPage(indexObj.currentValue);\r\n            this.setLeftPosition(this.currentPage);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.autoplayId) {\r\n            clearInterval(this.autoplayId);\r\n            this.autoplayId = undefined;\r\n        }\r\n\r\n        if (this.unlistenResize) {\r\n            this.unlistenResize();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 点击左侧按钮触发事件\r\n     */\r\n    public onClickPrev(): void {\r\n        this.activeCard(this.currentPage - 1);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 点击右侧按钮触发事件\r\n     */\r\n    public onClickNext(): void {\r\n        this.activeCard(this.currentPage + 1);\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     * 点击指示器触发事件\r\n     */\r\n    public onClickDot(index: number): void {\r\n        this.activeCard(index);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 点击左右侧按钮、面板指示板触发事件\r\n     */\r\n    private activeCard(index: number): void {\r\n        if(this.totalPage === 1) {\r\n            return;\r\n        }\r\n\r\n        this.renderer.setStyle(this.cards.nativeElement, 'transition', `left ${this.transitionSpeed}ms`);\r\n        if (index === this.totalPage && this.loop) {\r\n            this.currentPage = 0;\r\n            const first: Element = this.swipercardComs.first.nativeElement;\r\n            this.setPosition(first, true);\r\n            this.setLeftPosition(this.totalPage);\r\n            this.adjustPosition(first);\r\n        } else if (index === -1 && this.loop) {\r\n            this.currentPage = this.totalPage - 1;\r\n            const last: Element = this.swipercardComs.last.nativeElement;\r\n            this.setPosition(last, false);\r\n            this.setLeftPosition(-1);\r\n            this.adjustPosition(last);\r\n        } else {\r\n            this.currentPage = index <= -1 ? 0 : index >= this.totalPage ? this.totalPage - 1 : index;\r\n            this.setLeftPosition(this.currentPage);\r\n            this.activeIndexChange.emit(this.currentPage);\r\n        }\r\n    }\r\n\r\n    // 计算卡片总数及总页数\r\n    private setCardNum(): void {\r\n        this.cardNum = this.cards && this.cards.nativeElement.children && this.cards.nativeElement.children.length;\r\n        this.calculatpaging();\r\n        this.swiperBullets.length = this.totalPage;\r\n    }\r\n\r\n    // 计算卡片容器总宽度\r\n    private setCardsWidth(): void {\r\n        this.calculatecardWidth();\r\n        this.renderer.setStyle(this.cards.nativeElement, 'width', `${this.totalWidth}px`);\r\n    }\r\n\r\n    // 当点击左右按钮时，设置激活卡片相对位置\r\n    private setLeftPosition(index: number): void {\r\n        if(this.totalPage === 1) {\r\n            return;\r\n        }\r\n\r\n        // 最后一页未占完\r\n        if (index === this.totalPage - 1 && this.cardNum % this.showCardNum !== 0) {\r\n            const swiperCardNum: number = this.cardNum - this.showCardNum;\r\n            this.renderer.setStyle(this.cards.nativeElement, 'left', `${- (swiperCardNum) * this.swiperCardWidth - (swiperCardNum - 1) * this.cardSpace}px`);\r\n            this.renderer2.setStyle(this.swipercardComs.toArray()[swiperCardNum].nativeElement, 'margin-right', this.cardGap);\r\n            return;\r\n        }\r\n\r\n        // 无限循环\r\n        if (index === this.totalPage && this.loop) {\r\n            this.renderer.setStyle(this.cards.nativeElement, 'left', `${-(this.totalWidth)}px`);\r\n            return;\r\n\r\n        }\r\n        if (index === -1 && this.loop) {\r\n            this.renderer.setStyle(this.cards.nativeElement, 'left', `${this.swiperCardWidth * this.showCardNum + (this.showCardNum - 1) * this.cardSpace}px`);\r\n            return;\r\n        }\r\n\r\n        this.renderer.setStyle(this.cards.nativeElement, 'left', `${- index * 100}%`);\r\n    }\r\n\r\n    // 调整第一页或者最后一页的位置，为动画做准备\r\n    private setPosition(targetEle: Element, lastToFirst: boolean): void {\r\n        this.renderer.setStyle(targetEle, 'transform', `translateX(${lastToFirst ? this.totalWidth : this.totalWidth * -1}px)`);\r\n    }\r\n\r\n    private adjustPosition(targetEle?: Element): void {\r\n        setTimeout((): void => {\r\n            this.renderer.removeStyle(targetEle, 'transform');\r\n            this.renderer.removeStyle(this.cards.nativeElement, 'transition');\r\n            this.setLeftPosition(this.currentPage);\r\n            this.activeIndexChange.emit(this.currentPage);\r\n        }, this.transitionSpeed);\r\n    }\r\n\r\n    // 计算每页显示卡片数，总页数及当前页\r\n    private calculatpaging(): void {\r\n        this.calculateTotalPage();\r\n        this.calculateCurrentPage(this.activeIndex);\r\n    }\r\n\r\n    /**\r\n     * 计算卡片宽度\r\n     */\r\n    private calculatecardWidth(): void {\r\n        // 初始化时，多图且左右翻页按钮还没有显示，容器元素的可用宽度需要减去左右按钮的宽度之和32+32=64\r\n        if (this.totalPage === 0  && this.showCardNum > 1) {\r\n            this.pageWidth = this.wrapperEle.nativeElement.getBoundingClientRect().width - 64;\r\n        } else {\r\n            this.pageWidth = this.wrapperEle.nativeElement.getBoundingClientRect().width;\r\n        }\r\n\r\n        // 每页卡片总间距\r\n        this.cardSpace = this.showCardNum > 1 ? parseInt(this.cardGap, 10) : 0;\r\n        const cardsSpace: number = (this.showCardNum - 1) * parseInt(this.cardGap, 10);\r\n        this.swiperCardWidth = (this.pageWidth - cardsSpace) / this.showCardNum;\r\n        this.totalWidth = this.swiperCardWidth * this.cardNum + cardsSpace * this.totalPage;\r\n\r\n        this.swipercardComs.toArray().forEach((item: TpSwiperComponent, index: number) => {\r\n            // 设置卡片宽度\r\n            this.renderer2.setStyle(item.nativeElement, 'width', this.swiperCardWidth + 'px');\r\n            // 设置卡片间距，每页最后一个卡片不设置\r\n            if ((index + 1) % this.showCardNum !== 0 && index !== this.cardNum - 1) {\r\n                this.renderer2.setStyle(item.nativeElement, 'margin-right', this.cardSpace + 'px');\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    /**\r\n     * 计算总页数\r\n     */\r\n    private calculateTotalPage(): void {\r\n        this.totalPage = Math.ceil(this.cardNum / this.showCardNum);\r\n        if (this.currentPage > this.totalPage) {\r\n            this.activeCard(this.totalPage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  计算当前页\r\n     */\r\n    private calculateCurrentPage(index: number): void {\r\n        // 当前索引值不正确，不处理\r\n        if (index < 0 || index > (this.cardNum - 1)) {\r\n            return;\r\n        }\r\n\r\n        if (this.showCardNum === 1) {\r\n            this.currentPage = index;\r\n            return;\r\n        }\r\n\r\n        // 当前一页卡片的最大最小索引\r\n        const maxIndex: number = (this.currentPage + 1) * this.showCardNum - 1;\r\n        const minIndex: number = this.currentPage > 0 ? (this.currentPage * this.showCardNum - 1) : 0;\r\n        // 当前索卡片是否在当前页面\r\n        if (index < minIndex || index > maxIndex) {\r\n            this.currentPage = Math.floor((index + 1) / this.showCardNum);\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TiIconModule, TiOutlineModule } from '@cloud/tiny3';\r\n\r\nimport { TpSwiperComponent } from './TpSwiperComponent';\r\nimport { TpSwipercardComponent } from './TpSwipercardComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TiIconModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [TpSwiperComponent, TpSwipercardComponent],\r\n  declarations: [TpSwiperComponent, TpSwipercardComponent]\r\n})\r\n\r\nexport class TpSwiperModule {}\r\nexport { TpSwiperComponent } from './TpSwiperComponent';\r\nexport { TpSwipercardComponent } from './TpSwipercardComponent';\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpGoandbackModule } from '../goandback/TpGoandbackModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpGoandbackModule\r\n  ]\r\n})\r\nexport class TpBindingModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TpBindingModule } from './TpBindingModule';\r\nimport { TiLocale } from '@cloud/tiny3';\r\nimport { TpGoandbackService, TpGoAndBackConfig } from '../goandback/TpGoandbackService';\r\n\r\n/**\r\n * 绑定组件  binding，使用该服务时需要引入模块TpBindingModule，导入服务TpBindingSerive,通过调用TpBindingService.open(config)方法生成绑定内容\r\n *\r\n * <example-url>../tinyplus3demo/#/binding/binding-all</example-url>\r\n */\r\n@Injectable({\r\n    providedIn: TpBindingModule\r\n})\r\nexport class TpBindingService extends TpGoandbackService {\r\n    protected words: any = TiLocale.getLocaleWords().tpBinding;\r\n\r\n    public open(config?: TpGoAndBackConfig): void {\r\n        // binding组件-url无需添加params处理\r\n        config.addUrlParams = false;\r\n        super.open(config);\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { TpGoandbackModule } from '../goandback/TpGoandbackModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpGoandbackModule\r\n  ]\r\n})\r\n\r\nexport class TpIdentificationModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { TpIdentificationModule } from './TpIdentificationModule';\r\nimport { TiLocale, TiMessageType } from '@cloud/tiny3';\r\nimport { TpGoandbackService } from '../goandback/TpGoandbackService';\r\n\r\n/**\r\n * 认证组件  identification，使用该服务时需要引入模块TpIdentificationModule，导入服务TpIdentificationSerive,通过调用TpIdentificationService.open(config)方法生成认证内容\r\n *\r\n * <example-url>../tinyplus3demo/#/identification/identification-all</example-url>\r\n */\r\n@Injectable({\r\n    providedIn: TpIdentificationModule\r\n})\r\nexport class TpIdentificationService extends TpGoandbackService {\r\n    protected words: any = TiLocale.getLocaleWords().tpIdentification;\r\n    protected firstMessageType: TiMessageType = 'prompt';\r\n}\r\n","import { Component, ElementRef, HostBinding, Input, ViewChild } from '@angular/core';\r\nimport { TiBaseComponent, TiLocale, Util } from '@cloud/tiny3';\r\n/**\r\n * @ignore\r\n */\r\n@Component({\r\n    templateUrl: './identityauthmodal.html',\r\n    styleUrls: ['./identityauthmodal.less']\r\n})\r\n\r\nexport class TpIdentityauthModalComponent extends TiBaseComponent {\r\n    @Input() userInfoRes: any;\r\n    @Input() roleInfoRes: any;\r\n    @Input() userId: string;\r\n    @Input() serviceEndpointList: Array<any>;\r\n    @Input() mask: any;\r\n    @Input() camel: any;\r\n    @Input() successFn: any;\r\n    @Input() appWebPath: string;\r\n\r\n    @HostBinding('attr.id') id: string = 'tp-identityauth';\r\n    @ViewChild('OKButton', { static: true }) OKButton: ElementRef;\r\n    /**\r\n     * 组件使用的词条，此处统一获取\r\n     */\r\n    private i18n_Identityauth: any = TiLocale.getLocaleWords().tpIdentityauth;\r\n    /**\r\n     * @ignore\r\n     * 弹窗上部的红色alert相关配置\r\n     */\r\n    public errorAlert: any = {\r\n        show: false,\r\n        label: ''\r\n    };\r\n    /**\r\n     * @ignore\r\n     * 是否显示校验的错误提示\r\n     *\r\n     * 本组件不使用校验组件，只是引入tiErrorMsgComponent，在必要的时候显示或隐藏\r\n     */\r\n    public showErrorMessage: boolean = false;\r\n    /**\r\n     * @ignore\r\n     * 不同绑定方式下，组件的通用配置\r\n     */\r\n    public identityAuthModel: any = {\r\n        title: this.i18n_Identityauth.title, // 身份验证\r\n        nowBind: this.i18n_Identityauth.bind, // 立即绑定\r\n        noBindTip: this.i18n_Identityauth.no_bind, // 未绑定\r\n        hasBound: this.i18n_Identityauth.has_bound, // 已绑定\r\n        changeBindContent: this.i18n_Identityauth.change, // 修改\r\n        okButtonLabel: this.i18n_Identityauth.okBtn,\r\n        cancelLabel: TiLocale.getLocaleWords().tiCommon.cancelBtn\r\n    };\r\n    /**\r\n     * @ignore\r\n     * Iam服务网址\r\n     */\r\n    public iamUrl: string;\r\n    /**\r\n     * @ignore\r\n     * 蓝色alert的文本\r\n     */\r\n    public alertLabelLink: string;\r\n    /**\r\n     * @ignore\r\n     * 是否为管理员\r\n     */\r\n    public isSecuAdmin: boolean;\r\n\r\n    /**\r\n     * 验证方式为虚拟MFA的配置，表单中‘验证方式’选为'虚拟MFA'时生效\r\n     */\r\n    private bindMfaModel: any = {\r\n        id: 'vmfa',\r\n        key: this.i18n_Identityauth.verification_mfa,\r\n        label: this.i18n_Identityauth.verification_mfa,\r\n        content: '',\r\n        url: '',\r\n        disabled: !TiLocale.getLocaleWords().tpSupportMFA,\r\n        forbidChange: true, // 是否允许修改已绑定虚拟mfa\r\n        hideBoundContent: true, // 是否隐藏已绑定参数\r\n        helpTip: this.i18n_Identityauth.mfa_label_tip,\r\n        codeInput: { // 验证码输入框\r\n            value: '',\r\n            helpTip: this.i18n_Identityauth.bind_mfa_help_tip,\r\n            placeholder: this.i18n_Identityauth.verification_placeholder\r\n        },\r\n        getCodeBtn: { // mfa下没有获取验证码的按钮\r\n            label: ''\r\n        }\r\n    };\r\n    /**\r\n     * 验证方式为手机的配置，表单中‘验证方式’选为'手机'时生效\r\n     */\r\n    private bindPhone: any = {\r\n        id: 'sms',\r\n        key: this.i18n_Identityauth.verification_mobile,\r\n        label: this.i18n_Identityauth.bind_mobile,\r\n        content: '',\r\n        url: '',\r\n        forbidChange: false,\r\n        hideBoundContent: false,\r\n        codeInput: {\r\n            value: '',\r\n            helpTip: '',\r\n            placeholder: this.i18n_Identityauth.verification_placeholder\r\n        },\r\n        getCodeBtn: {\r\n            label: this.i18n_Identityauth.get_verification_code\r\n        }\r\n    };\r\n    /**\r\n     * 验证方式为邮箱的配置，表单中‘验证方式’选为'邮箱'时生效\r\n     */\r\n    private bindEmail: any = {\r\n        id: 'email',\r\n        key: this.i18n_Identityauth.verification_email,\r\n        label: this.i18n_Identityauth.bind_email,\r\n        content: '',\r\n        disabled: !TiLocale.getLocaleWords().tpSupportEmail,\r\n        url: '',\r\n        forbidChange: false,\r\n        hideBoundContent: false,\r\n        codeInput: {\r\n            value: '',\r\n            helpTip: '',\r\n            placeholder: this.i18n_Identityauth.email_verification_placeholder\r\n        },\r\n        getCodeBtn: {\r\n            label: this.i18n_Identityauth.get_verification_code\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     *\r\n     * 表单中使用的主要数据\r\n     */\r\n    public formModel: any = {\r\n        selected: {\r\n            content: '',\r\n            disabled: false,\r\n            url: '',\r\n            codeInput: {\r\n                label: this.i18n_Identityauth.verification_code,\r\n                value: '',\r\n                change: ($event: string): void => {\r\n                    this.formModel.selected.okBtn.disabled = !$event;\r\n                },\r\n                focus: (): void => {\r\n                    this.clearValidMessage();\r\n                }\r\n            },\r\n            getCodeBtn: {\r\n                disabled: false,\r\n                isLock: false,\r\n                tip: '',\r\n                click: (): void => {\r\n                    // 获取验证码\r\n                    this.getVerificationCode();\r\n                }\r\n            },\r\n            okBtn: {\r\n                disabled: true,\r\n                click: (): void => {\r\n                    this.verifyVerificationCode();\r\n                }\r\n            }\r\n        },\r\n        verificationModel: {\r\n            modelList: [this.bindPhone, this.bindEmail, this.bindMfaModel],\r\n            selected: {\r\n                value: '',\r\n                change: ($event): void => {\r\n                    this.formModel.selected = TpIdentityauthModalComponent.deepMerge(\r\n                        this.formModel.selected,\r\n                        this.formModel.verificationModel.modelList.filter(item => item.id === $event)[0]\r\n                    );\r\n                    this.clearValidMessage();\r\n                }\r\n            }\r\n        },\r\n        refresh: {\r\n            loaded: true,\r\n            refreshTip: this.i18n_Identityauth.refresh_tip,\r\n            click: (): void => {\r\n                this.formModel.refresh.loaded = false;\r\n                this.camel.get({\r\n                    url: {\r\n                        s: `${this.appWebPath}/rest/v3.0/OS-MFA/userinfo/{userId}`,\r\n                        o: {\r\n                            userId: this.userId\r\n                        }\r\n                    },\r\n                    timeout: 30000\r\n                })\r\n                    .then((response: any) => {\r\n                        this.formModel.refresh.loaded = true;\r\n                        this.handleUserBoundInfo(response);\r\n                    }, () => {\r\n                        this.formModel.refresh.loaded = true;\r\n                        // 错误提示\r\n                        this.requestErrorTip();\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    // 获取https://console.huaweicloud.com/iam/\r\n    private static getIamEndpoint(id: string, endpointList: Array<any>): string {\r\n        const endpoint: any = endpointList.filter((item: any) => item.id === id)[0];\r\n        if (endpoint) {\r\n            return endpoint.endpoint;\r\n        }\r\n\r\n        return '';\r\n    }\r\n    /**\r\n     * 对象深合并方法，不适宜数组对象\r\n     *\r\n     * 1.targetObj中已存在的简单属性会被覆盖；已存在的同名数组被合并；已存在的对象属性会进入内部进行合并，规则同上\r\n     * 2.targetObj中不存在的属性直接添加\r\n     *\r\n     * @param targetObj 对象类型\r\n     * @param sourceObj 对象类型\r\n     * @returns 被合并的targetObj\r\n     */\r\n    private static deepMerge(targetObj: Object, sourceObj: Object): any {\r\n        for (const key in sourceObj) {\r\n            if (Array.isArray(sourceObj[key])) {\r\n                targetObj[key].push(...sourceObj[key]);\r\n            } else if (typeof sourceObj[key] === 'object') {\r\n                this.deepMerge(targetObj[key], sourceObj[key]);\r\n            } else {\r\n                targetObj[key] = sourceObj[key];\r\n            }\r\n        }\r\n\r\n        return targetObj;\r\n    }\r\n    /**\r\n     * 初始化用户信息\r\n     */\r\n    private handleUserBoundInfo(response: any): void {\r\n        const verificationModel: any = this.formModel.verificationModel;\r\n        if (!response.method) {\r\n            verificationModel.selected.value = verificationModel.selected.value || verificationModel.modelList[0].id;\r\n        }\r\n        verificationModel.modelList.forEach((item: any) => {\r\n            if (!response.method) {\r\n                item.content = '';\r\n\r\n                return;\r\n            }\r\n            // response.method默认绑定方式\r\n            if (response.method === item.id) {\r\n                // 刷新时要保持原来选择\r\n                verificationModel.selected.value = verificationModel.selected.value || item.id;\r\n                // response.info默认绑定方式的绑定信息\r\n                item.content = response.info[response.method] || response.info.mobile;\r\n            } else if (response[item.id] || (item.id === 'sms' && response.mobile)) {\r\n                item.content = response[item.id] || response.mobile;\r\n            }\r\n            // 电话号码格式需单独处理\r\n            if (item.id === 'sms' && item.content) {\r\n                const infoArr: Array<any> = item.content.split('-');\r\n                // tslint:disable-next-line: newline-per-chained-call\r\n                item.content = `+${infoArr[0].trim().replace(/^0+/, '')}${infoArr[1]}`;\r\n            }\r\n        });\r\n\r\n        verificationModel.selected.change(verificationModel.selected.value);\r\n    }\r\n\r\n    private getVerificationCode(): void {\r\n        this.mask.show();\r\n        const sendCodeRequestData: any = {\r\n            user_id: this.userId,\r\n            method: this.formModel.verificationModel.selected.value,\r\n            scene: 'opsProtect'\r\n        };\r\n        this.camel.post({\r\n            url: {\r\n                s: `${this.appWebPath}/rest/v3.0/OS-MFA/sendcode`,\r\n                o: {}\r\n            },\r\n            timeout: 30000,\r\n            params: sendCodeRequestData\r\n        })\r\n            .then((res: any) => {\r\n                this.mask.hide();\r\n                this.formModel.selected.okBtn.disabled = !this.formModel.selected.codeInput.value;\r\n                // 按钮灰化，倒计时 变化按钮提示\r\n                this.changeVerificationCodeBtnTip(res.remain_counter);\r\n                this.formModel.selected.getCodeBtn.disabled = true;\r\n                this.countDown(60);\r\n            }, (e: any) => {\r\n                this.mask.hide();\r\n                // 该功能已锁定,请30分钟之后再操作。\r\n                const label: string =\r\n                    e.status === 423 ? this.i18n_Identityauth.operation_lock : this.i18n_Identityauth.system_busy;\r\n                // 错误提示\r\n                this.requestErrorTip(label);\r\n            });\r\n    }\r\n\r\n    // 获取验证码提示变化\r\n    private changeVerificationCodeBtnTip(remainCounter: number): void {\r\n        if (remainCounter <= 3 && remainCounter > 0) { // 再请求获取验证码{0}次,该功能将被锁定。\r\n            this.formModel.selected.getCodeBtn.tip =\r\n                Util.formatEntry(this.i18n_Identityauth.get_verification_code_times, [remainCounter]);\r\n        } else if (remainCounter <= 0) { // 该功能已锁定\r\n            this.formModel.selected.getCodeBtn.isLock = true;\r\n            this.formModel.selected.getCodeBtn.tip = this.i18n_Identityauth.operation_lock_btn_tip;\r\n        } else {\r\n            this.formModel.selected.getCodeBtn.tip = '';\r\n        }\r\n    }\r\n\r\n    private requestErrorTip(label?: string): void {\r\n        this.errorAlert.label = label || this.i18n_Identityauth.system_busy;\r\n        this.errorAlert.show = true;\r\n    }\r\n\r\n    // 倒计时\r\n    private countDown(s: number): void {\r\n        let time: number = s;\r\n        time--;\r\n        if (time >= 0) {\r\n            this.formModel.selected.getCodeBtn.label =\r\n                Util.formatEntry(this.i18n_Identityauth.next_get_verification_code, [time]);\r\n            setTimeout(() => {\r\n                this.countDown(time);\r\n            }, 1000);\r\n        } else if (this.formModel.selected.getCodeBtn.isLock) { // 已锁定\r\n            this.formModel.selected.getCodeBtn.disabled = true;\r\n            this.formModel.selected.getCodeBtn.label = this.i18n_Identityauth.get_verification_code;\r\n        } else {\r\n            this.formModel.selected.getCodeBtn.disabled = false;\r\n            this.formModel.selected.getCodeBtn.label = this.i18n_Identityauth.get_verification_code;\r\n        }\r\n    }\r\n\r\n    private verifyVerificationCode(): void {\r\n        const requestData: any = {\r\n            verifycode: this.formModel.selected.codeInput.value, // 验证码输入值\r\n            method: this.formModel.verificationModel.selected.value, // 验证方式\r\n            scene: 'opsProtect'\r\n        };\r\n        this.mask.show();\r\n        this.camel.post({\r\n            url: {\r\n                s: `${this.appWebPath}/rest/v3.0/OS-MFA/verifycode`,\r\n                o: {}\r\n            },\r\n            timeout: 30000,\r\n            params: requestData\r\n        })\r\n            .then((res: any) => {\r\n                this.mask.hide();\r\n                if (res.cloud_verify_ticket) {\r\n                    // 存储验证码ticket到cookie\r\n                    document.cookie =\r\n                        `cloud_verify_ticket=${res.cloud_verify_ticket};path=/;domain=${document.domain.replace(/.+?\\./, '')}`;\r\n                    // 服务业务逻辑处理\r\n                    this.successFn();\r\n                    this.close();\r\n                } else {\r\n                    this.addValidMessage();\r\n                }\r\n            }, () => {\r\n                this.mask.hide();\r\n                this.addValidMessage();\r\n            });\r\n    }\r\n    /**\r\n     * 去掉input红色边框及背景，隐藏errorMessage\r\n     */\r\n    private clearValidMessage(): void {\r\n        this.showErrorMessage = false;\r\n        const codeInputElem: Element = this.nativeElement.querySelector('ti-item .tp-identityauth-code .tp-identityauth-code-input');\r\n        if (codeInputElem) {\r\n            this.renderer.removeClass(codeInputElem, 'ng-invalid');\r\n        }\r\n    }\r\n    /**\r\n     * 添加input红色边框及背景，显示errorMessage\r\n     */\r\n    private addValidMessage(): void {\r\n        this.showErrorMessage = true;\r\n        const codeInputElem: Element = this.nativeElement.querySelector('ti-item .tp-identityauth-code .tp-identityauth-code-input');\r\n        if (codeInputElem) {\r\n            this.renderer.addClass(codeInputElem, 'ng-invalid');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     *\r\n     * 验证码输入框回车操作\r\n     */\r\n    public enter(): void {\r\n        Util.trigger(this.OKButton.nativeElement, 'focus');\r\n        this.formModel.selected.okBtn.click();\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public close(): void { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public dismiss(): void { }\r\n\r\n    ngOnInit(): void {\r\n        this.iamUrl = TpIdentityauthModalComponent.getIamEndpoint('iam', this.serviceEndpointList);\r\n        this.bindMfaModel.url = `${this.iamUrl}#/iam/bindMFA/${this.userId}`;\r\n        // ctc下定制了修改绑定内容的链接\r\n        this.bindPhone.url = this.i18n_Identityauth.changeBindContent || `${this.iamUrl}?#/modifyCredential/phone`;\r\n        this.bindEmail.url = `${this.iamUrl}?#/modifyCredential/email`;\r\n        // roles里有\"secu_admin\"时为管理员\r\n        this.isSecuAdmin = this.roleInfoRes.roles.indexOf('secu_admin') === -1 ? false : true;\r\n        // 管理员提示文本中有取消操作保护的链接\r\n        if (this.isSecuAdmin) {\r\n            // closeIdentityauth字段是ctc局点下定制的关闭二次认证的链接\r\n            this.alertLabelLink = this.i18n_Identityauth.closeIdentityauth\r\n                || this.iamUrl + this.i18n_Identityauth.method_alert_label_link_url;\r\n        }\r\n\r\n        this.handleUserBoundInfo(this.userInfoRes);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  TiAlertModule, TiButtonModule, TiFormfieldModule, TiLoadingModule, TiLocaleModule, TiModalModule,\r\n  TiRadioModule, TiTextModule, TiTipModule, TiValidationModule, TiOutlineModule\r\n} from '@cloud/tiny3';\r\n\r\nimport { TpIconModule } from '../../components/icon/TpIconModule';\r\nimport { TpHelptipModule } from '../../components/helptip/TpHelptipModule';\r\n\r\nimport { TpIdentityauthModalComponent } from './TpIdentityauthmodalComponent';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    TiAlertModule,\r\n    TiButtonModule,\r\n    TiFormfieldModule,\r\n    TiLoadingModule,\r\n    TiLocaleModule,\r\n    TiModalModule,\r\n    TiRadioModule,\r\n    TiTextModule,\r\n    TiTipModule,\r\n    TiValidationModule,\r\n    TpHelptipModule,\r\n    TpIconModule,\r\n    TiOutlineModule\r\n  ],\r\n  exports: [],\r\n  declarations: [TpIdentityauthModalComponent],\r\n  entryComponents: [TpIdentityauthModalComponent]\r\n})\r\n\r\nexport class TpIdentityauthModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { TiLocale, TiModalService, Util } from '@cloud/tiny3';\r\n\r\nimport { TpIdentityauthModule } from './TpIdentityauthModule';\r\n\r\nimport { TpIdentityauthModalComponent } from './TpIdentityauthmodalComponent';\r\nimport { CfUtil } from '../../cfutils/CfUtil';\r\n\r\n/**\r\n * 二次认证组件\r\n *\r\n * <example-url>../tinyplus3demo/#/identityauth/identityauth-all</example-url>\r\n */\r\n@Injectable({\r\n    providedIn: TpIdentityauthModule\r\n})\r\n\r\nexport class TpIdentityauthService {\r\n    constructor(private tiModal: TiModalService) { }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public camel: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public mask: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public msgService: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public userId: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public serviceEndpointList: Array<any>;\r\n    private appWebPath: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    public successFn: () => void;\r\n\r\n    private queryIsOpen(): void {\r\n        this.mask.show();\r\n        this.camel.get({\r\n            url: {\r\n                s: `${this.appWebPath}/rest/v3-ext/users/op-mfa/{user_id}`,\r\n                o: {\r\n                    user_id: this.userId\r\n                }\r\n            },\r\n            timeout: 30000\r\n        })\r\n            .then((res: any) => {\r\n                this.mask.hide();\r\n                if (res.mfa_support === 'false') {\r\n                    this.successFn();\r\n\r\n                    return;\r\n                }\r\n                // 判断是否已开启敏感操作保护，如开启则进行验证，否则直接进行业务处理\r\n                if (res.ops_switch === 'true') {\r\n                    this.checkCerifyCode();\r\n                } else {\r\n                    this.successFn();\r\n                }\r\n            }, () => {\r\n                this.mask.hide();\r\n                this.msgService.showError(TiLocale.getLocaleWords().tpBinding.confirm_system_busy);\r\n            });\r\n    }\r\n\r\n    private checkCerifyCode(): void {\r\n        // 获取cookie中cloud_verify_ticket  查询校验码合法性\r\n        const storage: any = CfUtil.getStorageService();\r\n        let cloud_verify_ticket: string | undefined;\r\n        if (storage && storage.cookieStorage && storage.cookieStorage.getItem) {\r\n            cloud_verify_ticket = storage.cookieStorage.getItem('cloud_verify_ticket');\r\n        }\r\n        if (cloud_verify_ticket) {\r\n            this.mask.show();\r\n            // 查询验证码合法性\r\n            this.camel.post({\r\n                url: {\r\n                    s: `${this.appWebPath}/rest/v3-ext/users/op-mfa/{user_id}`,\r\n                    o: {\r\n                        user_id: this.userId\r\n                    }\r\n                },\r\n                timeout: 30000,\r\n                params: {\r\n                    cloudVerifyTicket: cloud_verify_ticket\r\n                }\r\n            })\r\n                .then((res: any) => {\r\n                    this.mask.hide();\r\n                    // 验证码合法、直接进行业务处理\r\n                    if (res.id) {\r\n                        this.successFn();\r\n                    }\r\n                }, () => {\r\n                    this.mask.hide();\r\n                    this.identityAuth();\r\n                });\r\n        } else {\r\n            this.identityAuth();\r\n        }\r\n    }\r\n\r\n    private identityAuth(): void {\r\n        // 需查询用户信息(绑定状态)。\r\n        this.mask.show();\r\n        const getUserInfoPromise: Promise<any> = this.camel.get({\r\n            url: {\r\n                s: `${this.appWebPath}/rest/v3.0/OS-MFA/userinfo/{user_id}`,\r\n                o: {\r\n                    user_id: this.userId\r\n                }\r\n            },\r\n            timeout: 30000\r\n        });\r\n        const getRoleInfoPromise: Promise<any> = this.camel.get({\r\n            url: {\r\n                s: `${this.appWebPath}/rest/global/token`,\r\n                o: {}\r\n            },\r\n            timeout: 30000\r\n        });\r\n\r\n        const getServiceEndpointList: () => Promise<any> = (): Promise<any> => {\r\n            // 如果为了本地测试，open方法传入了config.serviceEndpointList，则需要特殊处理\r\n            if (this.serviceEndpointList) {\r\n                return new Promise((resolve: any): void => {\r\n                    resolve(this.serviceEndpointList);\r\n                });\r\n            } else {\r\n                return CfUtil.getEndpoints()\r\n                            .then((endpoints: any) => endpoints.serviceEndpointList);\r\n            }\r\n        };\r\n\r\n        Promise.all([getUserInfoPromise, getRoleInfoPromise, getServiceEndpointList()])\r\n            .then((response: any) => {\r\n                const userInfoRes: any = response[0];\r\n                const roleInfoRes: any = response[1];\r\n                this.mask.hide();\r\n                this.tiModal.open(TpIdentityauthModalComponent, {\r\n                    id: 'tp-identityauth',\r\n                    modalClass: 'tp-identityauth-modal',\r\n                    context: {\r\n                        userInfoRes,\r\n                        roleInfoRes,\r\n                        userId: this.userId,\r\n                        serviceEndpointList: response[2],\r\n                        mask: this.mask,\r\n                        camel: this.camel,\r\n                        successFn: this.successFn,\r\n                        appWebPath: this.appWebPath\r\n                    }\r\n                });\r\n            }, () => {\r\n                this.mask.hide();\r\n                this.msgService.showError(TiLocale.getLocaleWords().tpBinding.confirm_system_busy);\r\n            });\r\n    }\r\n    /**\r\n     * 开启二次认证\r\n     *\r\n     * @param successFn 二次认证通过或不需要认证时的回调函数\r\n     *\r\n     * @param config 组件本地测试需要的参数，开发者实际场景中不需要\r\n     */\r\n    public open(successFn: () => void, config?: any): void {\r\n        this.successFn = successFn;\r\n        this.appWebPath = CfUtil.getAppWebPath();\r\n        if (config) {\r\n            this.camel = config.camel;\r\n            this.msgService = config.msg;\r\n            this.mask = config.mask;\r\n            this.userId = config.userId;\r\n            this.serviceEndpointList = config.serviceEndpointList;\r\n            this.queryIsOpen();\r\n        } else {\r\n            CfUtil.getUser()\r\n                .then((user: any) => {\r\n                this.camel = CfUtil.getHttpService();\r\n                if (user.userId && this.camel) {\r\n                    this.userId = user.userId;\r\n                    this.msgService = CfUtil.getMessage();\r\n                    this.mask = CfUtil.getMask();\r\n                    this.queryIsOpen();\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpGoandbackModule } from '../goandback/TpGoandbackModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    TpGoandbackModule\r\n  ]\r\n})\r\n\r\nexport class TpRechargeModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { TpRechargeModule } from './TpRechargeModule';\r\nimport { TiLocale, TiMessageType } from '@cloud/tiny3';\r\nimport { TpGoandbackService } from '../goandback/TpGoandbackService';\r\n\r\n/**\r\n * 充值组件  recharge，使用该服务时需要引入模块TpRechargeModule，导入服务TpRechargeSerive,通过调用TpRechargeService.open(config)方法生成充值内容\r\n *\r\n * <example-url>../tinyplus3demo/#/recharge/recharge-all</example-url>\r\n */\r\n@Injectable({\r\n    providedIn: TpRechargeModule\r\n})\r\nexport class TpRechargeService extends TpGoandbackService {\r\n    protected words: any = TiLocale.getLocaleWords().tpRecharge;\r\n    protected firstMessageType: TiMessageType = 'error';\r\n}\r\n","\r\n\r\nimport {\r\n    Directive,\r\n    OnDestroy,\r\n    OnInit\r\n} from '@angular/core';\r\nimport { TiTableColumns, TiTableComponent, Util } from '@cloud/tiny3';\r\nimport { CfUser } from '@cloud/cfdata';\r\nimport { CfUtil } from '../../cfutils/CfUtil'\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * 表格记忆列切换指令\r\n *\r\n * 10.0.4 新增\r\n *\r\n *\r\n * <example-url>../tinyplus3demo/#/storage/storage-all</example-url>\r\n */\r\n@Directive({\r\n    selector: 'ti-table[tpStorageColumns]'\r\n})\r\nexport class TpStorageColumnsDirective implements OnInit, OnDestroy {\r\n    /**\r\n     * @ignore\r\n     */\r\n    public static readonly GET_URL: string = './rest/silvan/rest/v1.0/setting/{userid}/{category}/update.json';\r\n    /**\r\n     * @ignore\r\n     */\r\n    public static readonly POST_URL: string = './rest/silvan/rest/v1.0/setting/{userid}/update.json';\r\n    private tableCom: TiTableComponent;\r\n    private httpService: any;\r\n    private user: CfUser;\r\n    private updateColumnsSubscription: Subscription;\r\n    constructor(tableCom: TiTableComponent) {\r\n        this.tableCom = tableCom;\r\n    }\r\n    ngOnInit(): void {\r\n        if (this.shouldStorageColumnsToggle()) {\r\n            this.httpService = CfUtil.getHttpService();\r\n            CfUtil.getUser()\r\n                .then((user: CfUser) => {\r\n                    this.user = user\r\n                    this.getColumns();\r\n                    this.updateColumnsSubscription = this.tableCom.updateColumnsSubject.subscribe(() => {\r\n                        this.postColumns();\r\n                    });\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                });\r\n        }\r\n    }\r\n    ngOnDestroy(): void {\r\n        if (this.updateColumnsSubscription) {\r\n            this.updateColumnsSubscription.unsubscribe();\r\n        }\r\n    }\r\n    private getColumns(): void {\r\n        if (!this.user && !this.httpService) {\r\n            return;\r\n        }\r\n        const userid = this.user.userId;\r\n        const storageId = this.tableCom.storageId;\r\n        this.httpService.get({\r\n            url: {\r\n                s: TpStorageColumnsDirective.GET_URL,\r\n                o: {\r\n                    userid: userid,\r\n                    category: storageId\r\n                }\r\n            }\r\n        }).then((data: Array<any>) => {\r\n            this.tableCom.columns.forEach((column: TiTableColumns, index: number) => {\r\n                if (!Util.isNull(data[index])) {\r\n                    column.show = data[index];\r\n                };\r\n            })\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    private postColumns(): void {\r\n        if (!this.user && !this.httpService) {\r\n            return;\r\n        }\r\n\r\n        const columns = this.tableCom.columns.map((column: TiTableColumns): boolean => {\r\n            return column.show;\r\n        });\r\n        const userid = this.user.userId;\r\n        const storageId = this.tableCom.storageId;\r\n        this.httpService.post({\r\n            url: {\r\n                s: TpStorageColumnsDirective.POST_URL,\r\n                o: {\r\n                    userid: userid\r\n                }\r\n            },\r\n            params: {\r\n                ategory: storageId,\r\n                setting: JSON.stringify(columns),\r\n                lastModifiedDateLong: new Date().getTime()\r\n            }\r\n        }).then((data: any) => {\r\n            // 成功后不做处理\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    private shouldStorageColumnsToggle(): boolean {\r\n        return !!(this.tableCom && this.tableCom.storageId);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TpStorageColumnsDirective } from './TpStorageColumnsDirective'\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [TpStorageColumnsDirective],\r\n  declarations: [TpStorageColumnsDirective]\r\n})\r\nexport class TpStorageColumnsModule {\r\n}\r\nexport { TpStorageColumnsDirective } from './TpStorageColumnsDirective';\r\n","// tslint:disable-next-line:no-implicit-dependencies\r\nimport { Component, ContentChild, Input, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { TiBaseComponent, Util } from '@cloud/tiny3';\r\nexport interface TpTimelineOption {\r\n    /**\r\n     * 设置时间轴条目对应的轴心标识，不同状态对应的标识颜色不一样\r\n     */\r\n    type?: 'info' | 'success' | 'danger' | 'primary' | 'warning';\r\n    /**\r\n     * 设置时间轴条目的文本。\r\n     */\r\n    label: string;\r\n    /**\r\n     * 设置时间轴的时间。\r\n     */\r\n    time?: string;\r\n    /**\r\n     * 是否为时间轴标题\r\n     * 10.1.4新增\r\n     */\r\n    isTitle?: boolean;\r\n    /**\r\n     * 执行失败错误信息\r\n     * 10.1.4新增\r\n     */\r\n    errorMessage?: string;\r\n    /**\r\n     * 时间轴问号tip提示\r\n     * 10.1.4新增\r\n     */\r\n    iconTip?:  string | TemplateRef<any> | any;\r\n    /**\r\n     * tip方向\r\n     * 10.1.4新增\r\n     */\r\n    iconTipPosition?: string;\r\n    /**\r\n     * tip最大宽度\r\n     * 10.1.4新增\r\n     */\r\n    iconTipMaxWidth?: string;\r\n\r\n}\r\n/**\r\n * 时间线timeline组件\r\n * <example-url>../tinyplus3demo/#/timeline/timeline-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-timeline',\r\n    templateUrl: './timeline.html',\r\n    styleUrls: ['./timeline.less']\r\n})\r\n\r\nexport class TpTimelineComponent extends TiBaseComponent {\r\n    /**\r\n     * 时间轴配置项总接口\r\n     */\r\n    @Input() options: Array<TpTimelineOption>;\r\n    /**\r\n     * 当前激活项（正在进行时）\r\n     * 10.1.4新增\r\n     */\r\n    @Input() activeIndex: number = -1;\r\n    /**\r\n     * @ignore\r\n     */\r\n    @ContentChild('item', { static: true }) itemTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     * 时间轴一级信息集合\r\n     */\r\n    public titleOptions = [];\r\n\r\n    ngOnInit(): void {\r\n        super.ngOnInit();\r\n        this.titleOptions = this.getTitleOptions();\r\n        this.changeToSuccess();\r\n    }\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['activeIndex'] && !changes['activeIndex'].firstChange) {\r\n            this.changeToSuccess();\r\n        }\r\n        if (changes['options'] && !changes['options'].firstChange) {\r\n            this.titleOptions = this.getTitleOptions();\r\n        }\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    public findItemIndex(item: TpTimelineOption) {\r\n        return this.titleOptions.findIndex( (ele: TpTimelineOption) => ele === item);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 获取时间轴一级（标题）信息集合\r\n     */\r\n    public getTitleOptions() : Array<TpTimelineOption> {\r\n        return this.options.filter( (option: TpTimelineOption) => option.isTitle);\r\n    }\r\n    /**\r\n     * @ignore\r\n     * activeIndex之前的项全部变更为success状态\r\n     */\r\n    public changeToSuccess(): void {\r\n        if (this.activeIndex === -1 || Util.isUndefined(this.activeIndex) || !Util.isNumber(this.activeIndex)) {\r\n            return;\r\n        }\r\n        this.options.forEach ( (option: TpTimelineOption, index: number) => {\r\n            option.type = index < this.activeIndex ? 'success' : 'primary';\r\n        })\r\n    }\r\n    /**\r\n     * @ignore\r\n     * 判断当前一级时间轴状态\r\n     */\r\n    public isSuccess(option: TpTimelineOption): boolean {\r\n        if(!option.isTitle) {\r\n            return;\r\n        }\r\n        let level2Options: Array<TpTimelineOption> = [];\r\n        const index: number = this.options.findIndex((item: TpTimelineOption) => item === option);\r\n        let isSucess: boolean = true;\r\n        for (let i = index + 1; i <= this.activeIndex; i++) {\r\n            if (this.options[i] && this.options[i].isTitle) {\r\n                break;\r\n            }\r\n            level2Options.push(this.options[i]);\r\n        }\r\n        if (level2Options.length > 0) {\r\n            level2Options.forEach((option: TpTimelineOption) => {\r\n                if (option.type && option.type !== 'success') {\r\n                    isSucess = false;\r\n                }\r\n            })\r\n        }\r\n\r\n        return isSucess;\r\n    }\r\n}\r\n","// tslint:disable-next-line:no-implicit-dependencies\r\nimport { CommonModule } from '@angular/common';\r\n// tslint:disable-next-line:no-implicit-dependencies\r\nimport { NgModule } from '@angular/core';\r\nimport { TiTipModule } from '@cloud/tiny3';\r\nimport { TpIconModule } from '../icon/TpIconModule';\r\nimport { TpTimelineComponent } from './TpTimelineComponent';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,\r\n            TpIconModule,\r\n            TiTipModule\r\n  ],\r\n  exports: [TpTimelineComponent],\r\n  declarations: [TpTimelineComponent]\r\n})\r\n\r\nexport class TpTimelineModule {}\r\nexport { TpTimelineComponent, TpTimelineOption } from './TpTimelineComponent';\r\n","import { Component, ViewEncapsulation } from '@angular/core';\r\n/**\r\n * @ignore\r\n *\r\n * ��δ�������\r\n *\r\n * <example-url>../tinyplus3demo/#/tagsearch/tagsearch-all</example-url>\r\n */\r\n@Component({\r\n    selector: 'tp-tagsearch',\r\n    templateUrl: 'tagsearch.html',\r\n    styleUrls: ['./tagsearch.less'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class TpTagsearchComponent {}\r\n","import { NgModule } from '@angular/core';\r\nimport { TpTagsearchComponent } from './TpTagsearchComponent';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  exports: [TpTagsearchComponent],\r\n  declarations: [TpTagsearchComponent]\r\n})\r\n\r\nexport class TpTagsearchModule {}\r\nexport { TpTagsearchComponent } from './TpTagsearchComponent';\r\n"]}