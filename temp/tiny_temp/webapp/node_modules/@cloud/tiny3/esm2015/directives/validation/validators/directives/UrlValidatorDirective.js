import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(UrlValidatorDirective, UrlValidatorDirective.NAME))
// @Directive(BaseValidator.getDirectiveConfig(RequiredValidatorDirective, RequiredValidatorDirective.NAME))
export class UrlValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(UrlValidatorDirective.NAME);
    }
}
UrlValidatorDirective.NAME = 'tiUrl';
UrlValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiUrl][formControlName],[tiUrl][formControl],[tiUrl][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => UrlValidatorDirective),
                        multi: true
                    }]
            },] }
];
UrlValidatorDirective.propDecorators = {
    enabled: [{ type: Input, args: [UrlValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXJsVmFsaWRhdG9yRGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnkzL2RpcmVjdGl2ZXMvdmFsaWRhdGlvbi92YWxpZGF0b3JzL2RpcmVjdGl2ZXMvVXJsVmFsaWRhdG9yRGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFnRCxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3RixrR0FBa0c7QUFVbEcsNEdBQTRHO0FBQzVHLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxhQUFhO0lBVnhEOztRQWFFLGlCQUFZLEdBQVcsYUFBYSxDQUFDLGVBQWUsQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNuRixDQUFDOztBQUhpQiwwQkFBSSxHQUFXLE9BQU8sQ0FBQzs7WUFYeEMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnRUFBZ0U7Z0JBQzFFLFNBQVMsRUFBRSxDQUFDO3dCQUNSLE9BQU8sRUFBRSxhQUFhO3dCQUN0QiwyQ0FBMkM7d0JBQzNDLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMscUJBQXFCLENBQUM7d0JBQ3BELEtBQUssRUFBRSxJQUFJO3FCQUNkLENBQUM7YUFDSDs7O3NCQUlFLEtBQUssU0FBQyxxQkFBcUIsQ0FBQyxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCYXNlVmFsaWRhdG9yIH0gZnJvbSAnLi9CYXNlVmFsaWRhdG9yJztcclxuaW1wb3J0IHsgVmFsaWRhdG9yLCBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMsIE5HX1ZBTElEQVRPUlMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbi8vIEBEaXJlY3RpdmUoQmFzZVZhbGlkYXRvci5nZXREaXJlY3RpdmVDb25maWcoVXJsVmFsaWRhdG9yRGlyZWN0aXZlLCBVcmxWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSkpXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiBgW3RpVXJsXVtmb3JtQ29udHJvbE5hbWVdLFt0aVVybF1bZm9ybUNvbnRyb2xdLFt0aVVybF1bbmdNb2RlbF1gLFxyXG4gIHByb3ZpZGVyczogW3tcclxuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcclxuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1mb3J3YXJkLXJlZlxyXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBVcmxWYWxpZGF0b3JEaXJlY3RpdmUpLFxyXG4gICAgICBtdWx0aTogdHJ1ZVxyXG4gIH1dXHJcbn0pXHJcbi8vIEBEaXJlY3RpdmUoQmFzZVZhbGlkYXRvci5nZXREaXJlY3RpdmVDb25maWcoUmVxdWlyZWRWYWxpZGF0b3JEaXJlY3RpdmUsIFJlcXVpcmVkVmFsaWRhdG9yRGlyZWN0aXZlLk5BTUUpKVxyXG5leHBvcnQgY2xhc3MgVXJsVmFsaWRhdG9yRGlyZWN0aXZlIGV4dGVuZHMgQmFzZVZhbGlkYXRvciB7XHJcbiAgc3RhdGljIHJlYWRvbmx5IE5BTUU6IHN0cmluZyA9ICd0aVVybCc7XHJcbiAgQElucHV0KFVybFZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSBlbmFibGVkOiBib29sZWFuO1xyXG4gIHZhbGlkYXRvclN0cjogc3RyaW5nID0gQmFzZVZhbGlkYXRvci5nZXRWYWxpZGF0b3JTdHIoVXJsVmFsaWRhdG9yRGlyZWN0aXZlLk5BTUUpO1xyXG59XHJcbiJdfQ==