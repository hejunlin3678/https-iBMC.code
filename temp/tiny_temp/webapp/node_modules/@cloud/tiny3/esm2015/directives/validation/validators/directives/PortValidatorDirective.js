import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(PortValidatorDirective, PortValidatorDirective.NAME))
export class PortValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(PortValidatorDirective.NAME);
    }
}
PortValidatorDirective.NAME = 'tiPort';
PortValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiPort][formControlName],[tiPort][formControl],[tiPort][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => PortValidatorDirective),
                        multi: true
                    }]
            },] }
];
PortValidatorDirective.propDecorators = {
    enabled: [{ type: Input, args: [PortValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUG9ydFZhbGlkYXRvckRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9kaXJlY3RpdmVzL3ZhbGlkYXRpb24vdmFsaWRhdG9ycy9kaXJlY3RpdmVzL1BvcnRWYWxpZGF0b3JEaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQWdELGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdGLG9HQUFvRztBQVVwRyxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsYUFBYTtJQVR6RDs7UUFZRSxpQkFBWSxHQUFXLGFBQWEsQ0FBQyxlQUFlLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEYsQ0FBQzs7QUFIaUIsMkJBQUksR0FBVyxRQUFRLENBQUM7O1lBVnpDLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUVBQW1FO2dCQUM3RSxTQUFTLEVBQUUsQ0FBQzt3QkFDUixPQUFPLEVBQUUsYUFBYTt3QkFDdEIsMkNBQTJDO3dCQUMzQyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDO3dCQUNyRCxLQUFLLEVBQUUsSUFBSTtxQkFDZCxDQUFDO2FBQ0g7OztzQkFHRSxLQUFLLFNBQUMsc0JBQXNCLENBQUMsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmFzZVZhbGlkYXRvciB9IGZyb20gJy4vQmFzZVZhbGlkYXRvcic7XHJcbmltcG9ydCB7IFZhbGlkYXRvciwgQWJzdHJhY3RDb250cm9sLCBWYWxpZGF0aW9uRXJyb3JzLCBOR19WQUxJREFUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG4vLyBARGlyZWN0aXZlKEJhc2VWYWxpZGF0b3IuZ2V0RGlyZWN0aXZlQ29uZmlnKFBvcnRWYWxpZGF0b3JEaXJlY3RpdmUsIFBvcnRWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSkpXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiBgW3RpUG9ydF1bZm9ybUNvbnRyb2xOYW1lXSxbdGlQb3J0XVtmb3JtQ29udHJvbF0sW3RpUG9ydF1bbmdNb2RlbF1gLFxyXG4gIHByb3ZpZGVyczogW3tcclxuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcclxuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1mb3J3YXJkLXJlZlxyXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQb3J0VmFsaWRhdG9yRGlyZWN0aXZlKSxcclxuICAgICAgbXVsdGk6IHRydWVcclxuICB9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgUG9ydFZhbGlkYXRvckRpcmVjdGl2ZSBleHRlbmRzIEJhc2VWYWxpZGF0b3Ige1xyXG4gIHN0YXRpYyByZWFkb25seSBOQU1FOiBzdHJpbmcgPSAndGlQb3J0JztcclxuICBASW5wdXQoUG9ydFZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSBlbmFibGVkOiBib29sZWFuO1xyXG4gIHZhbGlkYXRvclN0cjogc3RyaW5nID0gQmFzZVZhbGlkYXRvci5nZXRWYWxpZGF0b3JTdHIoUG9ydFZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKTtcclxufVxyXG4iXX0=