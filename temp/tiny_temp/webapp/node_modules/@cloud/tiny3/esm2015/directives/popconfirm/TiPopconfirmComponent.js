import { Component, Input } from '@angular/core';
import { TiLocale } from '../../locale/TiLocaleModule';
import { TiBaseComponent } from '../../components/base/TiBaseModule';
export class TiPopconfirmComponent extends TiBaseComponent {
    constructor() {
        super(...arguments);
        this.tiPopconfirm = TiLocale.getLocaleWords().tiPopconfirm;
    }
    ngOnInit() {
        this.config.yesText = this.config.yesText || this.tiPopconfirm.yesLabel;
        this.config.noText = this.config.noText || this.tiPopconfirm.noLabel;
    }
    ngAfterViewInit() {
        // 轻量级弹窗阴影定制
        this.renderer.addClass(this.nativeElement.offsetParent, 'ti3-popconfirm-tip'); // 在init中设置会影响button样式 TODO: IE下还存在背景闪烁问题
    }
}
TiPopconfirmComponent.decorators = [
    { type: Component, args: [{
                template: "<div class=\"ti3-popconfirm-header\" >\r\n    <ti-icon class=\"ti3-popconfirm-warn-icon\" name=\"warn\"></ti-icon>\r\n    <span *ngIf='config.content' class=\"ti3-popconfirm-title\" [innerHtml]='config.content'></span>\r\n</div>\r\n<div class=\"ti3-popconfirm-footer\">\r\n    <button [id]=\"appendId('yesbutton')\"\r\n            type=\"button\"\r\n            tiButton\r\n            color=\"{{config.yesPrimary ? 'danger' : ''}}\"\r\n            (click)=\"destroyPopover(true)\">{{ config.yesText }}</button><!--\r\n    --><button [id]=\"appendId('nobutton')\"\r\n               type=\"button\"\r\n               tiButton\r\n               color=\"{{!config.yesPrimary ? 'danger' : ''}}\"\r\n               (click)=\"destroyPopover(false)\">{{ config.noText }}</button>\r\n</div>",
                host: {
                    '[class.ti3-popconfirm-container]': 'true',
                    '[tabindex]': '0'
                },
                styles: [".ti3-popconfirm-tip{box-shadow:var(--ti-common-shadow-4-down)!important}:host.ti3-popconfirm-container{display:inline-block;outline:none}.ti3-popconfirm-header{align-content:center;display:flex}.ti3-popconfirm-warn-icon{color:var(--ti-common-color-warn);font-size:var(--ti-common-font-size-2);line-height:18px}.ti3-popconfirm-title{color:var(--ti-common-color-text-primary);font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);margin-left:var(--ti-common-space-2x)}.ti3-popconfirm-footer{margin-top:12px;text-align:right}.ti3-popconfirm-footer button:nth-of-type(2){margin-left:var(--ti-common-space-2x)}"]
            },] }
];
TiPopconfirmComponent.propDecorators = {
    config: [{ type: Input }],
    destroyPopover: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlQb3Bjb25maXJtQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnkzL2RpcmVjdGl2ZXMvcG9wY29uZmlybS9UaVBvcGNvbmZpcm1Db21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixTQUFTLEVBQWMsS0FBSyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUMvRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBV3JFLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxlQUFlO0lBVDFEOztRQVlxQixpQkFBWSxHQUFRLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxZQUFZLENBQUM7SUFZaEYsQ0FBQztJQVRHLFFBQVE7UUFDSixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQztRQUN6RSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztJQUN6RSxDQUFDO0lBRUQsZUFBZTtRQUNYLFlBQVk7UUFDWixJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxvQkFBb0IsQ0FBQyxDQUFDLENBQUMseUNBQXlDO0lBQzVILENBQUM7OztZQXZCSixTQUFTLFNBQUM7Z0JBQ1AsMHhCQUE4QjtnQkFFOUIsSUFBSSxFQUFFO29CQUNGLGtDQUFrQyxFQUFFLE1BQU07b0JBQzFDLFlBQVksRUFBRSxHQUFHO2lCQUNwQjs7YUFDSjs7O3FCQUdJLEtBQUs7NkJBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIE9uSW5pdCwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpTG9jYWxlIH0gZnJvbSAnLi4vLi4vbG9jYWxlL1RpTG9jYWxlTW9kdWxlJztcclxuaW1wb3J0IHsgVGlCYXNlQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9iYXNlL1RpQmFzZU1vZHVsZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHRlbXBsYXRlVXJsOiAncG9wY29uZmlybS5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL3BvcGNvbmZpcm0ubGVzcyddLFxyXG4gICAgaG9zdDoge1xyXG4gICAgICAgICdbY2xhc3MudGkzLXBvcGNvbmZpcm0tY29udGFpbmVyXSc6ICd0cnVlJyxcclxuICAgICAgICAnW3RhYmluZGV4XSc6ICcwJ1xyXG4gICAgfVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIFRpUG9wY29uZmlybUNvbXBvbmVudCBleHRlbmRzIFRpQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgICBASW5wdXQoKSBjb25maWc6IGFueTtcclxuICAgIEBJbnB1dCgpIGRlc3Ryb3lQb3BvdmVyOiAocmVzdWx0PzogYm9vbGVhbikgPT4gdm9pZDtcclxuICAgIHByaXZhdGUgcmVhZG9ubHkgdGlQb3Bjb25maXJtOiBhbnkgPSBUaUxvY2FsZS5nZXRMb2NhbGVXb3JkcygpLnRpUG9wY29uZmlybTtcclxuXHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5jb25maWcueWVzVGV4dCA9IHRoaXMuY29uZmlnLnllc1RleHQgfHwgIHRoaXMudGlQb3Bjb25maXJtLnllc0xhYmVsO1xyXG4gICAgICAgIHRoaXMuY29uZmlnLm5vVGV4dCA9IHRoaXMuY29uZmlnLm5vVGV4dCB8fCB0aGlzLnRpUG9wY29uZmlybS5ub0xhYmVsO1xyXG4gICAgfVxyXG5cclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcclxuICAgICAgICAvLyDovbvph4/nuqflvLnnqpfpmLTlvbHlrprliLZcclxuICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMubmF0aXZlRWxlbWVudC5vZmZzZXRQYXJlbnQsICd0aTMtcG9wY29uZmlybS10aXAnKTsgLy8g5ZyoaW5pdOS4reiuvue9ruS8muW9seWTjWJ1dHRvbuagt+W8jyBUT0RPOiBJReS4i+i/mOWtmOWcqOiDjOaZr+mXqueDgemXrumimFxyXG4gICAgfVxyXG59XHJcbiJdfQ==