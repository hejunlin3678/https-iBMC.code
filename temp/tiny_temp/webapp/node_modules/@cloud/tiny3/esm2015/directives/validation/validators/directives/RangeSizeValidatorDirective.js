import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(RangeSizeValidatorDirective, RangeSizeValidatorDirective.NAME))
export class RangeSizeValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(RangeSizeValidatorDirective.NAME);
    }
}
RangeSizeValidatorDirective.NAME = 'tiRangeSize';
RangeSizeValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiRangeSize][formControlName],[tiRangeSize][formControl],[tiRangeSize][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => RangeSizeValidatorDirective),
                        multi: true
                    }]
            },] }
];
RangeSizeValidatorDirective.propDecorators = {
    baseValue: [{ type: Input, args: [RangeSizeValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmFuZ2VTaXplVmFsaWRhdG9yRGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnkzL2RpcmVjdGl2ZXMvdmFsaWRhdGlvbi92YWxpZGF0b3JzL2RpcmVjdGl2ZXMvUmFuZ2VTaXplVmFsaWRhdG9yRGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFnRCxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3Riw4R0FBOEc7QUFVOUcsTUFBTSxPQUFPLDJCQUE0QixTQUFRLGFBQWE7SUFUOUQ7O1FBWUUsaUJBQVksR0FBVyxhQUFhLENBQUMsZUFBZSxDQUFDLDJCQUEyQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pGLENBQUM7O0FBSGlCLGdDQUFJLEdBQVcsYUFBYSxDQUFDOztZQVY5QyxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGtGQUFrRjtnQkFDNUYsU0FBUyxFQUFFLENBQUM7d0JBQ1IsT0FBTyxFQUFFLGFBQWE7d0JBQ3RCLDJDQUEyQzt3QkFDM0MsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQzt3QkFDMUQsS0FBSyxFQUFFLElBQUk7cUJBQ2QsQ0FBQzthQUNIOzs7d0JBR0UsS0FBSyxTQUFDLDJCQUEyQixDQUFDLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJhc2VWYWxpZGF0b3IgfSBmcm9tICcuL0Jhc2VWYWxpZGF0b3InO1xyXG5pbXBvcnQgeyBWYWxpZGF0b3IsIEFic3RyYWN0Q29udHJvbCwgVmFsaWRhdGlvbkVycm9ycywgTkdfVkFMSURBVE9SUyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuLy8gQERpcmVjdGl2ZShCYXNlVmFsaWRhdG9yLmdldERpcmVjdGl2ZUNvbmZpZyhSYW5nZVNpemVWYWxpZGF0b3JEaXJlY3RpdmUsIFJhbmdlU2l6ZVZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSlcclxuQERpcmVjdGl2ZSh7XHJcbiAgc2VsZWN0b3I6IGBbdGlSYW5nZVNpemVdW2Zvcm1Db250cm9sTmFtZV0sW3RpUmFuZ2VTaXplXVtmb3JtQ29udHJvbF0sW3RpUmFuZ2VTaXplXVtuZ01vZGVsXWAsXHJcbiAgcHJvdmlkZXJzOiBbe1xyXG4gICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxyXG4gICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWZvcndhcmQtcmVmXHJcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFJhbmdlU2l6ZVZhbGlkYXRvckRpcmVjdGl2ZSksXHJcbiAgICAgIG11bHRpOiB0cnVlXHJcbiAgfV1cclxufSlcclxuZXhwb3J0IGNsYXNzIFJhbmdlU2l6ZVZhbGlkYXRvckRpcmVjdGl2ZSBleHRlbmRzIEJhc2VWYWxpZGF0b3Ige1xyXG4gIHN0YXRpYyByZWFkb25seSBOQU1FOiBzdHJpbmcgPSAndGlSYW5nZVNpemUnO1xyXG4gIEBJbnB1dChSYW5nZVNpemVWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSkgYmFzZVZhbHVlOiBhbnk7XHJcbiAgdmFsaWRhdG9yU3RyOiBzdHJpbmcgPSBCYXNlVmFsaWRhdG9yLmdldFZhbGlkYXRvclN0cihSYW5nZVNpemVWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSk7XHJcbn1cclxuIl19