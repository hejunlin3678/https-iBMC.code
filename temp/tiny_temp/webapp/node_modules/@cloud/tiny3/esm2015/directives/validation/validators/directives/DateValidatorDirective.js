import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(DateValidatorDirective, DateValidatorDirective.NAME))
export class DateValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(DateValidatorDirective.NAME);
    }
}
DateValidatorDirective.NAME = 'tiDate';
DateValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiDate][formControlName],[tiDate][formControl],[tiDate][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => DateValidatorDirective),
                        multi: true
                    }]
            },] }
];
DateValidatorDirective.propDecorators = {
    enabled: [{ type: Input, args: [DateValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0ZVZhbGlkYXRvckRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9kaXJlY3RpdmVzL3ZhbGlkYXRpb24vdmFsaWRhdG9ycy9kaXJlY3RpdmVzL0RhdGVWYWxpZGF0b3JEaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQWdELGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdGLG9HQUFvRztBQVVwRyxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsYUFBYTtJQVR6RDs7UUFZSSxpQkFBWSxHQUFXLGFBQWEsQ0FBQyxlQUFlLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEYsQ0FBQzs7QUFIbUIsMkJBQUksR0FBVyxRQUFRLENBQUM7O1lBVjNDLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsbUVBQW1FO2dCQUM3RSxTQUFTLEVBQUUsQ0FBQzt3QkFDVixPQUFPLEVBQUUsYUFBYTt3QkFDdEIsMkNBQTJDO3dCQUMzQyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDO3dCQUNyRCxLQUFLLEVBQUUsSUFBSTtxQkFDWixDQUFDO2FBQ0g7OztzQkFHRSxLQUFLLFNBQUMsc0JBQXNCLENBQUMsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmFzZVZhbGlkYXRvciB9IGZyb20gJy4vQmFzZVZhbGlkYXRvcic7XHJcbmltcG9ydCB7IFZhbGlkYXRvciwgQWJzdHJhY3RDb250cm9sLCBWYWxpZGF0aW9uRXJyb3JzLCBOR19WQUxJREFUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG4vLyBARGlyZWN0aXZlKEJhc2VWYWxpZGF0b3IuZ2V0RGlyZWN0aXZlQ29uZmlnKERhdGVWYWxpZGF0b3JEaXJlY3RpdmUsIERhdGVWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSkpXHJcbkBEaXJlY3RpdmUoe1xyXG4gICAgc2VsZWN0b3I6IGBbdGlEYXRlXVtmb3JtQ29udHJvbE5hbWVdLFt0aURhdGVdW2Zvcm1Db250cm9sXSxbdGlEYXRlXVtuZ01vZGVsXWAsXHJcbiAgICBwcm92aWRlcnM6IFt7XHJcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXHJcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tZm9yd2FyZC1yZWZcclxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRGF0ZVZhbGlkYXRvckRpcmVjdGl2ZSksXHJcbiAgICAgIG11bHRpOiB0cnVlXHJcbiAgICB9XVxyXG4gIH0pXHJcbmV4cG9ydCBjbGFzcyBEYXRlVmFsaWRhdG9yRGlyZWN0aXZlIGV4dGVuZHMgQmFzZVZhbGlkYXRvciB7XHJcbiAgICBzdGF0aWMgcmVhZG9ubHkgTkFNRTogc3RyaW5nID0gJ3RpRGF0ZSc7XHJcbiAgICBASW5wdXQoRGF0ZVZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSBlbmFibGVkOiBib29sZWFuO1xyXG4gICAgdmFsaWRhdG9yU3RyOiBzdHJpbmcgPSBCYXNlVmFsaWRhdG9yLmdldFZhbGlkYXRvclN0cihEYXRlVmFsaWRhdG9yRGlyZWN0aXZlLk5BTUUpO1xyXG59XHJcbiJdfQ==