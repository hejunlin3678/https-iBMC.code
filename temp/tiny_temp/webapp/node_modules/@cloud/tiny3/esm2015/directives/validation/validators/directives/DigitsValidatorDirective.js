import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(DigitsValidatorDirective, DigitsValidatorDirective.NAME))
export class DigitsValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(DigitsValidatorDirective.NAME);
    }
}
DigitsValidatorDirective.NAME = 'tiDigits';
DigitsValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiDigits][formControlName],[tiDigits][formControl],[tiDigits][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => DigitsValidatorDirective),
                        multi: true
                    }]
            },] }
];
DigitsValidatorDirective.propDecorators = {
    enabled: [{ type: Input, args: [DigitsValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGlnaXRzVmFsaWRhdG9yRGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnkzL2RpcmVjdGl2ZXMvdmFsaWRhdGlvbi92YWxpZGF0b3JzL2RpcmVjdGl2ZXMvRGlnaXRzVmFsaWRhdG9yRGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDaEQsT0FBTyxFQUFnRCxhQUFhLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3Rix3R0FBd0c7QUFVeEcsTUFBTSxPQUFPLHdCQUF5QixTQUFRLGFBQWE7SUFUM0Q7O1FBWUksaUJBQVksR0FBVyxhQUFhLENBQUMsZUFBZSxDQUFDLHdCQUF3QixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3hGLENBQUM7O0FBSG1CLDZCQUFJLEdBQVcsVUFBVSxDQUFDOztZQVY3QyxTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLHlFQUF5RTtnQkFDbkYsU0FBUyxFQUFFLENBQUM7d0JBQ1IsT0FBTyxFQUFFLGFBQWE7d0JBQ3RCLDJDQUEyQzt3QkFDM0MsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQzt3QkFDdkQsS0FBSyxFQUFFLElBQUk7cUJBQ2QsQ0FBQzthQUNIOzs7c0JBR0UsS0FBSyxTQUFDLHdCQUF3QixDQUFDLElBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBmb3J3YXJkUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEJhc2VWYWxpZGF0b3IgfSBmcm9tICcuL0Jhc2VWYWxpZGF0b3InO1xyXG5pbXBvcnQgeyBWYWxpZGF0b3IsIEFic3RyYWN0Q29udHJvbCwgVmFsaWRhdGlvbkVycm9ycywgTkdfVkFMSURBVE9SUyB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuLy8gQERpcmVjdGl2ZShCYXNlVmFsaWRhdG9yLmdldERpcmVjdGl2ZUNvbmZpZyhEaWdpdHNWYWxpZGF0b3JEaXJlY3RpdmUsIERpZ2l0c1ZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSlcclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogYFt0aURpZ2l0c11bZm9ybUNvbnRyb2xOYW1lXSxbdGlEaWdpdHNdW2Zvcm1Db250cm9sXSxbdGlEaWdpdHNdW25nTW9kZWxdYCxcclxuICAgIHByb3ZpZGVyczogW3tcclxuICAgICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxyXG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tZm9yd2FyZC1yZWZcclxuICAgICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBEaWdpdHNWYWxpZGF0b3JEaXJlY3RpdmUpLFxyXG4gICAgICAgIG11bHRpOiB0cnVlXHJcbiAgICB9XVxyXG4gIH0pXHJcbmV4cG9ydCBjbGFzcyBEaWdpdHNWYWxpZGF0b3JEaXJlY3RpdmUgZXh0ZW5kcyBCYXNlVmFsaWRhdG9yIHtcclxuICAgIHN0YXRpYyByZWFkb25seSBOQU1FOiBzdHJpbmcgPSAndGlEaWdpdHMnO1xyXG4gICAgQElucHV0KERpZ2l0c1ZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSBlbmFibGVkOiBib29sZWFuO1xyXG4gICAgdmFsaWRhdG9yU3RyOiBzdHJpbmcgPSBCYXNlVmFsaWRhdG9yLmdldFZhbGlkYXRvclN0cihEaWdpdHNWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSk7XHJcbn1cclxuIl19