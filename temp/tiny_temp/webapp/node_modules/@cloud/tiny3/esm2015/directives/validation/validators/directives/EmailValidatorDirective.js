import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(EmailValidatorDirective, EmailValidatorDirective.NAME))
export class EmailValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(EmailValidatorDirective.NAME);
    }
}
EmailValidatorDirective.NAME = 'tiEmail';
EmailValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiEmail][formControlName],[tiEmail][formControl],[tiEmail][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => EmailValidatorDirective),
                        multi: true
                    }]
            },] }
];
EmailValidatorDirective.propDecorators = {
    enabled: [{ type: Input, args: [EmailValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9AY2xvdWQvdGlueTMvZGlyZWN0aXZlcy92YWxpZGF0aW9uL3ZhbGlkYXRvcnMvZGlyZWN0aXZlcy9FbWFpbFZhbGlkYXRvckRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2hELE9BQU8sRUFBZ0QsYUFBYSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0Ysc0dBQXNHO0FBVXRHLE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxhQUFhO0lBVDFEOztRQVlFLGlCQUFZLEdBQVcsYUFBYSxDQUFDLGVBQWUsQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNyRixDQUFDOztBQUhpQiw0QkFBSSxHQUFXLFNBQVMsQ0FBQzs7WUFWMUMsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxzRUFBc0U7Z0JBQ2hGLFNBQVMsRUFBRSxDQUFDO3dCQUNWLE9BQU8sRUFBRSxhQUFhO3dCQUN0QiwyQ0FBMkM7d0JBQzNDLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsdUJBQXVCLENBQUM7d0JBQ3RELEtBQUssRUFBRSxJQUFJO3FCQUNaLENBQUM7YUFDSDs7O3NCQUdFLEtBQUssU0FBQyx1QkFBdUIsQ0FBQyxJQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBJbnB1dCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBCYXNlVmFsaWRhdG9yIH0gZnJvbSAnLi9CYXNlVmFsaWRhdG9yJztcclxuaW1wb3J0IHsgVmFsaWRhdG9yLCBBYnN0cmFjdENvbnRyb2wsIFZhbGlkYXRpb25FcnJvcnMsIE5HX1ZBTElEQVRPUlMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbi8vIEBEaXJlY3RpdmUoQmFzZVZhbGlkYXRvci5nZXREaXJlY3RpdmVDb25maWcoRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUsIEVtYWlsVmFsaWRhdG9yRGlyZWN0aXZlLk5BTUUpKVxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogYFt0aUVtYWlsXVtmb3JtQ29udHJvbE5hbWVdLFt0aUVtYWlsXVtmb3JtQ29udHJvbF0sW3RpRW1haWxdW25nTW9kZWxdYCxcclxuICBwcm92aWRlcnM6IFt7XHJcbiAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxyXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1mb3J3YXJkLXJlZlxyXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUpLFxyXG4gICAgbXVsdGk6IHRydWVcclxuICB9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUgZXh0ZW5kcyBCYXNlVmFsaWRhdG9yIHtcclxuICBzdGF0aWMgcmVhZG9ubHkgTkFNRTogc3RyaW5nID0gJ3RpRW1haWwnO1xyXG4gIEBJbnB1dChFbWFpbFZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSBlbmFibGVkOiBib29sZWFuO1xyXG4gIHZhbGlkYXRvclN0cjogc3RyaW5nID0gQmFzZVZhbGlkYXRvci5nZXRWYWxpZGF0b3JTdHIoRW1haWxWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSk7XHJcbn1cclxuIl19