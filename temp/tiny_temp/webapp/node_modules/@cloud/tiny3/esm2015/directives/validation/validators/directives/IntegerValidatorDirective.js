import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(IntegerValidatorDirective, IntegerValidatorDirective.NAME))
export class IntegerValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(IntegerValidatorDirective.NAME);
    }
}
IntegerValidatorDirective.NAME = 'tiInteger';
IntegerValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiInteger][formControlName],[tiInteger][formControl],[tiInteger][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => IntegerValidatorDirective),
                        multi: true
                    }]
            },] }
];
IntegerValidatorDirective.propDecorators = {
    enabled: [{ type: Input, args: [IntegerValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW50ZWdlclZhbGlkYXRvckRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9kaXJlY3RpdmVzL3ZhbGlkYXRpb24vdmFsaWRhdG9ycy9kaXJlY3RpdmVzL0ludGVnZXJWYWxpZGF0b3JEaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQWdELGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdGLDBHQUEwRztBQVUxRyxNQUFNLE9BQU8seUJBQTBCLFNBQVEsYUFBYTtJQVQ1RDs7UUFZRSxpQkFBWSxHQUFXLGFBQWEsQ0FBQyxlQUFlLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkYsQ0FBQzs7QUFIaUIsOEJBQUksR0FBVyxXQUFXLENBQUM7O1lBVjVDLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNEVBQTRFO2dCQUN0RixTQUFTLEVBQUUsQ0FBQzt3QkFDUixPQUFPLEVBQUUsYUFBYTt3QkFDdEIsMkNBQTJDO3dCQUMzQyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHlCQUF5QixDQUFDO3dCQUN4RCxLQUFLLEVBQUUsSUFBSTtxQkFDZCxDQUFDO2FBQ0g7OztzQkFHRSxLQUFLLFNBQUMseUJBQXlCLENBQUMsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmFzZVZhbGlkYXRvciB9IGZyb20gJy4vQmFzZVZhbGlkYXRvcic7XHJcbmltcG9ydCB7IFZhbGlkYXRvciwgQWJzdHJhY3RDb250cm9sLCBWYWxpZGF0aW9uRXJyb3JzLCBOR19WQUxJREFUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG4vLyBARGlyZWN0aXZlKEJhc2VWYWxpZGF0b3IuZ2V0RGlyZWN0aXZlQ29uZmlnKEludGVnZXJWYWxpZGF0b3JEaXJlY3RpdmUsIEludGVnZXJWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSkpXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiBgW3RpSW50ZWdlcl1bZm9ybUNvbnRyb2xOYW1lXSxbdGlJbnRlZ2VyXVtmb3JtQ29udHJvbF0sW3RpSW50ZWdlcl1bbmdNb2RlbF1gLFxyXG4gIHByb3ZpZGVyczogW3tcclxuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcclxuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1mb3J3YXJkLXJlZlxyXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBJbnRlZ2VyVmFsaWRhdG9yRGlyZWN0aXZlKSxcclxuICAgICAgbXVsdGk6IHRydWVcclxuICB9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSW50ZWdlclZhbGlkYXRvckRpcmVjdGl2ZSBleHRlbmRzIEJhc2VWYWxpZGF0b3Ige1xyXG4gIHN0YXRpYyByZWFkb25seSBOQU1FOiBzdHJpbmcgPSAndGlJbnRlZ2VyJztcclxuICBASW5wdXQoSW50ZWdlclZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSBlbmFibGVkOiBib29sZWFuO1xyXG4gIHZhbGlkYXRvclN0cjogc3RyaW5nID0gQmFzZVZhbGlkYXRvci5nZXRWYWxpZGF0b3JTdHIoSW50ZWdlclZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKTtcclxufVxyXG4iXX0=