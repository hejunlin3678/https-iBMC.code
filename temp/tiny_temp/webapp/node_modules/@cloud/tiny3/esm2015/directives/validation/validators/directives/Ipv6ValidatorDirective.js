import { Directive, Input, forwardRef } from '@angular/core';
import { BaseValidator } from './BaseValidator';
import { NG_VALIDATORS } from '@angular/forms';
// @Directive(BaseValidator.getDirectiveConfig(Ipv6ValidatorDirective, Ipv6ValidatorDirective.NAME))
export class Ipv6ValidatorDirective extends BaseValidator {
    constructor() {
        super(...arguments);
        this.validatorStr = BaseValidator.getValidatorStr(Ipv6ValidatorDirective.NAME);
    }
}
Ipv6ValidatorDirective.NAME = 'tiIpv6';
Ipv6ValidatorDirective.decorators = [
    { type: Directive, args: [{
                selector: `[tiIpv6][formControlName],[tiIpv6][formControl],[tiIpv6][ngModel]`,
                providers: [{
                        provide: NG_VALIDATORS,
                        // tslint:disable-next-line: no-forward-ref
                        useExisting: forwardRef(() => Ipv6ValidatorDirective),
                        multi: true
                    }]
            },] }
];
Ipv6ValidatorDirective.propDecorators = {
    enabled: [{ type: Input, args: [Ipv6ValidatorDirective.NAME,] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXB2NlZhbGlkYXRvckRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9kaXJlY3RpdmVzL3ZhbGlkYXRpb24vdmFsaWRhdG9ycy9kaXJlY3RpdmVzL0lwdjZWYWxpZGF0b3JEaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNoRCxPQUFPLEVBQWdELGFBQWEsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdGLG9HQUFvRztBQVVwRyxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsYUFBYTtJQVR6RDs7UUFZRSxpQkFBWSxHQUFXLGFBQWEsQ0FBQyxlQUFlLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEYsQ0FBQzs7QUFIaUIsMkJBQUksR0FBVyxRQUFRLENBQUM7O1lBVnpDLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUVBQW1FO2dCQUM3RSxTQUFTLEVBQUUsQ0FBQzt3QkFDUixPQUFPLEVBQUUsYUFBYTt3QkFDdEIsMkNBQTJDO3dCQUMzQyxXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLHNCQUFzQixDQUFDO3dCQUNyRCxLQUFLLEVBQUUsSUFBSTtxQkFDZCxDQUFDO2FBQ0g7OztzQkFHRSxLQUFLLFNBQUMsc0JBQXNCLENBQUMsSUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIGZvcndhcmRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmFzZVZhbGlkYXRvciB9IGZyb20gJy4vQmFzZVZhbGlkYXRvcic7XHJcbmltcG9ydCB7IFZhbGlkYXRvciwgQWJzdHJhY3RDb250cm9sLCBWYWxpZGF0aW9uRXJyb3JzLCBOR19WQUxJREFUT1JTIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG4vLyBARGlyZWN0aXZlKEJhc2VWYWxpZGF0b3IuZ2V0RGlyZWN0aXZlQ29uZmlnKElwdjZWYWxpZGF0b3JEaXJlY3RpdmUsIElwdjZWYWxpZGF0b3JEaXJlY3RpdmUuTkFNRSkpXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiBgW3RpSXB2Nl1bZm9ybUNvbnRyb2xOYW1lXSxbdGlJcHY2XVtmb3JtQ29udHJvbF0sW3RpSXB2Nl1bbmdNb2RlbF1gLFxyXG4gIHByb3ZpZGVyczogW3tcclxuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcclxuICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1mb3J3YXJkLXJlZlxyXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBJcHY2VmFsaWRhdG9yRGlyZWN0aXZlKSxcclxuICAgICAgbXVsdGk6IHRydWVcclxuICB9XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSXB2NlZhbGlkYXRvckRpcmVjdGl2ZSBleHRlbmRzIEJhc2VWYWxpZGF0b3Ige1xyXG4gIHN0YXRpYyByZWFkb25seSBOQU1FOiBzdHJpbmcgPSAndGlJcHY2JztcclxuICBASW5wdXQoSXB2NlZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKSBlbmFibGVkOiBib29sZWFuO1xyXG4gIHZhbGlkYXRvclN0cjogc3RyaW5nID0gQmFzZVZhbGlkYXRvci5nZXRWYWxpZGF0b3JTdHIoSXB2NlZhbGlkYXRvckRpcmVjdGl2ZS5OQU1FKTtcclxufVxyXG4iXX0=