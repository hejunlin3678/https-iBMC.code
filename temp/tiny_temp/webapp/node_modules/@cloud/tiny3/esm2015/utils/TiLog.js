/*
 * Logger工具类提供全局日志输出级别控制。
 *
 * 提供三个静态日志方法，log()/warn()/error()
 *
 * log()是调试期日志，产品时一定关闭。组件对打包对外提供时也关闭，不干扰用户开发。
 *
 * info()是产品期也可以输出的重要日志。暂不提供。
 *
 * warn()/error()产品期，可酌情打开。后期可以考虑，error日志回传给服务器。
 *
 */
/**
 * Logger工具类, 提供全局日志输出和级别控制。
 *
 * <h3>示例</h3>
 * <iframe src="../tiny3demo/#/utils/log-basic" frameborder='0' width="100%" onload="this.height = document.documentElement.clientHeight"></iframe>
 */
export class TiLog {
    /**
     * 设置输出日志级别：LOG/WARN/ERROR/OFF. 默认是关闭
     */
    static setLevel(level) {
        TiLog.level = level;
    }
    /**
     *  一般的调试和运行信息
     * @param [message] 信息
     * @param optionalParams 参数
     */
    static log(message, ...optionalParams) {
        if (TiLog.LEVEL_LOG >= TiLog.level && console.log) {
            console.log(message, ...optionalParams);
        }
    }
    // public static info(message?: any, ...optionalParams: Array<any>): void {
    //     if (Logger.infoable && console.log) {
    //         // 在Chrome, console.info()只是log()的别名，tslint不建议使用。
    //         console.log(message, ...optionalParams);
    //     }
    // }
    /**
     *  会出现潜在错误的提示
     * @param [message] 信息
     * @param optionalParams 参数
     */
    static warn(message, ...optionalParams) {
        if (TiLog.LEVEL_WARN >= TiLog.level && console.warn) {
            console.warn(message, ...optionalParams);
        }
    }
    /**
     * 发生错误事件，已经影响系统的正常运行
     * @param [message] 信息
     * @param optionalParams 参数
     */
    static error(message, ...optionalParams) {
        if (TiLog.LEVEL_ERROR >= TiLog.level && console.error) {
            console.error(message, ...optionalParams);
        }
    }
}
/**
 * 可以输出Log以上日志，包含Log/Warn/Error，log表示一般的调试和运行信息。
 */
TiLog.LEVEL_LOG = 1;
/**
 * 可以输出Warn以上日志，包含Warn/Error日志，Warn表示会出现潜在错误的提示。
 */
TiLog.LEVEL_WARN = 2;
/**
 * 可以输出Error日志，Error表示发生错误事件，已经影响系统的正常运行。
 */
TiLog.LEVEL_ERROR = 3;
/**
 * 关闭输出所有日志
 */
TiLog.LEVEL_OFF = 10;
TiLog.level = TiLog.LEVEL_OFF;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlMb2cuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9AY2xvdWQvdGlueTMvdXRpbHMvVGlMb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0dBV0c7QUFFSDs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxLQUFLO0lBb0JkOztPQUVHO0lBQ0ksTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFhO1FBQzVCLEtBQUssQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFDRDs7OztPQUlHO0lBQ0ksTUFBTSxDQUFDLEdBQUcsQ0FBQyxPQUFhLEVBQUUsR0FBRyxjQUEwQjtRQUMxRCxJQUFJLEtBQUssQ0FBQyxTQUFTLElBQUksS0FBSyxDQUFDLEtBQUssSUFBSSxPQUFPLENBQUMsR0FBRyxFQUFFO1lBQy9DLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEdBQUcsY0FBYyxDQUFDLENBQUM7U0FDM0M7SUFDTCxDQUFDO0lBRUQsMkVBQTJFO0lBQzNFLDRDQUE0QztJQUM1Qyw0REFBNEQ7SUFDNUQsbURBQW1EO0lBQ25ELFFBQVE7SUFDUixJQUFJO0lBRUo7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBYSxFQUFFLEdBQUcsY0FBMEI7UUFDM0QsSUFBSSxLQUFLLENBQUMsVUFBVSxJQUFJLEtBQUssQ0FBQyxLQUFLLElBQUksT0FBTyxDQUFDLElBQUksRUFBRTtZQUNqRCxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxHQUFHLGNBQWMsQ0FBQyxDQUFDO1NBQzVDO0lBQ0wsQ0FBQztJQUNEOzs7O09BSUc7SUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQWEsRUFBRSxHQUFHLGNBQTBCO1FBQzVELElBQUksS0FBSyxDQUFDLFdBQVcsSUFBSSxLQUFLLENBQUMsS0FBSyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUU7WUFDbkQsT0FBTyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsR0FBRyxjQUFjLENBQUMsQ0FBQztTQUM3QztJQUNMLENBQUM7O0FBN0REOztHQUVHO0FBQ29CLGVBQVMsR0FBVyxDQUFDLENBQUM7QUFDN0M7O0dBRUc7QUFDb0IsZ0JBQVUsR0FBVyxDQUFDLENBQUM7QUFDOUM7O0dBRUc7QUFDb0IsaUJBQVcsR0FBVyxDQUFDLENBQUM7QUFDL0M7O0dBRUc7QUFDb0IsZUFBUyxHQUFXLEVBQUUsQ0FBQztBQUUvQixXQUFLLEdBQVcsS0FBSyxDQUFDLFNBQVMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIExvZ2dlcuW3peWFt+exu+aPkOS+m+WFqOWxgOaXpeW/l+i+k+WHuue6p+WIq+aOp+WItuOAglxyXG4gKlxyXG4gKiDmj5DkvpvkuInkuKrpnZnmgIHml6Xlv5fmlrnms5XvvIxsb2coKS93YXJuKCkvZXJyb3IoKVxyXG4gKlxyXG4gKiBsb2coKeaYr+iwg+ivleacn+aXpeW/l++8jOS6p+WTgeaXtuS4gOWumuWFs+mXreOAgue7hOS7tuWvueaJk+WMheWvueWkluaPkOS+m+aXtuS5n+WFs+mXre+8jOS4jeW5suaJsOeUqOaIt+W8gOWPkeOAglxyXG4gKlxyXG4gKiBpbmZvKCnmmK/kuqflk4HmnJ/kuZ/lj6/ku6XovpPlh7rnmoTph43opoHml6Xlv5fjgILmmoLkuI3mj5DkvpvjgIJcclxuICpcclxuICogd2FybigpL2Vycm9yKCnkuqflk4HmnJ/vvIzlj6/phYzmg4XmiZPlvIDjgILlkI7mnJ/lj6/ku6XogIPomZHvvIxlcnJvcuaXpeW/l+WbnuS8oOe7meacjeWKoeWZqOOAglxyXG4gKlxyXG4gKi9cclxuXHJcbi8qKlxyXG4gKiBMb2dnZXLlt6XlhbfnsbssIOaPkOS+m+WFqOWxgOaXpeW/l+i+k+WHuuWSjOe6p+WIq+aOp+WItuOAglxyXG4gKlxyXG4gKiA8aDM+56S65L6LPC9oMz5cclxuICogPGlmcmFtZSBzcmM9XCIuLi90aW55M2RlbW8vIy91dGlscy9sb2ctYmFzaWNcIiBmcmFtZWJvcmRlcj0nMCcgd2lkdGg9XCIxMDAlXCIgb25sb2FkPVwidGhpcy5oZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0XCI+PC9pZnJhbWU+XHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgVGlMb2cge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Y+v5Lul6L6T5Ye6TG9n5Lul5LiK5pel5b+X77yM5YyF5ZCrTG9nL1dhcm4vRXJyb3LvvIxsb2fooajnpLrkuIDoiKznmoTosIPor5Xlkozov5DooYzkv6Hmga/jgIJcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBMRVZFTF9MT0c6IG51bWJlciA9IDE7XHJcbiAgICAvKipcclxuICAgICAqIOWPr+S7pei+k+WHuldhcm7ku6XkuIrml6Xlv5fvvIzljIXlkKtXYXJuL0Vycm9y5pel5b+X77yMV2FybuihqOekuuS8muWHuueOsOa9nOWcqOmUmeivr+eahOaPkOekuuOAglxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IExFVkVMX1dBUk46IG51bWJlciA9IDI7XHJcbiAgICAvKipcclxuICAgICAqIOWPr+S7pei+k+WHukVycm9y5pel5b+X77yMRXJyb3LooajnpLrlj5HnlJ/plJnor6/kuovku7bvvIzlt7Lnu4/lvbHlk43ns7vnu5/nmoTmraPluLjov5DooYzjgIJcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBMRVZFTF9FUlJPUjogbnVtYmVyID0gMztcclxuICAgIC8qKlxyXG4gICAgICog5YWz6Zet6L6T5Ye65omA5pyJ5pel5b+XXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgTEVWRUxfT0ZGOiBudW1iZXIgPSAxMDtcclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBsZXZlbDogbnVtYmVyID0gVGlMb2cuTEVWRUxfT0ZGO1xyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7ovpPlh7rml6Xlv5fnuqfliKvvvJpMT0cvV0FSTi9FUlJPUi9PRkYuIOm7mOiupOaYr+WFs+mXrVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHNldExldmVsKGxldmVsOiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICAgICAgVGlMb2cubGV2ZWwgPSBsZXZlbDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogIOS4gOiIrOeahOiwg+ivleWSjOi/kOihjOS/oeaBr1xyXG4gICAgICogQHBhcmFtIFttZXNzYWdlXSDkv6Hmga9cclxuICAgICAqIEBwYXJhbSBvcHRpb25hbFBhcmFtcyDlj4LmlbBcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBsb2cobWVzc2FnZT86IGFueSwgLi4ub3B0aW9uYWxQYXJhbXM6IEFycmF5PGFueT4pOiB2b2lkIHtcclxuICAgICAgICBpZiAoVGlMb2cuTEVWRUxfTE9HID49IFRpTG9nLmxldmVsICYmIGNvbnNvbGUubG9nKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UsIC4uLm9wdGlvbmFsUGFyYW1zKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gcHVibGljIHN0YXRpYyBpbmZvKG1lc3NhZ2U/OiBhbnksIC4uLm9wdGlvbmFsUGFyYW1zOiBBcnJheTxhbnk+KTogdm9pZCB7XHJcbiAgICAvLyAgICAgaWYgKExvZ2dlci5pbmZvYWJsZSAmJiBjb25zb2xlLmxvZykge1xyXG4gICAgLy8gICAgICAgICAvLyDlnKhDaHJvbWUsIGNvbnNvbGUuaW5mbygp5Y+q5pivbG9nKCnnmoTliKvlkI3vvIx0c2xpbnTkuI3lu7rorq7kvb/nlKjjgIJcclxuICAgIC8vICAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqICDkvJrlh7rnjrDmvZzlnKjplJnor6/nmoTmj5DnpLpcclxuICAgICAqIEBwYXJhbSBbbWVzc2FnZV0g5L+h5oGvXHJcbiAgICAgKiBAcGFyYW0gb3B0aW9uYWxQYXJhbXMg5Y+C5pWwXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgd2FybihtZXNzYWdlPzogYW55LCAuLi5vcHRpb25hbFBhcmFtczogQXJyYXk8YW55Pik6IHZvaWQge1xyXG4gICAgICAgIGlmIChUaUxvZy5MRVZFTF9XQVJOID49IFRpTG9nLmxldmVsICYmIGNvbnNvbGUud2Fybikge1xyXG4gICAgICAgICAgICBjb25zb2xlLndhcm4obWVzc2FnZSwgLi4ub3B0aW9uYWxQYXJhbXMpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5Y+R55Sf6ZSZ6K+v5LqL5Lu277yM5bey57uP5b2x5ZON57O757uf55qE5q2j5bi46L+Q6KGMXHJcbiAgICAgKiBAcGFyYW0gW21lc3NhZ2VdIOS/oeaBr1xyXG4gICAgICogQHBhcmFtIG9wdGlvbmFsUGFyYW1zIOWPguaVsFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIGVycm9yKG1lc3NhZ2U/OiBhbnksIC4uLm9wdGlvbmFsUGFyYW1zOiBBcnJheTxhbnk+KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKFRpTG9nLkxFVkVMX0VSUk9SID49IFRpTG9nLmxldmVsICYmIGNvbnNvbGUuZXJyb3IpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlLCAuLi5vcHRpb25hbFBhcmFtcyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==