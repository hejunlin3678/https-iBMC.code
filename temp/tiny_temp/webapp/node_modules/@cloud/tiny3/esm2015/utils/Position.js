import { TiLog } from './TiLog';
import { Util } from './Util';
/**
 * @ignore
 * 该类提供公共静态类方法，用于设置在body定位元素基于参照元素的位置信息,提供的核心方法如下：
 * setPosition()
 * 1. 入参为对象，参数信息如下：
 * {
 *   targetEle:需要定位的元素
 *   hostEle：参照元素
 *   position:定位位置
 *   hostSpace：待定位元素和参照元素间距
 *   browserSpace ：待定位元素和浏览器间距, 暂时只在上下位置生效
 *   hOffset: 自定义水平方向的偏移（在定位基础上的水平偏移，向左偏移为负值，向右偏移为正值）
 *   fixMaxHeight: 定位元素最大高度是否固定不变(显示不下时不用压缩高度)
 *   determinPositionFn：决定位置的函数
 * }
 * 2. 返回值为对象，信息如下：
 * {
 *   position:string 最终元素定位位置（当外部定义位置非13个可选位置时，会重新计算合适的位置进行定位，因此提供此位置信息供外部使用）
 *   avilableHeight:number 元素可用高度占位信息(外部可使用该信息进行高度的重新定义)
 * }
 */
export class Position {
    static setPosition(options) {
        // 入参非有效元素情况下，不做处理
        if (!Util.isElement(options.hostEle) || !Util.isElement(options.targetEle)) {
            TiLog.warn('position: hostEle or targetEle type is not element');
            // 防止外部使用报错，此处做返回值处理
            return {
                position: 'top',
                avilableHeight: 9999
            };
        }
        // 分别获取宿主和待定位元素当前位置
        const curLayout = Position.getLayout(options.hostEle, options.targetEle, options.hostEleX);
        const hostSpace = options.hostSpace || 0;
        // 判断元素位置
        const position = (options.determinPositionFn) ? options.determinPositionFn(curLayout)
            : Position.determinPosition(options.position, curLayout, hostSpace, options.browserSpace || 0);
        const elePos = Position.getLayoutParam(curLayout, position, hostSpace, options.browserSpace || 0, options.hasOffsetFix || false);
        const hOffset = options.hOffset || 0;
        Position.setLayout(options.targetEle, elePos, curLayout, hOffset);
        Position.setMaxHeight(options.targetEle, elePos, curLayout, options.fixMaxHeight);
        Position.setDominatorDropDetachState(options.targetEle, elePos, curLayout, options.fixMaxHeight);
        return {
            position,
            avilableHeight: elePos.avilableHeight,
            hostLayout: curLayout.hostLayout
        };
    }
    /**
     * 添加影响host position的事件并返回其事件句柄
     * 由于Angular listen不支持多事件定义，因此在此处封装函数进行单独处理；此外，事件也不支持定义命名空间
     * 监听全局事件，用于处理页面位置出现变化导致宿主元素位置偏移，而tip的特殊情况下tip消失，
     * 并定义组件事件监听句柄，事件取消时会用到
     * 特殊场景包括：
     * 1. 拖动弹框位置导致的宿主元素位置变化
     * 2. 页面局部出滚动条，滚动条位置变化导致的宿主元素位置变化
     *    鼠标导致的滚轮事件可通过mousewheel/DOMMouseScroll监听（有冒泡的特性）
     *    拖拽导致的滚轮变化，需要业务通过trigger Tiny自定义事件tiScroll进行处理（无事件冒泡的特性）
     * 3.页面缩放
     * 4.路由切换页面
     */
    static addPosChangeEvts(eventCallback, render) {
        const eventHandles = [];
        // 修复SSR报错：ERROR ReferenceError: document is not defined
        if (typeof document === 'undefined') {
            return [];
        }
        // 需要添加的事件数据抽象
        const eventArr = [
            {
                ele: typeof document !== 'undefined' ? document : null,
                eventType: 'tiScroll',
                callback: eventCallback
            }, {
                ele: typeof window !== 'undefined' ? window : null,
                eventType: 'resize',
                callback: eventCallback
            }, {
                ele: typeof window !== 'undefined' ? window : null,
                eventType: 'hashchange',
                callback: eventCallback
            }
        ];
        eventArr.forEach((item) => {
            // 修复SSR问题： ERROR TypeError: Cannot read property 'addEventListener' of null
            if (item.ele) {
                return eventHandles.push(render.listen(item.ele, item.eventType, item.callback));
            }
        });
        return eventHandles;
    }
    /**
     * 清除绑定事件，与addPosChangeEvts对称
     */
    static removePosChangeEvts(eventHandles) {
        eventHandles.forEach((item) => {
            if (item) {
                item();
            }
        });
    }
    // 获取host和target元素的布局参数
    static getLayout(hostEle, targetEle, horizonHostEle) {
        const hostLayout = Position.getHostEleLayout(hostEle, horizonHostEle);
        return {
            hostLayout,
            targetLayout: Position.getEleLayout(targetEle),
            avilableLayout: Position.getAvilableLayout(hostLayout)
        };
    }
    /**
     * 根据高亮浮层位置及提示弹窗位置情况计算具体显示位置
     * @param  position 元素位置定义信息
     * @param  layout 宿主和待定位元素位置信息
     * @param  hostSpace 宿主和待定位元素间距
     * @param  browserSpace 浏览器和待定位元素间距
     * @returns 提示弹窗呈现位置
     */
    static determinPosition(position, layout, hostSpace, browserSpace) {
        // position定义有效情况下，不做处理
        if (Position.isValidPosition(position, layout, hostSpace, browserSpace)) {
            return position;
        }
        const targetLayout = layout.targetLayout;
        const avilableLayout = layout.avilableLayout;
        // 元素位置距各部分位置
        const avilableLeft = avilableLayout.left;
        const avilableRight = avilableLayout.right;
        const avilableTop = avilableLayout.top;
        const avilableBottom = avilableLayout.bottom;
        const targetMaxWidth = targetLayout.width + hostSpace + browserSpace;
        const targetMaxHeight = targetLayout.height + hostSpace + browserSpace;
        const hostLayout = layout.hostLayout;
        if (avilableTop >= targetMaxHeight) { // 上方可显示完全
            const positionTop = Position.determinHorizon(layout, hostLayout);
            if (positionTop !== undefined) {
                return 'top' + positionTop;
            }
        }
        if (avilableRight >= targetMaxWidth) { // 右侧可显示完全，具体思路同上方可显示完全情况
            const positionRight = Position.determinVertical(layout, hostLayout);
            if (positionRight !== undefined) {
                return 'right' + positionRight;
            }
        }
        if (avilableBottom >= targetMaxHeight) { // 下方可显示完全，具体思路同上方可显示完全情况
            const positionBottom = Position.determinHorizon(layout, hostLayout);
            if (positionBottom !== undefined) {
                return 'bottom' + positionBottom;
            }
        }
        if (avilableLeft >= targetMaxWidth) { // 左侧足够显示情况下，左侧居中显示
            const positionLeft = Position.determinVertical(layout, hostLayout);
            if (positionLeft !== undefined) {
                return 'left' + positionLeft;
            }
        }
        return 'center'; // 上下左右均无法足够显示情况下，居中显示内容
    }
    /**
     * 垂直位置确定后，确定水平位置
     */
    static determinHorizon(layout, hostLayout) {
        const targetLayout = layout.targetLayout;
        const avilableLayout = layout.avilableLayout;
        const avilableLeft = avilableLayout.left;
        const avilableMaxLeft = avilableLayout.maxLeft;
        const avilableRight = avilableLayout.right;
        const avilableMaxRight = avilableLayout.maxRight;
        const targetWidth = targetLayout.width;
        const targetCenterWidth = (targetLayout.width - hostLayout.width) / 2; // 水平居中情况下，左右侧占用的宽度分别比宿主元素宽多少
        if ((avilableRight >= targetCenterWidth) &&
            (avilableLeft >= targetCenterWidth)) { // 提示元素超出被提示元素部分足够显示的情况下，优先居中显示
            return '';
        }
        if (avilableMaxRight >= targetWidth) { // 提示元素可在被提示元素左边界靠右完全显示情况下，向右显示
            return '-left';
        }
        if (avilableMaxLeft >= targetWidth) { // 提示元素可在被提示元素左边界靠左完全显示情况下，向左显示
            return '-right';
        }
    }
    /**
     * 水平位置确定后，确定垂直位置
     */
    static determinVertical(layout, hostLayout) {
        const targetLayout = layout.targetLayout;
        const avilableLayout = layout.avilableLayout;
        const avilableTop = avilableLayout.top;
        const avilableMaxTop = avilableLayout.maxTop;
        const avilableBottom = avilableLayout.bottom;
        const avilableMaxBottom = avilableLayout.maxBottom;
        const targetHeight = targetLayout.height;
        const targetMiddleHeight = (targetLayout.height - hostLayout.height) / 2; // 垂直居中情况下，上下两侧占用的高度分别比宿主元素高多少
        if ((avilableTop >= targetMiddleHeight) &&
            (avilableBottom >= targetMiddleHeight)) {
            return '';
        }
        if (avilableMaxBottom >= targetHeight) {
            return '-top';
        }
        if (avilableMaxTop >= targetHeight) {
            return '-bottom';
        }
    }
    // 判断定义的position是否为有效位置
    static isValidPosition(position, layout, hostSpace, browserSpace) {
        if (Position.positionArr.indexOf(position) === -1) {
            return false;
        }
        // 判断在指定的position是否能显示下
        const positionFragments = position.split('-');
        const targetLayout = layout.targetLayout;
        const avilableLayout = layout.avilableLayout;
        // 元素位置距各部分位置
        const avilableLeft = avilableLayout.left;
        const avilableRight = avilableLayout.right;
        const avilableTop = avilableLayout.top;
        const avilableBottom = avilableLayout.bottom;
        const targetMaxWidth = targetLayout.width + hostSpace + browserSpace;
        const targetMaxHeight = targetLayout.height + hostSpace + browserSpace;
        if (positionFragments[0] === 'top') {
            if (avilableTop < targetMaxHeight) {
                return false;
            }
            return Position.isValidHorizonPosition(positionFragments[1], layout);
        }
        if (positionFragments[0] === 'bottom') {
            if (avilableBottom < targetMaxHeight) {
                return false;
            }
            return Position.isValidHorizonPosition(positionFragments[1], layout);
        }
        if (positionFragments[0] === 'left') {
            if (avilableLeft < targetMaxWidth) {
                return false;
            }
            return Position.isValidVerticalPosition(positionFragments[1], layout);
        }
        if (positionFragments[0] === 'right') {
            if (avilableRight < targetMaxWidth) {
                return false;
            }
            return Position.isValidVerticalPosition(positionFragments[1], layout);
        }
        return true;
    }
    // 确定垂直位置是有效的后，判断水平位置是否有效
    static isValidHorizonPosition(horizonPosition, layout) {
        const targetLayout = layout.targetLayout;
        const avilableLayout = layout.avilableLayout;
        const hostLayout = layout.hostLayout;
        const avilableLeft = avilableLayout.left;
        const avilableRight = avilableLayout.right;
        const avilableMaxLeft = avilableLayout.maxLeft;
        const avilableMaxRight = avilableLayout.maxRight;
        const targetWidth = targetLayout.width;
        const targetCenterWidth = (targetLayout.width - hostLayout.width) / 2; // 水平居中情况下，左右侧占用的宽度分别比宿主元素宽多少
        if (!horizonPosition) {
            return (avilableRight >= targetCenterWidth) && (avilableLeft >= targetCenterWidth);
        }
        if (horizonPosition === 'left') {
            return avilableMaxRight >= targetWidth;
        }
        if (horizonPosition === 'right') {
            return avilableMaxLeft >= targetWidth;
        }
        return false;
    }
    // 确定水平位置是有效的后，判断垂直位置是否有效
    static isValidVerticalPosition(verticalPosition, layout) {
        const targetLayout = layout.targetLayout;
        const avilableLayout = layout.avilableLayout;
        const hostLayout = layout.hostLayout;
        const avilableTop = avilableLayout.top;
        const avilableBottom = avilableLayout.bottom;
        const avilableMaxTop = avilableLayout.maxTop;
        const avilableMaxBottom = avilableLayout.maxBottom;
        const targetHeight = targetLayout.height;
        const targetMiddleHeight = (targetLayout.height - hostLayout.height) / 2; // 垂直居中情况下，上下两侧占用的高度分别比宿主元素高多少
        if (!verticalPosition) {
            return (avilableTop >= targetMiddleHeight) && (avilableBottom >= targetMiddleHeight);
        }
        if (verticalPosition === 'top') {
            return avilableMaxBottom >= targetHeight;
        }
        if (verticalPosition === 'bottom') {
            return avilableMaxTop >= targetHeight;
        }
        return false;
    }
    // 设置提示弹窗位置
    static setLayout(ele, position, layoutParam, hOffset) {
        if (layoutParam.hostLayout.isFixed) { // fixed定位情况下，滚动条对其不受影响，因此此处需要减掉滚动条的位置影响
            ele.style.position = 'fixed';
            ele.style.left = `${position.left - window.pageXOffset + hOffset}px`;
            ele.style.top = `${position.top - window.pageYOffset}px`;
        }
        else {
            ele.style.left = `${position.left + hOffset}px`;
            ele.style.top = `${position.top}px`;
        }
    }
    // 设置提示弹窗的MaxHeight
    static setMaxHeight(ele, position, layoutParam, fixMaxHeight) {
        if (fixMaxHeight || position.avilableHeight >= layoutParam.targetLayout.height) {
            return;
        }
        ele.style.maxHeight = `${position.avilableHeight}px`;
    }
    /**
     * 当drop固定高度（设置fixMaxHeight=ture)，且空间不足时，dominator和drop不相邻，此场景需要隐藏drop中的边框覆盖线，
     * 添加样式类'ti3-detach-dominator-drop'标记drop的这种场景状态，通过css样式控制drop中边框覆盖线的隐藏和显示
     * 目前该场景出现在日期类组件中
     */
    static setDominatorDropDetachState(ele, position, layoutParam, fixMaxHeight) {
        if (!fixMaxHeight) {
            return;
        }
        if (position.avilableHeight < layoutParam.targetLayout.height) {
            ele.classList.add('ti3-detach-dominator-drop');
        }
        else {
            ele.classList.remove('ti3-detach-dominator-drop');
        }
    }
    static getEleLayout(ele) {
        // 修复SSR报错：ERROR TypeError: ele.getBoundingClientRect is not a function
        return {
            top: ele.offsetTop,
            left: ele.offsetLeft,
            width: (typeof ele.getBoundingClientRect) === 'function' ? ele.getBoundingClientRect().width : 0,
            height: (typeof ele.getBoundingClientRect) === 'function' ? ele.getBoundingClientRect().height : 0
        };
    }
    static getHostEleLayout(hostEle, horizonHostEle) {
        let horizonEle = hostEle;
        if (Util.isElement(horizonHostEle)) {
            horizonEle = horizonHostEle;
        }
        // 修复SSR报错：ERROR TypeError: hostEle.getBoundingClientRect is not a function
        // 元素相对于windows的位置
        let top = (typeof hostEle.getBoundingClientRect) === 'function' ? hostEle.getBoundingClientRect().top : 0;
        let left = (typeof hostEle.getBoundingClientRect) === 'function' ? horizonEle.getBoundingClientRect().left : 0;
        // 修复SSR报错：ERROR ReferenceError: getComputedStyle is not defined
        // 下面利用body相对于windows的位置，计算元素相对于body的位置。
        /* tslint:disable:no-null-keyword */
        const bodyPositon = (typeof getComputedStyle === 'function') ? getComputedStyle(document.body, null).position : 'static';
        // body是static|relative|absolute|fixed都已测试，Chrome高低版本/Firefox/IE11已测。
        if (bodyPositon === 'static') { // static时，body对window没有偏移，但是需要考虑页面滚动条
            if (typeof window !== 'undefined') {
                top += window.pageYOffset;
                left += window.pageXOffset;
            }
        }
        else {
            // relative|fix|absolute时，需要考虑body相对于windows的偏移。
            top -= document.body.getBoundingClientRect().top;
            left -= document.body.getBoundingClientRect().left;
        }
        return {
            top,
            left,
            width: horizonEle.offsetWidth,
            height: hostEle.offsetHeight,
            isFixed: this.isFixedPos(hostEle)
        };
    }
    static getAvilableLayout(hostLayout) {
        // 修复报错：ERROR ReferenceError: document is not defined
        // 当前浏览器可视区域的宽高
        const curBrowseWidth = (typeof document !== 'undefined') ? document.documentElement.clientWidth : 0;
        const curBrowseheight = (typeof document !== 'undefined') ? document.documentElement.clientHeight : 0;
        // 元素位置距各部分位置:
        // 1.以元素四个边为边界，上下左右预留的可用宽高，用avilableLeft等标识
        // 2.去掉元素的宽高占位，计算的最大可用宽高，用avilableMax...标识
        // 修复SSR错误：ERROR ReferenceError: pageXOffset is not defined
        const avilableLeft = hostLayout.left - ((typeof window !== 'undefined') ? window.pageXOffset : 0);
        const avilableMaxLeft = avilableLeft + hostLayout.width;
        const avilableRight = curBrowseWidth - avilableMaxLeft;
        const avilableMaxRight = curBrowseWidth - avilableLeft;
        // document.body.scrollTop  document.documentElement.scrollTop存在浏览器差异，chrome高低版本表现不同。
        const avilableTop = hostLayout.top - ((typeof window !== 'undefined') ? window.pageYOffset : 0); // pageYOffset支持IE9以上。
        const avilableMaxTop = avilableTop + hostLayout.height;
        const avilableBottom = curBrowseheight - avilableMaxTop;
        const avilableMaxBottom = curBrowseheight - avilableTop;
        return {
            left: avilableLeft,
            maxLeft: avilableMaxLeft,
            right: avilableRight,
            maxRight: avilableMaxRight,
            top: avilableTop,
            maxTop: avilableMaxTop,
            bottom: avilableBottom,
            maxBottom: avilableMaxBottom,
            clientHeight: curBrowseheight,
            clientWidth: curBrowseWidth
        };
    }
    // 确定元素是否为fixed定位
    static isFixedPos(ele) {
        if (!ele || ele.nodeName === 'HTML') {
            return false;
        }
        // 修复SSR报错：ERROR ReferenceError: getComputedStyle is not defined
        if (typeof getComputedStyle === 'undefined') {
            return false;
        }
        if (getComputedStyle(ele).position === 'fixed') {
            return true;
        }
        return this.isFixedPos(ele.parentNode);
    }
    static getLayoutParam(layout, position, hostSpace, browserSpace, hasOffsetFix) {
        const positionArr = position.split('-'); // 跟上面静态变量重名,最好改一下
        const left = Position.getHorizionParam(layout, positionArr, hostSpace, hasOffsetFix);
        const verticalParam = Position.getVerticalParam(layout, positionArr, hostSpace, browserSpace, hasOffsetFix);
        return {
            left,
            top: verticalParam.top,
            avilableHeight: verticalParam.avilableHeight
        };
    }
    static getHorizionParam(curLayout, posArr, space, hasOffsetFix) {
        const hostLayout = curLayout.hostLayout;
        const targetLayout = curLayout.targetLayout;
        // 定位偏差调整量（该偏差量针对较小元素，保证 tip 的箭头在被提示元素的中间）
        const offset = hasOffsetFix ? this.getOffsetFixVal(curLayout.hostLayout.width) : 0;
        // 'left', 'left-top', 'left-bottom'
        if (posArr[0] === 'left') {
            return hostLayout.left - targetLayout.width - space;
        }
        // 'right', 'right-top', 'right-bottom'
        if (posArr[0] === 'right') {
            return hostLayout.left + hostLayout.width + space;
        }
        // 'top-left', 'bottom-left'
        if (posArr[1] === 'left') {
            return hostLayout.left - offset;
        }
        // 'top-right', 'bottom-right'
        if (posArr[1] === 'right') {
            return hostLayout.left + hostLayout.width - targetLayout.width + offset;
        }
        // 'top', 'bottom', 'center'
        return hostLayout.left - (targetLayout.width - hostLayout.width) / 2;
    }
    static getVerticalParam(curLayout, posArr, hostSpace, browserSpace, hasOffsetFix) {
        const avilableLayout = curLayout.avilableLayout; // 宿主元素对应的可用位置参数
        const hostHeight = curLayout.hostLayout.height; // 宿主元素本身高度
        const targetLayout = curLayout.targetLayout;
        const hostLayout = curLayout.hostLayout;
        // 定位偏差调整量（该偏差量针对较小元素，保证 tip 的箭头在被提示元素的中间）
        const offset = hasOffsetFix ? this.getOffsetFixVal(curLayout.hostLayout.height) : 0;
        // 纵向可用高度是根据位置中top、bottom、居中情况进行的处理,因此,此处先将position进行分割，再根据其情况进行可用高度计算
        // 弹出元素下边线与宿主元素上边线相接后，弹出元素向上延伸情况，对应位置包含'top', 'top-left', 'top-right'
        if (posArr[0] === 'top') {
            const avilableHeight = avilableLayout.top - hostSpace - browserSpace;
            const top = (avilableHeight >= targetLayout.height) ?
                (hostLayout.top - targetLayout.height - hostSpace) :
                (hostLayout.top - avilableLayout.top + browserSpace);
            return {
                avilableHeight,
                top
            };
        }
        // 弹出元素上边线与宿主元素下边线相接后，弹出元素向下延伸情况，对应位置包含'bottom', 'bottom-left', 'bottom-right'
        if (posArr[0] === 'bottom') {
            return {
                avilableHeight: avilableLayout.bottom - hostSpace - browserSpace,
                top: hostLayout.top + hostLayout.height + hostSpace
            };
        }
        // 弹出元素上边线与宿主元素上边线对齐情况，对应位置包含'left-top', 'right-top'
        if (posArr[1] === 'top') {
            return {
                avilableHeight: avilableLayout.bottom + hostHeight,
                top: hostLayout.top - offset
            };
        }
        // 弹出元素上边线与宿主元素下边线对齐情况，对应位置包含'right-bottom', 'left-bottom'
        if (posArr[1] === 'bottom') {
            return {
                avilableHeight: avilableLayout.top + hostHeight,
                top: hostLayout.top + hostLayout.height - targetLayout.height + offset
            };
        }
        // 弹出元素中线与宿主元素中线对齐情况，对应位置包含'left', 'right', 'center'
        return {
            avilableHeight: avilableLayout.clientHeight,
            top: hostLayout.top - (targetLayout.height - hostLayout.height) / 2
        };
    }
    // 获取定位偏差调整量
    static getOffsetFixVal(hostLayoutSize) {
        return hostLayoutSize / 2 < Position.ADAPTIVE_SIZE ?
            Position.ADAPTIVE_SIZE - hostLayoutSize / 2 : 0;
    }
}
Position.positionArr = ['top', 'top-left', 'top-right', 'bottom', 'bottom-left', 'bottom-right',
    'left', 'left-top', 'left-bottom', 'right', 'right-top', 'right-bottom', 'center'];
/* tip 针对较小元素做位置自适应处理，保证 tip 的箭头在被提示元素的中间，这是宽度或者高度的阈值
 * 取值为 15 的原因： 箭头定位偏移量9 + 箭头宽度的一半6 = 15px 相关变量变化时需要修改该常量
 */
Position.ADAPTIVE_SIZE = 15;
//# sourceMappingURL=data:application/json;base64,