import { Component, HostListener, Renderer2 } from '@angular/core';
import { animate, state, style, transition, trigger } from '@angular/animations';
/**
 * @ignore
 */
export const animateStyle = '0.3s cubic-bezier(0.40, 0.00, 0.20, 1.00)';
/**
 * @ignore
 */
export class TiBackdropComponent {
    constructor(renderer) {
        this.renderer = renderer;
        this.index = 0; // 多个弹出框情况下，zindex层级设置辅助
    }
    set showState(value) {
        this._showState = value;
    }
    get showState() {
        return this._showState;
    }
    // 在微前端，多个子应用之间url路径跳转,等到弹窗隐藏结束后，this.destroy() 已经无效。
    onhashchange() {
        this.destroy();
    }
    onAnimationDone($event) {
        // 弹框隐藏动画结束后,销毁弹框DOM
        if ($event.toState === 'hide') {
            this.destroy();
            return;
        }
    }
}
TiBackdropComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-backdrop',
                template: `<div class='ti3-modal-backdrop'
                [@.disabled]='!animation' [@backdropAnimate] = 'showState'
                (@backdropAnimate.done)='onAnimationDone($event)'></div>`,
                animations: [
                    trigger('backdropAnimate', [
                        state('show', style({
                            opacity: 0.2
                        })),
                        state('hide, void', style({
                            opacity: 0
                        })),
                        transition('show => hide', animate(animateStyle)),
                        transition('hide => show', animate(animateStyle))
                    ])
                ],
                styles: [".ti3-modal-backdrop{background-color:var(--ti-modal-backdrop-bg-color);bottom:0;box-sizing:border-box;left:0;opacity:.2;position:fixed;right:0;top:0;z-index:1040}"]
            },] }
];
TiBackdropComponent.ctorParameters = () => [
    { type: Renderer2 }
];
TiBackdropComponent.propDecorators = {
    onhashchange: [{ type: HostListener, args: ['window:hashchange',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlCYWNrZHJvcENvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9zZXJ2aWNlcy9tb2RhbC9UaUJhY2tkcm9wQ29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFTLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRSxPQUFPLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRyxLQUFLLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWxGOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFXLDJDQUEyQyxDQUFDO0FBQ2hGOztHQUVHO0FBb0JILE1BQU0sT0FBTyxtQkFBbUI7SUFDNUIsWUFBc0IsUUFBbUI7UUFBbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQWFsQyxVQUFLLEdBQVcsQ0FBQyxDQUFDLENBQUMsd0JBQXdCO0lBWmxELENBQUM7SUFJRCxJQUFJLFNBQVMsQ0FBQyxLQUFhO1FBQ3ZCLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFFRCxJQUFJLFNBQVM7UUFDVCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDM0IsQ0FBQztJQUlELHFEQUFxRDtJQUNsQixZQUFZO1FBQzNDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNuQixDQUFDO0lBQ0QsZUFBZSxDQUFDLE1BQVc7UUFDdkIsb0JBQW9CO1FBQ3BCLElBQUksTUFBTSxDQUFDLE9BQU8sS0FBSyxNQUFNLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBRWYsT0FBTztTQUNWO0lBQ0wsQ0FBQzs7O1lBOUNKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsYUFBYTtnQkFDdkIsUUFBUSxFQUFFOzt5RUFFMkQ7Z0JBRXJFLFVBQVUsRUFBRTtvQkFDUixPQUFPLENBQUMsaUJBQWlCLEVBQUU7d0JBQ3ZCLEtBQUssQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDOzRCQUNoQixPQUFPLEVBQUcsR0FBRzt5QkFDaEIsQ0FBQyxDQUFDO3dCQUNILEtBQUssQ0FBQyxZQUFZLEVBQUUsS0FBSyxDQUFDOzRCQUN0QixPQUFPLEVBQUUsQ0FBQzt5QkFDYixDQUFDLENBQUM7d0JBQ0gsVUFBVSxDQUFDLGNBQWMsRUFBRSxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7d0JBQ2pELFVBQVUsQ0FBQyxjQUFjLEVBQUUsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDO3FCQUNwRCxDQUFDO2lCQUNMOzthQUNKOzs7WUE1QndDLFNBQVM7OzsyQkE4QzdDLFlBQVksU0FBQyxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RMaXN0ZW5lciwgSW5wdXQsIFJlbmRlcmVyMiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBhbmltYXRlLCBzdGF0ZSwgIHN0eWxlLCB0cmFuc2l0aW9uLCB0cmlnZ2VyIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XHJcblxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IGFuaW1hdGVTdHlsZTogc3RyaW5nID0gJzAuM3MgY3ViaWMtYmV6aWVyKDAuNDAsIDAuMDAsIDAuMjAsIDEuMDApJztcclxuLyoqXHJcbiAqIEBpZ25vcmVcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd0aS1iYWNrZHJvcCcsXHJcbiAgICB0ZW1wbGF0ZTogYDxkaXYgY2xhc3M9J3RpMy1tb2RhbC1iYWNrZHJvcCdcclxuICAgICAgICAgICAgICAgIFtALmRpc2FibGVkXT0nIWFuaW1hdGlvbicgW0BiYWNrZHJvcEFuaW1hdGVdID0gJ3Nob3dTdGF0ZSdcclxuICAgICAgICAgICAgICAgIChAYmFja2Ryb3BBbmltYXRlLmRvbmUpPSdvbkFuaW1hdGlvbkRvbmUoJGV2ZW50KSc+PC9kaXY+YCxcclxuICAgIHN0eWxlVXJsczogWycuL2JhY2tkcm9wLmxlc3MnXSxcclxuICAgIGFuaW1hdGlvbnM6IFtcclxuICAgICAgICB0cmlnZ2VyKCdiYWNrZHJvcEFuaW1hdGUnLCBbXHJcbiAgICAgICAgICAgIHN0YXRlKCdzaG93Jywgc3R5bGUoe1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eSA6IDAuMlxyXG4gICAgICAgICAgICB9KSksXHJcbiAgICAgICAgICAgIHN0YXRlKCdoaWRlLCB2b2lkJywgc3R5bGUoe1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMFxyXG4gICAgICAgICAgICB9KSksXHJcbiAgICAgICAgICAgIHRyYW5zaXRpb24oJ3Nob3cgPT4gaGlkZScsIGFuaW1hdGUoYW5pbWF0ZVN0eWxlKSksXHJcbiAgICAgICAgICAgIHRyYW5zaXRpb24oJ2hpZGUgPT4gc2hvdycsIGFuaW1hdGUoYW5pbWF0ZVN0eWxlKSlcclxuICAgICAgICBdKVxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGlCYWNrZHJvcENvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcmVuZGVyZXI6IFJlbmRlcmVyMikge1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBfc2hvd1N0YXRlOiBzdHJpbmc7IC8vIOe7hOS7tuaYvuekuueKtuaAge+8jOeUqOS6juaOp+WItuWKqOeUu+eahOeKtuaAgeWIh+aNolxyXG5cclxuICAgIHNldCBzaG93U3RhdGUodmFsdWU6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMuX3Nob3dTdGF0ZSA9IHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBzaG93U3RhdGUoKTogc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fc2hvd1N0YXRlO1xyXG4gICAgfVxyXG4gICAgcHVibGljIGFuaW1hdGlvbjogYm9vbGVhbjtcclxuICAgIHB1YmxpYyBpbmRleDogbnVtYmVyID0gMDsgLy8g5aSa5Liq5by55Ye65qGG5oOF5Ya15LiL77yMemluZGV45bGC57qn6K6+572u6L6F5YqpXHJcbiAgICBwdWJsaWMgZGVzdHJveTogKCkgPT4gdm9pZDtcclxuICAgIC8vIOWcqOW+ruWJjeerr++8jOWkmuS4quWtkOW6lOeUqOS5i+mXtHVybOi3r+W+hOi3s+i9rCznrYnliLDlvLnnqpfpmpDol4/nu5PmnZ/lkI7vvIx0aGlzLmRlc3Ryb3koKSDlt7Lnu4/ml6DmlYjjgIJcclxuICAgIEBIb3N0TGlzdGVuZXIoJ3dpbmRvdzpoYXNoY2hhbmdlJykgb25oYXNoY2hhbmdlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xyXG4gICAgfVxyXG4gICAgb25BbmltYXRpb25Eb25lKCRldmVudDogYW55KTogdm9pZCB7XHJcbiAgICAgICAgLy8g5by55qGG6ZqQ6JeP5Yqo55S757uT5p2f5ZCOLOmUgOavgeW8ueahhkRPTVxyXG4gICAgICAgIGlmICgkZXZlbnQudG9TdGF0ZSA9PT0gJ2hpZGUnKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=