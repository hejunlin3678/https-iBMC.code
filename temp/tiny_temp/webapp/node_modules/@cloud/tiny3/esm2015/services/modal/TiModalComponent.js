import { Component, ElementRef, HostListener, Renderer2, ViewChild, ViewEncapsulation, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { animate, state, style, transition, trigger } from '@angular/animations';
import { TiKeymap, Util } from '../../utils/Util';
import { TiRenderer } from '../renderer/TiRenderer';
import { TiBaseComponent } from '../../components/base/TiBaseModule';
/**
 * @ignore
 */
export const animateStyle = '0.3s cubic-bezier(0.40, 0.00, 0.20, 1.00)';
/**
 * @ignore
 */
export class TiModalComponent extends TiBaseComponent {
    constructor(ele, tiRenderer, renderer, document) {
        super(ele, renderer);
        this.tiRenderer = tiRenderer;
        this.renderer = renderer;
        this.document = document;
        this.index = 0; // 多个弹出框情况下，zindex层级设置辅助
        this.focusableElements = []; // 弹框中可聚焦元素列表
    }
    set showState(value) {
        this._showState = value;
    }
    get showState() {
        return this._showState;
    }
    static preventEvent(event) {
        event.preventDefault();
        event.stopPropagation();
    }
    // 路由切换后，modal还会存在，因此此处做了事件处理
    onhashchange() {
        this.modalInstance._remove();
    }
    // 缩放时重置弹框位置
    onResize() {
        this.tiRenderer.setStyles(this.contentRef.nativeElement, {
            left: 0,
            top: 0
        });
    }
    // 键盘事件处理
    onKeydown(event) {
        switch (event.which) {
            case TiKeymap.KEY_ESCAPE: // close on ESC
                if (this.closeOnEsc) {
                    this.dismissModal();
                }
                break;
            case TiKeymap.KEY_TAB: // tab键用于处理在弹框内循环获取焦点
                this.onTabChange(event);
                break;
            default:
                break;
        }
    }
    // 弹窗外围出现的滚动条滚动会导致下拉等定位在body上的组件相对于宿主元素定位偏移，
    // 因此触发tiScroll事件做处理，事件包括：
    // 整个页面滚动条滚轮滚动事件, mousewheel处理Chrome和IE下事件，DOMMouseScroll处理firefox下事件
    // 整个页面滚动条鼠标滚动事件
    onTiScroll() {
        Util.trigger(document, 'tiScroll');
    }
    ngAfterContentInit() {
        this.dragOptions = {
            // 这时弹窗内容DOM还未解析，所以需要使用标签选择器('ti-modal-header')来获取元素
            handle: this.nativeElement.querySelector('ti-modal-header'),
            drag: (opts) => {
                Util.trigger(document, 'tiScroll');
                // 当前浏览器可视区域的宽高
                const curBrowseWidth = document.documentElement.clientWidth;
                const curBrowseheight = document.documentElement.clientHeight;
                // 元素原始位置（由于元素本身left和top实时变化，因此取其父元素位置）
                const eleRect = opts.helper.parentElement.getBoundingClientRect();
                // 元素距页面可视区域的可用位置范围
                const minLeft = -eleRect.left + document.body.scrollLeft;
                const maxLeft = Math.max(curBrowseWidth + minLeft - eleRect.width, minLeft);
                const minTop = -eleRect.top + document.body.scrollTop;
                const maxTop = Math.max(curBrowseheight + minTop - eleRect.height, minTop);
                const position = opts.position;
                // 元素left位置根据可用left范围计算
                if (position.left < minLeft) {
                    position.left = minLeft;
                }
                else if (position.left > maxLeft) {
                    position.left = maxLeft;
                }
                // 元素top位置根据可用top范围计算
                if (position.top < minTop) {
                    position.top = minTop;
                }
                else if (position.top > maxTop) {
                    position.top = maxTop;
                }
                return position;
            }
        };
    }
    dismissModal() {
        this.modalInstance.dismiss();
    }
    onAnimationDone($event) {
        // 弹框toState有三种状态:'show'/'hide'/null
        // 弹框显示动画结束后,重新将焦点聚焦在弹框元素/弹框中
        if ($event.toState === 'show') {
            this.reStyleModal();
            this.focusInModal();
            return;
        }
        // 弹框隐藏动画结束后,销毁弹框DOM
        if ($event.toState === 'hide') {
            this.modalInstance._remove();
        }
    }
    // 弹框打开时，设置弹框元素样式
    reStyleModal() {
        const parentEle = this.nativeElement.querySelector('.ti3-modal-header');
        if (this.draggable !== false) {
            this.renderer.setStyle(parentEle, 'cursor', 'move');
        }
        if (this.headerAlign === 'center' || this.headerAlign === 'right') {
            this.renderer.setStyle(parentEle, 'text-align', this.headerAlign);
        }
        this.renderer.addClass(this.document.body, 'ti3-modal-open');
        this.setMaxHeight();
    }
    /**
     * 设置弹框高度：
     * 根据UCD3.0规范，modal最大高度不能超过弹框宽度,所以需要获取到modal的宽度值，用其减去modal的header和footer的高度
     * 后设为body的最大高度，当高度超出时，ti-modal-body垂直方向上出现滚动条
     * 10.1.1变更说明：
     * 根据规范变更，弹框高度可以超过弹框宽度，同时弹窗的最大高度是660px。
     */
    setMaxHeight() {
        // 修复SSR问题：ERROR TypeError: modalHeaderEle.getBoundingClientRect is not a function
        const modalHeaderEle = this.nativeElement.querySelector('.ti3-modal-header');
        const modalHeaderHeight = modalHeaderEle && (typeof modalHeaderEle.getBoundingClientRect === 'function') ? modalHeaderEle.getBoundingClientRect().height : 0;
        const modalFooterEle = this.nativeElement.querySelector('.ti3-modal-footer');
        const modalFooterHeight = modalFooterEle && (typeof modalFooterEle.getBoundingClientRect === 'function') ? modalFooterEle.getBoundingClientRect().height : 0;
        const modalBodyMaxHeight = TiModalComponent.MODAL_MAX_HEIGHT - modalHeaderHeight - modalFooterHeight;
        this.renderer.setStyle(this.nativeElement.querySelector('.ti3-modal-body'), 'maxHeight', modalBodyMaxHeight + 'px');
    }
    focusInModal() {
        /**
         * 首先判断新打开的modal是否已存在获取焦点的元素
         * 如果存在，则需要对modal元素再次设置焦点
         * 否则，对modal容器设置焦点
         */
        const activeElement = this.document.activeElement;
        const isfocusedInModal = activeElement && this.nativeElement.contains(activeElement);
        if (isfocusedInModal) {
            /**
             * 对已经设置焦点的元素，再次设置焦点，是为了解决以下两个问题：
             * 1>首次加载时，已经获取焦点的元素，其输入tip提示位置偏移
             * 2>首次加载时，IE浏览器中，已经获取焦点的元素input，光标位置出现偏移
             */
            if (activeElement) {
                activeElement.blur();
                // tiautofocusinmodal属性需要在change校验中使用(ChangeCheck.ts)
                this.renderer.setAttribute(activeElement, 'tiautofocusinmodal', '');
                activeElement.focus();
                this.renderer.removeAttribute(activeElement, 'tiautofocusinmodal');
            }
        }
        else {
            // 弹窗内未找到已聚焦元素情况下，优先处理 input 和 textarea 原生标签autofocus聚焦
            // (input,textarea.button原生标签的autofocus弹窗打开时无效(chrome是从第二次打开无效)，因此要做此处理)
            let focusEle = this.nativeElement.querySelector(`input[autofocus]:not([disabled]):not([tabindex=\'-1\']),
                textarea[autofocus]:not([disabled]):not([tabindex=\'-1\']), button[autofocus]:not([disabled]):not([tabindex=\'-1\'])`);
            // 如果通过上述处理，聚焦元素仍未获取到的情况下，则可聚焦元素为当前弹框
            focusEle = focusEle || this.modalEleRef.nativeElement;
            focusEle.focus();
        }
    }
    // 用于处理tab键行为，确保tab时只可在弹框内循环获取焦点
    onTabChange(event) {
        const focusableElementList = this.getFocusableElesInModal(); // 获取当前弹出框DOM中可以获取焦点的元素列表
        const focusableListLength = focusableElementList.length;
        if (focusableListLength === 0) {
            return;
        }
        const target = event.target; // 事件对象元素
        const firstFocusableEle = focusableElementList[0]; // 第一个可获取焦点的元素
        const lastFocusableEle = focusableElementList[focusableListLength - 1]; // 最后一个可获取焦点的元素
        // 按下tab+shift键时，如果当前已获取焦点元素是弹出框中的第一个可获取焦点元素或弹框本身，则聚焦最后一个元素
        if (event.shiftKey) {
            if (target === firstFocusableEle || target === this.modalEleRef.nativeElement) {
                lastFocusableEle.focus();
                TiModalComponent.preventEvent(event); // 阻止默认事件及继续冒泡，确保此处手动focus生效
            }
            return;
        }
        // 按下tab键时，如当前已获取焦点元素是弹框中最后一个可获取焦点元素，则聚焦第一个元素
        if (target === lastFocusableEle) {
            firstFocusableEle.focus();
            TiModalComponent.preventEvent(event);
        }
    }
    getFocusableElesInModal() {
        if (this.focusableElements.length !== 0) {
            return this.focusableElements;
        }
        const contentEle = this.contentRef.nativeElement;
        if (contentEle) {
            const elements = contentEle.querySelectorAll(TiModalComponent.tababbleSelector);
            [].forEach.call(elements, (element) => {
                if (getComputedStyle(element).display !== 'none' &&
                    element.offsetWidth > 0 && element.offsetHeight > 0) {
                    this.focusableElements.push(element);
                }
            });
        }
        return this.focusableElements;
    }
}
/**
 * 10.1.1新增
 * 规范刷新，弹窗整体的最大高度为660px（按照最小分辨率1280*768计算）
 */
TiModalComponent.MODAL_MAX_HEIGHT = 660;
// 可通过tab聚焦的元素选择器列表
TiModalComponent.tababbleSelector = `a[href], area[href], input:not([disabled]):not([tabindex=\'-1\']),
       button:not([disabled]):not([tabindex=\'-1\']),select:not([disabled]):not([tabindex=\'-1\']),
       textarea:not([disabled]):not([tabindex=\'-1\']),
       iframe, object, embed, *[tabindex]:not([tabindex=\'-1\']), *[contenteditable=true]`;
TiModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-modal-wrapper',
                template: "<div #modalEle class='ti3-modal' tabindex='-1'\r\n     [@.disabled]='!animation' [@modalAnimate]='showState'>\r\n    <div [ngClass]='[modalClass||\"\", \"ti3-modal-dialog\"]' [@modalPosAnimate]='showState' (@modalPosAnimate.done)='onAnimationDone($event)'>\r\n        <div class=\"ti3-modal-content\" #modalContent [tiDraggable] = \"dragOptions\" [tiDragDisabled] = \"!draggable\">\r\n            <span *ngIf='closeIcon' class='ti3-close ti3-icon ti3-icon-close'\r\n            [tabindex]=\"0\" (keydown.enter)=\"dismissModal()\" tiOutline\r\n            (click)='dismissModal()' [id]=\"appendId('close')\"></span>\r\n            <ng-content></ng-content>\r\n        </div>\r\n    </div>\r\n</div>\r\n",
                encapsulation: ViewEncapsulation.None,
                animations: [
                    trigger('modalAnimate', [
                        state('show', style({
                            opacity: 1
                        })),
                        state('hide, void', style({
                            opacity: 0
                        })),
                        transition('show => hide', animate(animateStyle)),
                        transition('hide => show', animate(animateStyle))
                    ]),
                    trigger('modalPosAnimate', [
                        state('show', style({
                            transform: 'translate(0, 0px)'
                        })),
                        state('hide, void', style({
                            transform: 'translate(0, -6px)'
                        })),
                        transition('show => hide', animate(animateStyle)),
                        transition('hide => show', animate(animateStyle))
                    ])
                ],
                styles: [":root{--ti-modal-content-margin:0 32px;--ti-modal-footer-padding:28px 32px 32px;--ti-modal-header-font-size:var(--ti-common-font-size-3);--ti-modal-header-height:36px;--ti-modal-header-padding:32px 32px 28px;--ti-modal-width:550px}.ti3-modal{-ms-box-sizing:border-box;-webkit-overflow-scrolling:touch;bottom:0;box-sizing:border-box;left:0;outline:0;overflow:hidden;position:fixed;right:0;top:0;z-index:1050}.ti3-modal-open .ti3-modal{overflow-x:hidden;overflow-y:auto}.ti3-modal-dialog{-ms-box-sizing:border-box;box-sizing:border-box;margin:10px;position:relative;width:auto}.ti3-modal-dialog.ti3-msg-default-width{width:var(--ti-message-default-width)}.ti3-modal-content{background-clip:padding-box;background-color:var(--ti-modal-content-bg-color);border-radius:var(--ti-common-border-radius-normal);box-shadow:var(--ti-common-shadow-4-down);outline:0;position:relative}.ti3-modal-content,.ti3-modal-header{-ms-box-sizing:border-box;box-sizing:border-box}.ti3-modal-header{border-radius:var(--ti-common-border-radius-normal) var(--ti-common-border-radius-normal) 0 0;color:var(--ti-modal-header-text-color);display:block;font-size:var(--ti-modal-header-font-size);font-weight:var(--ti-modal-header-font-weight);line-height:100%;padding:var(--ti-modal-header-padding)}.ti3-modal-header.ti3-modal-title-center{text-align:center}.ti3-close{-moz-osx-font-smoothing:grayscale;-ms-box-sizing:border-box;-webkit-font-smoothing:antialiased;box-sizing:border-box;color:var(--ti-modal-close-icon-color);cursor:pointer;font:normal normal normal var(--ti-common-font-size-base)/var(--ti-modal-header-height) ti3Font;position:absolute;right:var(--ti-modal-close-icon-position-right);text-rendering:auto;text-transform:none;top:var(--ti-modal-close-icon-position-top);z-index:2000}.ti3-close:hover{color:var(--ti-modal-close-icon-color-hover)}.ti3-modal-body{-ms-box-sizing:border-box;box-sizing:border-box;display:block;overflow-y:auto;padding:var(--ti-modal-content-margin);position:relative}.ti3-modal-footer{border-radius:0 0 var(--ti-common-border-radius-normal) var(--ti-common-border-radius-normal);display:block;padding:var(--ti-modal-footer-padding);text-align:center}.ti3-modal-footer button:nth-of-type(2){margin-left:10px}@media screen and (min-width:768px){.ti3-modal-dialog{margin:150px auto 0;width:var(--ti-modal-width)}}"]
            },] }
];
TiModalComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: TiRenderer },
    { type: Renderer2 },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
TiModalComponent.propDecorators = {
    contentRef: [{ type: ViewChild, args: ['modalContent', { static: true },] }],
    modalEleRef: [{ type: ViewChild, args: ['modalEle', { static: true },] }],
    onhashchange: [{ type: HostListener, args: ['window:hashchange',] }],
    onResize: [{ type: HostListener, args: ['window:resize',] }],
    onKeydown: [{ type: HostListener, args: ['document:keydown', ['$event'],] }],
    onTiScroll: [{ type: HostListener, args: ['document:mousewheel',] }, { type: HostListener, args: ['document:DOMMouseScroll',] }, { type: HostListener, args: ['window:scroll',] }]
};
//# sourceMappingURL=data:application/json;base64,