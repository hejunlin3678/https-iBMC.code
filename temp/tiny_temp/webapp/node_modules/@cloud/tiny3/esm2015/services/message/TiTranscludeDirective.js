import { Directive, ElementRef, Input } from '@angular/core';
import { TiPopupService } from '../popup/TiPopupService';
import { TiContentWrapperComponent } from './TiContentWrapperComponent';
/**
 * @ignore
 * 生成并且compile内容为宿主元素的子元素
 */
export class TiTranscludeDirective {
    constructor(eleRef, popService) {
        this.eleRef = eleRef;
        this.popService = popService;
    }
    ngOnInit() {
        this.wrapperRef = this.popService.create(TiContentWrapperComponent);
        this.wrapperRef.show({
            content: this.tiTransclude.content,
            contentContext: this.tiTransclude.context,
            container: this.eleRef
        });
    }
    ngOnDestroy() {
        this.wrapperRef.hide();
    }
}
TiTranscludeDirective.decorators = [
    { type: Directive, args: [{
                selector: '[tiTransclude]'
            },] }
];
TiTranscludeDirective.ctorParameters = () => [
    { type: ElementRef },
    { type: TiPopupService }
];
TiTranscludeDirective.propDecorators = {
    tiTransclude: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlUcmFuc2NsdWRlRGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnkzL3NlcnZpY2VzL21lc3NhZ2UvVGlUcmFuc2NsdWRlRGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUcsVUFBVSxFQUFFLEtBQUssRUFBa0MsTUFBTSxlQUFlLENBQUM7QUFDOUYsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3pELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3hFOzs7R0FHRztBQUlILE1BQU0sT0FBTyxxQkFBcUI7SUFNOUIsWUFBb0IsTUFBa0IsRUFDbEIsVUFBK0I7UUFEL0IsV0FBTSxHQUFOLE1BQU0sQ0FBWTtRQUNsQixlQUFVLEdBQVYsVUFBVSxDQUFxQjtJQUNuRCxDQUFDO0lBQ0QsUUFBUTtRQUNKLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMseUJBQXlCLENBQUMsQ0FBQztRQUNwRSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQztZQUNqQixPQUFPLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPO1lBQ2xDLGNBQWMsRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU87WUFDekMsU0FBUyxFQUFFLElBQUksQ0FBQyxNQUFNO1NBQ3pCLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxXQUFXO1FBQ1AsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMzQixDQUFDOzs7WUF0QkosU0FBUyxTQUFDO2dCQUNQLFFBQVEsRUFBRSxnQkFBZ0I7YUFDN0I7OztZQVRvQixVQUFVO1lBQ3RCLGNBQWM7OzsyQkFVbEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgIEVsZW1lbnRSZWYsIElucHV0LCBPbkRlc3Ryb3ksIE9uSW5pdCwgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVGlQb3B1cFNlcnZpY2UgfSBmcm9tICcuLi9wb3B1cC9UaVBvcHVwU2VydmljZSc7XHJcbmltcG9ydCB7IFRpQ29udGVudFdyYXBwZXJDb21wb25lbnQgfSBmcm9tICcuL1RpQ29udGVudFdyYXBwZXJDb21wb25lbnQnO1xyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKiDnlJ/miJDlubbkuJRjb21waWxl5YaF5a655Li65a6/5Li75YWD57Sg55qE5a2Q5YWD57SgXHJcbiAqL1xyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW3RpVHJhbnNjbHVkZV0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUaVRyYW5zY2x1ZGVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XHJcbiAgICBASW5wdXQoKSB0aVRyYW5zY2x1ZGU6IHtcclxuICAgICAgICBjb250ZW50OiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+LFxyXG4gICAgICAgIGNvbnRleHQ/OiBhbnlcclxuICAgIH07XHJcbiAgICBwcml2YXRlIHdyYXBwZXJSZWY6IGFueTtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlUmVmOiBFbGVtZW50UmVmLFxyXG4gICAgICAgICAgICAgICAgcHJpdmF0ZSBwb3BTZXJ2aWNlOiBUaVBvcHVwU2VydmljZTxhbnk+KSB7XHJcbiAgICB9XHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLndyYXBwZXJSZWYgPSB0aGlzLnBvcFNlcnZpY2UuY3JlYXRlKFRpQ29udGVudFdyYXBwZXJDb21wb25lbnQpO1xyXG4gICAgICAgIHRoaXMud3JhcHBlclJlZi5zaG93KHtcclxuICAgICAgICAgICAgY29udGVudDogdGhpcy50aVRyYW5zY2x1ZGUuY29udGVudCxcclxuICAgICAgICAgICAgY29udGVudENvbnRleHQ6IHRoaXMudGlUcmFuc2NsdWRlLmNvbnRleHQsXHJcbiAgICAgICAgICAgIGNvbnRhaW5lcjogdGhpcy5lbGVSZWZcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMud3JhcHBlclJlZi5oaWRlKCk7XHJcbiAgICB9XHJcbn1cclxuIl19