/* eslint-disable no-eq-null */
/* eslint-disable eqeqeq */
/**
 * 该类提供服务，用于管理Tip组件的创建和销毁
 * 服务中提供三个方法:
 * create(hostEle, config) 生成一个tip实例并返回对象，
 *   hostEle:宿主元素
 *   config:{
 *      position：tip元素位置
 *      maxWidth：最大宽度
 *      hasArrow：是否带箭头
 *      theme：tip色系 'black'/default
 *  }
 * 返回的实例对象中提供方法:
 * {
 *  show({ // 显示Tip组件
 *   content:弹出组件内容
 *   context:弹出组件上下文
 * })
 *  hide():隐藏并销毁Tip
 * }
 */
import { Injectable, NgZone, RendererFactory2, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { TiPopupService } from '../popup/TiPopupService';
import { Position } from '../../utils/Position';
import { Util } from '../../utils/Util';
import { TiRenderer } from '../renderer/TiRenderer';
import { TiTipContainerComponent } from './TiTipContainerComponent';
import { TiTipServiceModule } from './TiTipServiceModule';
import * as i0 from "@angular/core";
import * as i1 from "../popup/TiPopupService";
import * as i2 from "../renderer/TiRenderer";
import * as i3 from "@angular/common";
import * as i4 from "./TiTipServiceModule";
/**
 * tip提供了两种使用方式:
 *
 * 1.服务方式（见如下说明），使用该服务时需要引入模块TiTipServiceModule
 *
 * 2.指令方式：[TiTipDirective]{@link ../directives/TiTipDirective.html}
 *
 * <example-url>../tiny3demo/#/tip/tip-all</example-url>
 */
export class TiTipService {
    constructor(popService, rendererFactory, tiRenderer, zone, document) {
        this.popService = popService;
        this.tiRenderer = tiRenderer;
        this.zone = zone;
        this.document = document;
        /* tslint:disable:no-null-keyword */
        this.render = rendererFactory.createRenderer(null, null);
    }
    /**
     * 页面激活窗口改变事件处理，此处获取事件名称，该事件后续会在tip显示时注册，隐藏时销毁
     * 添加该事件用于解决的问题现象是：tip带链接，并且点击链接跳转至新开页面，因此，当返回先前页面时，tip不消失（因为未触发任何tip消失的事件），
     * 且移入其他出tip的元素，会出现页面有多个tip的现象
     */
    getVisibleChangeEventName() {
        const hiddenProperty = 'hidden' in this.document ? 'hidden' :
            'webkitHidden' in this.document ? 'webkitHidden' :
                'mozHidden' in this.document ? 'mozHidden' :
                    '';
        return hiddenProperty.replace(/hidden/i, 'visibilitychange');
    }
    create(hostEle, config) {
        // 宿主元素不存在情况下，不做处理
        if (!Util.isElement(hostEle)) {
            return;
        }
        const tipInstance = this.createTip(hostEle, config);
        this.addTriggerEvent(hostEle, config, tipInstance);
        return tipInstance;
    }
    /**
     * 创建Tip实例
     *
     * @param hostEle tip生成所依附的宿主元素
     *
     * @param config tip属性配置
     *
     * @returns 生成的Tip实例对象如下：
     *
     * ```
     * {
     *      // 显示tip方法
     *      // @param content {string | TemplateRef<any> | any} tip显示内容，可为字符串/ng-template/component，具体用法见示例
     *      // @param context {any} tip显示内容对应的上下文，content类型为templateRef或Component形式时会用到该参数
     *      show: (content: string | TemplateRef<any> | any, context?: any) => void;
     *
     *      // 隐藏tip方法
     *      hide: () => void;
     * }
     * ```
     */
    createTip(hostEle, config) {
        const popInstance = this.popService.create(TiTipContainerComponent); // tip弹出服务实例，可通过调用show/hide方法切换组件的显示状态
        let tipComponentRef; // 生成好的 tip 组件实例对象componentRef
        const visibilityChangeEvent = this.getVisibleChangeEventName();
        let visibleChangeEvtHandle;
        // 组件添加全局事件销毁相关处理
        let eventHandles = []; // 用于存储事件句柄，事件句柄在事件取消时需要用到
        // 隐藏处理函数
        const hideFn = () => {
            if (tipComponentRef != null) {
                // 销毁弹出元素
                popInstance.hide();
                // 通过执行事件返回句柄方法解绑事件
                Position.removePosChangeEvts(eventHandles);
                if (config.registerVisibilityChangeEvent !== false) {
                    visibleChangeEvtHandle();
                }
                tipComponentRef = null;
            }
        };
        return {
            show: (content, context) => {
                if (Util.isUndefined(content) || content === '') {
                    return;
                }
                // 显示Tip元素
                tipComponentRef = this.showTip({
                    popInstance,
                    hostEle,
                    content,
                    context,
                    config
                });
                // 添加全局事件，用于控制特殊情况下宿主位置改变时Tip的隐藏
                eventHandles = Position.addPosChangeEvts(hideFn, this.render);
                if (config.registerVisibilityChangeEvent !== false) {
                    visibleChangeEvtHandle = this.render.listen(this.document, visibilityChangeEvent, hideFn);
                }
                return tipComponentRef;
            },
            hide: () => {
                hideFn();
            },
            // 销毁tip
            destroy: () => {
                // 销毁tip前先隐藏
                hideFn();
            }
        };
    }
    // 根据trigger配置为宿主元素添加事件，该事件用于控制tip的显示/隐藏
    addTriggerEvent(hostEle, config, tipInstance) {
        // 非mouse情况下，不用做事件处理
        if (config.trigger !== 'mouse') {
            return;
        }
        let tipComponentRef = null;
        // 默认情况下，使用mouse进行tip显示和隐藏控制（只对指令形式有效）
        this.zone.runOutsideAngular(() => {
            const unlistenMouseenterFn = this.render.listen(hostEle, 'mouseenter', () => {
                if (typeof config.showFn !== 'function') {
                    return;
                }
                const showInfo = config.showFn();
                if (!showInfo) {
                    return;
                }
                this.zone.run(() => {
                    tipComponentRef = tipInstance.show(showInfo.content, showInfo.context);
                    if (!tipComponentRef) {
                        return;
                    }
                    // 根据trigger配置添加tip元素本身事件，此处事件用于支持移出tip元素时tip消失
                    const targetEle = tipComponentRef.location.nativeElement;
                    // eslint-disable-next-line max-nested-callbacks
                    this.render.listen(targetEle, 'mouseleave', (event) => {
                        /**
                         * 此处处理是为了解决Chrome高版本下，连续点击tip区域情况下，导致tip消失的问题
                         * 【问题原因】chrome高版本（chrome60以上版本）下，连续的click事件会触发tipEle的mouseleave事件,
                         * 从而导致tip消失
                         * 【解决方案】如mouseleve事件是由tip元素本身点击触发的，则event.relatedTarget为null，则通过该
                         * 方式进行特殊情况排除
                         */
                        if (event.relatedTarget === null) {
                            return;
                        }
                        tipInstance.hide();
                        tipComponentRef = null;
                    });
                });
            });
            const unlistenMouseleaveFn = this.render.listen(hostEle, 'mouseleave', (event) => {
                // 鼠标移入tip时，tip不消失
                if (tipComponentRef && !tipComponentRef.location.nativeElement.contains(event.relatedTarget)) {
                    this.zone.run(() => {
                        tipInstance.hide();
                        tipComponentRef = null;
                    });
                }
            });
            // 给实例添加销毁方法
            tipInstance.destroy = () => {
                // 先隐藏tip示例再取消监听事件
                tipInstance.hide();
                unlistenMouseenterFn();
                unlistenMouseleaveFn();
            };
        });
    }
    showTip(options) {
        const tipComponentRef = options.popInstance.show({
            content: options.content,
            contentContext: options.context,
            container: 'body'
        });
        const targetEle = tipComponentRef.location.nativeElement;
        this.tiRenderer.setStyles(targetEle, {
            left: '-9999px',
            top: '-9999px'
        });
        this.setTipTheme(targetEle, options.config);
        // 计算元素宽高时，需要确保元素已生成
        this.setTipWidth(targetEle, options.config);
        this.setPosition(options.hostEle, targetEle, options.config);
        return tipComponentRef;
    }
    setTipTheme(ele, config) {
        if (!config || !config.theme) {
            return;
        }
        if (config.theme === 'black') {
            this.render.addClass(ele, 'ti3-tip-black-theme');
        }
        else if (config.theme === 'white') {
            this.render.addClass(ele, 'ti3-tip-white-theme');
        }
    }
    setTipWidth(ele, config) {
        const maxWidth = parseInt((config && config.maxWidth) || TiTipService.DEFAULT_WIDTH, 10);
        // 修复SSR错误：ERROR TypeError: ele.getBoundingClientRect is not a function
        if (typeof ele.getBoundingClientRect !== 'function') {
            return;
        }
        const targetWidth = ele.getBoundingClientRect().width;
        if (targetWidth > maxWidth) {
            // 如果宽度超过最大值，重新设置当前tip的内容宽度
            this.render.setStyle(ele, 'width', `${maxWidth}px`);
        }
    }
    setPosition(hostEle, targetEle, config) {
        const result = Position.setPosition({
            targetEle,
            hostEle,
            hostEleX: config.hostEleX,
            position: config && config.position || 'auto',
            hostSpace: TiTipService.SPACE,
            fixMaxHeight: true,
            hasOffsetFix: true
        });
        const position = result.position;
        if (!config || config.hasArrow !== false) { // 未定义或定义为false情况下都需要加该样式类控制三角样式
            this.render.addClass(targetEle, `ti3-tooltip-${position}`);
        }
        // 设置该样式类是为了支持鼠标移入Tip不消失：使用该样式类用于确保tip和宿主元素连接处的DOM在tip范围内
        this.render.addClass(targetEle.querySelector('.ti3-tooltip-sqr'), `ti3-tooltip-${position}-sqr`);
        // 设置当前tip的内容最大高度，超出显示滚动条
        this.tiRenderer.setStyles(targetEle.querySelector('.ti3-tooltip-content'), {
            maxHeight: result.avilableHeight
        });
    }
}
TiTipService.DEFAULT_WIDTH = 276; // tip换行宽度
TiTipService.SPACE = 6.5 + 5; // tip框与元素本身的距离 = 三角宽高 + tip三角到触发tip的内容区域的距离
TiTipService.ɵprov = i0.ɵɵdefineInjectable({ factory: function TiTipService_Factory() { return new TiTipService(i0.ɵɵinject(i1.TiPopupService), i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i2.TiRenderer), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i3.DOCUMENT)); }, token: TiTipService, providedIn: i4.TiTipServiceModule });
TiTipService.decorators = [
    { type: Injectable, args: [{
                providedIn: TiTipServiceModule
            },] }
];
TiTipService.ctorParameters = () => [
    { type: TiPopupService },
    { type: RendererFactory2 },
    { type: TiRenderer },
    { type: NgZone },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
//# sourceMappingURL=data:application/json;base64,