import { zh_CN } from './i18n/zh_CN';
import { en_US } from './i18n/en_US';
import { de_DE } from './i18n/de_DE';
import { es_ES } from './i18n/es_ES';
import { es_US } from './i18n/es_US';
import { fr_FR } from './i18n/fr_FR';
import { pt_BR } from './i18n/pt_BR';
import { Util } from '../utils/Util';
/**
 * Tiny组件中使用的国际化词条配置方法类
 *
 * 可通过在启动模块中通过配置具体的国际化语种的方式设置组件的国际化，使用方式如下：
 *
 *
 *      import {TiLocale} from '@cloud/tiny3';
 *
 *      export class AppModule {
 *
 *          constructor() {
 *              TiLocale.setLocale(TiLocale.EN_US);
 *          }
 *      }
 *
 * <h3>示例</h3>
 * <iframe src="../tiny3demo/#/locale/locale-basic" frameborder='0' width="100%" onload="this.height = document.documentElement.clientHeight"></iframe>
 */
export class TiLocale {
    /**
     * 静态代码段执行：如过word和locale未初始化，那么执行初始化。
     */
    static initWordsAndLocale() {
        if (!TiLocale.getWords()) {
            // 默认所有语言都打包进来
            TiLocale.setWords({
                'zh-CN': zh_CN,
                'en-US': en_US,
                'de-DE': de_DE,
                'es-ES': es_ES,
                'es-US': es_US,
                'fr-FR': fr_FR,
                'pt-BR': pt_BR
            });
        }
        if (!TiLocale.getLocale()) {
            TiLocale.setLocale(TiLocale.ZH_CN);
        }
    }
    /**
     * Sets words
     * @param Words 全量的语言包，由语言名称：语言词条包组成。
     *
     * @returns words
     */
    static setWords(words) {
        // 设计缺陷：如果tiWords放在类成员变量上，会更好。window在SSR环境找不到。
        if (typeof window !== 'undefined') {
            window.tiWords = words;
        }
        else if (typeof global !== 'undefined') {
            global.tiWords = words;
        }
    }
    static getWords() {
        if (typeof window !== 'undefined') {
            return window.tiWords;
        }
        else if (typeof global !== 'undefined') {
            return global.tiWords;
        }
    }
    /**
     * 设置组件国际化语种
     * @param locale 国际化字符，可通过TiLocale.ZH_CN/TiLocale.EN_US等语种关键字设置参数
     */
    static setLocale(locale) {
        if (typeof window !== 'undefined') {
            window.tiLocale = locale;
        }
        else if (typeof global !== 'undefined') {
            global.tiLocale = locale;
        }
    }
    static getLocale() {
        if (typeof window !== 'undefined') {
            return window.tiLocale;
        }
        else if (typeof global !== 'undefined') {
            return global.tiLocale;
        }
    }
    /**
     * 设置组件国际化语种
     * @param localeKey 国际化字符，可通过TiLocale.ZH_CN/TiLocale.EN_US等语种关键字设置参数
     */
    /**
     * @ignore
     * 获取当前语言下，组件国际化语种对应的词条集合
     */
    static getLocaleWords() {
        return TiLocale.getWords()[TiLocale.getLocale()];
    }
    /**
     * @ignore
     * 获取单个词条的国际化文本/对象
     * 参数：
     */
    static translate(keyValue, params) {
        const keyArr = keyValue.split('.');
        let value = TiLocale.getLocaleWords();
        keyArr.forEach((key) => {
            value = value[key];
        });
        return Util.formatEntry(value, params);
    }
}
/**
 * 英文语种关键字，关键字均使用中划线形式命名，确保和浏览器保持一致
 */
TiLocale.EN_US = 'en-US';
/**
 * 语种关键字
 */
TiLocale.ZH_CN = 'zh-CN';
/**
 * 语种关键字
 */
TiLocale.DE_DE = 'de-DE';
/**
 * 语种关键字
 */
TiLocale.ES_ES = 'es-ES';
/**
 * 语种关键字
 */
TiLocale.ES_US = 'es-US';
/**
 * 语种关键字
 */
TiLocale.FR_FR = 'fr-FR';
/**
 * 语种关键字
 */
TiLocale.PT_BR = 'pt-BR';
// private static localeKey: string = TiLocale.ZH_CN; // 语种关键字
/**
 * Typescript没有静态代码段，所以这样代替静态代码段
 */
TiLocale.staticCode = TiLocale.initWordsAndLocale();
//# sourceMappingURL=data:application/json;base64,