import { Component, ElementRef, Renderer2, Input, NgZone } from '@angular/core';
import { TiLeftmenuComponent } from './TiLeftmenuComponent';
import { TiLeftmenuLevel1Component } from './TiLeftmenuLevel1Component';
import { TiBaseComponent } from '../base/TiBaseModule';
/**
 * TiLeftmenuLevel2Component 是二级菜单组件，嵌在 TiLeftmenuLevel1 中使用
 */
export class TiLeftmenuLevel2Component extends TiBaseComponent {
    constructor(elementRef, renderer2, leftmenu, level1, zone) {
        super(elementRef, renderer2);
        this.level1 = level1;
        this.zone = zone;
        this.leftmenu = leftmenu;
        this.level2Ele = elementRef;
        this.renderer = renderer2;
    }
    ngOnInit() {
        this.level1.children.push(this);
    }
    ngAfterViewInit() {
        this.zone.runOutsideAngular(() => {
            this.renderer.listen(this.level2Ele.nativeElement, 'mousedown', () => {
                this.renderer.setStyle(this.level2Ele.nativeElement, 'outline', 'none');
            });
            this.renderer.listen(this.level2Ele.nativeElement, 'blur', () => {
                this.renderer.setStyle(this.level2Ele.nativeElement, 'outline', '');
            });
        });
    }
    /**
     * @ignore
     * 模板中使用，点击二级菜单项时调用
     */
    selectFn() {
        if (this.item.href) {
            this.level1.openHref(this.item.href);
            this.level2Ele.nativeElement.blur(); // 为了没有outline。
            return;
        }
        if (this.leftmenu.routable) {
            // 点击当前已经激活的item时，刷新对应路由
            if (this.leftmenu.active === this.item) {
                this.leftmenu.triggerReload(this.item);
            }
            else {
                // 点击其他项需要进行跳转，来触发路由守卫，实际是否跳转取决于路由守卫返回值。
                this.leftmenu.navigate(this.item);
            }
        }
        else {
            if (this.leftmenu.active !== this.item) {
                this.leftmenu.active = this.item;
                this.leftmenu.activeChange.emit(this.item);
            }
        }
    }
    ngOnDestroy() {
        const index = this.level1.children.indexOf(this);
        if (index !== -1) {
            this.level1.children.splice(index, 1);
        }
    }
}
TiLeftmenuLevel2Component.decorators = [
    { type: Component, args: [{
                selector: 'ti-leftmenu-level2',
                template: "<ng-content></ng-content>\r\n<!-- \u94FE\u63A5\u56FE\u6807 -->\r\n<span *ngIf=\"item.href\" class=\"ti3-icon-action-binding ti3-icon ti3-leftmenu-href\"></span>\r\n",
                host: {
                    '[class.ti3-leftmenu-level2]': 'true',
                    '[class.ti3-leftmenu-level2-active]': 'this.item === this.leftmenu.active',
                    '[attr.tabindex]': '0',
                    '[id]': 'appendId("leftmenu_level2")',
                    '(click)': 'selectFn()',
                    '(keyup.enter)': 'selectFn()'
                }
            },] }
];
TiLeftmenuLevel2Component.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: TiLeftmenuComponent },
    { type: TiLeftmenuLevel1Component },
    { type: NgZone }
];
TiLeftmenuLevel2Component.propDecorators = {
    item: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,