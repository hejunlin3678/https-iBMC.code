import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiSearchboxNotsearchComponent } from '../searchbox/TiSearchboxModule';
import { Util } from '../../utils/Util';
import { TiDropComponent } from '../drop/TiDropModule';
import { TiDroplistComponent } from '../droplist/TiDroplistModule';
import { TiLocale } from '../../locale/TiLocaleModule';
/**
 * @ignore
 * 下拉面板带有可搜索的数组组件，主要用于select，表格列设置。
 */
export class TiDropsearchComponent extends TiDroplistComponent {
    constructor() {
        super(...arguments);
        this.searchable = false;
        this.selectAll = false; // 多选模式下是否有全选功能
        /**
         * 面板对齐方式, drop中的panelAlign接口透传出去
         */
        this.panelAlign = 'left';
        /**
         * @ignore
         * dominator 到drop的距离
         */
        this.dominatorSpace = TiDropComponent.DOMINATOR_SPACE + 'px';
        /**
         * @ignore
         * 10.0.2新增
         *
         * 后台搜索，传出搜索框的值
         */
        this.beforeSearch = new EventEmitter();
        this.placeholder = TiLocale.getLocaleWords().tiSelect.search;
        /**
         * 搜索结果数组
         */
        this.searchResult = new Array();
        this.oldSearchable = null;
        this.focusableElemsInSearch = [];
        this.focusableElemsInPagination = [];
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        // 外部修改show属性的处理，初始定义在ngOnInit中处理
        if (this.searchable) {
            if (changes['options'] && this.options && !changes['options'].firstChange) {
                this.searchWordChange(this.searchboxCom.model);
            }
        }
        if (changes['searchable']) {
            this.heightExcludeList = changes['searchable'].currentValue ? TiDroplistComponent.SEARCHBOX_EXCLUDE_HEIGHT : 2;
        }
    }
    ngOnInit() {
        super.ngOnInit();
        this.searchResult = this.options;
    }
    ngAfterViewChecked() {
        super.ngAfterViewChecked();
        let focusableElemsChange;
        if (this.searchable !== this.oldSearchable) {
            super.unlistenKendown();
            if (this.searchable) {
                this.focusableElemsInSearch = this.searchboxCom.getFocusableElems();
                focusableElemsChange = true;
                super.listenKeydown(this.searchboxCom.getFocusableElems()[0]);
            }
            else {
                this.focusableElemsInSearch = [];
                super.listenKeydown(this.dominatorElem);
            }
            this.oldSearchable = this.searchable;
        }
        if (this.pagination && this.pagination.updateFocusableElems) {
            this.focusableElemsInPagination = this.pagination.getFocusableElems();
            focusableElemsChange = true;
        }
        if (focusableElemsChange) {
            this.setFocusableElems(this.focusableElemsInSearch.concat(this.focusableElemsInPagination));
        }
    }
    /**
     * 覆盖父类show()
     */
    show() {
        if (this.isShow) {
            return;
        }
        // 清空搜索框并处理下拉列表内容
        if (this.searchable) {
            this.searchResult = this.options;
            setTimeout(() => {
                super.show();
                // 焦点转移至搜索框
                this.searchboxCom.focus();
            }, 0);
        }
        else {
            super.show();
        }
    }
    /**
     * 覆盖父类hide(), 有搜索框时焦点转移
     */
    hide() {
        if (this.isShow) {
            super.hide();
            if (this.searchable) {
                this.dominatorElem.focus();
                this.searchWord = '';
            }
        }
    }
    /**
     * 仅hide，不带焦点转移。
     */
    hideWithoutFocus() {
        super.hide();
        this.searchWord = '';
    }
    searchWordChange(searchWord) {
        this.beforeSearch.emit();
        if (this.hasBeforeSearchObservers) {
            return;
        }
        if (this.options && this.options.length >= 0) {
            // 搜索结果临时值。结果默认值，是原数据
            let searchResult = this.options;
            // 如果搜索词存在
            if (!Util.isEmptyString(searchWord)) {
                // 如果是分组，则找出第二级item集合
                if (this.options[0] && this.listCom.isGroup(this.options[0])) {
                    searchResult = [];
                    this.options.forEach((group) => {
                        searchResult = searchResult.concat(group.children);
                    });
                }
                // 在集合中搜索
                searchResult = searchResult.filter((option) => {
                    if (!this.searchKeys) {
                        // 没有定义searchKeys时，取labelKey
                        return Util.isString(option[this.labelKey]) && option[this.labelKey].toLowerCase()
                            .indexOf(searchWord.toLowerCase()) >= 0;
                    }
                    else {
                        //  已定义searchKeys，任一条目匹配即可
                        for (const searchKey of this.searchKeys) {
                            if (Util.isString(option[searchKey]) && option[searchKey].toLowerCase()
                                .indexOf(searchWord.toLowerCase()) >= 0) {
                                return true;
                            }
                        }
                        return false;
                    }
                });
            }
            this.setSearchResult(searchResult);
        }
    }
    /**
     * 搜索后，按需重新定位、设置hoverOption
     */
    setSearchResult(searchResult) {
        var _a;
        // list个数不同时，重定位下拉位置
        if (((_a = this.searchResult) === null || _a === void 0 ? void 0 : _a.length) !== searchResult.length) {
            setTimeout(() => {
                this.rePosition(true);
            }, 0);
        }
        this.searchResult = searchResult;
    }
}
TiDropsearchComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-dropsearch',
                template: "<ti-drop [dominatorElem]=\"dominatorElem\"\r\n    [panelWidth]='panelWidth' [class.ti3-select-small]=\"size === 'small'\"\r\n    [panelAlign]=\"panelAlign\"\r\n    [dominatorSpace]=\"dominatorSpace\">\r\n    <ng-content select=\"[custom]\"></ng-content>\r\n    <div *ngIf=\"searchable\">\r\n        <ti-searchbox-notsearch #searchboxCom noBorder\r\n                class =\"ti3-dropdown-searchbox\"\r\n                [placeholder]=\"placeholder\"\r\n                [(ngModel)]=\"searchWord\"\r\n                (ngModelChange)=\"searchWordChange($event)\"\r\n                [id]=\"appendId('searchbox')\">\r\n        </ti-searchbox-notsearch>\r\n    </div>\r\n    <ti-list [multiple]=\"multiple\"\r\n        [options]=\"((type !== 'suggestion' && searchable) || type === 'suggestion')?searchResult:options\"\r\n        [(ngModel)]=\"model\"\r\n        [selectAll]=\"selectAll\"\r\n        style=\"display:block;\"\r\n        (select)=\"onSelect($event)\"\r\n        [id]=\"appendId('list')\"\r\n        [tipPosition]=\"tipPosition\"\r\n        [noDataText]=\"noDataText\">\r\n        <ng-template let-item let-i=index let-last=last>\r\n                <ng-container *ngIf=\"itemTemplate else listLabelTemplate\">\r\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item,index: i,last: last}\">\r\n                        </ng-container>\r\n                </ng-container>\r\n                <ng-template #listLabelTemplate>{{item[labelKey]}}</ng-template>\r\n        </ng-template>\r\n    </ti-list>\r\n    <ng-container *ngIf=\"footerTemplateRef\">\r\n        <section #footer>\r\n            <ng-container *ngTemplateOutlet=\"footerTemplateRef\"></ng-container>\r\n        </section>\r\n    </ng-container>\r\n</ti-drop>",
                providers: [TiFormComponent.getValueAccessor(TiDropsearchComponent)],
                styles: [".ti3-dropdown-searchbox{width:100%!important}"]
            },] }
];
TiDropsearchComponent.propDecorators = {
    searchable: [{ type: Input }],
    searchKeys: [{ type: Input }],
    selectAll: [{ type: Input }],
    panelAlign: [{ type: Input }],
    dominatorSpace: [{ type: Input }],
    beforeSearch: [{ type: Output }],
    searchboxCom: [{ type: ViewChild, args: [TiSearchboxNotsearchComponent,] }],
    dropCom: [{ type: ViewChild, args: [TiDropComponent,] }],
    footerTemplateRef: [{ type: ContentChild, args: ['footer', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlEcm9wc2VhcmNoQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnkzL2NvbXBvbmVudHMvZHJvcHNlYXJjaC9UaURyb3BzZWFyY2hDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQWlCLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDNUgsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQy9FLE9BQU8sRUFBWSxJQUFJLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNsRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdkQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDbkUsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBRXZEOzs7R0FHRztBQU9ILE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxtQkFBbUI7SUFOOUQ7O1FBUWEsZUFBVSxHQUFZLEtBQUssQ0FBQztRQUU1QixjQUFTLEdBQVksS0FBSyxDQUFDLENBQUMsZUFBZTtRQUNwRDs7V0FFRztRQUNNLGVBQVUsR0FBcUIsTUFBTSxDQUFDO1FBRS9DOzs7V0FHRztRQUNNLG1CQUFjLEdBQVcsZUFBZSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7UUFFekU7Ozs7O1dBS0c7UUFDZ0IsaUJBQVksR0FBc0IsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQU90RSxnQkFBVyxHQUFXLFFBQVEsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQ3ZFOztXQUVHO1FBQ0ksaUJBQVksR0FBZSxJQUFJ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QUM7U0FDVDtRQUNELElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ3JDLENBQUM7OztZQXJMSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLHF2REFBZ0M7Z0JBRWhDLFNBQVMsRUFBRSxDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDOzthQUN2RTs7O3lCQUdJLEtBQUs7eUJBQ0wsS0FBSzt3QkFDTCxLQUFLO3lCQUlMLEtBQUs7NkJBTUwsS0FBSzsyQkFRTCxNQUFNOzJCQUVOLFNBQVMsU0FBQyw2QkFBNkI7c0JBQ3ZDLFNBQVMsU0FBQyxlQUFlO2dDQUN6QixZQUFZLFNBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgQ29udGVudENoaWxkLCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVGlGb3JtQ29tcG9uZW50IH0gZnJvbSAnLi4vYmFzZS9UaUJhc2VNb2R1bGUnO1xyXG5pbXBvcnQgeyBUaVNlYXJjaGJveE5vdHNlYXJjaENvbXBvbmVudCB9IGZyb20gJy4uL3NlYXJjaGJveC9UaVNlYXJjaGJveE1vZHVsZSc7XHJcbmltcG9ydCB7IFRpS2V5bWFwLCBVdGlsIH0gZnJvbSAnLi4vLi4vdXRpbHMvVXRpbCc7XHJcbmltcG9ydCB7IFRpRHJvcENvbXBvbmVudCB9IGZyb20gJy4uL2Ryb3AvVGlEcm9wTW9kdWxlJztcclxuaW1wb3J0IHsgVGlEcm9wbGlzdENvbXBvbmVudCB9IGZyb20gJy4uL2Ryb3BsaXN0L1RpRHJvcGxpc3RNb2R1bGUnO1xyXG5pbXBvcnQgeyBUaUxvY2FsZSB9IGZyb20gJy4uLy4uL2xvY2FsZS9UaUxvY2FsZU1vZHVsZSc7XHJcblxyXG4vKipcclxuICogQGlnbm9yZVxyXG4gKiDkuIvmi4npnaLmnb/luKbmnInlj6/mkJzntKLnmoTmlbDnu4Tnu4Tku7bvvIzkuLvopoHnlKjkuo5zZWxlY3TvvIzooajmoLzliJforr7nva7jgIJcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd0aS1kcm9wc2VhcmNoJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9kcm9wc2VhcmNoLmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vZHJvcHNlYXJjaC5sZXNzJ10sXHJcbiAgICBwcm92aWRlcnM6IFtUaUZvcm1Db21wb25lbnQuZ2V0VmFsdWVBY2Nlc3NvcihUaURyb3BzZWFyY2hDb21wb25lbnQpXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGlEcm9wc2VhcmNoQ29tcG9uZW50IGV4dGVuZHMgVGlEcm9wbGlzdENvbXBvbmVudCB7XHJcblxyXG4gICAgQElucHV0KCkgc2VhcmNoYWJsZTogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgc2VhcmNoS2V5czogQXJyYXk8c3RyaW5nPjsgLy8g6KaB5pCc57Si55qE5a2X5q615pWw57uELCDpu5jorqTmmK9sYWJlbEtleeaIluiAheWFqOmDqOWtl+autVxyXG4gICAgQElucHV0KCkgc2VsZWN0QWxsOiBib29sZWFuID0gZmFsc2U7IC8vIOWkmumAieaooeW8j+S4i+aYr+WQpuacieWFqOmAieWKn+iDvVxyXG4gICAgLyoqXHJcbiAgICAgKiDpnaLmnb/lr7npvZDmlrnlvI8sIGRyb3DkuK3nmoRwYW5lbEFsaWdu5o6l5Y+j6YCP5Lyg5Ye65Y67XHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIHBhbmVsQWxpZ246ICdsZWZ0JyB8ICdyaWdodCcgPSAnbGVmdCc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiBkb21pbmF0b3Ig5YiwZHJvcOeahOi3neemu1xyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBkb21pbmF0b3JTcGFjZTogc3RyaW5nID0gVGlEcm9wQ29tcG9uZW50LkRPTUlOQVRPUl9TUEFDRSArICdweCc7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiAxMC4wLjLmlrDlop5cclxuICAgICAqXHJcbiAgICAgKiDlkI7lj7DmkJzntKLvvIzkvKDlh7rmkJzntKLmoYbnmoTlgLxcclxuICAgICAqL1xyXG4gICAgQE91dHB1dCgpIHJlYWRvbmx5IGJlZm9yZVNlYXJjaDogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuXHJcbiAgICBAVmlld0NoaWxkKFRpU2VhcmNoYm94Tm90c2VhcmNoQ29tcG9uZW50KSBzZWFyY2hib3hDb206IFRpU2VhcmNoYm94Tm90c2VhcmNoQ29tcG9uZW50O1xyXG4gICAgQFZpZXdDaGlsZChUaURyb3BDb21wb25lbnQpIGRyb3BDb206IFRpRHJvcENvbXBvbmVudDtcclxuICAgIEBDb250ZW50Q2hpbGQoJ2Zvb3RlcicsIHsgc3RhdGljOiB0cnVlIH0pIGZvb3RlclRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG5cclxuICAgIHB1YmxpYyBzZWFyY2hXb3JkOiBzdHJpbmc7IC8vIOaQnOe0ouahhuWGheWNleivjVxyXG4gICAgcHVibGljIHBsYWNlaG9sZGVyOiBzdHJpbmcgPSBUaUxvY2FsZS5nZXRMb2NhbGVXb3JkcygpLnRpU2VsZWN0LnNlYXJjaDtcclxuICAgIC8qKlxyXG4gICAgICog5pCc57Si57uT5p6c5pWw57uEXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZWFyY2hSZXN1bHQ6IEFycmF5PGFueT4gPSBuZXcgQXJyYXk8YW55PigpO1xyXG4gICAgcHJpdmF0ZSBvbGRTZWFyY2hhYmxlOiBib29sZWFuID0gbnVsbDtcclxuICAgIHB1YmxpYyBwYWdpbmF0aW9uOiBhbnk7IC8vIOayoeacieaMh+Wumuexu+Wei+aYr+WboOS4uuWmguaenOW8leWFpVRpUGFnaW5hdGlvbkNvbXBvbmVudOS8muWboOS4uuW+queOr+W8leeUqOWvvOiHtOaKpemUmVxyXG4gICAgcHVibGljIGZvY3VzYWJsZUVsZW1zSW5TZWFyY2g6IEFycmF5PGFueT4gPSBbXTtcclxuICAgIHB1YmxpYyBmb2N1c2FibGVFbGVtc0luUGFnaW5hdGlvbjogQXJyYXk8YW55PiAgPSBbXTtcclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZSBzZWxlY3TnmoRiZWZvcmVTZWFyY2jmnInmsqHmnInooqvnm5HlkKzvvIzor6XlgLzkuLp0cnVl77yMZHJvcHNlYXJjaOeahGJlZm9yZVNlYXJjaOaJjeaYr+ecn+ato+aEj+S5ieeahOiiq+ebkeWQrFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaGFzQmVmb3JlU2VhcmNoT2JzZXJ2ZXJzOiBib29sZWFuO1xyXG5cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5uZ09uQ2hhbmdlcyhjaGFuZ2VzKTtcclxuICAgICAgICAvLyDlpJbpg6jkv67mlLlzaG935bGe5oCn55qE5aSE55CG77yM5Yid5aeL5a6a5LmJ5ZyobmdPbkluaXTkuK3lpITnkIZcclxuICAgICAgICBpZiAodGhpcy5zZWFyY2hhYmxlKSB7XHJcbiAgICAgICAgICAgIGlmIChjaGFuZ2VzWydvcHRpb25zJ10gJiYgdGhpcy5vcHRpb25zICYmICFjaGFuZ2VzWydvcHRpb25zJ10uZmlyc3RDaGFuZ2UpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VhcmNoV29yZENoYW5nZSh0aGlzLnNlYXJjaGJveENvbS5tb2RlbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChjaGFuZ2VzWydzZWFyY2hhYmxlJ10pIHtcclxuICAgICAgICAgICAgdGhpcy5oZWlnaHRFeGNsdWRlTGlzdCA9IGNoYW5nZXNbJ3NlYXJjaGFibGUnXS5jdXJyZW50VmFsdWUgPyBUaURyb3BsaXN0Q29tcG9uZW50LlNFQVJDSEJPWF9FWENMVURFX0hFSUdIVCA6IDI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIubmdPbkluaXQoKTtcclxuICAgICAgICB0aGlzLnNlYXJjaFJlc3VsdCA9IHRoaXMub3B0aW9ucztcclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyVmlld0NoZWNrZWQoKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIubmdBZnRlclZpZXdDaGVja2VkKCk7XHJcbiAgICAgICAgbGV0IGZvY3VzYWJsZUVsZW1zQ2hhbmdlOiBib29sZWFuO1xyXG4gICAgICAgIGlmICh0aGlzLnNlYXJjaGFibGUgIT09IHRoaXMub2xkU2VhcmNoYWJsZSkge1xyXG4gICAgICAgICAgICBzdXBlci51bmxpc3RlbktlbmRvd24oKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2VhcmNoYWJsZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mb2N1c2FibGVFbGVtc0luU2VhcmNoID0gdGhpcy5zZWFyY2hib3hDb20uZ2V0Rm9jdXNhYmxlRWxlbXMoKTtcclxuICAgICAgICAgICAgICAgIGZvY3VzYWJsZUVsZW1zQ2hhbmdlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHN1cGVyLmxpc3RlbktleWRvd24odGhpcy5zZWFyY2hib3hDb20uZ2V0Rm9jdXNhYmxlRWxlbXMoKVswXSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZvY3VzYWJsZUVsZW1zSW5TZWFyY2ggPSBbXTtcclxuICAgICAgICAgICAgICAgIHN1cGVyLmxpc3RlbktleWRvd24odGhpcy5kb21pbmF0b3JFbGVtKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLm9sZFNlYXJjaGFibGUgPSB0aGlzLnNlYXJjaGFibGU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLnBhZ2luYXRpb24gJiYgdGhpcy5wYWdpbmF0aW9uLnVwZGF0ZUZvY3VzYWJsZUVsZW1zKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZm9jdXNhYmxlRWxlbXNJblBhZ2luYXRpb24gPSB0aGlzLnBhZ2luYXRpb24uZ2V0Rm9jdXNhYmxlRWxlbXMoKTtcclxuICAgICAgICAgICAgZm9jdXNhYmxlRWxlbXNDaGFuZ2UgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGZvY3VzYWJsZUVsZW1zQ2hhbmdlKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2V0Rm9jdXNhYmxlRWxlbXModGhpcy5mb2N1c2FibGVFbGVtc0luU2VhcmNoLmNvbmNhdCh0aGlzLmZvY3VzYWJsZUVsZW1zSW5QYWdpbmF0aW9uKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiDopobnm5bniLbnsbtzaG93KClcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNob3coKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNTaG93KSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8g5riF56m65pCc57Si5qGG5bm25aSE55CG5LiL5ouJ5YiX6KGo5YaF5a65XHJcbiAgICAgICAgaWYgKHRoaXMuc2VhcmNoYWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLnNlYXJjaFJlc3VsdCA9IHRoaXMub3B0aW9ucztcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzdXBlci5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAvLyDnhKbngrnovaznp7voh7PmkJzntKLmoYZcclxuICAgICAgICAgICAgICAgIHRoaXMuc2VhcmNoYm94Q29tLmZvY3VzKCk7XHJcbiAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHN1cGVyLnNob3coKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOimhueblueItuexu2hpZGUoKSwg5pyJ5pCc57Si5qGG5pe254Sm54K56L2s56e7XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBoaWRlKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLmlzU2hvdykge1xyXG4gICAgICAgICAgICBzdXBlci5oaWRlKCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNlYXJjaGFibGUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZG9taW5hdG9yRWxlbS5mb2N1cygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWFyY2hXb3JkID0gJyc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOS7hWhpZGXvvIzkuI3luKbnhKbngrnovaznp7vjgIJcclxuICAgICAqL1xyXG4gICAgcHVibGljIGhpZGVXaXRob3V0Rm9jdXMoKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIuaGlkZSgpO1xyXG4gICAgICAgIHRoaXMuc2VhcmNoV29yZCA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzZWFyY2hXb3JkQ2hhbmdlKHNlYXJjaFdvcmQ6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYmVmb3JlU2VhcmNoLmVtaXQoKTtcclxuICAgICAgICBpZiAodGhpcy5oYXNCZWZvcmVTZWFyY2hPYnNlcnZlcnMpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5vcHRpb25zICYmIHRoaXMub3B0aW9ucy5sZW5ndGggPj0gMCkge1xyXG4gICAgICAgICAgICAvLyDmkJzntKLnu5PmnpzkuLTml7blgLzjgILnu5Pmnpzpu5jorqTlgLzvvIzmmK/ljp/mlbDmja5cclxuICAgICAgICAgICAgbGV0IHNlYXJjaFJlc3VsdDogQXJyYXk8YW55PiA9IHRoaXMub3B0aW9ucztcclxuICAgICAgICAgICAgLy8g5aaC5p6c5pCc57Si6K+N5a2Y5ZyoXHJcbiAgICAgICAgICAgIGlmICghVXRpbC5pc0VtcHR5U3RyaW5nKHNlYXJjaFdvcmQpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyDlpoLmnpzmmK/liIbnu4TvvIzliJnmib7lh7rnrKzkuoznuqdpdGVt6ZuG5ZCIXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5vcHRpb25zWzBdICYmIHRoaXMubGlzdENvbS5pc0dyb3VwKHRoaXMub3B0aW9uc1swXSkpIHtcclxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hSZXN1bHQgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9wdGlvbnMuZm9yRWFjaCgoZ3JvdXA6IGFueSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hSZXN1bHQgPSBzZWFyY2hSZXN1bHQuY29uY2F0KGdyb3VwLmNoaWxkcmVuKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIOWcqOmbhuWQiOS4reaQnOe0olxyXG4gICAgICAgICAgICAgICAgc2VhcmNoUmVzdWx0ID0gc2VhcmNoUmVzdWx0LmZpbHRlcigob3B0aW9uOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2VhcmNoS2V5cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDmsqHmnInlrprkuYlzZWFyY2hLZXlz5pe277yM5Y+WbGFiZWxLZXlcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFV0aWwuaXNTdHJpbmcob3B0aW9uW3RoaXMubGFiZWxLZXldKSAmJiBvcHRpb25bdGhpcy5sYWJlbEtleV0udG9Mb3dlckNhc2UoKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmluZGV4T2Yoc2VhcmNoV29yZC50b0xvd2VyQ2FzZSgpKSA+PSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICDlt7LlrprkuYlzZWFyY2hLZXlz77yM5Lu75LiA5p2h55uu5Yy56YWN5Y2z5Y+vXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VhcmNoS2V5IG9mIHRoaXMuc2VhcmNoS2V5cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFV0aWwuaXNTdHJpbmcob3B0aW9uW3NlYXJjaEtleV0pICYmIG9wdGlvbltzZWFyY2hLZXldLnRvTG93ZXJDYXNlKClcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuaW5kZXhPZihzZWFyY2hXb3JkLnRvTG93ZXJDYXNlKCkpID49IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnNldFNlYXJjaFJlc3VsdChzZWFyY2hSZXN1bHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5pCc57Si5ZCO77yM5oyJ6ZyA6YeN5paw5a6a5L2N44CB6K6+572uaG92ZXJPcHRpb25cclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFNlYXJjaFJlc3VsdChzZWFyY2hSZXN1bHQ6IEFycmF5PGFueT4pOiB2b2lkIHtcclxuICAgICAgICAvLyBsaXN05Liq5pWw5LiN5ZCM5pe277yM6YeN5a6a5L2N5LiL5ouJ5L2N572uXHJcbiAgICAgICAgaWYgKHRoaXMuc2VhcmNoUmVzdWx0Py5sZW5ndGggIT09IHNlYXJjaFJlc3VsdC5sZW5ndGgpIHtcclxuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlUG9zaXRpb24odHJ1ZSk7XHJcbiAgICAgICAgICAgIH0sIDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNlYXJjaFJlc3VsdCA9IHNlYXJjaFJlc3VsdDtcclxuICAgIH1cclxufVxyXG4iXX0=