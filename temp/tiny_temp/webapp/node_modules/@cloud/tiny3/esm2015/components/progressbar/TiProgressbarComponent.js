import { Component, Input } from '@angular/core';
import { TiBaseComponent } from '../base/TiBaseModule';
/**
 * 进度条组件
 *
 * <example-url>../tiny3demo/#/progressbar/progressbar-all</example-url>
 */
export class TiProgressbarComponent extends TiBaseComponent {
    constructor() {
        super(...arguments);
        /**
         *  设置当前值，当前值/最大值即为进度值
         */
        this.value = 0;
        /**
         *  设置最大值，当前值/最大值即为进度值
         */
        this.max = 100;
        /**
         *  设置进度条在不同当前值下对应的样式，包括动画效果
         */
        this.progressClass = '';
        /**
         *  设置进度条是否开启动画效果
         */
        this.animation = true;
    }
    // 设置合法的数值
    static verifyNum(newVal, defaultValue) {
        return isNaN(parseFloat(newVal)) ? defaultValue : newVal;
    }
    ngOnInit() {
        super.ngOnInit();
        this.max = TiProgressbarComponent.verifyNum(this.max, this.max);
        this.value = TiProgressbarComponent.verifyNum(this.value, this.value);
        this.calcPercentage();
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        // 当前值更新，重新计算进度
        this.setChanges(changes, 'value');
        // 当最大值更新，重新计算进度
        this.setChanges(changes, 'max');
    }
    /**
     * @description 处理用户输入的改变
     * @param: changes 改变的对象
     * @param: changeKey 那个属性改变
     */
    setChanges(changes, changeKey) {
        if (changes[changeKey] && !changes[changeKey].isFirstChange()) {
            const oldVal = changes[changeKey].previousValue;
            const newVal = changes[changeKey].currentValue;
            const _newValue = TiProgressbarComponent.verifyNum(newVal, oldVal);
            this[changeKey] = _newValue;
            this.calcPercentage();
        }
    }
    // 计算当前进度百分比
    calcPercentage() {
        // 如果开发者设置数据不合理，则进度置0
        if (this.max === 0) {
            this.percent = 0;
            return;
        }
        this.percent = Number((this.value * 100 / this.max).toFixed(2));
        if (this.percent > 100) {
            this.percent = 100;
        }
        if (this.percent < 0) {
            this.percent = 0;
        }
    }
}
TiProgressbarComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-progressbar',
                template: "<div class=\"ti3-progress-bar\" [ngStyle]=\"{'width': percent + '%'}\" [ngClass]=\"progressClass\"\r\n[class.ti3-progress-no-animation]=\"!animation\">\r\n</div>\r\n<div class=\"ti3-progress-label\" [id]=\"appendId('label')\">\r\n\t<ng-content></ng-content>\r\n</div>",
                host: {
                    '[class.ti3-progress]': 'true'
                },
                styles: [":host.ti3-progress{-ms-box-sizing:border-box;background-color:var(--ti-progressbar-progress-bg-color);box-sizing:border-box;display:inline-block;height:var(--ti-progressbar-height);margin-bottom:0;overflow:visible;position:relative;vertical-align:middle;width:100%}.ti3-progress-bar{background-color:var(--ti-progressbar-bg-color);bottom:0;transition:width .6s ease;width:0}.ti3-progress-bar,.ti3-progress-label{-ms-box-sizing:border-box;box-sizing:border-box;left:0;position:absolute;top:0}.ti3-progress-label{background:transparent;color:var(--ti-progressbar-progress-label-color);display:none;height:100%;text-align:center;vertical-align:middle;white-space:nowrap;width:100%}.ti3-progress-label:after{content:\"\";display:inline-block;height:100%;vertical-align:middle;width:0}.ti3-progress-bar.ti3-progress-no-animation{animation:none!important;transition:none!important}"]
            },] }
];
TiProgressbarComponent.propDecorators = {
    value: [{ type: Input }],
    max: [{ type: Input }],
    progressClass: [{ type: Input }],
    animation: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlQcm9ncmVzc2JhckNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9jb21wb25lbnRzL3Byb2dyZXNzYmFyL1RpUHJvZ3Jlc3NiYXJDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWlCLE1BQU0sZUFBZSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN2RDs7OztHQUlHO0FBVUgsTUFBTSxPQUFPLHNCQUF1QixTQUFRLGVBQWU7SUFUM0Q7O1FBVUk7O1dBRUc7UUFDTSxVQUFLLEdBQVcsQ0FBQyxDQUFDO1FBQzNCOztXQUVHO1FBQ00sUUFBRyxHQUFXLEdBQUcsQ0FBQztRQUMzQjs7V0FFRztRQUNNLGtCQUFhLEdBQVcsRUFBRSxDQUFDO1FBQ3BDOztXQUVHO1FBQ00sY0FBUyxHQUFZLElBQUksQ0FBQztJQXVEdkMsQ0FBQztJQWxERyxVQUFVO0lBQ0YsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFXLEVBQUUsWUFBaUI7UUFDbkQsT0FBTyxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQzdELENBQUM7SUFDRCxRQUFRO1FBQ0osS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2pCLElBQUksQ0FBQyxHQUFHLEdBQUcsc0JBQXNCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxLQUFLLEdBQUcsc0JBQXNCLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3RFLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztJQUMxQixDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQzlCLEtBQUssQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDM0IsZUFBZTtRQUNmLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ2xDLGdCQUFnQjtRQUNoQixJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNLLFVBQVUsQ0FBQyxPQUFzQixFQUFFLFNBQWlCO1FBQ3hELElBQUksT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLGFBQWEsRUFBRSxFQUFFO1lBQzNELE1BQU0sTUFBTSxHQUFRLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQyxhQUFhLENBQUM7WUFDckQsTUFBTSxNQUFNLEdBQVEsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLFlBQVksQ0FBQztZQUNwRCxNQUFNLFNBQVMsR0FBVyxzQkFBc0IsQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBQzNFLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxTQUFTLENBQUM7WUFDNUIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1NBQ3pCO0lBQ0wsQ0FBQztJQUVELFlBQVk7SUFDSixjQUFjO1FBQ2xCLHFCQUFxQjtRQUNyQixJQUFJLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFO1lBQ2hCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1lBRWpCLE9BQU87U0FDVjtRQUNELElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLElBQUksSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUU7WUFDcEIsSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUM7U0FDdEI7UUFDRCxJQUFJLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxFQUFFO1lBQ2xCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO1NBQ3BCO0lBQ0wsQ0FBQzs7O1lBL0VKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQix1UkFBaUM7Z0JBRWpDLElBQUksRUFBRTtvQkFDRixzQkFBc0IsRUFBRSxNQUFNO2lCQUNqQzs7YUFDSjs7O29CQU1JLEtBQUs7a0JBSUwsS0FBSzs0QkFJTCxLQUFLO3dCQUlMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpQmFzZUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UvVGlCYXNlTW9kdWxlJztcclxuLyoqXHJcbiAqIOi/m+W6puadoee7hOS7tlxyXG4gKlxyXG4gKiA8ZXhhbXBsZS11cmw+Li4vdGlueTNkZW1vLyMvcHJvZ3Jlc3NiYXIvcHJvZ3Jlc3NiYXItYWxsPC9leGFtcGxlLXVybD5cclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd0aS1wcm9ncmVzc2JhcicsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vcHJvZ3Jlc3NiYXIuaHRtbCcsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9wcm9ncmVzc2Jhci5sZXNzJ10sXHJcbiAgICBob3N0OiB7XHJcbiAgICAgICAgJ1tjbGFzcy50aTMtcHJvZ3Jlc3NdJzogJ3RydWUnXHJcbiAgICB9XHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgVGlQcm9ncmVzc2JhckNvbXBvbmVudCBleHRlbmRzIFRpQmFzZUNvbXBvbmVudCB7XHJcbiAgICAvKipcclxuICAgICAqICDorr7nva7lvZPliY3lgLzvvIzlvZPliY3lgLwv5pyA5aSn5YC85Y2z5Li66L+b5bqm5YC8XHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIHZhbHVlOiBudW1iZXIgPSAwO1xyXG4gICAgLyoqXHJcbiAgICAgKiAg6K6+572u5pyA5aSn5YC877yM5b2T5YmN5YC8L+acgOWkp+WAvOWNs+S4uui/m+W6puWAvFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBtYXg6IG51bWJlciA9IDEwMDtcclxuICAgIC8qKlxyXG4gICAgICogIOiuvue9rui/m+W6puadoeWcqOS4jeWQjOW9k+WJjeWAvOS4i+WvueW6lOeahOagt+W8j++8jOWMheaLrOWKqOeUu+aViOaenFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBwcm9ncmVzc0NsYXNzOiBzdHJpbmcgPSAnJztcclxuICAgIC8qKlxyXG4gICAgICogIOiuvue9rui/m+W6puadoeaYr+WQpuW8gOWQr+WKqOeUu+aViOaenFxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBhbmltYXRpb246IGJvb2xlYW4gPSB0cnVlO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBwZXJjZW50OiBudW1iZXI7IC8vIOW9k+WJjei/m+W6puWAvFxyXG4gICAgLy8g6K6+572u5ZCI5rOV55qE5pWw5YC8XHJcbiAgICBwcml2YXRlIHN0YXRpYyB2ZXJpZnlOdW0obmV3VmFsOiBhbnksIGRlZmF1bHRWYWx1ZTogYW55KTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gaXNOYU4ocGFyc2VGbG9hdChuZXdWYWwpKSA/IGRlZmF1bHRWYWx1ZSA6IG5ld1ZhbDtcclxuICAgIH1cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgICAgICAgdGhpcy5tYXggPSBUaVByb2dyZXNzYmFyQ29tcG9uZW50LnZlcmlmeU51bSh0aGlzLm1heCwgdGhpcy5tYXgpO1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSBUaVByb2dyZXNzYmFyQ29tcG9uZW50LnZlcmlmeU51bSh0aGlzLnZhbHVlLCB0aGlzLnZhbHVlKTtcclxuICAgICAgICB0aGlzLmNhbGNQZXJjZW50YWdlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm5nT25DaGFuZ2VzKGNoYW5nZXMpO1xyXG4gICAgICAgIC8vIOW9k+WJjeWAvOabtOaWsO+8jOmHjeaWsOiuoeeul+i/m+W6plxyXG4gICAgICAgIHRoaXMuc2V0Q2hhbmdlcyhjaGFuZ2VzLCAndmFsdWUnKTtcclxuICAgICAgICAvLyDlvZPmnIDlpKflgLzmm7TmlrDvvIzph43mlrDorqHnrpfov5vluqZcclxuICAgICAgICB0aGlzLnNldENoYW5nZXMoY2hhbmdlcywgJ21heCcpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGRlc2NyaXB0aW9uIOWkhOeQhueUqOaIt+i+k+WFpeeahOaUueWPmFxyXG4gICAgICogQHBhcmFtOiBjaGFuZ2VzIOaUueWPmOeahOWvueixoVxyXG4gICAgICogQHBhcmFtOiBjaGFuZ2VLZXkg6YKj5Liq5bGe5oCn5pS55Y+YXHJcbiAgICAgKi9cclxuICAgIHByaXZhdGUgc2V0Q2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzLCBjaGFuZ2VLZXk6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIGlmIChjaGFuZ2VzW2NoYW5nZUtleV0gJiYgIWNoYW5nZXNbY2hhbmdlS2V5XS5pc0ZpcnN0Q2hhbmdlKCkpIHtcclxuICAgICAgICAgICAgY29uc3Qgb2xkVmFsOiBhbnkgPSBjaGFuZ2VzW2NoYW5nZUtleV0ucHJldmlvdXNWYWx1ZTtcclxuICAgICAgICAgICAgY29uc3QgbmV3VmFsOiBhbnkgPSBjaGFuZ2VzW2NoYW5nZUtleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICAgICAgICBjb25zdCBfbmV3VmFsdWU6IG51bWJlciA9IFRpUHJvZ3Jlc3NiYXJDb21wb25lbnQudmVyaWZ5TnVtKG5ld1ZhbCwgb2xkVmFsKTtcclxuICAgICAgICAgICAgdGhpc1tjaGFuZ2VLZXldID0gX25ld1ZhbHVlO1xyXG4gICAgICAgICAgICB0aGlzLmNhbGNQZXJjZW50YWdlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIOiuoeeul+W9k+WJjei/m+W6pueZvuWIhuavlFxyXG4gICAgcHJpdmF0ZSBjYWxjUGVyY2VudGFnZSgpOiB2b2lkIHtcclxuICAgICAgICAvLyDlpoLmnpzlvIDlj5HogIXorr7nva7mlbDmja7kuI3lkIjnkIbvvIzliJnov5vluqbnva4wXHJcbiAgICAgICAgaWYgKHRoaXMubWF4ID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGVyY2VudCA9IDA7XHJcblxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucGVyY2VudCA9IE51bWJlcigodGhpcy52YWx1ZSAqIDEwMCAvIHRoaXMubWF4KS50b0ZpeGVkKDIpKTtcclxuICAgICAgICBpZiAodGhpcy5wZXJjZW50ID4gMTAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGVyY2VudCA9IDEwMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMucGVyY2VudCA8IDApIHtcclxuICAgICAgICAgICAgdGhpcy5wZXJjZW50ID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIl19