import { Component, ContentChild, ElementRef, EventEmitter, HostBinding, Input, Output, Renderer2, TemplateRef } from '@angular/core';
import { TiTabsComponent } from './TiTabsComponent';
import { Util } from '../../utils/Util';
import { TiBaseComponent } from '../base/TiBaseModule';
/**
 * TiTabComponent 是单个页签组件，包含了页签标题头指令TiTabHeader 和 该页签对应的内容部分
 *
 */
export class TiTabComponent extends TiBaseComponent {
    constructor(elementRef, renderer2, tabset) {
        super(elementRef, renderer2);
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.tabset = tabset;
        /**
         * 当前页签的激活状态发生改变时向外进行事件通知,传递的参数为 boolean 类型，表示当前页签是否是激活状态
         */
        this.activeChange = new EventEmitter();
        /**
         * @ignore
         * 记录此页签的内容区是否已经加载过
         */
        this.loaded = false;
    }
    ngOnInit() {
        super.ngOnInit();
        this.createHeadNode();
        this.tabset.addTab(this);
    }
    ngOnChanges(changes) {
        super.ngOnChanges(changes);
        const activeObj = changes['active'];
        if (activeObj && activeObj.currentValue && this.tabset.selectedTab !== this && !this.disabled) {
            this.tabset.activeTab(this, !activeObj.firstChange);
        }
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        // 父容器TiTabs的OnDestroy执行晚于TiTab的OnDestroy，所以此处需要setTimeout来延时
        setTimeout(() => {
            if (this.tabset.destroyed) {
                return;
            }
            this.tabset.removeTab(this);
            // 如果没有tab，那么下划线隐藏
            if (this.tabset.tabs.length === 0) {
                this.tabset.tiRenderer.setStyles(this.tabset.slider.nativeElement, {
                    width: 0,
                    left: 0
                });
            }
        }, 0);
    }
    createHeadNode() {
        if (Util.isString(this.header)) {
            this.headNode = this.renderer2.createText(this.header);
        }
    }
}
TiTabComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-tab',
                template: "<ng-content></ng-content>\r\n<ng-container *ngIf=\"contentTemplate && loaded\">\r\n    <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\r\n</ng-container>\r\n",
                host: {
                    '[class.ti3-tab-pane]': 'true'
                },
                styles: [":host.ti3-tab-pane{animation-duration:.3s;animation-fill-mode:backwards;animation-timing-function:ease;display:none;padding-top:var(--ti-common-space-3x)}:host.ti3-tab-pane.ti3-tab-active{display:block}:host.ti3-tab-pane.active-remove{display:none!important}:host.ti3-tab-pane.active-add{animation-name:tiFadeIn}"]
            },] }
];
TiTabComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: TiTabsComponent }
];
TiTabComponent.propDecorators = {
    header: [{ type: Input }],
    disabled: [{ type: Input }],
    active: [{ type: Input }, { type: HostBinding, args: ['class.ti3-tab-active',] }],
    activeChange: [{ type: Output }],
    contentTemplate: [{ type: ContentChild, args: ['tiTabContent', /* TODO: add static flag */ { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlUYWJDb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9AY2xvdWQvdGlueTMvY29tcG9uZW50cy90YWIvVGlUYWJDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxZQUFZLEVBQ1osVUFBVSxFQUNWLFlBQVksRUFDWixXQUFXLEVBQ1gsS0FBSyxFQUlMLE1BQU0sRUFDTixTQUFTLEVBR1QsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDeEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3ZEOzs7R0FHRztBQVVILE1BQU0sT0FBTyxjQUFlLFNBQVEsZUFBZTtJQW1DL0MsWUFBb0IsVUFBc0IsRUFBVSxTQUFvQixFQUNyRCxNQUF1QjtRQUNsQyxLQUFLLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBRmpCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFBVSxjQUFTLEdBQVQsU0FBUyxDQUFXO1FBQ3JELFdBQU0sR0FBTixNQUFNLENBQWlCO1FBckIxQzs7V0FFRztRQUNnQixpQkFBWSxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBV3hFOzs7V0FHRztRQUNJLFdBQU0sR0FBWSxLQUFLLENBQUM7SUFLL0IsQ0FBQztJQUVELFFBQVE7UUFDSixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDOUIsS0FBSyxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUMzQixNQUFNLFNBQVMsR0FBaUIsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQ2xELElBQUksU0FBUyxJQUFJLFNBQVMsQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEtBQUssSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUMzRixJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDdkQ7SUFDTCxDQUFDO0lBRUQsV0FBVztRQUNQLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNwQiw2REFBNkQ7UUFDN0QsVUFBVSxDQUFDLEdBQUcsRUFBRTtZQUNaLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUU7Z0JBQ3ZCLE9BQU87YUFDVjtZQUNELElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzVCLGtCQUFrQjtZQUNsQixJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7Z0JBQy9CLElBQUksQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUU7b0JBQy9ELEtBQUssRUFBRSxDQUFDO29CQUNSLElBQUksRUFBRSxDQUFDO2lCQUNWLENBQUMsQ0FBQzthQUNOO1FBQ0wsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ1YsQ0FBQztJQUVPLGNBQWM7UUFDbEIsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUM1QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUMxRDtJQUNMLENBQUM7OztZQXJGSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLFFBQVE7Z0JBQ2xCLDZMQUF5QjtnQkFFekIsSUFBSSxFQUFFO29CQUNGLHNCQUFzQixFQUFFLE1BQU07aUJBQ2pDOzthQUNKOzs7WUExQkcsVUFBVTtZQVFWLFNBQVM7WUFJSixlQUFlOzs7cUJBb0JuQixLQUFLO3VCQUlMLEtBQUs7cUJBTUwsS0FBSyxZQUFJLFdBQVcsU0FBQyxzQkFBc0I7MkJBSTNDLE1BQU07OEJBS04sWUFBWSxTQUFDLGNBQWMsRUFBRSwyQkFBMkIsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQ29tcG9uZW50LFxyXG4gICAgQ29udGVudENoaWxkLFxyXG4gICAgRWxlbWVudFJlZixcclxuICAgIEV2ZW50RW1pdHRlcixcclxuICAgIEhvc3RCaW5kaW5nLFxyXG4gICAgSW5wdXQsXHJcbiAgICBPbkNoYW5nZXMsXHJcbiAgICBPbkRlc3Ryb3ksXHJcbiAgICBPbkluaXQsXHJcbiAgICBPdXRwdXQsXHJcbiAgICBSZW5kZXJlcjIsXHJcbiAgICBTaW1wbGVDaGFuZ2UsXHJcbiAgICBTaW1wbGVDaGFuZ2VzLFxyXG4gICAgVGVtcGxhdGVSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVGlUYWJzQ29tcG9uZW50IH0gZnJvbSAnLi9UaVRhYnNDb21wb25lbnQnO1xyXG5pbXBvcnQgeyBVdGlsIH0gZnJvbSAnLi4vLi4vdXRpbHMvVXRpbCc7XHJcbmltcG9ydCB7IFRpQmFzZUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UvVGlCYXNlTW9kdWxlJztcclxuLyoqXHJcbiAqIFRpVGFiQ29tcG9uZW50IOaYr+WNleS4qumhteetvue7hOS7tu+8jOWMheWQq+S6humhteetvuagh+mimOWktOaMh+S7pFRpVGFiSGVhZGVyIOWSjCDor6XpobXnrb7lr7nlupTnmoTlhoXlrrnpg6jliIZcclxuICpcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICd0aS10YWInLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3RhYi5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL3RhYi5sZXNzJ10sXHJcbiAgICBob3N0OiB7XHJcbiAgICAgICAgJ1tjbGFzcy50aTMtdGFiLXBhbmVdJzogJ3RydWUnXHJcbiAgICB9XHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgVGlUYWJDb21wb25lbnQgZXh0ZW5kcyBUaUJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSwgT25DaGFuZ2VzIHtcclxuICAgIC8qKlxyXG4gICAgICog6K6+572u5b2T5YmN6aG1562+5qCH6aKY5aS05pi+56S655qE5paH5pysXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIGhlYWRlcjogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7lvZPliY3pobXnrb7mmK/lkKbnpoHnlKjnva7ngbBcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgZGlzYWJsZWQ6IGJvb2xlYW47XHJcbiAgICAvKipcclxuICAgICAqIOiuvue9ruW9k+WJjemhteetvuaYr+WQpuWkhOS6jua/gOa0u+eKtuaAgeOAglxyXG4gICAgICpcclxuICAgICAqIOatpOaOpeWPo+aYr+WPjOWQkee7keWumueahO+8jOiuvue9ruaXtuS4reaLrOWPt+KAnFtd4oCd5ZKM5ZyG5ous5Y+34oCcKCnigJ3opoHlkIzml7bkvb/nlKhcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgQEhvc3RCaW5kaW5nKCdjbGFzcy50aTMtdGFiLWFjdGl2ZScpIGFjdGl2ZTogYm9vbGVhbjtcclxuICAgIC8qKlxyXG4gICAgICog5b2T5YmN6aG1562+55qE5r+A5rS754q25oCB5Y+R55Sf5pS55Y+Y5pe25ZCR5aSW6L+b6KGM5LqL5Lu26YCa55+lLOS8oOmAkueahOWPguaVsOS4uiBib29sZWFuIOexu+Wei++8jOihqOekuuW9k+WJjemhteetvuaYr+WQpuaYr+a/gOa0u+eKtuaAgVxyXG4gICAgICovXHJcbiAgICBAT3V0cHV0KCkgcmVhZG9ubHkgYWN0aXZlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICog6I635Y+W5Yiw55So5oi36Ieq5a6a5LmJ55qE5qih5p2/XHJcbiAgICAgKi9cclxuICAgIEBDb250ZW50Q2hpbGQoJ3RpVGFiQ29udGVudCcsIC8qIFRPRE86IGFkZCBzdGF0aWMgZmxhZyAqLyB7IHN0YXRpYzogdHJ1ZSB9KSBwdWJsaWMgY29udGVudFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDlvZPliY3pobXnrb7moIfpopjlpLTmmL7npLrnmoRub2Rl6IqC54K5XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBoZWFkTm9kZTogYW55O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDorrDlvZXmraTpobXnrb7nmoTlhoXlrrnljLrmmK/lkKblt7Lnu4/liqDovb3ov4dcclxuICAgICAqL1xyXG4gICAgcHVibGljIGxvYWRlZDogYm9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjI6IFJlbmRlcmVyMixcclxuICAgICAgICAgICAgICAgIHB1YmxpYyB0YWJzZXQ6IFRpVGFic0NvbXBvbmVudCkge1xyXG4gICAgICAgICAgICBzdXBlcihlbGVtZW50UmVmLCByZW5kZXJlcjIpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLm5nT25Jbml0KCk7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVIZWFkTm9kZSgpO1xyXG4gICAgICAgIHRoaXMudGFic2V0LmFkZFRhYih0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIubmdPbkNoYW5nZXMoY2hhbmdlcyk7XHJcbiAgICAgICAgY29uc3QgYWN0aXZlT2JqOiBTaW1wbGVDaGFuZ2UgPSBjaGFuZ2VzWydhY3RpdmUnXTtcclxuICAgICAgICBpZiAoYWN0aXZlT2JqICYmIGFjdGl2ZU9iai5jdXJyZW50VmFsdWUgJiYgdGhpcy50YWJzZXQuc2VsZWN0ZWRUYWIgIT09IHRoaXMgJiYgIXRoaXMuZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgdGhpcy50YWJzZXQuYWN0aXZlVGFiKHRoaXMsICFhY3RpdmVPYmouZmlyc3RDaGFuZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5uZ09uRGVzdHJveSgpO1xyXG4gICAgICAgIC8vIOeItuWuueWZqFRpVGFic+eahE9uRGVzdHJveeaJp+ihjOaZmuS6jlRpVGFi55qET25EZXN0cm9577yM5omA5Lul5q2k5aSE6ZyA6KaBc2V0VGltZW91dOadpeW7tuaXtlxyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy50YWJzZXQuZGVzdHJveWVkKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy50YWJzZXQucmVtb3ZlVGFiKHRoaXMpO1xyXG4gICAgICAgICAgICAvLyDlpoLmnpzmsqHmnIl0YWLvvIzpgqPkuYjkuIvliJLnur/pmpDol49cclxuICAgICAgICAgICAgaWYgKHRoaXMudGFic2V0LnRhYnMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnRhYnNldC50aVJlbmRlcmVyLnNldFN0eWxlcyh0aGlzLnRhYnNldC5zbGlkZXIubmF0aXZlRWxlbWVudCwge1xyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIGxlZnQ6IDBcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBjcmVhdGVIZWFkTm9kZSgpOiB2b2lkIHtcclxuICAgICAgICBpZiAoVXRpbC5pc1N0cmluZyh0aGlzLmhlYWRlcikpIHtcclxuICAgICAgICAgICAgdGhpcy5oZWFkTm9kZSA9IHRoaXMucmVuZGVyZXIyLmNyZWF0ZVRleHQodGhpcy5oZWFkZXIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iXX0=