import { Component, ElementRef, Input, NgZone, Renderer2, ViewChild, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { TiBaseComponent } from '../base/TiBaseModule';
import { TiRenderer } from '../../services/renderer/TiRenderer';
import { TiDroplistComponent } from '../droplist/TiDroplistModule';
import { Util } from '../../utils/Util';
/**
 * TiTabs组件属于布局组件，通过该组件产品可以实现不同视图的切换功能。
 *
 * 其内部包含2个组件 TiTab 和 TiTabHeader
 *
 * <example-url>../tiny3demo/#/tab/tab-all</example-url>
 */
export class TiTabsComponent extends TiBaseComponent {
    constructor(elementRef, renderer2, tiRenderer, zone, document) {
        super(elementRef, renderer2);
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.tiRenderer = tiRenderer;
        this.zone = zone;
        this.document = document;
        /**
         * 1."justified"(默认): 下拉框的宽度与输入框的宽度保持一致；
         *
         * 2."auto": 下拉框的宽度根据下拉项的内容自动撑开；
         *
         * 3.表示宽度的字符串: 设置固定的下拉框宽度(不小于输入框的宽度)。例如："200px"。
         *
         * 10.0.1新增
         */
        this.panelWidth = '100px';
        /**
         * 面板对齐方式
         *
         * 10.0.1新增
         *
         */
        this.panelAlign = 'right';
        /**
         * 指定下拉项超长文本提示方向
         *
         * 10.0.1新增
         *
         */
        this.tipPosition = 'left';
        /**
         * @ignore
         */
        this.labelKey = 'header';
        /**
         * @ignore
         * 下拉项
         */
        this.options = [];
        /**
         * @ignore
         * TiTabs中包裹的所有的 TiTabComponent 集合
         */
        this.tabs = [];
        this.isNotVisibleInit = false; // 标志初始时是否可见
        /**
         * @ignore
         * TiTabComponent.ts中使用
         */
        this.destroyed = false;
        /**
         * @ignore
         * 是否显示滑动条slider（一级页签显示，二级/暗色页签不显示）
         * TiTabHeaderComponent.ts中使用
         */
        this.hasSlider = false;
        /**
         * @ignore
         * TiTabHeaderComponent.ts中使用
         */
        this.headerWidthChange = false;
        this.resolvedPromise = Promise.resolve(null);
    }
    /**
     * @ignore
     * 下拉选项变更时触发
     */
    onDroplistChange($event) {
        this.tabs.forEach((item) => {
            if (item.id === this.selectedTab.id) {
                this.setActiveValue(item, true);
                this.activeTab(item, true);
            }
        });
    }
    /**
     * @ignore
     * 点击下拉按钮打开下拉面板
     */
    showMorePanel(event) {
        this.dropListComp.show();
        event.stopPropagation();
    }
    ngOnInit() {
        super.ngOnInit();
        // 初始化是否显示滑动条slider（一级页签显示，二级/暗色页签不显示）
        this.hasSlider = !this.nativeElement.hasAttribute('level2') && !this.nativeElement.hasAttribute('dark');
    }
    ngAfterViewInit() {
        super.ngAfterContentInit();
        if (this.hasSlider) {
            // 如果祖先元素中display为none，获取到的组件的宽度为0,元素不可见
            this.isNotVisibleInit = this.nativeElement.clientWidth === 0;
        }
        this.zone.runOutsideAngular(() => {
            // 点击documnet优惠信息窗口关闭
            this.onlistenClick = this.renderer2.listen(this.document, 'click', () => this.dropListComp.hide());
            if (typeof window === 'undefined') {
                return;
            }
            this.windowResizeListener = this.renderer2.listen(window, 'resize', () => {
                this.setMoreStyle();
                this.setTabStyle(true);
            });
        });
    }
    ngAfterViewChecked() {
        super.ngAfterViewChecked();
        // 初始祖先元素中display为none，之后第一次由none变成可见时，需要重置silder
        if (this.isNotVisibleInit && this.nativeElement.clientWidth !== 0) {
            this.setTabStyle(false);
            this.isNotVisibleInit = false;
            return;
        }
        // 此处执行晚于TiTabHeaderComponent的ngAfterViewChecked
        if (this.headerWidthChange) {
            this.setTabStyle(false);
            this.headerWidthChange = false;
            this.setMoreStyle();
        }
    }
    ngOnDestroy() {
        this.destroyed = true;
        if (this.windowResizeListener) {
            this.windowResizeListener();
        }
        if (this.onlistenClick) {
            this.onlistenClick();
        }
    }
    /**
     * @ignore
     */
    setMoreStyle() {
        if (this.isOverflow()) {
            this.renderer2.setStyle(this.moreRef.nativeElement, 'display', 'block');
        }
        else {
            this.renderer2.setStyle(this.moreRef.nativeElement, 'display', 'none');
        }
    }
    /**
     * @ignore
     * TiTabComponent.ts 中调用
     */
    addTab(tab) {
        if (tab.active) {
            this.tabs.forEach((item) => {
                if (item.active) {
                    this.setActiveValue(item, false);
                }
            });
        }
        this.tabs.push(tab);
        const tabElements = Array.from(this.tabContentContainer.nativeElement.children);
        this.tabs.sort((a, b) => {
            return tabElements.indexOf(a.nativeElement) - tabElements.indexOf(b.nativeElement);
        });
        if (!tab.active && this.selectedTab
            && tabElements.indexOf(tab.nativeElement) < tabElements.indexOf(this.selectedTab.nativeElement)) {
            setTimeout(() => {
                this.setTabStyle(true);
            }, 0);
        }
        this.options = this.tabs;
        setTimeout(() => {
            this.setMoreStyle();
        }, 0);
    }
    /**
     * @ignore
     * TiTabComponent.ts 中调用
     */
    removeTab(tab) {
        const index = this.tabs.indexOf(tab);
        const length = this.tabs.length;
        this.tabs.splice(index, 1);
        setTimeout(() => {
            this.setMoreStyle();
        }, 0);
        // 删除当前激活状态的tab
        if (tab.active && length > 1) {
            const newActiveIndex = this.getNewActiveIndex(index, length);
            if (newActiveIndex !== -1) {
                this.setActiveValue(this.tabs[newActiveIndex], true);
                this.activeTab(this.tabs[newActiveIndex], true);
            }
            return;
        }
        // 删除的是非激活状态的tab,那么就在删除后的tabs数组中查找剩下的哪一个tab是激活状态，再设置激活状态；
        if (!tab.active) {
            setTimeout(() => {
                this.setTabStyle(true);
            }, 0);
        }
    }
    /**
     * @ignore
     * TiTabComponent.ts 中调用
     */
    activeTab(selectedTab, enableAnimate) {
        this.deActiveOthers(selectedTab);
        selectedTab.loaded = true;
        this.selectedTab = selectedTab;
        // 只有不是灰化状态时，才触发切换动效
        if (!selectedTab.disabled) {
            // 添加定时器，处理ngFor未渲染完毕，获取到得silder的位置不准确
            setTimeout(() => {
                // 初始化激活时没有动效
                this.setTabStyle(enableAnimate);
            }, 0);
        }
    }
    deActiveOthers(selectTab) {
        this.tabs.forEach((tab) => {
            if (tab.active && tab !== selectTab) {
                this.setActiveValue(tab, false);
            }
        });
    }
    /**
     * @ignore
     */
    click(tab) {
        if (!tab.disabled && !tab.active) {
            this.setActiveValue(tab, true);
            this.activeTab(tab, true);
        }
    }
    // 删除当前激活状态的tab后，需要激活下一个active tab
    getNewActiveIndex(index, length) {
        // 如果删除的当前激活状态的tab是最后一个，
        // 那么下一个激活的tab就是从右到左第一个不是禁用的tab
        if (index === length - 1) {
            for (let i = index - 1; i >= 0; i--) {
                if (!this.tabs[i].disabled) {
                    return i;
                }
            }
            // 如果删除的当前激活状态的tab不是最后一个，
            // 那么下一个激活的tab就是从左到右第一个不是禁用的tab
        }
        else {
            for (let i = index; i < this.tabs.length; i++) {
                if (!this.tabs[i].disabled) {
                    return i;
                }
            }
        }
        return -1;
    }
    // 设置页签样式
    setTabStyle(enableAnimate) {
        const targetTab = this.selectedTab && this.selectedTab.headNode.parentNode.parentNode;
        // 容错处理：没有获取到DOM时直接return；
        if (Util.isUndefined(targetTab) || !targetTab.classList.contains('ti3-tab-li')) {
            return;
        }
        // 获取该页签的偏移量
        const tagetLeft = targetTab.offsetLeft;
        // 需要显示滑动条时设置滑动条的样式及动效
        if (this.hasSlider) {
            // 修复SSR错误：ERROR TypeError: targetTab.getBoundingClientRect is not a function
            const targetWidth = typeof (targetTab.getBoundingClientRect) === 'function' ? parseFloat(targetTab.getBoundingClientRect().width
                .toFixed(2)) : 0;
            const transitionSet = enableAnimate ? 'left 0.1s ease-in-out' : 'none';
            this.tiRenderer.setStyles(this.slider.nativeElement, {
                transition: transitionSet,
                width: `${targetWidth}px`,
                left: `${tagetLeft}px`
            });
        }
        this.setTabScroll(targetTab, tagetLeft);
    }
    // 设置页签超长滑动动效
    setTabScroll(target, distance) {
        const moreWidth = this.moreRef && this.moreRef.nativeElement.offsetWidth;
        const tabsHeaderWidth = this.tabsHeaderRef && this.tabsHeaderRef.nativeElement.offsetWidth;
        const listWidth = this.tabsListRef && this.tabsListRef.nativeElement.offsetWidth;
        // 修复SSR错误：ERROR TypeError: this.tabsContainerRef.nativeElement.getBoundingClientRect is not a function
        if (typeof this.tabsContainerRef.nativeElement.getBoundingClientRect !== 'function') {
            return;
        }
        const tabsContainerClientRect = this.tabsContainerRef && this.tabsContainerRef.nativeElement.getBoundingClientRect();
        const targetClientRect = target.getBoundingClientRect();
        // 1、条件1和2：激活项能在当前屏范围内完全显示时
        // 2、尾部页签紧贴右侧时（页签动态删减，导致尾部页签没有紧贴右侧 #15412）
        // 同时满足，tabs无需滑动
        if (targetClientRect.x >= tabsContainerClientRect.x
            && targetClientRect.x <= tabsContainerClientRect.x + tabsContainerClientRect.width - moreWidth - targetClientRect.width
            && tabsHeaderWidth <= listWidth + moreWidth) {
            return;
        }
        let marginLeftDistance = distance;
        const maxDistance = this.tabsListRef.nativeElement.scrollWidth - tabsContainerClientRect.width + moreWidth;
        if (maxDistance > 0) {
            if (distance >= maxDistance) {
                marginLeftDistance = maxDistance;
            }
        }
        else {
            marginLeftDistance = 0;
        }
        this.renderer2.setStyle(this.tabsHeaderRef.nativeElement, 'transition', 'margin-left 0.1s ease-in-out');
        this.renderer2.setStyle(this.tabsHeaderRef.nativeElement, 'margin-left', -marginLeftDistance + 'px');
    }
    setActiveValue(tab, value) {
        // 双向数据绑定时，初始传入的值不合法立即修改并传出时会报错。
        // 此处参考ngModel源码setValue的处理，使用promise延后执行时序
        this.resolvedPromise.then(() => {
            tab.active = value;
            tab.activeChange.emit(value);
        });
    }
    /**
     * @ignore
     */
    trackByFn(index, item) {
        return item.headNode;
    }
    // 空间不足时，出现下拉面板
    isOverflow() {
        const headerWidth = this.tabsContainerRef.nativeElement.offsetWidth;
        const listWidth = this.tabsListRef.nativeElement.scrollWidth;
        const moreWidth = this.moreRef.nativeElement.offsetWidth;
        return headerWidth - moreWidth < listWidth;
    }
}
TiTabsComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-tabs',
                template: "<div class='ti3-tabs-container1' #tabsContainer>\r\n    <div class='ti3-tabs-header' #tabsHeader>\r\n        <ul class=\"ti3-tabs\" #tabsList [id]=\"appendId('list')\">\r\n            <li class=\"ti3-tab-li\" style='display: inline-block;'\r\n                *ngFor=\"let tab of tabs; let i = index; trackBy: trackByFn\"\r\n                [ngClass]=\"{'ti3-tab-active': tab.active, disabled: tab.disabled}\">\r\n                <a href=\"javascript:void(0);\"\r\n                    oncontextmenu=\"return false\"\r\n                    (click)=\"click(tab)\"\r\n                    [tiInclude]=\"tab.headNode\"\r\n                    [id]=\"appendId(tab.id===undefined||tab.id===''?i:tab.id+'_a')\"\r\n                    [tabindex]=\"tab.disabled ? -1 : 0\"></a>\r\n            </li>\r\n        </ul>\r\n        <span class='ti3-tab-more' (click)='showMorePanel($event)' #more [id]=\"appendId('moreicon')\">\r\n            <ti-icon name=\"accordion-unfold\" #moreIcon></ti-icon>\r\n        </span>\r\n        <div class='ti3-tab-slider-container'>\r\n            <div #slider class=\"ti3-tab-slider\"></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"ti3-tab-content\" #tabContentContainer>\r\n    <ng-content></ng-content>\r\n</div>\r\n<ti-droplist #droplist\r\n              [dominatorElem]=\"moreIconRef.nativeElement\"\r\n              [(ngModel)]=\"selectedTab\"\r\n              [options]='options'\r\n              [labelKey]=\"labelKey\"\r\n              [panelMaxHeight]=\"panelMaxHeight\"\r\n              [panelWidth]=\"panelWidth\"\r\n              [panelAlign]=\"panelAlign\"\r\n              [tipPosition]='tipPosition'\r\n              (ngModelChange)=\"onDroplistChange($event)\"\r\n              [id]=\"appendId('droplist')\">\r\n</ti-droplist>\r\n\r\n\r\n",
                host: {
                    '[class.ti3-tabs-container]': 'true' // 给host添加类ti-tabs-container替代之前的组件模板内部的最外层div
                },
                styles: ["::ng-deep :root{--ti-tab-dark-li-height:37px;--ti-tab-header-height:36px;--ti-tab-header-line-height:1.5;--ti-tab-second-level-header-height:28px;--ti-tab-second-level-header-line-height:calc(var(--ti-tab-second-level-header-height) - 2px);--ti-tab-second-level-header-margin-horizon:var(--ti-common-space-5x)}:host.ti3-tabs-container{display:block}.ti3-tab-content{border-top:1px solid var(--ti-tab-border-color)}.ti3-tabs{-ms-box-sizing:border-box;box-sizing:border-box;color:var(--ti-tab-header-text-color);font-size:0;height:var(--ti-tab-header-height);list-style:none;margin-bottom:0;padding-left:0;position:relative}.ti3-tabs:after,.ti3-tabs:before{-ms-box-sizing:border-box;box-sizing:border-box;content:\" \";display:table}.ti3-tabs:after{clear:both}.ti3-tabs>li{-ms-box-sizing:border-box;box-sizing:border-box;cursor:pointer;display:inline-block;font-size:var(--ti-tab-header-font-size);height:var(--ti-tab-header-height);line-height:var(--ti-tab-header-line-height);margin:0 var(--ti-common-space-5x);position:relative}.ti3-tabs>li:first-child{margin-left:0}.ti3-tabs>li>a{-ms-box-sizing:border-box;box-sizing:border-box;color:var(--ti-tab-header-text-color);display:block;height:var(--ti-tab-header-height);line-height:var(--ti-tab-header-line-height);padding:6px 0 var(--ti-common-space-2x);position:relative;text-decoration:none;transition:color .15s}.ti3-tabs>li:not(.disabled)>a:focus,.ti3-tabs>li:not(.disabled)>a:hover{border-bottom-color:transparent;color:var(--ti-tab-header-text-color-hover);outline:none;transition:color .2s}.ti3-tabs>li.ti3-tab-active:not(.disabled)>a{color:var(--ti-tab-header-text-color-active);cursor:default;font-weight:var(--ti-tab-header-text-color-active-font-weight)}.ti3-tabs>li.disabled>a{background-color:transparent;color:var(--ti-common-color-text-disabled);cursor:not-allowed}.ti3-tabs>li.disabled>a:focus{outline:none!important}.ti3-tab-slider-container{border-bottom:3px solid transparent;bottom:0;left:0;position:absolute;right:0}.ti3-tab-slider{-ms-box-sizing:border-box;border-bottom:var(--ti-tab-header-border-bottom-active);bottom:-3px;box-sizing:border-box;left:-50px;position:absolute;width:0}:host[level2] .ti3-tabs-container1{position:relative;top:1px}:host[level2] .ti3-tabs{height:var(--ti-tab-second-level-header-height)}:host[level2] .ti3-tabs .ti3-tab-li:not(:last-child):after{right:calc(-1*(var(--ti-tab-second-level-header-margin-horizon) + 1px))}:host[level2] .ti3-tabs+.ti3-tab-more+.ti3-tab-slider-container .ti3-tab-slider{border-bottom:none;display:none}:host[level2] .ti3-tabs>li{font-size:var(--ti-common-font-size-base);margin:0}:host[level2] .ti3-tabs>li,:host[level2] .ti3-tabs>li>a{height:var(--ti-tab-second-level-header-height);line-height:var(--ti-tab-second-level-header-line-height)}:host[level2] .ti3-tabs>li>a{-ms-box-sizing:border-box;border:1px solid transparent;box-sizing:border-box;color:var(--ti-tab-header-text-color);padding:0 var(--ti-common-space-3x)}:host[level2] .ti3-tabs>li:not(.disabled)>a:focus,:host[level2] .ti3-tabs>li:not(.disabled)>a:hover{color:var(--ti-tab-second-level-header-text-color-hover);outline:none}:host[level2] .ti3-tabs>li.ti3-tab-active:not(.disabled)>a{border-bottom-color:var(--ti-tab-border-color);border-color:var(--ti-tab-border-color) var(--ti-tab-border-color) var(--ti-common-color-bg-white-normal);color:var(--ti-tab-second-level-header-text-color-active);padding:0 var(--ti-common-space-3x)}:host[level2] .ti3-tabs>li.ti3-tab-active:not(.disabled),:host[level2] .ti3-tabs>li:last-child{margin-right:0}:host[level2] .ti3-tabs>li.disabled>a{background-color:transparent;color:var(--ti-common-color-text-disabled);cursor:not-allowed}:host[dark]>.ti3-tabs-container1 .ti3-tabs-header{background-color:var(--ti-tab-dark-bg-color)}:host[dark]>.ti3-tabs-container1 .ti3-tabs{height:40px;padding-top:3px}:host[dark]>.ti3-tabs-container1 .ti3-tabs .ti3-tab-li:not(:last-child):after{width:0}:host[dark]>.ti3-tabs-container1 .ti3-tabs+.ti3-tab-more{color:var(--ti-tab-dark-text-color);padding-right:20px;padding-top:3px}:host[dark]>.ti3-tabs-container1 .ti3-tabs+.ti3-tab-more:hover{color:var(--ti-common-color-bg-emphasize)}:host[dark]>.ti3-tabs-container1 .ti3-tabs+.ti3-tab-more+.ti3-tab-slider-container .ti3-tab-slider{border-bottom:none;display:none}:host[dark]>.ti3-tabs-container1 .ti3-tabs>li{margin-left:0;margin-right:4px}:host[dark]>.ti3-tabs-container1 .ti3-tabs>li>a{-ms-box-sizing:border-box;box-sizing:border-box;color:var(--ti-tab-dark-text-color);height:var(--ti-tab-dark-li-height);line-height:var(--ti-tab-dark-li-height);padding:0 var(--ti-tab-dark-padding-horizon);transition:background .15s ease-in}:host[dark]>.ti3-tabs-container1 .ti3-tabs>li:not(.disabled)>a:focus,:host[dark]>.ti3-tabs-container1 .ti3-tabs>li:not(.disabled)>a:hover{background-color:var(--ti-tab-dark-bg-color-hover);border-radius:var(--ti-tab-dark-border-radius);color:var(--ti-tab-dark-text-color-hover);outline:none;transition:background .2s}:host[dark]>.ti3-tabs-container1 .ti3-tabs>li.ti3-tab-active:not(.disabled)>a{background-color:var(--ti-tab-dark-bg-color-avtive);border-radius:var(--ti-tab-dark-border-radius);color:var(--ti-tab-dark-text-color-active);transition:background .25s}:host[dark]>.ti3-tabs-container1 .ti3-tabs>li.disabled>a{background-color:transparent;color:var(--ti-tab-dark-color-disabled);cursor:not-allowed}:host[dark]>.ti3-tabs-container1 .ti3-tabs>li:first-child{margin-left:20px}:host[dark]>.ti3-tabs-container1 .ti3-tabs>li:last-child{margin-right:0}:host[dark].ti3-tabs-container>.ti3-tab-content{border:none}:host[small] .ti3-tab-li{font-size:var(--ti-common-font-size-base);margin:0 var(--ti-common-space-10)}@keyframes tiFadeIn{0%{opacity:0}to{opacity:1}}.ti3-tabs{display:flex;flex-shrink:1;overflow:hidden;white-space:nowrap}.ti3-tab-more{cursor:pointer;display:none;padding-left:10px}.ti3-tab-more:hover{color:var(--ti-tab-header-text-color-hover)}.ti3-tabs-header{align-items:center;display:flex;justify-content:space-between;position:relative}.ti3-tabs-container1{overflow:hidden}.ti3-tab-head-no-outline{outline:none}"]
            },] }
];
TiTabsComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: TiRenderer },
    { type: NgZone },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
TiTabsComponent.propDecorators = {
    panelWidth: [{ type: Input }],
    panelAlign: [{ type: Input }],
    panelMaxHeight: [{ type: Input }],
    tipPosition: [{ type: Input }],
    slider: [{ type: ViewChild, args: ['slider', { static: true },] }],
    tabContentContainer: [{ type: ViewChild, args: ['tabContentContainer', { static: true },] }],
    moreRef: [{ type: ViewChild, args: ['more', { static: true },] }],
    moreIconRef: [{ type: ViewChild, args: ['moreIcon', { static: true },] }],
    tabsListRef: [{ type: ViewChild, args: ['tabsList', { static: true },] }],
    tabsHeaderRef: [{ type: ViewChild, args: ['tabsHeader', { static: true },] }],
    tabsContainerRef: [{ type: ViewChild, args: ['tabsContainer', { static: true },] }],
    dropListComp: [{ type: ViewChild, args: ['droplist', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,