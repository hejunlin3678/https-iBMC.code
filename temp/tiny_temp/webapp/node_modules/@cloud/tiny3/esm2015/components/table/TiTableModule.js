import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { TiListModule } from '../list/TiListModule';
import { TiSearchboxModule } from '../searchbox/TiSearchboxModule';
import { TiDropModule } from '../drop/TiDropModule';
import { TiOverflowModule } from '../../directives/overflow/TiOverflowModule';
import { TiIconModule } from '../icon/TiIconModule';
import { TiTableFixedHeadServiceModule } from './TiTableFixedHeadServiceModule';
import { TiTableComponent } from './TiTableComponent';
import { TiHeadFilterComponent } from './TiHeadFilterComponent';
import { TiHeadFilterDropComponent } from './TiHeadFilterDropComponent';
import { TiHeadSortComponent } from './TiHeadSortComponent';
import { TiDetailsIconComponent } from './TiDetailsIconComponent';
import { TiDetailsTrDirective } from './TiDetailsTrDirective';
import { TiColspanDirective } from './TiColspanDirective';
import { TiColsToggleComponent } from './TiColsToggleComponent';
import { TiColsToggleDropComponent } from './TiColsToggleDropComponent';
import { TiColsResizableDirective } from './TiColsResizableDirective';
import { TiCellTextComponent } from './TiCellTextComponent';
import { TiCellIconsComponent } from './TiCellIconsComponent';
import { TiColumnsPipe } from './TiColumnsPipe';
import { TiColumnFixedDirective } from './TiColumnFixedDirective';
import { TiColClickDirective } from './TiColClickDirective';
import { TiLocaleModule } from '../../locale/TiLocaleModule';
import { TiRendererModule } from '../../services/renderer/TiRendererModule';
import { TiTipModule } from '../../directives/tip/TiTipModule';
import { TiButtonModule } from '../button/TiButtonModule';
import { TiOutlineModule } from '../../directives/outline/TiOutlineModule';
export class TiTableModule {
}
TiTableModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    FormsModule,
                    TiButtonModule,
                    TiIconModule,
                    TiListModule,
                    TiSearchboxModule,
                    TiDropModule,
                    TiOverflowModule,
                    TiTableFixedHeadServiceModule,
                    TiLocaleModule,
                    TiRendererModule,
                    TiTipModule,
                    TiOutlineModule
                ],
                exports: [
                    TiTableComponent,
                    TiHeadFilterComponent,
                    TiHeadSortComponent,
                    TiDetailsIconComponent,
                    TiDetailsTrDirective,
                    TiColspanDirective,
                    TiColsToggleComponent,
                    TiColsResizableDirective,
                    TiCellTextComponent,
                    TiCellIconsComponent,
                    TiColumnFixedDirective,
                    TiColClickDirective
                ],
                declarations: [
                    TiTableComponent,
                    TiHeadFilterComponent,
                    TiHeadFilterDropComponent,
                    TiHeadSortComponent,
                    TiDetailsIconComponent,
                    TiDetailsTrDirective,
                    TiColspanDirective,
                    TiColsToggleComponent,
                    TiColsToggleDropComponent,
                    TiColsResizableDirective,
                    TiCellTextComponent,
                    TiCellIconsComponent,
                    TiColumnsPipe,
                    TiColumnFixedDirective,
                    TiColClickDirective
                ]
            },] }
];
export { TiTableComponent } from './TiTableComponent';
export { TiHeadFilterComponent } from './TiHeadFilterComponent';
export { TiHeadSortComponent } from './TiHeadSortComponent';
export { TiDetailsIconComponent } from './TiDetailsIconComponent';
export { TiDetailsTrDirective } from './TiDetailsTrDirective';
export { TiColspanDirective } from './TiColspanDirective';
export { TiColsToggleComponent } from './TiColsToggleComponent';
export { TiColsResizableDirective } from './TiColsResizableDirective';
export { TiCellTextComponent } from './TiCellTextComponent';
export { TiCellIconsComponent } from './TiCellIconsComponent';
export { TiColumnFixedDirective } from './TiColumnFixedDirective';
export { TiColClickDirective } from './TiColClickDirective';
//# sourceMappingURL=data:application/json;base64,