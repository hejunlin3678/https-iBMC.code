/*
 * @Author: walker
 * @Date: 2018-09-06 15:05:42
 * @Last Modified by: walker
 * @Last Modified time: 2018-09-12 11:03:35
 */
import { Component, ContentChild, EventEmitter, Input, Output, TemplateRef } from '@angular/core';
import { TiAutocompleteComponent } from '../autocomplete/TiAutocompleteModule';
import { TiFormComponent } from '../base/TiBaseModule';
/**
 * 搜索框组件
 *
 * <example-url>../tiny3demo/#/searchbox/searchbox-all</example-url>
 */
export class TiSearchboxComponent extends TiAutocompleteComponent {
    constructor() {
        super(...arguments);
        /**
         * 10.0.4版本新增
         *
         * 是否删除用户搜索内容的首尾空格，不配置时不删除空格
         */
        this.trimmed = false;
        /**
         * search事件，当选中下拉选项/按enter键/点击搜索图标时触发
         *
         * 参数：搜索框文本
         */
        this.search = new EventEmitter();
    }
    ngOnInit() {
        // 默认有清除图标且不可配置
        // 此处先赋值后继承，是由于父类中初始化需要读取clearable的值，设置清除图标
        this.clearable = true;
        super.ngOnInit();
    }
    /**
     * @ignore
     * 组件model更改时，更新input绑定值
     */
    writeValue(model) {
        super.writeValue(model);
        this.inputValue = model;
    }
    // 组件交互方法集合--start
    /**
     * @ignore
     * enter的触发有两种情况：
     * 1.在input框中输入值，然后按下enter，此时正常执行search
     * 2.在suggestion面板展开的情况下，通过hover选中一项，然后按下enter，
     *   此时的search应该在下拉面板的onDroplistChange回调中触发
     */
    onInputEnter() {
        if (!this.isSearchWithHoverOption()) { // 排除第2中情况
            this.onSearch();
        }
    }
    /**
     * @ignore
     * 搜索事件触发
     */
    onSearch() {
        if (this.disabled) {
            return;
        }
        this.search.emit(this.model);
    }
    /**
     * @ignore
     * 两种情况下触发
     * 1.在suggestion面板展开的情况下，通过hover选中一项，然后按下enter
     * 2.在suggestion面板展开的情况下，通过鼠标点击选中一项
     */
    onDroplistChange(value) {
        if (value) {
            this.model = this.inputValue = value[this.labelKey] || value.label;
            this.onSearch();
        }
    }
    // 组件交互方法集合--end
    isSearchWithHoverOption() {
        // suggestion面板展开且存在hover选中项的情况
        return this.dropListComp.isShow && this.dropListComp.listCom.hoverOption;
    }
    /**
     * @ignore
     * 输入框中内容改变事件
     */
    onInputChange(value) {
        if (this.disabled || !this.isFocused) {
            return;
        }
        const searchValue = this.trimValue(value);
        this.model = searchValue;
        this.inputChangeObserve.next(searchValue);
    }
    /**
     * 控制是否删除搜索内容的首尾空格
     */
    trimValue(value) {
        let searchValue = value;
        if (this.trimmed && searchValue) {
            searchValue = searchValue.trim();
        }
        return searchValue;
    }
}
TiSearchboxComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-searchbox',
                template: "<input #input tiText\r\n        class=\"ti3-searchbox-input\"\r\n        [disabled]=\"disabled\"\r\n        spellcheck=false\r\n        (keyup.enter)=\"onInputEnter()\"\r\n        [(ngModel)] = \"inputValue\"\r\n        [placeholder]=\"placeholder\"\r\n        (clear)=\"onClear($event)\"\r\n        (ngModelChange)=\"onInputChange($event)\"\r\n        [maxlength]=\"maxlength\"\r\n        [id]=\"appendId('input')\"\r\n        (mousedown)=\"onInputMousedown()\">\r\n<div class=\"ti3-searchbox-divider\"\r\n     (mousedown)=\"onSearch()\"\r\n     [hidden]=\"model === '' || model === undefined || model === null\"></div>\r\n<div class=\"ti3-searchbox-search ti3-icon ti3-icon-search\" tiOutline [tabindex]=\"disabled ? -1 : 0\" style=\"outline-offset: -2px;\"\r\n     (mousedown)=\"onSearch()\" (keydown.enter)=\"onSearch()\"\r\n     [id]=\"appendId('search')\"></div>\r\n<ti-droplist #droplist\r\n              [dominatorElem]=\"nativeElement\"\r\n              [options]=\"suggestions\"\r\n              [(ngModel)]=\"selected\"\r\n              [labelKey]=\"labelKey\"\r\n              [panelMaxHeight]=\"panelMaxHeight\"\r\n              [panelWidth]=\"panelWidth\"\r\n              (ngModelChange)=\"onDroplistChange($event)\"\r\n              [id]=\"appendId('droplist')\">\r\n        <ng-template let-item let-i=index>\r\n                <ng-container *ngIf=\"itemTemplate else listLabelTemplate\">\r\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item,index: i}\">\r\n                        </ng-container>\r\n                </ng-container>\r\n                <ng-template #listLabelTemplate><span [title]=\"item[labelKey]\">{{item[labelKey]}}</span></ng-template>\r\n        </ng-template>\r\n</ti-droplist>",
                providers: [TiFormComponent.getValueAccessor(TiSearchboxComponent)],
                host: {
                    '[class.ti3-searchbox-container]': 'true',
                    '(blur)': 'onBlur()',
                    '(focus)': 'onFocus()'
                },
                styles: ["::ng-deep :root{--ti-searchbox-container-width:200px;--ti-searchbox-divider-height:calc(var(--ti-input-height)/2);--ti-searchbox-divider-width:1px;--ti-searchbox-icon-area-width:34px;--ti-searchbox-icon-size:14px}:host.ti3-searchbox-container{-ms-box-sizing:border-box;border:1px solid;border-radius:var(--ti-input-border-radius);box-sizing:border-box;cursor:pointer;display:inline-block;height:var(--ti-input-height);line-height:normal;position:relative;text-align:left;vertical-align:middle;width:var(--ti-searchbox-container-width)}:host.ti3-searchbox-container:after{content:\"\";display:inline-block;height:100%;line-height:100%;vertical-align:middle}:host.ti3-searchbox-container .ti3-searchbox-input{background-color:transparent;border:none!important;border-radius:3px;box-shadow:none;box-sizing:border-box;float:left;height:100%;outline:none;overflow:hidden;padding:0 0 0 var(--ti-input-padding-horizontal);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;width:calc(100% - var(--ti-searchbox-icon-area-width) - var(--ti-searchbox-divider-width))}:host.ti3-searchbox-container .ti3-searchbox-divider{height:var(--ti-searchbox-divider-height);position:absolute;right:var(--ti-searchbox-icon-area-width);top:calc(50% - var(--ti-searchbox-divider-height)/2);vertical-align:middle;width:var(--ti-searchbox-divider-width)}:host.ti3-searchbox-container .ti3-searchbox-search{border-radius:0 3px 3px 0;float:right;font-size:var(--ti-searchbox-icon-size);height:100%;text-align:center;width:var(--ti-searchbox-icon-area-width)}:host.ti3-searchbox-container .ti3-searchbox-search:before{position:relative;top:calc(50% - var(--ti-searchbox-icon-size)/2)}:host.ti3-searchbox-container:not([disabled]){background-color:var(--ti-input-bg-color);border-color:var(--ti-input-border-color)}:host.ti3-searchbox-container:not([disabled]):hover{border-color:var(--ti-input-border-color-hover)}:host.ti3-searchbox-container:not([disabled])[tiFocused]{border-color:var(--ti-input-border-color-focus)}:host.ti3-searchbox-container:not([disabled]) .ti3-searchbox-divider{background-color:var(--ti-common-color-line-dividing)}:host.ti3-searchbox-container:not([disabled]) .ti3-searchbox-search{color:var(--ti-common-color-icon-normal)}:host.ti3-searchbox-container:not([disabled]) .ti3-searchbox-search:hover{color:var(--ti-common-color-icon-hover)}:host.ti3-searchbox-container[disabled]{background-color:var(--ti-input-bg-color-disabled);border-color:var(--ti-input-border-color-disabled);cursor:not-allowed}:host.ti3-searchbox-container[disabled] .ti3-searchbox-divider{background-color:var(--ti-input-border-color-disabled)}:host.ti3-searchbox-container[disabled] .ti3-searchbox-search{color:var(--ti-common-color-icon-disabled)}"]
            },] }
];
TiSearchboxComponent.propDecorators = {
    trimmed: [{ type: Input }],
    search: [{ type: Output }],
    itemTemplate: [{ type: ContentChild, args: ['item', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,