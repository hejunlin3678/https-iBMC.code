import { ApplicationRef, Component, ElementRef, Input, Renderer2, TemplateRef, ViewChild } from '@angular/core';
import { TiBrowser, Util } from '../../utils/Util';
import { Position } from '../../utils/Position';
import { TiBaseComponent } from '../base/TiBaseModule';
import { Subject } from 'rxjs';
/**
 * @ignore
 * 纯下拉面板组件，只有面板，没有内容。因为有时朝上弹，dropdown/dropup合称drop
 */
export class TiDropComponent extends TiBaseComponent {
    constructor(hostRef, renderer, applicationRef) {
        super(hostRef, renderer);
        this.hostRef = hostRef;
        this.renderer = renderer;
        this.applicationRef = applicationRef;
        /**
         * 下拉面板的最大显示宽度，该变量与下拉类组件保持一致
         *
         * 1."justified"(默认): 下拉框的宽度与Select组件的宽度保持一致；
         *
         * 2."auto": 下拉框的宽度根据下拉选项的内容自动撑开；
         *
         * 3.表示宽度的字符串: 设置固定的下拉框宽度(不小于Select组件的宽度)。例如："200px"
         */
        this.panelWidth = 'justified'; // 面板宽度
        /**
         * 面板最大高度
         */
        this.panelMaxHeight = '9999px'; // 面板最大高度
        /**
         * 空间不足时，依然保持固定高度。 select search等是可变最大高度，日历是固定最大高度。
         * 再就是上下空间都不足时，日历从下方弹出。
         */
        this.fixMaxHeight = false; // 再就是上下空间都不足时，日历从下方弹出。
        /**
         * 主题样式控制
         */
        this.theme = 'border';
        /**
         * 距离宿主元素距离，像素值
         */
        this.dominatorSpace = TiDropComponent.DOMINATOR_SPACE + 'px';
        /**
         * 距离浏览器上或下边沿的距离，像素值
         */
        this.browserSpace = TiDropComponent.BROWSER_SPACE + 'px';
        /**
         * 在定位基础上的水平方向的偏移，向左偏移为负值，向右偏移为正值，像素值
         */
        this.hOffset = 0;
        /**
         * 面板对齐方式
         */
        this.panelAlign = 'left';
        /**
         * @ignore
         */
        this.dropSubject = new Subject();
        this.posHandles = [];
        // 决定上下位置的函数
        this.defaultDeterminPositionFn = (layout) => {
            const dominatorSpace = parseInt(this.dominatorSpace, 10);
            const browserSpace = parseInt(this.browserSpace, 10);
            const needHeight = layout.targetLayout.height + dominatorSpace + browserSpace;
            if (layout.avilableLayout.bottom >= needHeight) { // 下方空间足够，向下展开
                return this.panelAlign === 'left' ? 'bottom-left' : 'bottom-right';
            }
            else if (layout.avilableLayout.top >= needHeight) { // 上方空间足够，向上展开
                return this.panelAlign === 'left' ? 'top-left' : 'top-right';
            }
            else if (layout.avilableLayout.bottom >= layout.avilableLayout.top) { // 下方空间较大，则向下展开
                // 因为日历组件存在问题，最大高度不压缩，极端情况时会显示在top为负显示不全。所以日历组件尽量向下弹出。
                return this.panelAlign === 'left' ? 'bottom-left' : 'bottom-right';
            }
            return this.panelAlign === 'left' ? 'top-left' : 'top-right'; // 向上展开
        };
    }
    /**
     * 外部接口: 获取当前状态, 只读不写
     */
    get isShow() {
        return this.hostRef.nativeElement.style.display === 'block';
    }
    ngOnDestroy() {
        // 从body上摘除。
        this.renderer.removeChild(this.renderer.parentNode(this.hostRef.nativeElement), this.hostRef.nativeElement);
        this.unlistenPosition();
    }
    /**
     * 切换面板状态：打开/关闭
     */
    toggle() {
        this.isShow ? this.hide() : this.show();
    }
    /**
     * 打开面板
     */
    show() {
        if (this.isShow) {
            return;
        }
        // 挂在body上，极远处
        this.appendToBodyFarAway();
        // 先显示，才能再计算
        this.setShow();
        this.setPanelWidth();
        // 设置位置：居下优先，居上其次
        this.setPosition();
        this.listenPosition();
        this.dropSubject.next(true);
        // const result = this.setPosition();
        // setTimeout(()=>{this.setPosition()},0);
        // 设置MaxHeight //此逻辑已经放入Position
        // this.setPanelMaxHeight(result.avilableHeight);
        // 设置Width。确保在显示之后设置下拉框的宽度，避免滚动条的影响
        // this.setPanelWidth();
    }
    /**
     * 关闭面板
     */
    hide() {
        if (!this.isShow) {
            return;
        }
        this.renderer.setStyle(this.hostRef.nativeElement, 'display', 'none');
        this.unlistenPosition();
    }
    appendToBodyFarAway() {
        // 如果不在body上，那么挂在body上。（逻辑应该移入Position.setPosition吧，因为那位置就是按照body定的，不在body会出错。）
        if (this.renderer.parentNode(this.hostRef.nativeElement) !== document.body) {
            this.renderer.appendChild(document.body, this.hostRef.nativeElement);
            const embeddedViewRef = this.dropTemplateRef.createEmbeddedView(null);
            this.applicationRef.attachView(embeddedViewRef); // 不做此处处理，ng-template中的标签不会解析
            Array.from(embeddedViewRef.rootNodes)
                .forEach((item) => {
                this.renderer.appendChild(this.hostRef.nativeElement, item);
            });
        }
        // 设置在极远处（逻辑应该移入Position.setPosition吧）
        this.renderer.setStyle(this.hostRef.nativeElement, 'left', '-9999px');
        this.renderer.setStyle(this.hostRef.nativeElement, 'top', '-9999px');
        // 更新max-height为默认值panelMaxHeight，因为上次显示可能更改了max-height
        this.renderer.setStyle(this.hostRef.nativeElement, 'max-height', this.panelMaxHeight);
        // 设置width,当出现滚动条时,更新width为默认的panelWidth，避免滚动条宽度的影响
        if (this.panelWidth === 'auto') {
            this.renderer.setStyle(this.hostRef.nativeElement, 'width', this.panelWidth);
        }
    }
    setShow() {
        // 显示才能计算宽度
        this.renderer.setStyle(this.hostRef.nativeElement, 'display', 'block');
    }
    /**
     * 监听位置变化, 并隐藏面板。打开面板时监听，关闭和销毁时取消监听。
     * TODO: 尝试hide改为rePosition
     */
    listenPosition() {
        this.posHandles = Position.addPosChangeEvts(() => {
            this.hide();
        }, this.renderer);
    }
    unlistenPosition() {
        Position.removePosChangeEvts(this.posHandles);
    }
    /**
     * 确定元素的显示样式，包括位置、最大高度、向上或向下
     * @returns 定位结果对象
     */
    setPosition() {
        const dominatorSpace = parseInt(this.dominatorSpace, 10);
        const browserSpace = parseInt(this.browserSpace, 10);
        const determinPositionFn = Util.isFunction(this.determinPositionFn) ? this.determinPositionFn :
            this.defaultDeterminPositionFn;
        // 设置位置
        const result = Position.setPosition({
            targetEle: this.hostRef.nativeElement,
            hostEle: this.dominatorElem,
            // position: undefined, // 可选参数
            hostSpace: dominatorSpace,
            browserSpace,
            fixMaxHeight: this.fixMaxHeight,
            hOffset: this.hOffset,
            determinPositionFn
        });
        return result.hostLayout;
    }
    resetPosition() {
        // 记录上一次dominator left值
        const hostLayout = this.setPosition();
        const dominatorLastLeft = hostLayout && hostLayout.left;
        // 记录当前dominator left值
        const dominatorCurLeft = Position.getHostEleLayout(this.dominatorElem).left;
        // dominator发生水平位移且面板处于打开状态时，需重新定位
        // 主要场景：下拉面板数据量变动引起body出现竖向滚动条，dominator发生水平方向偏移;
        if (dominatorLastLeft !== dominatorCurLeft) {
            if (this.isShow) {
                this.setPosition();
            }
        }
    }
    setPanelWidth() {
        const panelWidthNum = parseInt(this.panelWidth, 10);
        const scrollWidth = this.hostRef.nativeElement.offsetWidth - this.hostRef.nativeElement.clientWidth;
        const dominatorElemWidth = this.dominatorElem.offsetWidth;
        let width;
        if (!isNaN(panelWidthNum)) {
            width = panelWidthNum + 'px';
        }
        else if (this.panelWidth === 'auto') {
            width = 'auto';
            // Fix bug: 非IE下滚动条会覆盖部分内容
            if (!TiBrowser.isIE()) {
                // 需要重置宽度设置，根据下拉面板的真实宽度确定是否需要增加滚动条宽度
                width = null;
                // 有滚动条出现且文本较长时，需要再增加滚动条的宽度，否则内容显示不全
                if (scrollWidth) {
                    width = this.hostRef.nativeElement.offsetWidth + scrollWidth + 'px';
                }
            }
            const minWidth = dominatorElemWidth + 'px';
            this.renderer.setStyle(this.hostRef.nativeElement, 'min-width', minWidth);
        }
        else {
            // 默认宽度设置，包含justified
            width = dominatorElemWidth + 'px';
        }
        // 设置
        this.renderer.setStyle(this.hostRef.nativeElement, 'width', width);
    }
}
/**
 * 设置下拉距离dominator的距离：默认没有间距
 */
TiDropComponent.DOMINATOR_SPACE = 4;
/**
 * 控制下拉框距离浏览器上下边沿的距离为5px，预留一个余量，防止显示不了边框
 */
TiDropComponent.BROWSER_SPACE = 5;
TiDropComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-drop',
                template: "\r\n<ng-template #dropTemplateRef>\r\n    <ng-content></ng-content>\r\n</ng-template>\r\n\r\n",
                host: {
                    '[class.ti3-dropdown-container]': 'true',
                    '[class.ti3-dropdown-container-border]': 'theme ==="border"',
                    '[style.height]': 'panelHeight'
                },
                styles: [":host.ti3-dropdown-container{-ms-box-sizing:border-box;background-color:#fff;box-shadow:var(--ti-common-shadow-2-down);box-sizing:border-box;color:var(--ti-input-text-color);display:none;position:absolute;z-index:1060}:host.ti3-dropdown-container-border{border-radius:var(--ti-input-border-radius)}:host .ti3-drop-cover-line{background:var(--ti-common-color-line-dividing);height:1px;position:absolute}"]
            },] }
];
TiDropComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ApplicationRef }
];
TiDropComponent.propDecorators = {
    panelWidth: [{ type: Input }],
    panelMaxHeight: [{ type: Input }],
    panelHeight: [{ type: Input }],
    dominatorElem: [{ type: Input }],
    fixMaxHeight: [{ type: Input }],
    theme: [{ type: Input }],
    dominatorSpace: [{ type: Input }],
    browserSpace: [{ type: Input }],
    hOffset: [{ type: Input }],
    determinPositionFn: [{ type: Input }],
    panelAlign: [{ type: Input }],
    dropTemplateRef: [{ type: ViewChild, args: ['dropTemplateRef', { static: true },] }]
};
// offsetWidth属性可以返回对象的padding+border+width属性值之和, 是整数。与jQuery的outerWidth()完全相同，outerWidth(true)带有外边距。
// Element.clientWidth 属性表示元素的内部宽度，以像素计。该属性包括内边距，但不包括垂直滚动条（如果有）、边框和外边距。
//# sourceMappingURL=data:application/json;base64,