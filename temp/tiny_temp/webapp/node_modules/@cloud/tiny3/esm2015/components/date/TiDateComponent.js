import { Component, ContentChild, TemplateRef } from '@angular/core';
import { TiDateUtil, TiKeymap, Util } from '../../utils/Util';
import { TiLocale, TiLocaleFormat } from '../../locale/TiLocaleModule';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiDateBaseComponent } from '../datebase/TiDateBaseModule';
/**
 * Date日期组件
 *
 * Date组件提供了一种方便的显示和设置日期的方式
 *
 * <example-url>../tiny3demo/#/date/date-all</example-url>
 */
export class TiDateComponent extends TiDateBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * @ignore
         * 标记date/datetime的类型
         */
        this.isDatetime = false;
        /**
         * @ignore
         * 用于标记是不是range
         */
        this.isRange = false;
        /**
         * @ignore
         * placeholder提示文本
         */
        this.placeholder = `${TiLocale.getLocaleWords().tiDate.datePlaceholder}`;
    }
    // tslint:disable-next-line:use-life-cycle-interface
    ngOnChanges(changes) {
        // format支持动态变更
        if (changes['format'] && !changes['format'].firstChange) {
            // 新的format是非法时，format值保持之前值不变
            if (!Util.isString(changes['format'].currentValue)) {
                this.format = changes['format'].previousValue;
                return;
            }
            this.formatValue();
            // 配置面板的接口值
            this.setPickerDate();
        }
        // 验证最大值最小值，为了处理最大值和最小值从合法日期变为undefined 的情景
        if ((changes['max'] && !changes['max'].firstChange) || (changes['min'] && !changes['min'].firstChange)) {
            this.validateMinAndMax(this.config, this.isDatetime);
        }
    }
    /**
     * @ignore
     * model值变化时的回调
     */
    ngOnModelChange() {
        if (!TiDateUtil.isDate(this.model)) {
            this.inputValue = '';
            return;
        }
        this.formatValue();
        this.setPickerDate();
    }
    /**
     * @ignore
     */
    setInputValue(value) {
        let isDisabled = false;
        if (Util.isArray(this.disabledDays) && this.disabledDays.length > 0) {
            this.disabledDays.forEach((item) => {
                if (item.getTime() === value.getTime()) {
                    isDisabled = true;
                }
            });
        }
        if (isDisabled) {
            return;
        }
        if (this.isValidValue(value)) {
            this.model = value;
        }
    }
    /**
     * @ignore
     */
    onKeydownFn(event, val, pos) {
        if (event.keyCode === TiKeymap.KEY_ENTER || event.keyCode === TiKeymap.KEY_NUMPAD_ENTER) {
            this.hideDrop();
        }
    }
    /**
     * @ignore
     * 配置时间日期面板接口
     */
    setPickerDate() {
        this.datePanel = {
            value: {
                begin: this.model,
                // tslint:disable-next-line:no-null-keyword
                end: null
            },
            picker: 'day',
            min: this.min,
            max: this.max,
            format: this.format,
            nowDateTime: this.nowDateTime,
            select: () => {
                // 点击面板：新旧值相同不做处理，不相同，将新值赋给model
                if (!TiDateUtil.isDateEqual(this.model, this.datePanel['value'].begin)) {
                    this.model = this.datePanel['value'].begin;
                }
                this.hideDrop();
            }
        };
        // 如果只显示年
        if (this.format.indexOf('M') === -1 && this.format !== 'mediumDate') {
            this.datePanel['picker'] = 'year';
        }
        else if (this.format.indexOf('d') === -1) { // 如果只显示年月
            this.datePanel['picker'] = 'month';
        }
    }
    /**
     * @ignore
     * 根据model值和format接口，格式化显示时间日期
     */
    formatValue() {
        this.inputValue = (this.model !== null) ? TiLocaleFormat.formatDate(this.model, this.format) : '';
    }
    /**
     * @ignore
     * 判断是不是合法的model
     */
    isValidValue(value) {
        if (TiDateUtil.isDate(value) && TiDateUtil.isBetweenMaxAndmin(value, this.min, this.max)) {
            return true;
        }
        return false;
    }
}
TiDateComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-date',
                template: "<ti-date-dominator #dominator\r\n                   [id]=\"appendId('dominator')\"\r\n                   [clearable]=\"clearIcon\"\r\n                   [(ngModel)]=\"inputValue\"\r\n                   [disabled]=\"disabled\"\r\n                   (clear)=\"onIconClearClick($event)\"\r\n                   (click)=\"onShowClick()\">{{ placeholder }}</ti-date-dominator>\r\n<ti-drop #drop\r\n        [id]=\"appendId('drop')\"\r\n        class=\"ti3-date-picker\"\r\n        [ngClass]=\"{'ti3-date-customize': hasCustomizeTime}\"\r\n        [dominatorElem]=\"dominatorCom.nativeElement\"\r\n        fixMaxHeight=\"true\"\r\n        [panelWidth]=\"datePanelWidth\"\r\n        [dominatorSpace]='dominatorSpace'\r\n        [panelAlign]=\"panelAlign\"\r\n        [browserSpace]=\"browserSpace\"\r\n        [determinPositionFn]=\"determinPositionFn\"\r\n        theme='noborder'>\r\n        <section class='ti3-date-clear'>\r\n            <section *ngIf='hasCustomizeTime' class='ti3-date-customize-container'>\r\n                <ng-container *ngTemplateOutlet=\"customizeTemplate; context:  {$implicit: customizeOptions}\"></ng-container>\r\n            </section>\r\n            <section [ngClass]=\"{'ti3-date-panel-container': hasCustomizeTime}\">\r\n                <ti-date-edit\r\n                [id]=\"appendId('date-edit')\"\r\n                class='ti3-date-edit'\r\n                [(ngModel)] = \"datePanel.value.begin\"\r\n                [min] = \"datePanel.min\"\r\n                [max] = \"datePanel.max\"\r\n                [format]=\"datePanel.format\"\r\n                [disabledDays]='disabledDays'\r\n                (keydown)=\"onKeydownFn($event, datePanel.value.begin, 'begin')\"\r\n                (ngModelChange)=\"setInputValue(datePanel.value.begin)\">\r\n            </ti-date-edit>\r\n            <ti-date-panel\r\n                [id]=\"appendId('panel')\"\r\n                [(value)]=\"datePanel.value\"\r\n                [focusedPosition]='focusedPosition'\r\n                [isRange]='false'\r\n                [(picker)]=\"datePanel.picker\"\r\n                [min]=\"datePanel.min\"\r\n                [max]=\"datePanel.max\"\r\n                [disabledDays]='disabledDays'\r\n                [nowDateTime]=\"datePanel.nowDateTime\"\r\n                [format]=\"datePanel.format\"\r\n                (select)=\"datePanel.select()\"></ti-date-panel>\r\n            </section>\r\n        </section>\r\n</ti-drop>\r\n\r\n<ng-template #customizeTemplate let-options>\r\n    <ul [id]=\"appendId('list')\">\r\n        <li *ngFor='let option of options; index as i;' class='ti3-customize-time-label' (click)='customizeTimeClickFn(option.value.begin)' [id]=\"appendId('label_' + i)\">{{option.label}}</li>\r\n    </ul>\r\n</ng-template>\r\n",
                // tslint:disable-next-line:use-host-property-decorator
                host: {
                    '[class.ti3-date-input-container]': 'true',
                    '(blur)': 'hidePanel()'
                },
                providers: [TiFormComponent.getValueAccessor(TiDateComponent)],
                styles: [".ti3-compnent-container-border,:host.ti3-date-input-container{-ms-box-sizing:border-box;border:1px solid;border-radius:var(--ti-input-border-radius);box-sizing:border-box;display:inline-block}.ti3-compnent-container-border:not([disabled]),:host.ti3-date-input-container:not([disabled]){background-color:var(--ti-input-bg-color);border-color:var(--ti-input-border-color)}.ti3-compnent-container-border:not([disabled]):hover,:host.ti3-date-input-container:not([disabled]):hover{border-color:var(--ti-input-border-color-hover)}.ti3-compnent-container-border:not([disabled])[tiFocused],:host.ti3-date-input-container:not([disabled])[tiFocused]{border-color:var(--ti-input-border-color-focus)}.ti3-compnent-container-border[disabled],:host.ti3-date-input-container[disabled]{background-color:var(--ti-input-bg-color-disabled);border-color:var(--ti-input-border-color-disabled);cursor:not-allowed!important}.ti3-customize-time-label{color:var(--ti-common-color-text-primary);cursor:pointer;font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);margin-bottom:10px}.ti3-customize-time-label:hover{color:var(--ti-common-color-line-active)}.ti3-date-clear{display:flex;*zoom:1}.ti3-date-clear:after{clear:both}.ti3-date-clear:after,.ti3-date-clear:before{content:\"\";display:table}.ti3-datetime-select-btn{color:var(--ti-common-color-text-highlight);cursor:pointer;float:right;line-height:24px;padding-right:var(--ti-common-space-2x)}.ti3-datetime-select-btn-disabled{color:var(--ti-common-color-text-disabled);cursor:not-allowed}.ti3-date-range-splitline{padding:0 6px}.ti3-tab-input{height:0;left:-9999px;position:absolute;top:-9999px;width:0}::ng-deep :root{--ti-date-picker-padding-bottom:12px;--ti-date-picker-padding-horizon:16px}:host.ti3-date-input-container{width:160px}.ti3-dropdown-container.ti3-date-picker{font-size:var(--ti-datetime-input-font-size);padding:var(--ti-date-picker-padding-bottom) var(--ti-date-picker-padding-horizon);width:calc(var(--ti-datetime-day-width)*7 + var(--ti-date-picker-padding-horizon)*2 + 2px);z-index:var(--ti-datetime-z-index)}.ti3-dropdown-container.ti3-date-picker:focus{outline:0}.ti3-dropdown-container.ti3-date-picker.ti3-date-customize{width:399px!important}.ti3-date-customize-container{border-right:1px solid var(--ti-common-color-line-dividing);height:292px;padding-right:var(--ti-common-space-4x);width:80px}.ti3-date-edit{width:100%}::ng-deep .ti3-date-edit input[tiText]{border-color:var(--ti-input-border-color-focus)!important}.ti3-date-panel-container{padding-left:var(--ti-common-space-4x)}"]
            },] }
];
TiDateComponent.propDecorators = {
    customizeTemplate: [{ type: ContentChild, args: ['customize', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlEYXRlQ29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vQGNsb3VkL3RpbnkzL2NvbXBvbmVudHMvZGF0ZS9UaURhdGVDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNILFNBQVMsRUFDVCxZQUFZLEVBS1osV0FBVyxFQUNkLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzlELE9BQU8sRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdkUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxtQkFBbUIsRUFBMEIsTUFBTSw4QkFBOEIsQ0FBQztBQUUzRjs7Ozs7O0dBTUc7QUFZSCxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxtQkFBbUI7SUFYeEQ7O1FBaUJJOzs7V0FHRztRQUNJLGVBQVUsR0FBWSxLQUFLLENBQUM7UUFDbkM7OztXQUdHO1FBQ0ksWUFBTyxHQUFZLEtBQUssQ0FBQztRQUNoQzs7O1dBR0c7UUFDSSxnQkFBVyxHQUFXLEdBQUcsUUFBUSxDQUFDLGNBQWMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQXlIdkYsQ0FBQztJQWxIRyxvREFBb0Q7SUFDcEQsV0FBVyxDQUFDLE9BQXNCO1FBQzlCLGVBQWU7UUFDZixJQUFJLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLEVBQUU7WUFDckQsOEJBQThCO1lBQzlCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxZQUFZLENBQUMsRUFBRTtnQkFDaEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMs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QWUsQ0FBQyxDQUFFOzthQUNuRTs7O2dDQXlCSSxZQUFZLFNBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsXHJcbiAgICBDb250ZW50Q2hpbGQsXHJcbiAgICBFbGVtZW50UmVmLFxyXG4gICAgTmdab25lLFxyXG4gICAgUmVuZGVyZXIyLFxyXG4gICAgU2ltcGxlQ2hhbmdlcyxcclxuICAgIFRlbXBsYXRlUmVmXHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRpRGF0ZVV0aWwsIFRpS2V5bWFwLCBVdGlsIH0gZnJvbSAnLi4vLi4vdXRpbHMvVXRpbCc7XHJcbmltcG9ydCB7IFRpTG9jYWxlLCBUaUxvY2FsZUZvcm1hdCB9IGZyb20gJy4uLy4uL2xvY2FsZS9UaUxvY2FsZU1vZHVsZSc7XHJcbmltcG9ydCB7IFRpRm9ybUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2UvVGlCYXNlTW9kdWxlJztcclxuaW1wb3J0IHsgVGlEYXRlQmFzZUNvbXBvbmVudCwgVGlEYXRlQ3VzdG9taXplT3B0aW9ucyB9IGZyb20gJy4uL2RhdGViYXNlL1RpRGF0ZUJhc2VNb2R1bGUnO1xyXG5cclxuLyoqXHJcbiAqIERhdGXml6XmnJ/nu4Tku7ZcclxuICpcclxuICogRGF0Zee7hOS7tuaPkOS+m+S6huS4gOenjeaWueS+v+eahOaYvuekuuWSjOiuvue9ruaXpeacn+eahOaWueW8j1xyXG4gKlxyXG4gKiA8ZXhhbXBsZS11cmw+Li4vdGlueTNkZW1vLyMvZGF0ZS9kYXRlLWFsbDwvZXhhbXBsZS11cmw+XHJcbiAqL1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAndGktZGF0ZScsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGF0ZS5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2RhdGUubGVzcyddLFxyXG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnVzZS1ob3N0LXByb3BlcnR5LWRlY29yYXRvclxyXG4gICAgaG9zdDoge1xyXG4gICAgICAgICdbY2xhc3MudGkzLWRhdGUtaW5wdXQtY29udGFpbmVyXSc6ICd0cnVlJyxcclxuICAgICAgICAnKGJsdXIpJzogJ2hpZGVQYW5lbCgpJ1xyXG4gICAgfSxcclxuICAgIHByb3ZpZGVyczogWyBUaUZvcm1Db21wb25lbnQuZ2V0VmFsdWVBY2Nlc3NvcihUaURhdGVDb21wb25lbnQpIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFRpRGF0ZUNvbXBvbmVudCBleHRlbmRzIFRpRGF0ZUJhc2VDb21wb25lbnQge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDml6XmnJ/mmL7npLrmoLzlvI86IGRhdGXnu4Tku7bnmoRmb3JtYXTkuLpzdHJpbmfnsbvlnotcclxuICAgICAqL1xyXG4gICAgcHVibGljIGZvcm1hdDogc3RyaW5nO1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDmoIforrBkYXRlL2RhdGV0aW1l55qE57G75Z6LXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc0RhdGV0aW1lOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIOeUqOS6juagh+iusOaYr+S4jeaYr3JhbmdlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc1JhbmdlOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIHBsYWNlaG9sZGVy5o+Q56S65paH5pysXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBwbGFjZWhvbGRlcjogc3RyaW5nID0gYCR7VGlMb2NhbGUuZ2V0TG9jYWxlV29yZHMoKS50aURhdGUuZGF0ZVBsYWNlaG9sZGVyfWA7XHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqL1xyXG4gICAgQENvbnRlbnRDaGlsZCgnY3VzdG9taXplJywgeyBzdGF0aWM6IHRydWUgfSkgY3VzdG9taXplVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG5cclxuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTp1c2UtbGlmZS1jeWNsZS1pbnRlcmZhY2VcclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgICAgICAvLyBmb3JtYXTmlK/mjIHliqjmgIHlj5jmm7RcclxuICAgICAgICBpZiAoY2hhbmdlc1snZm9ybWF0J10gJiYgIWNoYW5nZXNbJ2Zvcm1hdCddLmZpcnN0Q2hhbmdlKSB7XHJcbiAgICAgICAgICAgIC8vIOaWsOeahGZvcm1hdOaYr+mdnuazleaXtu+8jGZvcm1hdOWAvOS/neaMgeS5i+WJjeWAvOS4jeWPmFxyXG4gICAgICAgICAgICBpZiAoIVV0aWwuaXNTdHJpbmcoY2hhbmdlc1snZm9ybWF0J10uY3VycmVudFZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mb3JtYXQgPSBjaGFuZ2VzWydmb3JtYXQnXS5wcmV2aW91c1ZhbHVlO1xyXG5cclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLmZvcm1hdFZhbHVlKCk7XHJcbiAgICAgICAgICAgIC8vIOmFjee9rumdouadv+eahOaOpeWPo+WAvFxyXG4gICAgICAgICAgICB0aGlzLnNldFBpY2tlckRhdGUoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIOmqjOivgeacgOWkp+WAvOacgOWwj+WAvO+8jOS4uuS6huWkhOeQhuacgOWkp+WAvOWSjOacgOWwj+WAvOS7juWQiOazleaXpeacn+WPmOS4unVuZGVmaW5lZCDnmoTmg4Xmma9cclxuICAgICAgICBpZiAoKGNoYW5nZXNbJ21heCddICYmICFjaGFuZ2VzWydtYXgnXS5maXJzdENoYW5nZSkgfHwgKGNoYW5nZXNbJ21pbiddICYmICFjaGFuZ2VzWydtaW4nXS5maXJzdENoYW5nZSkpIHtcclxuICAgICAgICAgICAgdGhpcy52YWxpZGF0ZU1pbkFuZE1heCh0aGlzLmNvbmZpZywgdGhpcy5pc0RhdGV0aW1lKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiBtb2RlbOWAvOWPmOWMluaXtueahOWbnuiwg1xyXG4gICAgICovXHJcbiAgICBuZ09uTW9kZWxDaGFuZ2UoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKCFUaURhdGVVdGlsLmlzRGF0ZSh0aGlzLm1vZGVsKSkge1xyXG4gICAgICAgICAgICB0aGlzLmlucHV0VmFsdWUgPSAnJztcclxuXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5mb3JtYXRWYWx1ZSgpO1xyXG4gICAgICAgIHRoaXMuc2V0UGlja2VyRGF0ZSgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzZXRJbnB1dFZhbHVlKHZhbHVlOiBEYXRlKTogdm9pZCB7XHJcbiAgICAgICAgbGV0IGlzRGlzYWJsZWQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgICAgICBpZiAoVXRpbC5pc0FycmF5KHRoaXMuZGlzYWJsZWREYXlzKSAmJiB0aGlzLmRpc2FibGVkRGF5cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZGlzYWJsZWREYXlzLmZvckVhY2goKGl0ZW06IERhdGUpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChpdGVtLmdldFRpbWUoKSA9PT0gdmFsdWUuZ2V0VGltZSgpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXNEaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaXNEaXNhYmxlZCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmlzVmFsaWRWYWx1ZSh2YWx1ZSkpIHtcclxuICAgICAgICAgICAgdGhpcy5tb2RlbCA9IHZhbHVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogQGlnbm9yZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgb25LZXlkb3duRm4oZXZlbnQ6IEtleWJvYXJkRXZlbnQsIHZhbDogYW55LCBwb3M6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIGlmIChldmVudC5rZXlDb2RlID09PSBUaUtleW1hcC5LRVlfRU5URVIgIHx8IGV2ZW50LmtleUNvZGUgPT09IFRpS2V5bWFwLktFWV9OVU1QQURfRU5URVIpIHtcclxuICAgICAgICAgICAgdGhpcy5oaWRlRHJvcCgpO1xyXG4gICAgICAgIH1cclxuICAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDphY3nva7ml7bpl7Tml6XmnJ/pnaLmnb/mjqXlj6NcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFBpY2tlckRhdGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5kYXRlUGFuZWwgPSB7XHJcbiAgICAgICAgICAgIHZhbHVlIDoge1xyXG4gICAgICAgICAgICAgICAgYmVnaW46IHRoaXMubW9kZWwsXHJcbiAgICAgICAgICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tbnVsbC1rZXl3b3JkXHJcbiAgICAgICAgICAgICAgICBlbmQ6IG51bGxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcGlja2VyIDogJ2RheScsXHJcbiAgICAgICAgICAgIG1pbiA6IHRoaXMubWluLFxyXG4gICAgICAgICAgICBtYXggOiB0aGlzLm1heCxcclxuICAgICAgICAgICAgZm9ybWF0IDogdGhpcy5mb3JtYXQsXHJcbiAgICAgICAgICAgIG5vd0RhdGVUaW1lIDogdGhpcy5ub3dEYXRlVGltZSxcclxuICAgICAgICAgICAgc2VsZWN0OiAoKTogdm9pZCA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyDngrnlh7vpnaLmnb/vvJrmlrDml6flgLznm7jlkIzkuI3lgZrlpITnkIbvvIzkuI3nm7jlkIzvvIzlsIbmlrDlgLzotYvnu5ltb2RlbFxyXG4gICAgICAgICAgICAgICAgaWYgKCFUaURhdGVVdGlsLmlzRGF0ZUVxdWFsKHRoaXMubW9kZWwsIHRoaXMuZGF0ZVBhbmVsWyd2YWx1ZSddLmJlZ2luKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubW9kZWwgPSB0aGlzLmRhdGVQYW5lbFsndmFsdWUnXS5iZWdpbjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuaGlkZURyb3AoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vIOWmguaenOWPquaYvuekuuW5tFxyXG4gICAgICAgIGlmICh0aGlzLmZvcm1hdC5pbmRleE9mKCdNJykgPT09IC0xICYmIHRoaXMuZm9ybWF0ICE9PSAnbWVkaXVtRGF0ZScpIHtcclxuICAgICAgICAgICAgdGhpcy5kYXRlUGFuZWxbJ3BpY2tlciddID0gJ3llYXInO1xyXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5mb3JtYXQuaW5kZXhPZignZCcpID09PSAtMSkgeyAvLyDlpoLmnpzlj6rmmL7npLrlubTmnIhcclxuICAgICAgICAgICAgdGhpcy5kYXRlUGFuZWxbJ3BpY2tlciddID0gJ21vbnRoJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKiDmoLnmja5tb2RlbOWAvOWSjGZvcm1hdOaOpeWPo++8jOagvOW8j+WMluaYvuekuuaXtumXtOaXpeacn1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgZm9ybWF0VmFsdWUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5pbnB1dFZhbHVlID0gKHRoaXMubW9kZWwgIT09IG51bGwpID8gVGlMb2NhbGVGb3JtYXQuZm9ybWF0RGF0ZSh0aGlzLm1vZGVsLCB0aGlzLmZvcm1hdCkgOiAnJztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIEBpZ25vcmVcclxuICAgICAqIOWIpOaWreaYr+S4jeaYr+WQiOazleeahG1vZGVsXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBpc1ZhbGlkVmFsdWUodmFsdWU6IERhdGUpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAoVGlEYXRlVXRpbC5pc0RhdGUodmFsdWUpICYmIFRpRGF0ZVV0aWwuaXNCZXR3ZWVuTWF4QW5kbWluKHZhbHVlLCB0aGlzLm1pbiwgdGhpcy5tYXgpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==