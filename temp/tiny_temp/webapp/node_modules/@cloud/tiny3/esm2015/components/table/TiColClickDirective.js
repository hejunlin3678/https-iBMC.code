import { Directive, ElementRef, Renderer2 } from '@angular/core';
/**
 * 10.1.2版本新增
 * 根据规范：“单/复选框”关联表格使用时，为了提升选中效率，点击热区为“单/复选框”按钮所在单元格，点击即可选中。
 */
export class TiColClickDirective {
    constructor(renderer, elementRef) {
        this.renderer = renderer;
        this.elementRef = elementRef;
    }
    ngAfterViewInit() {
        this.renderer.listen(this.elementRef.nativeElement, 'click', (event) => {
            const inputEle = this.elementRef.nativeElement.querySelector('input');
            const checkboxLabelEle = this.elementRef.nativeElement.querySelector('.ti3-checkbox');
            const radioLabelEle = this.elementRef.nativeElement.querySelector('.ti3-radio');
            // 点击单/复选空白区域时，触发input点击事件
            // 表格和单/复选联用时，checkboxLabelEle和radioLabelEle不会同时出现，所以需要分别进行判断
            // inputEle和checkboxLabelEle/radioLabelEle是兄弟元素
            // event.target !== inputEle阻止在firefox下因为inputEle.click()产生的冒泡循环
            if (event.target !== inputEle &&
                ((checkboxLabelEle && !(event.target === checkboxLabelEle || checkboxLabelEle.contains(event.target))) ||
                    (radioLabelEle && !(event.target === radioLabelEle || radioLabelEle.contains(event.target))))) {
                inputEle.click();
            }
        });
    }
}
TiColClickDirective.decorators = [
    { type: Directive, args: [{
                selector: 'td[checkbox-column], th[checkbox-column], td[radio-column]'
            },] }
];
TiColClickDirective.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlDb2xDbGlja0RpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9jb21wb25lbnRzL3RhYmxlL1RpQ29sQ2xpY2tEaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVILFNBQVMsRUFDVCxVQUFVLEVBQ1YsU0FBUyxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCOzs7R0FHRztBQUlILE1BQU0sT0FBTyxtQkFBbUI7SUFFNUIsWUFBb0IsUUFBbUIsRUFBVSxVQUFzQjtRQUFuRCxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBWTtJQUV2RSxDQUFDO0lBQ0QsZUFBZTtRQUNYLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSxDQUFDLEtBQWlCLEVBQVEsRUFBRTtZQUNyRixNQUFNLFFBQVEsR0FBUSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDM0UsTUFBTSxnQkFBZ0IsR0FBUSxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsZUFBZSxDQUFDLENBQUM7WUFDM0YsTUFBTSxhQUFhLEdBQVEsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQ3JGLDBCQUEwQjtZQUMxQiw2REFBNkQ7WUFDN0QsK0NBQStDO1lBQy9DLGdFQUFnRTtZQUNoRSxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssUUFBUTtnQkFDekIsQ0FBQyxDQUFDLGdCQUFnQixJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLGdCQUFnQixJQUFLLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztvQkFDdkcsQ0FBQyxhQUFhLElBQUksQ0FBQyxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssYUFBYSxJQUFJLGFBQWEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUMvRixRQUFRLENBQUMsS0FBSyxFQUFFLENBQUM7YUFDcEI7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7OztZQXZCSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLDREQUE0RDthQUN6RTs7O1lBUkcsU0FBUztZQURULFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xyXG4gICAgQWZ0ZXJWaWV3SW5pdCxcclxuICAgIERpcmVjdGl2ZSxcclxuICAgIEVsZW1lbnRSZWYsXHJcbiAgICBSZW5kZXJlcjJcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLyoqXHJcbiAqIDEwLjEuMueJiOacrOaWsOWinlxyXG4gKiDmoLnmja7op4TojIPvvJrigJzljZUv5aSN6YCJ5qGG4oCd5YWz6IGU6KGo5qC85L2/55So5pe277yM5Li65LqG5o+Q5Y2H6YCJ5Lit5pWI546H77yM54K55Ye754Ot5Yy65Li64oCc5Y2VL+WkjemAieahhuKAneaMiemSruaJgOWcqOWNleWFg+agvO+8jOeCueWHu+WNs+WPr+mAieS4reOAglxyXG4gKi9cclxuQERpcmVjdGl2ZSh7XHJcbiAgICBzZWxlY3RvcjogJ3RkW2NoZWNrYm94LWNvbHVtbl0sIHRoW2NoZWNrYm94LWNvbHVtbl0sIHRkW3JhZGlvLWNvbHVtbl0nXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUaUNvbENsaWNrRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLCBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHtcclxuXHJcbiAgICB9XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5yZW5kZXJlci5saXN0ZW4odGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQsICdjbGljaycsIChldmVudDogTW91c2VFdmVudCk6IHZvaWQgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBpbnB1dEVsZTogYW55ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcclxuICAgICAgICAgICAgY29uc3QgY2hlY2tib3hMYWJlbEVsZTogYW55ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnRpMy1jaGVja2JveCcpO1xyXG4gICAgICAgICAgICBjb25zdCByYWRpb0xhYmVsRWxlOiBhbnkgPSB0aGlzLmVsZW1lbnRSZWYubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcudGkzLXJhZGlvJyk7XHJcbiAgICAgICAgICAgIC8vIOeCueWHu+WNlS/lpI3pgInnqbrnmb3ljLrln5/ml7bvvIzop6blj5FpbnB1dOeCueWHu+S6i+S7tlxyXG4gICAgICAgICAgICAvLyDooajmoLzlkozljZUv5aSN6YCJ6IGU55So5pe277yMY2hlY2tib3hMYWJlbEVsZeWSjHJhZGlvTGFiZWxFbGXkuI3kvJrlkIzml7blh7rnjrDvvIzmiYDku6XpnIDopoHliIbliKvov5vooYzliKTmlq1cclxuICAgICAgICAgICAgLy8gaW5wdXRFbGXlkoxjaGVja2JveExhYmVsRWxlL3JhZGlvTGFiZWxFbGXmmK/lhYTlvJ/lhYPntKBcclxuICAgICAgICAgICAgLy8gZXZlbnQudGFyZ2V0ICE9PSBpbnB1dEVsZemYu+atouWcqGZpcmVmb3jkuIvlm6DkuLppbnB1dEVsZS5jbGljaygp5Lqn55Sf55qE5YaS5rOh5b6q546vXHJcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQgIT09IGlucHV0RWxlICYmXHJcbiAgICAgICAgICAgICAgICAoKGNoZWNrYm94TGFiZWxFbGUgJiYgIShldmVudC50YXJnZXQgPT09IGNoZWNrYm94TGFiZWxFbGUgIHx8IGNoZWNrYm94TGFiZWxFbGUuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkpIHx8XHJcbiAgICAgICAgICAgICAgICAocmFkaW9MYWJlbEVsZSAmJiAhKGV2ZW50LnRhcmdldCA9PT0gcmFkaW9MYWJlbEVsZSB8fCByYWRpb0xhYmVsRWxlLmNvbnRhaW5zKGV2ZW50LnRhcmdldCkpKSkpIHtcclxuICAgICAgICAgICAgICAgIGlucHV0RWxlLmNsaWNrKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG4iXX0=