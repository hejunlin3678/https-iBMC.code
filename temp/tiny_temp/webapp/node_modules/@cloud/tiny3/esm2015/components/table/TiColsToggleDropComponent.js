import { Component, ElementRef, IterableDiffers, NgZone, Renderer2 } from '@angular/core';
import { TiDropsearchComponent } from '../dropsearch/TiDropsearchModule';
import { TiTableComponent } from './TiTableComponent';
/**
 * @ignore
 * TiColsToggleDrop 控制列动态隐藏/显示的下拉组件
 *
 */
export class TiColsToggleDropComponent extends TiDropsearchComponent {
    constructor(iterableDiffers, elementRef, renderer2, zone, table) {
        super(renderer2, elementRef, zone);
        this.iterableDiffers = iterableDiffers;
        this.table = table;
        this.dominatorSpace = TiColsToggleDropComponent.DOMINATOR_SPACE + 'px';
        this.columns = [];
        this.listLabelKey = 'title';
        this.optionsChangeInner = false;
        this.isDisabledFn = (item) => {
            return item.disabled === true || (item.show === undefined && item !== this.listCom.optionSelectAll);
        };
    }
    static trackByFn(index, item) {
        // 表格记忆show属性也需要跟踪
        return item.title + item.show;
    }
    ngOnInit() {
        super.ngOnInit();
        this.multiple = true; // 设置为多选。
        this.heightExcludeList = this.searchable ? TiColsToggleDropComponent.DROP_VERTICAL_PADDING +
            TiColsToggleDropComponent.SEARCHBOX_AREA_HEIGHT : TiColsToggleDropComponent.DROP_VERTICAL_PADDING;
        this.defaultListMaxHeight = this.searchable ? TiColsToggleDropComponent.LIST_WITH_SEARCHBOX_MAX_HEIGHT :
            TiColsToggleDropComponent.DEFAULT_LIST_MAX_HEIGHT;
        this.searchKeys = ['title'];
        this.columnsDiffer = this.iterableDiffers.find(this.options)
            .create(TiColsToggleDropComponent.trackByFn);
    }
    ngDoCheck() {
        super.ngDoCheck();
        const columnsDiffer = this.columnsDiffer.diff(this.options);
        if (columnsDiffer) {
            if (this.optionsChangeInner) {
                this.optionsChangeInner = false;
            }
            else {
                this.selectedColumns = this.options.filter((column) => {
                    return column.show === true || column.show === undefined;
                });
                this.columns = this.options.concat(); // 强制变化，不然colums.push的列不能出现在列表中，与自定义的noempty有关
            }
            // columns变化需要处理列固定
            if (this.table.fixedColumnInfo.hasFixedColumn) {
                // 需要延迟处理，columns变化时，组件渲染还未完成。
                // 但如果在ngAfterViewChecked处理，太频繁，影响性能。
                setTimeout(() => {
                    // 处理左侧列固定
                    this.table.updateFixedThLeftSubject.next();
                    this.table.updateFixedTdLeftSubject.next();
                    // 处理右侧列固定
                    const scrollLeft = this.table.fixedColumnInfo.container.scrollLeft;
                    const isRightColumnFloat = scrollLeft + this.table.fixedColumnInfo.container.clientWidth < this.table.fixedColumnInfo.container.scrollWidth;
                    this.table.containerScrollXChangeSubject.next({
                        scrollLeft,
                        isRightColumnFloat
                    });
                }, 0);
            }
        }
    }
    onSelect(option) {
        if (option === this.listCom.optionSelectAll) {
            this.options.forEach((item) => {
                if (!this.isDisabledFn(item)) {
                    item.show = this.selectedColumns.includes(item);
                }
            });
        }
        else {
            option.show = this.selectedColumns.includes(option);
        }
        this.optionsChangeInner = true;
        // 需要在父类select.emit之前，更改option内容
        super.onSelect(option);
        // TODO: 没有处理，用户主动改变绑定变量selectedColumns。应该在docheck里监听selectedColumns（this.model）
    }
    // 鼠标点击到搜索框外围的空白，会失焦导致面板关闭
    // 此处做特殊处理,当点击空白时通过阻止默认事件的方式处理
    onMousedownSearchBoxOuter(event) {
        if (event.target.tagName === 'INPUT') {
            return;
        }
        event.preventDefault();
    }
}
TiColsToggleDropComponent.DOMINATOR_SPACE = 4;
TiColsToggleDropComponent.DEFAULT_LIST_MAX_HEIGHT = 30 * 8 + 8;
TiColsToggleDropComponent.LIST_WITH_SEARCHBOX_MAX_HEIGHT = 30 * 7;
TiColsToggleDropComponent.SEARCHBOX_AREA_HEIGHT = 28 + 6 + 4; // 搜索框所占区域高度
TiColsToggleDropComponent.DROP_VERTICAL_PADDING = 4 + 4;
TiColsToggleDropComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-cols-toggle-drop',
                template: "<ti-drop class=\"ti3-cols-toggle-drop\"\r\n         [dominatorElem]=\"dominatorElem\"\r\n         [panelWidth]=\"panelWidth\"\r\n         [dominatorSpace]=\"dominatorSpace\"\r\n         panelAlign=\"right\"\r\n         (mousedown)=\"onMousedownSearchBoxOuter($event)\">\r\n    <div *ngIf=\"searchable\"\r\n         class=\"ti3-cols-toggle-searchbox-wrap\"\r\n         (mousedown)=\"onMousedownSearchBoxOuter($event)\">\r\n        <ti-searchbox-notsearch class=\"ti3-cols-toggle-searchbox\"\r\n                                [(ngModel)]=\"searchWord\"\r\n                                (ngModelChange)=\"searchWordChange($event)\"\r\n                                [id]=\"appendId('searchbox')\"></ti-searchbox-notsearch>\r\n    </div>\r\n    <ti-list [multiple]='multiple'\r\n             [options]='(searchable ? searchResult : columns) | tiColumns'\r\n             [labelKey]='listLabelKey'\r\n             [selectAll]='selectAll'\r\n             [(ngModel)]=\"selectedColumns\"\r\n             (select)=\"onSelect($event)\"\r\n             [isDisabledFn]=\"isDisabledFn\"\r\n             [noDataText]=\"noDataText\"\r\n             [id]=\"appendId('list')\"\r\n             tipPosition=\"left\"\r\n             style=\"display: block;\">\r\n    </ti-list>\r\n</ti-drop>",
                host: {
                    '[class.ti3-cols-toggle-drop-container]': 'true'
                }
            },] }
];
TiColsToggleDropComponent.ctorParameters = () => [
    { type: IterableDiffers },
    { type: ElementRef },
    { type: Renderer2 },
    { type: NgZone },
    { type: TiTableComponent }
];
//# sourceMappingURL=data:application/json;base64,