import { ChangeDetectorRef, Component, ContentChild, ElementRef, Input, IterableDiffers, QueryList, Renderer2, TemplateRef, ViewChildren } from '@angular/core';
import { Util } from '../../utils/Util';
import { TiFormComponent, TiWholeComponent } from '../base/TiBaseModule';
/**
 * buttonGroup选择按钮组组件
 *
 * 该组件支持单选、多选两种形式，显示内容支持用户自定义
 *
 * 单选块：用户要从一个数据集中选择单个选项。
 * 分大尺寸，小尺寸，无边框三种类型。
 * 支持可取消选中，默认选中时再次点击不取消当前选中项；
 *
 * 多选块：允许用户从一个数据集中选择多个选项。
 * 分大尺寸，小尺寸两种类型。
 *
 * <example-url>../tiny3demo/#/buttongroup/buttongroup-all</example-url>
 */
export class TiButtongroupComponent extends TiWholeComponent {
    constructor(elementRef, renderer2, changeDetectorRef, iterableDiffers) {
        super(elementRef, renderer2);
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.changeDetectorRef = changeDetectorRef;
        this.iterableDiffers = iterableDiffers;
        /**
         * 用来控制按钮的尺寸大小:默认是large
         *
         * 单选按钮有大小尺寸、无边框之分：取值 'large','small','noBorder'
         *
         * 多选按钮有空间充足，空间不足之分：取值 'large','small',
         */
        this.type = 'large';
        /**
         * 设置是否为多选按钮组
         */
        this.multiple = false;
        // TODO:Tiny4 deselectable改为unselectable
        /**
         * 设置单选按钮组是否可以取消选中
         */
        this.deselectable = false;
        /**
         * 10.0.2新增
         *
         * 按钮是否为多行，设置为多行时，按钮块有下边距，否则没有。
         */
        /**
         * 用于取代公共样式类ti3-button-group-bottom-space
         * <ti-button-group class="ti3-button-group-bottom-space"></ti-button-group>
         */
        this.multiline = false;
    }
    ngOnInit() {
        super.ngOnInit();
        // 处理激活样式
        this.actClass = this.activeClass || 'ti3-active';
        this.itemsDiffer = this.iterableDiffers.find(this.items || [])
            .create();
    }
    ngAfterViewChecked() {
        super.ngAfterViewChecked();
        const itemsDiffer = this.itemsDiffer.diff(this.items || []);
        if (itemsDiffer) {
            const focusElements = [];
            this.btns.forEach((item) => {
                focusElements.push(item.nativeElement);
            });
            this.setFocusableElems(focusElements);
        }
    }
    /**
     * 兼容旧版：
     * 10.1.2 版本之前只能内嵌一个模板，无命名。
     * 新版可以内嵌两个模板，示例书写要求都命名（#item，#sup）。
     * 但需要兼容旧版无命名测试用例。
     */
    ngAfterContentInit() {
        super.ngAfterContentInit();
        // 如果 item 模板为空 && 存在第一个模板，那么把第一个出现的 “非 #sup 标签” 的模板作为 item 模板
        if (!this.itemTemplate && this.firstTemplate
            && (this.firstTemplate.elementRef.nativeElement !== (this.supTemplate && this.supTemplate.elementRef.nativeElement))) {
            this.itemTemplate = this.firstTemplate;
        }
    }
    /**
     * @ignore
     * sup属性存在class类或text存在且有效
     */
    isSuperScript(item) {
        return item.sup && (item.sup.constructor === Object) &&
            ((Util.isString(item.sup.class) && item.sup.class !== '') ||
                (Util.isString(item.sup.text) && item.sup.text !== ''));
    }
    /**
     * @ignore
     * @description 根据selectedId来设置每个按钮的样式
     * @param: item
     */
    setActiveClass(item) {
        if (this.hasSelected(item)) {
            return this.actClass;
        }
        return '';
    }
    /**
     * @ignore
     * 每个item上的点击事件
     */
    onClick(item) {
        if (item.disabled || this.disabled) { // 灰化状态下 ，点击操作无效
            return;
        }
        this.selectItem(item);
    }
    /**
     * @ignore
     * 每个item上的点击事件
     */
    selectItem(item) {
        if (this.multiple) {
            if (Util.isUndefined(this.modelWhole)) {
                this.modelWhole = [item];
            }
            else {
                const index = this.modelWhole.indexOf(item);
                if (index !== -1) { // 如果存在，则将其移除
                    this.modelWhole.splice(index, 1);
                }
                else { // 先前未选中情况下，勾选
                    this.modelWhole.push(item);
                }
                // selectedId是引用类型，内容改变不会触发modelchange，故需改变引用地址
                this.modelWhole = this.modelWhole.concat();
            }
        }
        else {
            this.modelWhole = (Object.is(item, this.modelWhole) && this.deselectable) ? '' : item;
        }
    }
    /**
     * @ignore
     * 判断是不是选中项
     */
    hasSelected(item) {
        if (Util.isUndefined(this.modelWhole) || Util.isNull(this.modelWhole)) {
            return;
        }
        if (this.multiple) {
            return this.modelWhole.indexOf(item) !== -1;
        }
        else {
            return Object.is(item, this.modelWhole);
        }
    }
}
TiButtongroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-button-group',
                template: "<!--TODO:div\u548Cspan\u662F\u5426\u53EF\u4EE5\u5408\u4E00\uFF1F\u5F31\u5316button\uFF0C\u6FC0\u6D3B\u72B6\u6001\u4E5F\u653E\u5728\u6700\u5916\u5C42-->\r\n<span style=\"margin-top:-50px\">\r\n<div *ngFor=\"let item of items; index as i;\"\r\n    [id]=\"appendId(i)\" class=\"ti3-btn-item-container\"\r\n    [class.ti3-btn-checkbox-enough-space]=\"type === 'large' && multiple\"\r\n    [class.ti3-btn-checkbox-deficient-space]=\"type === 'small' && multiple\"\r\n    [class.ti3-btn-item-small]=\"type === 'small' && !multiple\"\r\n    [tiTip]=\"item.tipContent\"\r\n    [tiTipContext]=\"item\"\r\n    [tiTipPosition]='item.tipPosition'\r\n    (click)=\"onClick(item)\"\r\n    [ngClass]=\"setActiveClass(item)\">\r\n        <button #btn type=\"button\" tiOutline\r\n                [ngStyle]=\"{'min-width': minWidth}\"\r\n                class=\"ti3-btn-item\"\r\n                [ngClass]=\"{'ti3-btn-item-radio': !multiple,\r\n                            'ti3-btn-item-noBorder': !multiple && type === 'noBorder',\r\n                            'ti3-btn-item-checkbox': multiple}\"\r\n                [disabled]=\"item.disabled || disabled\"\r\n\r\n                ><ng-container *ngIf=\"!itemTemplate else customcontent\">\r\n                    <span class=\"ti3-btn-item-text\" [title]=\"item.text\">{{item.text}}</span>\r\n                </ng-container>\r\n                <ng-template #customcontent>\r\n                    <ng-container *ngTemplateOutlet=\"itemTemplate;\r\n                                    context: {$implicit: item, index: i}\"></ng-container>\r\n                </ng-template>\r\n        </button>\r\n        <section *ngIf=\"supTemplate else defaultTemplate\" class=\"ti3-btn-item-sup\">\r\n            <ng-container *ngTemplateOutlet=\"supTemplate; context: {$implicit: item.sup,index: i}\">\r\n            </ng-container>\r\n        </section>\r\n\r\n        <ng-template #defaultTemplate>\r\n            <ng-container *ngIf=\"isSuperScript(item)\">\r\n                <span class=\"ti3-btn-item-sup\" [ngClass]=\"[item.sup.class]\">{{item.sup.text}}</span>\r\n                <!-- \u8FD9\u4E2Aspan\u662F\u4E3A\u4E86\u5728\u6709\u89D2\u6807\u7684\u573A\u666F\u4E0B\u80FD\u89E3\u6790icon\uFF0C\u6240\u4EE5\u4E0D\u663E\u793A -->\r\n                <span class=\"ti3-icon\" style=\"display: none;\"></span>\r\n            </ng-container>\r\n        </ng-template>\r\n\r\n        <span class=\"ti3-btn-multi-selection-icon\" *ngIf=\"multiple && setActiveClass(item)\">\r\n            <span class=\"ti3-icon ti3-icon-checkmark\"></span>\r\n        </span>\r\n</div>\r\n</span>",
                host: {
                    '[class.ti3-button-group-bottom-space]': 'multiline'
                },
                providers: [TiFormComponent.getValueAccessor(TiButtongroupComponent)],
                styles: ["::ng-deep :root{--ti-button-enough-space-padding:20px;--ti-button-insufficient-space-padding:8px;--ti-button-item-small-padding:20px;--ti-button-multi-selection-maxwidth:300px;--ti-button-sup-height:16px}:host[disabled] .ti3-btn-item-container.ti3-active .ti3-btn-item-radio{background-color:var(--ti-button-group-bg-color-active-disabled);color:var(--ti-button-group-text-color-disabled)}.ti3-btn-item-container{display:inline-block;position:relative}.ti3-btn-item-container .ti3-btn-item-sup{color:var(--ti-common-color-text-white);font-size:var(--ti-common-font-size-base);height:var(--ti-button-sup-height);line-height:var(--ti-button-sup-height);min-width:var(--ti-button-sup-height);position:absolute;right:0;text-align:center;top:calc(-1*var(--ti-button-sup-height)/2)}.ti3-btn-item-container .ti3-btn-item.ti3-btn-item-checkbox{border-radius:var(--ti-button-group-border-radius)}.ti3-btn-item-container:last-child .ti3-btn-item.ti3-btn-item-radio{border-radius:0 var(--ti-button-group-border-radius) var(--ti-button-group-border-radius) 0}.ti3-btn-item-container:last-child .ti3-btn-item.ti3-btn-item-noBorder{border-radius:var(--ti-button-group-border-radius)}.ti3-btn-item-container:first-child .ti3-btn-item.ti3-btn-item-radio{border-radius:var(--ti-button-group-border-radius) 0 0 var(--ti-button-group-border-radius)}.ti3-btn-item-container:first-child .ti3-btn-item.ti3-btn-item-noBorder{border-radius:var(--ti-button-group-border-radius)}.ti3-btn-item-container.ti3-active .ti3-btn-item-radio{background-color:var(--ti-button-group-bg-color-active);color:var(--ti-button-group-text-color-active);transition:background .25s,color .25s}.ti3-btn-item-container.ti3-active .ti3-btn-item-radio[disabled]{background-color:var(--ti-button-group-bg-color-active-disabled);color:var(--ti-button-group-text-color-disabled)}.ti3-btn-item-container .ti3-btn-item[disabled]{background-color:var(--ti-button-group-bg-color-disabled);border-color:var(--ti-button-group-bg-color-disabled);color:var(--ti-button-group-text-color-disabled);cursor:not-allowed}.ti3-btn-item-container .ti3-btn-item[disabled].ti3-btn-item-noBorder{background-color:var(--ti-common-color-bg-white-normal)}.ti3-btn-checkbox-enough-space{margin-right:var(--ti-common-space-2x)}.ti3-btn-checkbox-enough-space:last-child{margin-right:0}.ti3-btn-checkbox-enough-space .ti3-btn-item.ti3-btn-item-checkbox{padding:0 var(--ti-button-enough-space-padding)}.ti3-btn-checkbox-deficient-space{margin-right:var(--ti-common-space-2x)}.ti3-btn-checkbox-deficient-space:last-child{margin-right:0}.ti3-btn-checkbox-deficient-space .ti3-btn-item.ti3-btn-item-checkbox{padding:0 var(--ti-button-insufficient-space-padding)}.ti3-btn-item{-ms-box-sizing:border-box;background-color:var(--ti-button-group-bg-color);border:1px solid var(--ti-button-group-border-color);box-sizing:border-box;color:var(--ti-button-group-text-color);cursor:pointer;display:inline-block;height:var(--ti-button-group-height);line-height:calc(var(--ti-button-group-height) - 2px);max-width:var(--ti-button-multi-selection-maxwidth);position:relative;text-align:center;transition:border-color .15s ease-in,background .15s ease-in;vertical-align:middle;white-space:nowrap}.ti3-btn-item.ti3-btn-item-radio{border:none;line-height:var(--ti-button-group-height);padding:0 30px}.ti3-btn-item-text{display:inline-block;overflow:hidden;text-overflow:ellipsis;vertical-align:top;white-space:nowrap;width:100%}.ti3-btn-item-small .ti3-btn-item{height:var(--ti-button-group-height-small);line-height:var(--ti-button-group-height-small);padding:0 var(--ti-button-item-small-padding)}.ti3-btn-item-container:not(.ti3-active) .ti3-btn-item:not([disabled]):focus,.ti3-btn-item-container:not(.ti3-active) .ti3-btn-item:not([disabled]):hover{background-color:var(--ti-button-group-bg-color-hover);border-color:var(--ti-button-group-border-color-hover);color:var(--ti-button-group-text-color-hover);transition:border-color .2s,background .2s}.ti3-btn-item:before{background:var(--ti-button-group-border-left-color);content:\"\";height:100%;left:0;position:absolute;top:0}.ti3-btn-item.ti3-btn-item-checkbox:before{width:0}.ti3-btn-item.ti3-btn-item-radio:after,.ti3-btn-item.ti3-btn-item-radio:before{width:1px}.ti3-btn-item-container:first-child .ti3-btn-item:before{display:none}.ti3-btn-item:after{background:var(--ti-button-group-border-left-color);content:\"\";height:100%;position:absolute;right:0;top:0}.ti3-btn-item.ti3-btn-item-checkbox:after{width:0}.ti3-btn-item-container:last-child .ti3-btn-item:after{display:none}.ti3-btn-item-container.ti3-active .ti3-btn-item{border-color:var(--ti-button-group-border-color-active)}.ti3-btn-item-container.ti3-active .ti3-btn-item:after,.ti3-btn-item-container.ti3-active .ti3-btn-item:before{background:var(--ti-common-color-bg-white-normal)}.ti3-btn-item-noBorder.ti3-btn-item{background-color:transparent;border-radius:var(--ti-button-group-border-radius);padding:0 var(--ti-button-item-small-padding)}.ti3-btn-item-noBorder.ti3-btn-item:hover{background-color:var(--ti-button-group-bg-color-hover)}.ti3-btn-item-noBorder.ti3-btn-item[disabled]{border:none}.ti3-btn-item-noBorder.ti3-btn-item.ti3-btn-item-radio:after,.ti3-btn-item-noBorder.ti3-btn-item.ti3-btn-item-radio:before{width:0}.ti3-btn-multi-selection-icon{border-bottom:16px solid transparent;border-right:16px solid var(--ti-button-group-border-color-active);color:#fff;display:inline-block;font-size:12px;height:0;position:absolute;right:1px;top:1px;width:0}.ti3-btn-multi-selection-icon .ti3-icon-checkmark{position:relative;right:-5px;top:-2px}:host.ti3-button-group-bottom-space .ti3-btn-item-container{margin-bottom:var(--ti-button-group-space-bottom)}"]
            },] }
];
TiButtongroupComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: ChangeDetectorRef },
    { type: IterableDiffers }
];
TiButtongroupComponent.propDecorators = {
    items: [{ type: Input }],
    activeClass: [{ type: Input }],
    minWidth: [{ type: Input }],
    type: [{ type: Input }],
    multiple: [{ type: Input }],
    deselectable: [{ type: Input }],
    multiline: [{ type: Input }],
    firstTemplate: [{ type: ContentChild, args: [TemplateRef, /* TODO: add static flag */ { static: true },] }],
    itemTemplate: [{ type: ContentChild, args: ['item', /* TODO: add static flag */ { static: true },] }],
    supTemplate: [{ type: ContentChild, args: ['sup', /* TODO: add static flag */ { static: true },] }],
    btns: [{ type: ViewChildren, args: ['btn',] }]
};
//# sourceMappingURL=data:application/json;base64,