import { Component } from '@angular/core';
import { TiDateUtil, TiKeymap, Util } from '../../utils/Util';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiDateBaseComponent } from '../datebase/TiDateBaseModule';
import { TiLocale, TiLocaleFormat } from '../../locale/TiLocaleModule';
/**
 * DateRange日期范围组件
 *
 * DateRange组件提供了一种方便的显示和设置日期范围的方式
 *
 * <example-url>../tiny3demo/#/daterange/daterange-all</example-url>
 */
export class TiDateRangeComponent extends TiDateBaseComponent {
    constructor() {
        super(...arguments);
        /**
         * @ignore
         * 标记date/datetime的类型
         */
        this.isDatetime = false;
        /**
         * @ignore
         * 用于标记是不是range
         */
        this.isRange = true;
        /**
         * @ignore
         * 保存model值
         */
        this.oldModel = {
            begin: null,
            end: null
        };
        /**
         * @ignore
         * placeholder提示文本
         */
        this.placeholder = `${TiLocale.getLocaleWords().tiDate.rangeBeginLabel} ─ ${TiLocale.getLocaleWords().tiDate.rangeEndLabel}`;
    }
    ngOnChanges(changes) {
        // format支持动态变更
        if (changes['format'] && !changes['format'].firstChange) {
            // 新的format是非法时，format值保持之前值不变
            if (!Util.isString(changes['format'].currentValue)) {
                this.format = changes['format'].previousValue;
                return;
            }
            this.formatValue();
        }
        // 验证最大值最小值，为了处理最大值和最小值从合法日期变为undefined 的情景
        if ((changes['max'] && !changes['max'].firstChange) || (changes['min'] && !changes['min'].firstChange)) {
            this.validateMinAndMax(this.config, this.isDatetime);
        }
    }
    ngDoCheck() {
        // 监听value值
        if (!Util.isUndefined(this.model)) {
            if (!this.isValidValue(this.model)) {
                return;
            }
            // 监听model值的变化
            this.setModel(this.isDatetime);
        }
    }
    /**
     * @ignore
     * 将value转换成format接口格式的字符串
     */
    formatValue() {
        if (this.model === null || (this.model.begin === null && this.model.end === null)) {
            this.inputValue = '';
        }
        else {
            const begin = TiLocaleFormat.formatDate(this.model.begin, this.format);
            const end = TiLocaleFormat.formatDate(this.model.end, this.format);
            // 注意：中划线用的是制表符中的中划线，与正常的中线区分开2017-2-12 - 2018-3-20
            this.inputValue = `${begin} ─ ${end}`;
        }
    }
    /**
     * @ignore
     */
    onKeydownFn(event, pos) {
        if (event.keyCode === TiKeymap.KEY_ENTER || event.keyCode === TiKeymap.KEY_NUMPAD_ENTER) {
            this.dateEditBlur(pos);
        }
    }
    /**
     * @ignore
     */
    dateEditBlur(pos) {
        // 输入值超出最大最小 认为非法
        const value = this.datePanel.value;
        if (TiDateUtil.isDate(value.begin) && TiDateUtil.isDate(value.end)) {
            if (TiDateUtil.isBigger(value.begin, value.end)) {
                if (pos === 'begin') {
                    this.datePanel.value.begin = this.oldBeginValue || this.oldModel && this.oldModel.begin;
                }
                else {
                    this.datePanel.value.end = this.oldEndValue || this.oldModel && this.oldModel.end;
                }
            }
            this.oldBeginValue = this.datePanel.value.begin;
            this.oldEndValue = this.datePanel.value.end;
        }
        this.setOkBtnState();
    }
    /**
     * @ignore
     * 确认按钮
     */
    onOkClick() {
        if (this.inValidValue) {
            return;
        }
        if (this.datePanel instanceof Object) {
            // 新旧值不同更新model值
            if (!this.rangeValueIsEqual(this.model, this.datePanel['value'], this.isDatetime)) {
                this.model = {
                    begin: this.datePanel['value'].begin,
                    end: this.datePanel['value'].end
                };
            }
        }
        this.hideDrop();
        this.okClick.emit(this.model);
    }
    /**
     * @ignore
     * 是否为禁用日期
     */
    isDisabledDays(value) {
        let isDisabled = false;
        if (Util.isArray(this.disabledDays) && this.disabledDays.length > 0) {
            this.disabledDays.forEach((item) => {
                if (item.getTime() === value.getTime()) {
                    isDisabled = true;
                }
            });
        }
        return isDisabled;
    }
    /**
     * @ignore
     * model值的合法性判断
     */
    isValidValue(value) {
        if (value === null) {
            return true;
        }
        return this.isValidRange(value) ? true : false;
    }
    // 判断是不是合法范围
    isValidRange(value) {
        if (!(value instanceof Object) || !TiDateUtil.isDate(value.begin) || !TiDateUtil.isDate(value.end)) {
            return false;
        }
        const startDate = new Date(value.begin.getFullYear(), value.begin.getMonth(), value.begin.getDate());
        const endDate = new Date(value.end.getFullYear(), value.end.getMonth(), value.end.getDate());
        return startDate.getTime() <= endDate.getTime() && TiDateUtil.isBetweenMaxAndmin(startDate, this.min, this.max)
            && TiDateUtil.isBetweenMaxAndmin(endDate, this.min, this.max);
    }
    /**
     * @ignore
     * 设置确认按钮的状态
     */
    setOkBtnState() {
        const date = this.datePanel.value;
        let endTime;
        let beginTime;
        if (TiDateUtil.isDate(date.end)) {
            endTime = new Date(date.end.getFullYear(), date.end.getMonth(), date.end.getDate()).getTime();
        }
        if (TiDateUtil.isDate(date.begin)) {
            beginTime = new Date(date.begin.getFullYear(), date.begin.getMonth(), date.begin.getDate()).getTime();
        }
        const isBeginSmallorEqualEnd = this.isAllowBeginEqualEnd ? endTime < beginTime : endTime <= beginTime;
        this.inValidValue = !(date instanceof Object)
            || !TiDateUtil.isDate(date.begin)
            || !TiDateUtil.isDate(date.end)
            || isBeginSmallorEqualEnd;
        if (this.buttonComs) {
            this.setAttr(this.buttonComs.last.nativeElement, 'disabled', this.inValidValue);
            this.setInputStyle(this.inValidValue);
        }
    }
    /**
     * @ignore
     * 配置时间日期面板接口
     */
    setPickerDate() {
        // 做深拷贝的原因：不让model和datePanel组件中value双向绑定，
        // 因为下拉面板中日期变化时，不立即更新到输入框中
        let value;
        if (this.model === null || this.model === undefined) {
            value = {
                begin: null,
                end: null
            };
        }
        else {
            value = {
                begin: this.model.begin,
                end: this.model.end
            };
        }
        this.datePanel = {
            value,
            format: this.format,
            max: this.max,
            min: this.min,
            picker: 'day',
            select: () => {
                const obj = {
                    value: this.datePanel.value[this.focusedPosition],
                    focusedPosition: this.focusedPosition
                };
                this.dayClick.emit(obj);
                // 初始化选择结束之后，如果开始未选择，焦点转移到开始日期编辑框
                if (this.focusedPosition === 'end' && this.datePanel.value.begin === null) {
                    this.focusedPosition = 'begin';
                    this.dateEditComs.first.focus();
                }
                else {
                    if (!this.isEndFixed) {
                        this.focusedPosition = 'end';
                        this.dateEditComs.last.focus();
                    }
                }
                this.setOkBtnState();
            }
        };
        // 如果只显示年
        if (this.format.indexOf('M') === -1 && this.format !== 'mediumDate') {
            this.datePanel['picker'] = 'onlyYear';
        }
        else if (this.format.indexOf('d') === -1) { // 如果只显示年月
            this.datePanel['picker'] = 'onlyYearMonth';
        }
        this.setOkBtnState();
    }
}
TiDateRangeComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-date-range',
                template: "<ti-date-dominator  #dominator\r\n                    [id]=\"appendId('dominator')\"\r\n                    type = \"range\"\r\n                    [format]=\"format\"\r\n                    [disabled]=\"disabled\"\r\n                    [clearable]=\"clearIcon\"\r\n                    [(ngModel)]=\"inputValue\"\r\n                    (clear)=\"onIconClearClick($event)\"\r\n                    (click)=\"onShowClick()\">{{placeholder}}</ti-date-dominator><!-- \u5206\u5272\u7EBF\u662F\u7279\u6B8A\u5B57\u7B26\u5236\u8868\u7B26\uFF0C\u4E0D\u662F\u666E\u901A\u4E2D\u7EBF -->\r\n<ti-drop #drop\r\n    class=\"ti3-date-range-picker\"\r\n    [ngClass]=\"{'ti3-date-range-customize': hasCustomizeTime}\"\r\n    [dominatorElem]=\"dominatorCom.nativeElement\"\r\n    fixMaxHeight=\"true\"\r\n    [panelWidth]=\"daterangePanelWidth\"\r\n    [panelAlign]=\"panelAlign\"\r\n    [browserSpace]=\"browserSpace\"\r\n    [dominatorSpace]='dominatorSpace'\r\n    [determinPositionFn]=\"determinPositionFn\"\r\n    theme='noborder'\r\n    [id]=\"appendId('drop')\">\r\n\r\n   <section class='ti3-date-clear'>\r\n    <section *ngIf='hasCustomizeTime' class='ti3-date-range-customize-container'>\r\n        <ng-container *ngTemplateOutlet=\"customizeTemplate; context:  {$implicit: customizeOptions}\"></ng-container>\r\n    </section>\r\n\r\n    <section style='float: right;'>\r\n        <section class=\"ti3-date-edit-container\">\r\n            <ti-date-edit class='ti3-date-range-edit'\r\n                        [ngClass]=\"{'ti3-date-range-begin-edit': focusedPosition === 'begin'}\"\r\n                        [(ngModel)] = \"datePanel.value.begin\"\r\n                        [min] = \"datePanel.min\"\r\n                        [max] = \"datePanel.max\"\r\n                        (click)=\"dateEditClick('begin')\"\r\n                        [disabled]='isBeginFixed'\r\n                        [disabledDays]='disabledDays'\r\n                        (focus)=\"dateEditFocus('begin')\"\r\n                        (blur)=\"dateEditBlur('begin')\"\r\n                        (keydown)=\"onKeydownFn($event, 'begin')\"\r\n                        [format]=\"datePanel.format\" [id]=\"appendId('begin_edit')\"></ti-date-edit>\r\n                        <span class='ti3-date-range-splitline'> \u2500 </span>\r\n                    <ti-date-edit class='ti3-date-range-edit'\r\n                    [ngClass]=\"{'ti3-date-range-end-edit': focusedPosition === 'end'}\"\r\n                    [(ngModel)] = \"datePanel.value.end\"\r\n                    [min] = \"datePanel.min\"\r\n                    [max] = \"datePanel.max\"\r\n                    [disabledDays]='disabledDays'\r\n                    [disabled]='isEndFixed'\r\n                    (focus)=\"dateEditFocus('end')\"\r\n                    (blur)=\"dateEditBlur('end')\"\r\n                    (keydown)=\"onKeydownFn($event, 'end')\"\r\n                    (click)=\"dateEditClick('end')\"\r\n                    [format]=\"datePanel.format\" [id]=\"appendId('end_edit')\"></ti-date-edit>\r\n                    <!-- \u786E\u8BA4\u6309\u94AE\u7981\u7528\u573A\u666F\u4E0B\uFF0C\u7ED3\u675F\u6846\u8F93\u5165\u4E4B\u540E\u65E0\u6CD5\u76F4\u63A5tab\u5207\u6362\u7126\u70B9\u81F3\u786E\u8BA4\u6309\u94AE\uFF0C\u6545\u6DFB\u52A0\u6B64\u8FC7\u5EA6input -->\r\n                    <input #input type=\"text\" class=\"ti3-tab-input\"/>\r\n        </section>\r\n        <ti-date-panel\r\n            [id]=\"appendId('begin-panel')\"\r\n            [(value)]=\"datePanel.value\"\r\n            [focusedPosition]='focusedPosition'\r\n            [(picker)]=\"datePanel.picker\"\r\n            [isRange]='true'\r\n            [disabledDays]='disabledDays'\r\n            [isBeginFixed]='isBeginFixed'\r\n            [isEndFixed]='isEndFixed'\r\n            (select)='datePanel.select()'\r\n            [min]=\"datePanel.min\"\r\n            [max]=\"datePanel.max\"\r\n            [format]=\"datePanel.format\"\r\n            [nowDateTime]=\"nowDateTime\"></ti-date-panel>\r\n    </section>\r\n   </section>\r\n    <section  class=\"ti3-date-picker-footer-right\">\r\n        <button class=\"ti3-date-picker-footer-btn\"\r\n                        [id]=\"appendId('okBtn')\"\r\n                        type=\"button\"\r\n                        size=\"small\"\r\n                        (click)=\"onOkClick()\"\r\n                        tiButton>{{ 'tiCommon.okBtn' | tiTranslate }}</button>\r\n    </section>\r\n</ti-drop>\r\n<ng-template #customizeTemplate let-options>\r\n    <ul [id]=\"appendId('list')\">\r\n        <li *ngFor='let option of options; index as i;' class='ti3-customize-time-label' (click)='customizeTimeClickFn(option.value)' [id]=\"appendId('label_' + i)\">{{option.label}}</li>\r\n    </ul>\r\n</ng-template>\r\n",
                // tslint:disable-next-line:use-host-property-decorator
                host: {
                    '[class.ti3-date-range-input-container]': 'true',
                    '(blur)': 'hidePanel()'
                },
                providers: [TiFormComponent.getValueAccessor(TiDateRangeComponent)],
                styles: [".ti3-compnent-container-border,:host.ti3-date-range-input-container{-ms-box-sizing:border-box;border:1px solid;border-radius:var(--ti-input-border-radius);box-sizing:border-box;display:inline-block}.ti3-compnent-container-border:not([disabled]),:host.ti3-date-range-input-container:not([disabled]){background-color:var(--ti-input-bg-color);border-color:var(--ti-input-border-color)}.ti3-compnent-container-border:not([disabled]):hover,:host.ti3-date-range-input-container:not([disabled]):hover{border-color:var(--ti-input-border-color-hover)}.ti3-compnent-container-border:not([disabled])[tiFocused],:host.ti3-date-range-input-container:not([disabled])[tiFocused]{border-color:var(--ti-input-border-color-focus)}.ti3-compnent-container-border[disabled],:host.ti3-date-range-input-container[disabled]{background-color:var(--ti-input-bg-color-disabled);border-color:var(--ti-input-border-color-disabled);cursor:not-allowed!important}.ti3-customize-time-label{color:var(--ti-common-color-text-primary);cursor:pointer;font-size:var(--ti-common-font-size-base);line-height:var(--ti-common-line-height-number);margin-bottom:10px}.ti3-customize-time-label:hover{color:var(--ti-common-color-line-active)}.ti3-date-clear{display:flex;*zoom:1}.ti3-date-clear:after{clear:both}.ti3-date-clear:after,.ti3-date-clear:before{content:\"\";display:table}.ti3-datetime-select-btn{color:var(--ti-common-color-text-highlight);cursor:pointer;float:right;line-height:24px;padding-right:var(--ti-common-space-2x)}.ti3-datetime-select-btn-disabled{color:var(--ti-common-color-text-disabled);cursor:not-allowed}.ti3-date-range-splitline{padding:0 6px}.ti3-tab-input{height:0;left:-9999px;position:absolute;top:-9999px;width:0}::ng-deep :root{--ti-date-picker-middle-margin:20px;--ti-date-picker-padding-bottom:12px;--ti-date-picker-padding-horizon:16px}:host.ti3-date-range-input-container{width:240px}.ti3-dropdown-container.ti3-date-range-picker{font-size:var(--ti-datetime-input-font-size);padding:var(--ti-date-picker-padding-bottom) var(--ti-date-picker-padding-horizon);width:calc(var(--ti-datetime-day-width)*7 + var(--ti-date-picker-padding-horizon) + var(--ti-date-picker-middle-margin) + 2px);z-index:var(--ti-datetime-z-index)}.ti3-dropdown-container.ti3-date-range-picker:focus{outline:0}.ti3-date-range-begin-end-text{color:var(--ti-datetime-picker-color);height:var(--ti-datetime-input-font-size);line-height:var(--ti-datetime-input-font-size);margin-top:var(--ti-common-space-10);padding-left:var(--ti-common-space-10)}.ti3-date-range-customize{width:669px!important}.ti3-date-range-edit{display:inline-block;width:248px}::ng-deep .ti3-date-range-begin-edit input[tiText],::ng-deep .ti3-date-range-end-edit input[tiText]{border-color:var(--ti-input-border-color-focus)!important}.ti3-date-range-customize-container{border-right:1px solid var(--ti-common-color-line-dividing);float:left;height:292px;margin-right:var(--ti-common-space-4x);padding-right:var(--ti-common-space-4x);width:80px}::ng-deep :root .ti3-date-picker-footer-right{border-top:1px solid var(--ti-common-color-line-dividing);margin-top:var(--ti-common-space-3x);padding-top:var(--ti-common-space-3x);width:100%}.ti3-date-picker-footer-btn{float:right}"]
            },] }
];
//# sourceMappingURL=data:application/json;base64,