import { Component, ElementRef, Input } from '@angular/core';
import { TiTableComponent } from './TiTableComponent';
/**
 * TiHeadSort 表头排序(上下箭头)组件
 *
 * 嵌在表头的th中使用，点击该组件时表格数据按该列的排序规则进行升序/降序排序
 *
 * 组件有默认的排序规则，也可支持自定义排序规则
 */
export class TiHeadSortComponent {
    constructor(elementRef, table) {
        this.elementRef = elementRef;
        /**
         * 指定初始时在对应 sortKey下是否为升序排序。默认值为null, 表示无序(不升序也不降序)
         */
        this.asc = null;
        /**
         * @ignore
         */
        this.clickNum = 0;
        this.hostElement = this.elementRef.nativeElement;
        this.table = table;
    }
    ngOnInit() {
        // 更新TiTableComponent的enableSort，表示启用了排序。
        this.table.enableSort = true;
        // 修复SSR报错：ERROR TypeError: Cannot read property 'sort' of undefined
        // 表格记忆
        if (this.table.storageId && this.table.storageConfig && this.table.storageConfig.sort && this.table.sessionStorageState && this.table.sessionStorageState.sort) {
            if (this.sortKey === this.table.sessionStorageState.sort.sortKey) {
                this.asc = this.table.sessionStorageState.sort.asc;
            }
            else {
                this.asc = null;
            }
        }
        if (this.asc !== null) {
            this.clickNum = this.asc ? 0 : 1;
            // 如果有默认排序，即排序的初始化，将排序初始化的各个值赋给 tiTable 的 tableState 对应的 sort 属性
            this.sort(true);
        }
    }
    ngDoCheck() {
        if (this.table.dataState.sort.sortKey !== this.sortKey) {
            this.clickNum = 0;
        }
    }
    /**
     * @ignore
     */
    onClick() {
        if (!this.sortKey) {
            return;
        }
        this.sort(false);
    }
    sort(isDefaultSort) {
        this.clickNum++;
        // this.clickNum整除3余2表示降序，余1表示升序，余0表示无序
        const isDesc = this.clickNum % 3 === 2 ? true : this.clickNum % 3 === 1 ? false : null;
        this.table.updateSort(this.sortKey, isDesc, isDefaultSort, this.compareFn);
    }
}
TiHeadSortComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-head-sort',
                template: "<span tiOutline class=\"ti3-sort ti3-icon\" [attr.tabindex] = '0' (keydown.enter) = 'onClick()'></span>",
                host: {
                    '[class.ti3-sort-container]': 'true',
                    '[class.ti3-sort-ascent]': 'sortKey === table.dataState.sort.sortKey && clickNum % 3 === 1',
                    '[class.ti3-sort-descent]': 'sortKey === table.dataState.sort.sortKey && clickNum % 3 === 2',
                    '(click)': 'onClick()'
                }
            },] }
];
TiHeadSortComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: TiTableComponent }
];
TiHeadSortComponent.propDecorators = {
    sortKey: [{ type: Input }],
    asc: [{ type: Input }],
    compareFn: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVGlIZWFkU29ydENvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL0BjbG91ZC90aW55My9jb21wb25lbnRzL3RhYmxlL1RpSGVhZFNvcnRDb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxVQUFVLEVBQ1YsS0FBSyxFQUVOLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3REOzs7Ozs7R0FNRztBQVlILE1BQU0sT0FBTyxtQkFBbUI7SUE4QjVCLFlBQW9CLFVBQXNCLEVBQUUsS0FBdUI7UUFBL0MsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQXZCMUM7O1dBRUc7UUFDTSxRQUFHLEdBQVksSUFBSSxDQUFDO1FBVzdCOztXQUVHO1FBQ0ksYUFBUSxHQUFXLENBQUMsQ0FBQztRQU94QixJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDO1FBQ2pELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxRQUFRO1FBQ0oseUNBQXlDO1FBQ3pDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUM3QixvRUFBb0U7UUFDcEUsT0FBTztRQUNQLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsbUJBQW1CLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLEVBQUU7WUFDNUosSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLElBQUksQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtnQkFDOUQsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7YUFDdEQ7aUJBQU07Z0JBQ0gsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUM7YUFDbkI7U0FDSjtRQUNELElBQUksSUFBSSxDQUFDLEdBQUcsS0FBSyxJQUFJLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqQyxnRUFBZ0U7WUFDaEUsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNuQjtJQUNMLENBQUM7SUFFRCxTQUFTO1FBQ0wsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxLQUFLLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDcEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7U0FDckI7SUFDTCxDQUFDO0lBRUQ7O09BRUc7SUFDSSxPQUFPO1FBQ1YsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDZixPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JCLENBQUM7SUFFTyxJQUFJLENBQUMsYUFBc0I7UUFDL0IsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLHVDQUF1QztRQUN2QyxNQUFNLE1BQU0sR0FBWSxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUNoRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxhQUFhLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQy9FLENBQUM7OztZQXJGSixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGNBQWM7Z0JBQ3hCLG1IQUErQjtnQkFDL0IsSUFBSSxFQUFFO29CQUNGLDRCQUE0QixFQUFFLE1BQU07b0JBQ3BDLHlCQUF5QixFQUFFLGdFQUFnRTtvQkFDM0YsMEJBQTBCLEVBQUUsZ0VBQWdFO29CQUM1RixTQUFTLEVBQUUsV0FBVztpQkFDekI7YUFDRjs7O1lBckJDLFVBQVU7WUFJSCxnQkFBZ0I7OztzQkF5QnBCLEtBQUs7a0JBSUwsS0FBSzt3QkFVTCxLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBDb21wb25lbnQsXHJcbiAgRG9DaGVjayxcclxuICBFbGVtZW50UmVmLFxyXG4gIElucHV0LFxyXG4gIE9uSW5pdFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUaVRhYmxlQ29tcG9uZW50IH0gZnJvbSAnLi9UaVRhYmxlQ29tcG9uZW50JztcclxuLyoqXHJcbiAqIFRpSGVhZFNvcnQg6KGo5aS05o6S5bqPKOS4iuS4i+eureWktCnnu4Tku7ZcclxuICpcclxuICog5bWM5Zyo6KGo5aS055qEdGjkuK3kvb/nlKjvvIzngrnlh7vor6Xnu4Tku7bml7booajmoLzmlbDmja7mjInor6XliJfnmoTmjpLluo/op4TliJnov5vooYzljYfluo8v6ZmN5bqP5o6S5bqPXHJcbiAqXHJcbiAqIOe7hOS7tuaciem7mOiupOeahOaOkuW6j+inhOWIme+8jOS5n+WPr+aUr+aMgeiHquWumuS5ieaOkuW6j+inhOWImVxyXG4gKi9cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd0aS1oZWFkLXNvcnQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFkLXNvcnQuaHRtbCcsXHJcbiAgaG9zdDoge1xyXG4gICAgICAnW2NsYXNzLnRpMy1zb3J0LWNvbnRhaW5lcl0nOiAndHJ1ZScsXHJcbiAgICAgICdbY2xhc3MudGkzLXNvcnQtYXNjZW50XSc6ICdzb3J0S2V5ID09PSB0YWJsZS5kYXRhU3RhdGUuc29ydC5zb3J0S2V5ICYmIGNsaWNrTnVtICUgMyA9PT0gMScsXHJcbiAgICAgICdbY2xhc3MudGkzLXNvcnQtZGVzY2VudF0nOiAnc29ydEtleSA9PT0gdGFibGUuZGF0YVN0YXRlLnNvcnQuc29ydEtleSAmJiBjbGlja051bSAlIDMgPT09IDInLFxyXG4gICAgICAnKGNsaWNrKSc6ICdvbkNsaWNrKCknXHJcbiAgfVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIFRpSGVhZFNvcnRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIERvQ2hlY2sge1xyXG4gICAgLyoqXHJcbiAgICAgKiDmjIflrprlvZPliY3liJfov5vooYzmjpLluo/nmoTmlbDmja7lsZ7mgKdcclxuICAgICAqXHJcbiAgICAgKiDkvovlpoLvvJrmoLnmja7ooajmoLzmlbDmja7kuK3nmoRcImZpcnN0TmFtZVwi5bGe5oCn5YC86L+b6KGM5o6S5bqP77yM5YiZ6ZyA5bCG6K+l5o6l5Y+j55qE5YC86K6+572u5Li6XCJmaXJzdE5hbWVcIlxyXG4gICAgICovXHJcbiAgICBASW5wdXQoKSBzb3J0S2V5OiBzdHJpbmc7XHJcbiAgICAvKipcclxuICAgICAqIOaMh+WumuWIneWni+aXtuWcqOWvueW6lCBzb3J0S2V55LiL5piv5ZCm5Li65Y2H5bqP5o6S5bqP44CC6buY6K6k5YC85Li6bnVsbCwg6KGo56S65peg5bqPKOS4jeWNh+W6j+S5n+S4jemZjeW6jylcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgYXNjOiBib29sZWFuID0gbnVsbDtcclxuICAgIC8qKlxyXG4gICAgICog5oyH5a6a5o6S5bqP5a+55q+U6KeE5YiZ77yM5YW25Y+C5pWw5pyJ5LiJ5Liq77yM5L6d5qyh5Li677yaXHJcbiAgICAgKlxyXG4gICAgICogYTog56ys5LiA5Liq5a+55q+U5YC8XHJcbiAgICAgKlxyXG4gICAgICogYjog56ys5LqM5Liq5a+55q+U5YC8XHJcbiAgICAgKlxyXG4gICAgICogc29ydEtleTog5b2T5YmN5pWw5o2u5o6S5bqP5L6d5o2u55qE5bGe5oCnXHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIGNvbXBhcmVGbjogKGE6IGFueSwgYjogYW55LCBzb3J0S2V5Pzogc3RyaW5nKSA9PiBudW1iZXI7IC8vIOiHquWumuS5ieeahOaOkuW6j+inhOWImVxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBjbGlja051bTogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgaG9zdEVsZW1lbnQ6IEhUTUxFbGVtZW50O1xyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyB0YWJsZTogVGlUYWJsZUNvbXBvbmVudDtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgdGFibGU6IFRpVGFibGVDb21wb25lbnQpIHtcclxuICAgICAgICB0aGlzLmhvc3RFbGVtZW50ID0gdGhpcy5lbGVtZW50UmVmLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAgICAgdGhpcy50YWJsZSA9IHRhYmxlO1xyXG4gICAgfVxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8g5pu05pawVGlUYWJsZUNvbXBvbmVudOeahGVuYWJsZVNvcnTvvIzooajnpLrlkK/nlKjkuobmjpLluo/jgIJcclxuICAgICAgICB0aGlzLnRhYmxlLmVuYWJsZVNvcnQgPSB0cnVlO1xyXG4gICAgICAgIC8vIOS/ruWkjVNTUuaKpemUme+8mkVSUk9SIFR5cGVFcnJvcjogQ2Fubm90IHJlYWQgcHJvcGVydHkgJ3NvcnQnIG9mIHVuZGVmaW5lZFxyXG4gICAgICAgIC8vIOihqOagvOiusOW/hlxyXG4gICAgICAgIGlmICh0aGlzLnRhYmxlLnN0b3JhZ2VJZCAmJiB0aGlzLnRhYmxlLnN0b3JhZ2VDb25maWcgJiYgdGhpcy50YWJsZS5zdG9yYWdlQ29uZmlnLnNvcnQgJiYgdGhpcy50YWJsZS5zZXNzaW9uU3RvcmFnZVN0YXRlICYmIHRoaXMudGFibGUuc2Vzc2lvblN0b3JhZ2VTdGF0ZS5zb3J0KSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNvcnRLZXkgPT09IHRoaXMudGFibGUuc2Vzc2lvblN0b3JhZ2VTdGF0ZS5zb3J0LnNvcnRLZXkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYXNjID0gdGhpcy50YWJsZS5zZXNzaW9uU3RvcmFnZVN0YXRlLnNvcnQuYXNjO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hc2MgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLmFzYyAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLmNsaWNrTnVtID0gdGhpcy5hc2MgPyAwIDogMTtcclxuICAgICAgICAgICAgLy8g5aaC5p6c5pyJ6buY6K6k5o6S5bqP77yM5Y2z5o6S5bqP55qE5Yid5aeL5YyW77yM5bCG5o6S5bqP5Yid5aeL5YyW55qE5ZCE5Liq5YC86LWL57uZIHRpVGFibGUg55qEIHRhYmxlU3RhdGUg5a+55bqU55qEIHNvcnQg5bGe5oCnXHJcbiAgICAgICAgICAgIHRoaXMuc29ydCh0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbmdEb0NoZWNrKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnRhYmxlLmRhdGFTdGF0ZS5zb3J0LnNvcnRLZXkgIT09IHRoaXMuc29ydEtleSkge1xyXG4gICAgICAgICAgICB0aGlzLmNsaWNrTnVtID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBAaWdub3JlXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBvbkNsaWNrKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICghdGhpcy5zb3J0S2V5KSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5zb3J0KGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHNvcnQoaXNEZWZhdWx0U29ydDogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY2xpY2tOdW0rKztcclxuICAgICAgICAvLyB0aGlzLmNsaWNrTnVt5pW06ZmkM+S9mTLooajnpLrpmY3luo/vvIzkvZkx6KGo56S65Y2H5bqP77yM5L2ZMOihqOekuuaXoOW6j1xyXG4gICAgICAgIGNvbnN0IGlzRGVzYzogYm9vbGVhbiA9IHRoaXMuY2xpY2tOdW0gJSAzID09PSAyID8gdHJ1ZSA6IHRoaXMuY2xpY2tOdW0gJSAzID09PSAxID8gZmFsc2UgOiBudWxsO1xyXG4gICAgICAgIHRoaXMudGFibGUudXBkYXRlU29ydCh0aGlzLnNvcnRLZXksIGlzRGVzYywgaXNEZWZhdWx0U29ydCwgdGhpcy5jb21wYXJlRm4pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==