import { Component, ContentChild, EventEmitter, HostListener, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { TiFormComponent, TiWholeComponent } from '../base/TiBaseModule';
import { TiDominatorComponent } from '../dominator/TiDominatorModule';
import { TiDropComponent } from '../drop/TiDropModule';
import { TiDropsearchComponent } from '../dropsearch/TiDropsearchModule';
import { TiKeymap } from '../../utils/Util';
/**
 * Select选择下拉组件
 *
 * 支持单选/多选，分组，搜索，懒加载。
 *
 * 单选主要功能为从一个数据集合中选择某一条数据，单选与RadioGroup功能相同，只是视觉呈现不同。
 *
 * 多选主要功能是从一个数据集合中任意选择多条数据，与checkboxGroup功能相同，只是视觉呈现不同。
 *
 * <example-url>../tiny3demo/#/select/select-all</example-url>
 */
export class TiSelectComponent extends TiWholeComponent {
    constructor() {
        super(...arguments);
        /**
         * @ignore
         * dominator 到drop的距离
         */
        this.dominatorSpace = TiDropComponent.DOMINATOR_SPACE + 'px';
        /**
         * 是否多选
         */
        this.multiple = false;
        /**
         * 多选时, 选中项显示几行
         *
         * 版本 v9.0.4 添加
         */
        this.maxLine = 2;
        /**
         * 选中项文本超出时tip展开方向
         *
         * 9.0.3 新增
         */
        this.selectedTipPosition = 'auto';
        /**
         * 预留文本
         */
        this.placeholder = '';
        // 面板配置
        /**
         * 下拉面板的最大显示宽度，该变量与下拉类组件保持一致
         *
         * 1."justified"(默认): 下拉框的宽度与Select组件的宽度保持一致；
         *
         * 2."auto": 下拉框的宽度根据下拉选项的内容自动撑开；
         *
         * 3.表示宽度的字符串: 设置固定的下拉框宽度(不小于Select组件的宽度)。例如："200px"
         */
        this.panelWidth = 'justified'; // TODO: 确认类型
        /**
         * 无数据时的显示文本
         */
        this.noDataText = '...';
        /**
         * 要显示的字段
         */
        this.labelKey = 'label';
        // 其他配置
        /**
         * 是否显示搜索框
         */
        this.searchable = false;
        /**
         * @ignore
         * 大小样式
         */
        this.size = 'default';
        /**
         * 文字超长显示...，hover时tip弹出方向
         */
        this.tipPosition = 'right';
        /**
         * 单选下拉选择框是否开启清除已选项功能
         *
         * 3.0.8新增
         */
        this.clearable = false;
        /**
         * 多选下拉选择框是否开启全选功能
         *
         * 3.1.2新增
         */
        this.selectAll = false;
        /**
         * 设置是否显示已选项的个数，默认不显示，multiple为true时生效
         *
         * 10.1.0新增
         */
        this.showSelectedNumber = false;
        /**
         * 用户想要打开面板的通知事件，一般用于数据懒加载。使用方式，见懒加载示例
         */
        this.beforeOpen = new EventEmitter();
        // 3.0.2增加select接口
        /**
         * 多选选中/取消选中事件，向外通知option数据，需要自行判断option数据是否选中。
         */
        // tslint:disable-next-line:no-output-named-after-standard-event
        this.select = new EventEmitter();
        /**
         * 当单选下拉选择框开启清除已选项功能时，点击清除按钮时触发
         *
         * 3.0.8新增
         */
        this.clear = new EventEmitter();
        /**
         * @ignore
         * 10.0.2新增
         *
         * 后台搜索，传出搜索框的值
         */
        this.beforeSearch = new EventEmitter();
        this.oldSearchable = null;
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngOnInit() {
        super.ngOnInit();
        if (this.beforeSearch.observers.length !== 0) {
            this.dropsearchCom.hasBeforeSearchObservers = true;
        }
    }
    /**
     * 兼容旧版：
     * 3.1.2版select只能内嵌一个模板，无命名。
     * 新版可以内嵌四个模板，示例书写要求都命名。
     * 但需要兼容旧版无命名测试用例。
     */
    // tslint:disable-next-line: use-life-cycle-interface
    ngAfterContentInit() {
        super.ngAfterContentInit();
        // 如果item模板为空，那么把第一个出现的无标签（无footer等标签）模板作为item
        if (!this.itemTemplate && this.firstTemplate) {
            const firstTemplateEle = this.firstTemplate.elementRef.nativeElement;
            if (firstTemplateEle !== (this.selectedTemplate && this.selectedTemplate.elementRef.nativeElement)
                && firstTemplateEle !== (this.placeholderTemplate && this.placeholderTemplate.elementRef.nativeElement)
                && firstTemplateEle !== (this.footerTemplate && this.footerTemplate.elementRef.nativeElement)) {
                this.itemTemplate = this.firstTemplate;
            }
        }
    }
    // tslint:disable-next-line: use-life-cycle-interface
    ngAfterViewChecked() {
        // 要支持searchable的动态变更，所以ngAfterViewChecked才能获知搜索框节点。
        if (this.searchable !== this.oldSearchable) {
            this.oldSearchable = this.searchable;
            if (this.searchable) {
                this.setFocusableElems(this.dominatorCom.getFocusableElems()
                    .concat(this.dropsearchCom.getFocusableElems()));
            }
            else {
                this.setFocusableElems(this.dominatorCom.getFocusableElems());
            }
        }
        if (this.pagination && this.pagination.updateFocusableElems) {
            this.setFocusableElems(this.dominatorCom.getFocusableElems()
                .concat(this.dropsearchCom.getFocusableElems()));
            this.pagination.updateFocusableElems = false;
        }
        // 上面设置好focusElems后，调用父类逻辑afterViewChecked才去设置autofocs
        super.ngAfterViewChecked();
    }
    /**
     * 切换面板开合状态
     */
    toggle() {
        if (!this.dropsearchCom.isShow) { // 面板关闭时
            this.wantOpen();
        }
        else { // 面板开时
            this.close();
        }
    }
    /**
     * 打开面板
     */
    open() {
        this.dropsearchCom.show();
    }
    /**
     * 闭合面板
     */
    close() {
        this.dropsearchCom.hide();
    }
    /**
     * @ignore
     * 处理点击Dominator事件
     */
    onClickDominator() {
        if (this.disabled) {
            return;
        }
        this.toggle();
    }
    /**
     * @ignore
     * ti-select键盘事件处理：回车/空格情况下，展开面板
     * @param event 按键事件
     * @returns void
     */
    onKeydown(event) {
        if (this.disabled || this.dropsearchCom.isShow) {
            return;
        }
        const enterKeyCodeArr = [TiKeymap.KEY_SPACE, TiKeymap.KEY_ENTER, TiKeymap.KEY_NUMPAD_ENTER];
        if (enterKeyCodeArr.includes(event.keyCode)) {
            this.wantOpen();
            // 如果响应了按键，那么不再冒泡
            event.stopPropagation();
        }
    }
    /**
     * @ignore
     * 失焦情况下，仅关闭面板，不做聚焦等处理
     */
    onBlur() {
        this.dropsearchCom.hideWithoutFocus();
    }
    /**
     *  点击或者toggle()，触发想要打开面板
     */
    wantOpen() {
        if (this.beforeOpen.observers.length === 0) { // 无beforeOpen懒加载，直接打开
            this.open();
        }
        else { // 有beforeOpen懒加载，发出事件
            this.beforeOpen.emit(this);
        }
    }
    /**
     * @ignore
     * 多选带searchbox场景下，dominator中元素删除时，需要聚焦于searchbox
     */
    onDeleteDominator() {
        if (this.dropsearchCom.isShow) {
            this.dropsearchCom.focus();
        }
    }
    /**
     * @ignore
     * 触发select事件
     */
    onSelect(option) {
        this.select.emit(option);
        if (this.multiple) {
            return;
        }
    }
    /**
     * @ignore
     * 单选点击清除按钮时触发clear事件, 如果下拉中有搜索,则需要聚焦于searchbox。
     */
    onClearDominator() {
        if (this.multiple || !this.clearable) {
            return;
        }
        this.clear.emit();
        if (this.searchable && this.dropsearchCom.isShow) {
            this.dropsearchCom.focus();
        }
    }
    /**
     * @ignore
     */
    onBeforeSearch() {
        this.beforeSearch.emit(this);
    }
    /**
     * @ignore
     * 10.0.2新增
     *
     * 获取可搜索场景下，搜索框的内容
     * @returns 搜索框的内容
     */
    getSearchWord() {
        return this.dropsearchCom.searchWord;
    }
    /**
     * @ignore
     * 10.0.2新增
     *
     * 设置搜索结果
     * @params 业务搜索后的结果，组件不再进行数据处理
     */
    setSearchResult(searchResult) {
        this.dropsearchCom.setSearchResult(searchResult);
    }
}
TiSelectComponent.decorators = [
    { type: Component, args: [{
                selector: 'ti-select',
                template: "<ti-dominator\r\n        [dropshow]='dropsearchCom.dropCom.isShow'\r\n        [multiple]=\"multiple\"\r\n        [maxLine]=\"maxLine\"\r\n        [placeholder]='placeholder'\r\n        [selectedTipPosition]='selectedTipPosition'\r\n        [showSelectedNumber]='showSelectedNumber'\r\n        [(ngModel)]=\"modelWhole\"\r\n        [disabled]=\"disabled\"\r\n        [clearable]=\"!multiple && clearable\"\r\n        (click)=\"onClickDominator()\"\r\n        [id]=\"appendId('dominator')\"\r\n        (delete)=\"onDeleteDominator()\"\r\n        (clear)=\"onClearDominator()\">\r\n        <ng-template #selected let-item>\r\n               <ng-container *ngTemplateOutlet=\"selectedTemplate?selectedTemplate:itemTemplate?itemTemplate:defaultItemTemplate; context: {$implicit: item}\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #placeholder *ngIf=\"placeholderTemplate\">\r\n                <ng-container *ngTemplateOutlet=\"placeholderTemplate\"></ng-container>\r\n        </ng-template>\r\n</ti-dominator>\r\n<ti-dropsearch [multiple]=\"multiple\" [searchable]=\"searchable\" [searchKeys]=\"searchKeys\"\r\n        [selectAll]=\"selectAll\" [labelKey]=\"labelKey\" [options]=\"options\"\r\n        [noDataText]=\"noDataText\" [dominatorSpace]=\"dominatorSpace\"\r\n        [(ngModel)]=\"modelWhole\" [dominatorElem]=\"dominatorCom.nativeElement\"\r\n        [panelWidth]=\"panelWidth\" [panelMaxHeight]=\"panelMaxHeight\"\r\n        [size]=\"size\" [tipPosition]=\"tipPosition\" [id]=\"appendId('droplist')\"\r\n        (select)=\"onSelect($event)\"\r\n        (beforeSearch)=\"onBeforeSearch()\" >\r\n        <ng-template #item let-item let-i=index>\r\n               <ng-container *ngTemplateOutlet=\"itemTemplate?itemTemplate:defaultItemTemplate; context: {$implicit: item, index: i}\"></ng-container>\r\n        </ng-template>\r\n        <ng-template #footer>\r\n                <ng-container *ngTemplateOutlet=\"footerTemplate?footerTemplate:defaultFooterTemplate;\"></ng-container>\r\n        </ng-template>\r\n</ti-dropsearch>\r\n\r\n<ng-template #defaultItemTemplate let-item let-i=index><span [title]=\"item[labelKey]\">{{item[labelKey]}}</span></ng-template>\r\n\r\n<ng-template #defaultFooterTemplate>\r\n</ng-template>\r\n",
                providers: [TiFormComponent.getValueAccessor(TiSelectComponent)],
                host: {
                    '[class.ti3-select-small]': 'size === "small"',
                    '(blur)': 'onBlur()'
                },
                styles: [".ti3-compnent-container-border,:host{-ms-box-sizing:border-box;border:1px solid;border-radius:var(--ti-input-border-radius);box-sizing:border-box;display:inline-block}.ti3-compnent-container-border:not([disabled]),:host:not([disabled]){background-color:var(--ti-input-bg-color);border-color:var(--ti-input-border-color)}.ti3-compnent-container-border:not([disabled]):hover,:host:not([disabled]):hover{border-color:var(--ti-input-border-color-hover)}.ti3-compnent-container-border:not([disabled])[tiFocused],:host:not([disabled])[tiFocused]{border-color:var(--ti-input-border-color-focus)}.ti3-compnent-container-border[disabled],:host[disabled]{background-color:var(--ti-input-bg-color-disabled);border-color:var(--ti-input-border-color-disabled);cursor:not-allowed!important}:host{width:200px}:host[noborder],:host[noborder]:hover,:host[noborder][tiFocused]{border-color:var(--ti-input-bg-color)}:host[noborder][disabled]{border-color:var(--ti-input-bg-color-disabled)}:host[dark]{background-color:transparent}:host[dark],:host[dark]:hover,:host[dark][disabled],:host[dark][tiFocused]{border-color:transparent}:host[dark] ::ng-deep .ti3-select-dominator-text{color:var(--ti-common-color-text-white)}:host[dark] ::ng-deep .ti3-select-dominator-dropdown-btn:after{border-left:4px solid transparent;border-right:4px solid transparent;border-top:5px solid var(--ti-common-color-icon-white);height:0;width:0}", "::ng-deep .ti3-select-small .ti3-select-dominator-text{width:calc(100% - var(--ti-select-small-height) + 2px)!important}::ng-deep .ti3-select-small .ti3-overflow-padding{padding-left:var(--ti-select-small-dominator-text-left-padding)!important;padding-right:0!important}::ng-deep .ti3-select-small .ti3-select-dominator-container{height:var(--ti-select-small-height)!important;line-height:calc(var(--ti-select-small-height) - 2px)!important}::ng-deep .ti3-select-small .ti3-select-dominator-dropdown-btn{width:calc(var(--ti-select-small-height) - 4px)!important}::ng-deep .ti3-select-small .ti3-select-dominator-dropdown-btn:after{right:var(--ti-select-small-triangle-position-right)!important;top:calc((100% - 5px)/2)!important}"]
            },] }
];
TiSelectComponent.propDecorators = {
    dominatorSpace: [{ type: Input }],
    multiple: [{ type: Input }],
    maxLine: [{ type: Input }],
    selectedTipPosition: [{ type: Input }],
    placeholder: [{ type: Input }],
    panelWidth: [{ type: Input }],
    panelMaxHeight: [{ type: Input }],
    noDataText: [{ type: Input }],
    options: [{ type: Input }],
    labelKey: [{ type: Input }],
    searchKeys: [{ type: Input }],
    searchable: [{ type: Input }],
    size: [{ type: Input }],
    tipPosition: [{ type: Input }],
    clearable: [{ type: Input }],
    selectAll: [{ type: Input }],
    showSelectedNumber: [{ type: Input }],
    beforeOpen: [{ type: Output }],
    select: [{ type: Output }],
    clear: [{ type: Output }],
    beforeSearch: [{ type: Output }],
    firstTemplate: [{ type: ContentChild, args: [TemplateRef, /* TODO: add static flag */ { static: true },] }],
    itemTemplate: [{ type: ContentChild, args: ['item', /* TODO: add static flag */ { static: true },] }],
    selectedTemplate: [{ type: ContentChild, args: ['selected', /* TODO: add static flag */ { static: true },] }],
    placeholderTemplate: [{ type: ContentChild, args: ['placeholder', /* TODO: add static flag */ { static: true },] }],
    footerTemplate: [{ type: ContentChild, args: ['footer', /* TODO: add static flag */ { static: true },] }],
    dominatorCom: [{ type: ViewChild, args: [TiDominatorComponent, /* TODO: add static flag */ { static: true },] }],
    dropsearchCom: [{ type: ViewChild, args: [TiDropsearchComponent, { static: true },] }],
    onKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,