{"version":3,"file":"TiPaginationComponent.d.ts","sources":["TiPaginationComponent.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { TiFormComponent } from '../base/TiBaseModule';\r\nimport { TiTableComponent } from '../table/TiTableModule';\r\nimport { TiSelectComponent } from '../select/TiSelectModule';\r\n/**\r\n * 实现每页显示条数的相关配置的数据类型\r\n */\r\nexport interface TiPageSizeConfig {\r\n    /**\r\n     * 组件每页显示条数选项列表：下拉列表\r\n     */\r\n    options?: Array<number>;\r\n    /**\r\n     * 当前每页显示条数配置，注意: 该值应该属于options数组中的一个元素\r\n     */\r\n    size?: number;\r\n    /**\r\n     * 设置每页显示条数选项元素(页面上是一个select组件)的宽度\r\n     */\r\n    width?: string;\r\n    /**\r\n     * 设置是否在页面上隐藏每页显示条数选项元素。\r\n     */\r\n    hide?: boolean;\r\n}\r\n/**\r\n * 当分页更新时触发事件通知出去的参数\r\n *\r\n * 更新场景包括：1.当前页码改变，2.每页显示条数改变，3.总条数改变。\r\n */\r\nexport interface TiPaginationEvent {\r\n    currentPage: number;\r\n    size: number;\r\n    totalNumber: number;\r\n}\r\n/**\r\n * @ignore\r\n * 页码的数据类型\r\n */\r\nexport interface TiPageItem {\r\n    id: string;\r\n    label: any;\r\n}\r\n/**\r\n * Pagination分页组件\r\n *\r\n * 分页组件一般情况下与表格组件配合使用，实现对表格数据的分页显示。\r\n *\r\n * <example-url>../tiny3demo/#/pagination/pagination-all</example-url>\r\n */\r\nexport declare class TiPaginationComponent extends TiFormComponent {\r\n    protected render: Renderer2;\r\n    protected hostRef: ElementRef;\r\n    private table;\r\n    private select;\r\n    private static readonly MIN_PAGE;\r\n    /**\r\n     * 设置组件的类型：三种类型default(默认)、simple、mini\r\n     */\r\n    type: 'default' | 'simple' | 'mini';\r\n    /**\r\n     * 设置当前数据总条数\r\n     */\r\n    totalNumber: number;\r\n    /**\r\n     * 组件内部改变总条数时会触发该事件，向外通知当前总条数。\r\n     */\r\n    readonly totalNumberChange: EventEmitter<number>;\r\n    /**\r\n     * 设置当前页码\r\n     */\r\n    currentPage: number;\r\n    /**\r\n     * 组件内部改变当前页码时会触发该事件，向外通知当前页码数。\r\n     */\r\n    readonly currentPageChange: EventEmitter<number>;\r\n    /**\r\n     * 实现每页显示条数的相关配置，包括如下属性\r\n     *\r\n     * options:组件每页显示条数选项列表，默认配置：[10, 20, 50]\r\n     *\r\n     * size:每页显示条数配置，注意: 该值应该属于options数组中的一个元素，默认：10\r\n     *\r\n     * width:设置每页显示条数选项元素(页面上是一个select组件)的宽度，默认：'50px'\r\n     *\r\n     * hide:设置是否在页面上隐藏每页显示条数选项元素，默认：false\r\n     */\r\n    pageSize: TiPageSizeConfig;\r\n    /**\r\n     * 设置是否总条数的显示与隐藏\r\n     */\r\n    showTotalNumber: boolean;\r\n    /**\r\n     * 设置是否显示页码跳转按钮（默认不显示)\r\n     */\r\n    showGotoLink: boolean;\r\n    /**\r\n     * 组件是否开启自动隐藏功能。开启后，当总条数totalNumber小于每页显示条数选项列表中的最小值时，隐藏分页\r\n     */\r\n    autoHide: boolean;\r\n    /**\r\n     * 组件是否禁用状态\r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * 设置最后一页的显示与隐藏（一般数据量比较大的场景隐藏最后一页）：默认显示\r\n     */\r\n    showLastPage: boolean;\r\n    /**\r\n     * 当操作选择框改变每页显示条数时会触发该事件，向外通知当前页码、每页显示条数和总条数。\r\n     */\r\n    readonly pageNumChange: EventEmitter<TiPaginationEvent>;\r\n    /**\r\n     * 当操作选择框改变每页显示条数或操作页码改变当前页码时会触发该事件，向外通知当前页码、每页显示条数和总条数。\r\n     */\r\n    readonly pageUpdate: EventEmitter<TiPaginationEvent>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    mini: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    inputRef: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 非mini类型：select下拉组件\r\n     */\r\n    itemsPerPage: any;\r\n    /**\r\n     * @ignore\r\n     * mini类型：select下拉组件\r\n     */\r\n    itemsMini: any;\r\n    /**\r\n     * @ignore\r\n     * 用户输入即将跳转的页码\r\n     */\r\n    gotoPage: {\r\n        page?: any;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * 页码列表\r\n     */\r\n    pages: Array<{\r\n        key: any;\r\n        active: boolean;\r\n    }>;\r\n    private hidePage;\r\n    private totalPageNum;\r\n    private oldCurrentPage;\r\n    private oldTotalNumber;\r\n    private oldSelected;\r\n    private oldSize;\r\n    private subscription;\r\n    private updateFocusableElems;\r\n    private defaultPageSize;\r\n    constructor(render: Renderer2, hostRef: ElementRef, table: TiTableComponent, select: TiSelectComponent);\r\n    /**\r\n     * @description 创建每一个页码对应的数据\r\n     * @params key 页码显示，为数字或者是\"···\"\r\n     * @params isActive 是否为当前激活页\r\n     */\r\n    private static makePage;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    ngAfterViewChecked(): void;\r\n    ngOnDestroy(): void;\r\n    private initData;\r\n    private isStorageCurrentPage;\r\n    private isStorageItemsPerPage;\r\n    private updateFromStorage;\r\n    /**\r\n     * 根据接口配置来渲染页面\r\n     */\r\n    private renderPage;\r\n    /**\r\n     * @ignore\r\n     * 对总页数进行数字国际化处理\r\n     */\r\n    setTotalNumberFormat(): string;\r\n    private getFormatedSize;\r\n    /**\r\n     * 同步变化开发者的pageSize数据\r\n     */\r\n    private syncPageSize;\r\n    /**\r\n     * @ignore\r\n     * 当前页码是否为最小页码\r\n     */\r\n    noPrevious(): boolean;\r\n    /**\r\n     * @ignore\r\n     * 当前页码是否为最大页码\r\n     */\r\n    noNext(): boolean;\r\n    /**\r\n     * @ignore\r\n     * 当前页码是否为'···' 不可被聚焦\r\n     */\r\n    isEllipse(page: any): boolean;\r\n    /**\r\n     * @ignore\r\n     * 操作pageSize选择框,每页显示条数改变时触发\r\n     */\r\n    onSizeChange(pageSizeNum: number): void;\r\n    private selectPage;\r\n    /**\r\n     * 计算总页数\r\n     */\r\n    private calculateTotalPages;\r\n    /**\r\n     * 组装mini类型时模板需要的数据\r\n     */\r\n    private configMini;\r\n    /**\r\n     * @description 根据每页显示条数及数据总条数获取页码列表\r\n     */\r\n    private getPages;\r\n    /**\r\n     * @description 根据当前页码和要显示的数目，计算分页链接的起始页\r\n     */\r\n    private getInterval;\r\n    /**\r\n     * 设置合法的新页码\r\n     */\r\n    private verifyCurrentPage;\r\n    /**\r\n     * @ignore\r\n     * 输入跳转页码enter快捷键处理\r\n     */\r\n    enterPageHandler(e: KeyboardEvent): void;\r\n    /**\r\n     * @ignore\r\n     * 根据要跳转的页码，同步修改当前页码\r\n     */\r\n    gotoPageHandler(event: KeyboardEvent): void;\r\n    /**\r\n     * @ignore\r\n     * 上一页按钮的点击事件\r\n     */\r\n    onPrevClick(event: Event): any;\r\n    /**\r\n     * @ignore\r\n     * 页码点击事件\r\n     */\r\n    onPageClick(page: any, event: Event): any;\r\n    /**\r\n     * @ignore\r\n     * 下一页按钮的点击事件\r\n     */\r\n    onNextClick(event: Event): any;\r\n    /**\r\n     * @ignore\r\n     * input输入框modelchange事件\r\n     */\r\n    ngModelChange(value: any): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    trackByFn(index: number, item: any): number;\r\n    private isWithTable;\r\n}\r\n"]}