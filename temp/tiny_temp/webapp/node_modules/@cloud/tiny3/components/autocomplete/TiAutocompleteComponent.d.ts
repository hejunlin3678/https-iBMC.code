import { EventEmitter } from '@angular/core';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiDroplistComponent } from '../droplist/TiDroplistModule';
import { TiTextComponent } from '../text/TiTextModule';
import { Subject } from 'rxjs';
import { TiPositionType } from '../../utils/Position';
/**
 * 自动补全输入框组件
 *
 * <example-url>../tiny3demo/#/autocomplete/autocomplete-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiAutocompleteComponent extends TiFormComponent {
    /**
     * 预留提示文本
     */
    placeholder: string;
    /**
     * 是否开启清空输入框内容的功能
     *
     * 10.1.0/9.1.0版本之后默认不开启，在此之前版本默认开启
     */
    clearable: boolean;
    /**
     * 文本最大显示长度
     */
    maxlength: number;
    /**
     * 1."justified"(默认): 下拉框的宽度与输入框的宽度保持一致；
     *
     * 2."auto": 下拉框的宽度根据下拉项的内容自动撑开；
     *
     * 3.表示宽度的字符串: 设置固定的下拉框宽度(不小于输入框的宽度)。例如："200px"。
     */
    panelWidth: string;
    /**
     * 面板最大高度
     */
    panelMaxHeight: string;
    /**
     * 指定下拉建议项中显示的文本对应的字段关键字
     */
    labelKey: string;
    /**
     * 10.0.1版本新增
     *
     * 下拉建议项
     */
    options: Array<any>;
    /**
     * 10.0.2版本新增
     *
     * 下拉建议项文字超长显示...，hover时tip弹出方向
     */
    tipPosition: TiPositionType;
    /**
     * suggest事件，当聚焦或值改变时触发事件，为开发者提供设置建议项的时机。
     *
     * 参数：组件实例
     */
    readonly suggest: EventEmitter<any>;
    /**
     * clear事件，点击清除按钮时触发
     *
     * 10.0.2版本新增(tiAutocomplete组件)
     *
     * 3.0.6版本新增(tiSearchbox组件)
     *
     */
    readonly clear: EventEmitter<MouseEvent>;
    /**
     * @ignore
     * droplist选项值
     */
    selected: any;
    /**
     * @ignore
     *
     */
    suggestions: Array<any>;
    /**
     * @ignore
     * 是否聚焦的标志位
     */
    isFocused: boolean;
    /**
     * 最后一次下拉建议项
     */
    private lastSuggestions;
    /**
     * @ignore
     */
    textComp: TiTextComponent;
    /**
     * @ignore
     */
    dropListComp: TiDroplistComponent;
    /**
     * @ignore
     */
    inputChangeObserve: Subject<string>;
    private inputChangeSub;
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * @ignore
     * 输入框中内容改变事件
     */
    onInputChange(value: string): void;
    /**
     * @ignore
     * 两种情况下触发
     * 1.在suggestion面板展开的情况下，通过hover选中一项，然后按下enter
     * 2.在suggestion面板展开的情况下，通过鼠标点击选中一项
     */
    onDroplistChange(value: {
        label?: string;
    }): void;
    /**
     * @ignore
     */
    onFocus(): void;
    /**
     * @ignore
     */
    onBlur(): void;
    /**
     * @ignore
     *
     * 避免滚动页面下拉框隐藏之后组件仍聚焦时再次点击，下拉框无法展开
     *
     * mousedown在focus事件之前执行
     */
    onInputMousedown(): void;
    /**
     * @ignore
     * 点击叉号时触发
     *
     */
    onClear(event: MouseEvent): void;
    /**
     * @description: 创建inputValue的observable，确保收集2ms内的数据后再更新下拉
     *  触发该observable时，使用next方法
     */
    private createInputChangeObserve;
    /**
     * 设置下拉建议项数据
     *
     * @param value 下拉建议项数组
     */
    setSuggestions(value: Array<any>): void;
    private filter;
    private show;
    private isInputClear;
    private showSuggestions;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiAutocompleteComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiAutocompleteComponent, "ti-autocomplete", never, { "placeholder": "placeholder"; "clearable": "clearable"; "panelWidth": "panelWidth"; "labelKey": "labelKey"; "options": "options"; "tipPosition": "tipPosition"; "maxlength": "maxlength"; "panelMaxHeight": "panelMaxHeight"; }, { "suggest": "suggest"; "clear": "clear"; }, never, never, false>;
}

//# sourceMappingURL=TiAutocompleteComponent.d.ts.map