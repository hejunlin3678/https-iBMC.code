{"version":3,"file":"TiItemComponent.d.ts","sources":["TiItemComponent.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { TiFormfieldComponent } from './TiFormfieldComponent';\r\n/**\r\n * 本组件嵌在 tiFormfield 中使用，包裹着单个表单条目的所有内容\r\n */\r\nexport declare class TiItemComponent implements OnInit, OnChanges, OnDestroy {\r\n    private formfield;\r\n    private elementRef;\r\n    private changeDetector;\r\n    /**\r\n     * 设置当前表单条目是否是必填，如果是必填，则前面会显示 *\r\n     */\r\n    required: boolean;\r\n    /**\r\n     * 设置当前表单条目的垂直对齐方式，默认为top（上下布局表单不支持该属性）。\r\n     *\r\n     * 能够覆盖tiFormfield指令上的verticalAlign设置\r\n     */\r\n    verticalAlign: 'top' | 'middle' | 'bottom';\r\n    /**\r\n     * 设置当前表单条目是否显示\r\n     *\r\n     * tiItem 不支持 ngIf 和 hidden，由该接口来控制单个表单条目的显示与否\r\n     */\r\n    show: boolean;\r\n    /**\r\n     * 行合并，设置当前表单条目可横跨的行数\r\n     */\r\n    rowspan: number;\r\n    /**\r\n     * 列合并，设置当前表单条目可横跨的列数\r\n     */\r\n    colspan: number;\r\n    /**\r\n     * 在 ti-formfield 中的展示顺序，数值越大越靠后展示；\r\n     *\r\n     * 要使用该接口时，当前ti-formfield中的所以ti-item都要设置该接口；\r\n     *\r\n     * 不设置时按 ti-item 的解析顺序展示\r\n     *\r\n     * 10.0.1新增\r\n     */\r\n    index: number;\r\n    /**\r\n     * @ignore\r\n     * tiItem的索引值，用于控制其显示时的位置顺序\r\n     */\r\n    itemIndex: number;\r\n    /**\r\n     * @ignore\r\n     */\r\n    verticalAlignObj: {\r\n        'vertical-align'?: string;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    itemStyle: {\r\n        'grid-area'?: string;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    labelStyle: {\r\n        'vertical-align'?: string;\r\n        width?: string;\r\n        'line-height'?: string;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    contentStyle: {\r\n        'vertical-align'?: string;\r\n        'line-height'?: string;\r\n        'width'?: string;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    element: HTMLElement;\r\n    /**\r\n     * @ignore\r\n     */\r\n    itemLabel: string | Node;\r\n    /**\r\n     * @ignore\r\n     */\r\n    hasLabel: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    gapWidth: string;\r\n    constructor(formfield: TiFormfieldComponent, elementRef: ElementRef, changeDetector: ChangeDetectorRef);\r\n    /**\r\n     * 设置当前表单条目的label文本，支持简单字符串文本，如果开发者希望基于html定制文本，\r\n     * 建议使用[TiItemLabelComponent]{@link ./TiItemLabelComponent.html}组件\r\n     *\r\n     * 类型：string | Node\r\n     */\r\n    set label(labelParm: string | Node);\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    private decorateItem;\r\n    private setItemLabel;\r\n}\r\n"]}