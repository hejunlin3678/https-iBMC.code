import { ChangeDetectorRef, ElementRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { TiFormfieldComponent } from './TiFormfieldComponent';
/**
 * 本组件嵌在 tiFormfield 中使用，包裹着单个表单条目的所有内容
 */
export declare class TiItemComponent implements OnInit, OnChanges, OnDestroy {
    private formfield;
    private elementRef;
    private changeDetector;
    /**
     * 设置当前表单条目是否是必填，如果是必填，则前面会显示 *
     */
    required: boolean;
    /**
     * 设置当前表单条目的垂直对齐方式，默认为top（上下布局表单不支持该属性）。
     *
     * 能够覆盖tiFormfield指令上的verticalAlign设置
     */
    verticalAlign: 'top' | 'middle' | 'bottom';
    /**
     * 设置当前表单条目是否显示
     *
     * tiItem 不支持 ngIf 和 hidden，由该接口来控制单个表单条目的显示与否
     */
    show: boolean;
    /**
     * 行合并，设置当前表单条目可横跨的行数
     */
    rowspan: number;
    /**
     * 列合并，设置当前表单条目可横跨的列数
     */
    colspan: number;
    /**
     * 在 ti-formfield 中的展示顺序，数值越大越靠后展示；
     *
     * 要使用该接口时，当前ti-formfield中的所以ti-item都要设置该接口；
     *
     * 不设置时按 ti-item 的解析顺序展示
     *
     * 10.0.1新增
     */
    index: number;
    /**
     * @ignore
     * tiItem的索引值，用于控制其显示时的位置顺序
     */
    itemIndex: number;
    /**
     * @ignore
     */
    verticalAlignObj: {
        'vertical-align'?: string;
    };
    /**
     * @ignore
     */
    itemStyle: {
        'grid-area'?: string;
    };
    /**
     * @ignore
     */
    labelStyle: {
        'vertical-align'?: string;
        width?: string;
        'line-height'?: string;
    };
    /**
     * @ignore
     */
    contentStyle: {
        'vertical-align'?: string;
        'line-height'?: string;
        'width'?: string;
    };
    /**
     * @ignore
     */
    element: HTMLElement;
    /**
     * @ignore
     */
    itemLabel: string | Node;
    /**
     * @ignore
     */
    hasLabel: boolean;
    /**
     * @ignore
     */
    gapWidth: string;
    constructor(formfield: TiFormfieldComponent, elementRef: ElementRef, changeDetector: ChangeDetectorRef);
    /**
     * 设置当前表单条目的label文本，支持简单字符串文本，如果开发者希望基于html定制文本，
     * 建议使用[TiItemLabelComponent]{@link ./TiItemLabelComponent.html}组件
     *
     * 类型：string | Node
     */
    set label(labelParm: string | Node);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private decorateItem;
    private setItemLabel;
}
