{"version":3,"file":"TiFormfieldComponent.d.ts","sources":["TiFormfieldComponent.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, Renderer2 } from '@angular/core';\r\nimport { TiItemComponent } from './TiItemComponent';\r\nimport { TiButtonItemComponent } from './TiButtonItemComponent';\r\nimport { TiBaseComponent } from '../base/TiBaseModule';\r\n/**\r\n * 本组件实现对多个表单元素的布局，支持单列和多列布局。\r\n * 其中包含了tiFormfield、tiItem、tiItemLabel和tiButtonItem几个组件。\r\n *\r\n * <example-url>../tiny3demo/#/formfield/formfield-all</example-url>\r\n */\r\nexport declare class TiFormfieldComponent extends TiBaseComponent {\r\n    protected hostRef: ElementRef;\r\n    protected renderer: Renderer2;\r\n    private changeDetector;\r\n    /**\r\n     * 默认两列的间距\r\n     */\r\n    private static readonly COLS_GAP;\r\n    /**\r\n     * 设置表单类型，不设置时默认为带输入控件类表单;当为 text 时，为纯文本描述类表单\r\n     *\r\n     * 带输入控件类表单：各个表单条目的内容区主要为输入框、下拉框、按钮组等输入组件；\r\n     *\r\n     * 纯文本描述类表单：各个表单条目的内容区为纯文本。\r\n     */\r\n    type: 'default' | 'text';\r\n    /**\r\n     * 设置表单的标题\r\n     */\r\n    title: string;\r\n    /**\r\n     * 统一设置表单条目的 label 所占宽度。例如：\"100px\"\r\n     */\r\n    labelWidth: string;\r\n    /**\r\n     * 设置表单布局的列数\r\n     */\r\n    colsNumber: number;\r\n    /**\r\n     * 设置列与列之间的间隔，只有多列（colsNumber >= 2）时该属性配置才生效。\r\n     */\r\n    colsGap: Array<string>;\r\n    /**\r\n     * 统一设置表单条目的垂直对齐方式（上下布局表单不支持该属性）。\r\n     */\r\n    verticalAlign: 'top' | 'middle' | 'bottom';\r\n    /**\r\n     * 统一设置纯文本描述类表单的每个表单条目的行高。\r\n     *\r\n     * 纯文本描述类表单不设置时，行高默认为40px；设置值时，例如：'30px',则的行高为30px。\r\n     *\r\n     * 目前纯文本描述类表单有三种应用场景：表格下展表单，行高值40px（默认）；购买页配置信息汇总，行高30PX；订单详情确认，行高22px。\r\n     */\r\n    textLineHeight: string;\r\n    /**\r\n     * 设置各列宽度（IE不支持，行合并列合并暂不支持）\r\n     *\r\n     * 设置该接口后，colsGap第一个值表示各列间距\r\n     *\r\n     * 10.1.1 新增\r\n     */\r\n    colsWidth: Array<string>;\r\n    /**\r\n     * @ignore\r\n     * 纯文本描述类表单的type的值\r\n     */\r\n    readonly textType: string;\r\n    /**\r\n     * @ignore\r\n     * ti-formfield中包含的所有ti-item的集合\r\n     */\r\n    items: Array<TiItemComponent>;\r\n    /**\r\n     * @ignore\r\n     * ti-formfield中包含的所有ti-btn-item的集合\r\n     */\r\n    btnItems: Array<TiButtonItemComponent>;\r\n    /**\r\n     * @ignore\r\n     * 根据colsNum对 items 分组后的数据\r\n     */\r\n    groupedItems: Array<any>;\r\n    /**\r\n     * @ignore\r\n     * 表单的列数\r\n     */\r\n    colsNum: number;\r\n    /**\r\n     * @ignore\r\n     */\r\n    containterObj: {\r\n        'vertical-align': string;\r\n        'grid-template-columns'?: string;\r\n        'grid-column-gap'?: string;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * 当前formfield下ti-item的总个数\r\n     */\r\n    itemTotal: number;\r\n    /**\r\n     * @ignore\r\n     * 表单是否为上下布局\r\n     */\r\n    isVertical: boolean;\r\n    /**\r\n     * @ignore\r\n     * button样式\r\n     */\r\n    buttonStyle: {\r\n        'margin-left'?: string;\r\n    };\r\n    /**\r\n     * @ignore\r\n     * 表单是否使用grid布局\r\n     */\r\n    useGrid: boolean;\r\n    constructor(hostRef: ElementRef, renderer: Renderer2, changeDetector: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    private setColsNumber;\r\n    private setFieldStyle;\r\n    /**\r\n     * @ignore\r\n     * 需要在TiItemComponent.ts中调用\r\n     */\r\n    addCntItem(item: TiItemComponent): void;\r\n    /**\r\n     * @ignore\r\n     * 需要在 TiItemComponent.ts 中调用\r\n     */\r\n    removeCntItem(item: TiItemComponent): void;\r\n    /**\r\n     * @ignore\r\n     * 需要在 TiButtonItemComponent.ts 中调用\r\n     */\r\n    addBtnItem(item: TiButtonItemComponent): void;\r\n    /**\r\n     * @ignore\r\n     * 需要在 TiButtonItemComponent.ts 中调用\r\n     */\r\n    removeBtnItem(item: TiButtonItemComponent): void;\r\n    private chunkArray;\r\n    /**\r\n     * @ignore\r\n     * 需要在html模板中使用\r\n     */\r\n    trackByFn(index: number, item: TiItemComponent): number;\r\n    /**\r\n     * @ignore\r\n     * 每项图标是否占位，设置按钮及content样式\r\n     */\r\n    getRequire(item: TiItemComponent, index: number): boolean;\r\n}\r\n"]}