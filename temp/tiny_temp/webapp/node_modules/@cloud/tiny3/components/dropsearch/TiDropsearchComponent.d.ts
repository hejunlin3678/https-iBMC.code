import { EventEmitter, SimpleChanges, TemplateRef } from '@angular/core';
import { TiSearchboxNotsearchComponent } from '../searchbox/TiSearchboxModule';
import { TiDropComponent } from '../drop/TiDropModule';
import { TiDroplistComponent } from '../droplist/TiDroplistModule';
/**
 * @ignore
 * 下拉面板带有可搜索的数组组件，主要用于select，表格列设置。
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiDropsearchComponent extends TiDroplistComponent {
    searchable: boolean;
    searchKeys: Array<string>;
    selectAll: boolean;
    /**
     * 面板对齐方式, drop中的panelAlign接口透传出去
     */
    panelAlign: 'left' | 'right';
    /**
     * @ignore
     * dominator 到drop的距离
     */
    dominatorSpace: string;
    /**
     * @ignore
     * 10.0.2新增
     *
     * 后台搜索，传出搜索框的值
     */
    readonly beforeSearch: EventEmitter<any>;
    searchboxCom: TiSearchboxNotsearchComponent;
    dropCom: TiDropComponent;
    footerTemplateRef: TemplateRef<any>;
    searchWord: string;
    placeholder: string;
    /**
     * 搜索结果数组
     */
    searchResult: Array<any>;
    private oldSearchable;
    pagination: any;
    focusableElemsInSearch: Array<any>;
    focusableElemsInPagination: Array<any>;
    /**
     * @ignore select的beforeSearch有没有被监听，该值为true，dropsearch的beforeSearch才是真正意义的被监听
     */
    hasBeforeSearchObservers: boolean;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    /**
     * 覆盖父类show()
     */
    show(): void;
    /**
     * 覆盖父类hide(), 有搜索框时焦点转移
     */
    hide(): void;
    /**
     * 仅hide，不带焦点转移。
     */
    hideWithoutFocus(): void;
    searchWordChange(searchWord: string): void;
    /**
     * 搜索后，按需重新定位、设置hoverOption
     */
    setSearchResult(searchResult: Array<any>): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiDropsearchComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiDropsearchComponent, "ti-dropsearch", never, { "searchable": "searchable"; "selectAll": "selectAll"; "panelAlign": "panelAlign"; "dominatorSpace": "dominatorSpace"; "searchKeys": "searchKeys"; }, { "beforeSearch": "beforeSearch"; }, ["footerTemplateRef"], ["[custom]"], false>;
}

//# sourceMappingURL=TiDropsearchComponent.d.ts.map