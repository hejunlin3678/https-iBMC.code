import { ElementRef, Renderer2 } from '@angular/core';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiValidationConfig } from '../../directives/validation/TiValidationModule';
import { FormBuilder, FormGroup, ValidatorFn } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export interface TiIpsectionConfig {
    /**
     * 标志各网段
     */
    section: number;
    /**
     * 网段为select类型时，下拉配置对象
     */
    options?: Array<any>;
    /**
     * 网段为input类型时，设置文本是否加粗
     */
    bold?: boolean;
    /**
     * 网段为input类型时，配置校验提示信息，可参考校验组件示例
     */
    validation?: TiValidationConfig;
    /**
     * 网段为input类型时，配置校验规则，可参考校验组件示例
     */
    validationRules?: Array<ValidatorFn>;
    /**
     * 设置各网段是否灰化
     */
    disabled?: boolean;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * Ipsection组件，Ip各网段分开处理，各网段有下拉类和输入类两种类型；
 *
 * 9.0.4新增
 *
 * <example-url>../tiny3demo/#/ipsection/ipsection-all</example-url>
 */
export declare class TiIpsectionComponent extends TiFormComponent {
    protected hostRef: ElementRef;
    protected renderer2: Renderer2;
    private fb;
    /**
     * Ip网段配置数组对象，组件按该配置数组对象顺序渲染数据
     */
    configs: Array<TiIpsectionConfig>;
    /**
     * @ignore
     * 存放 input 控件实例数组
     */
    private controls;
    /**
     * @ignore
     * 格式化输入
     */
    maskInput: string;
    /**
     * @ignore
     * 存放各网段 ip 值的数组
     */
    ipValues: Array<string>;
    /**
     * input控件 FormGroup 实例，服务可通过该实例动态更改某一FormControl实例相关属性（value，disabled，校验规则等）
     */
    formGroup: FormGroup;
    constructor(hostRef: ElementRef, renderer2: Renderer2, fb: FormBuilder);
    /**
     * 将ip值分割为数组
     */
    private static splitToIPArray;
    /**
     * 将ip数组拼接为ip值
     */
    private static joinToIPValue;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    /**
     * @ignore
     * 获取model值，并进行初始化处理
     */
    writeValue(value: any): void;
    /**
     * @ignore
     * 整体失焦触发事件
     */
    onBlur(event: any): void;
    /**
     * @ignore
     * select类型网段值更改时触发事件
     */
    onChange(i: number, value: any): void;
    /**
     * 初始化ip值
     */
    private initIpValue;
    /**
     * 初始及失焦处理输入框值，清除Ip网段前面的0
     */
    private formatValue;
    /**
     * 更新model值
     */
    private updateIpValue;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiIpsectionComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiIpsectionComponent, "ti-ipsection", never, { "configs": "configs"; }, {}, never, never, false>;
}

//# sourceMappingURL=TiIpsectionComponent.d.ts.map