{"version":3,"file":"TiLeftmenuComponent.d.ts","sources":["TiLeftmenuComponent.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, NgZone, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { ActivatedRoute, NavigationExtras, Router } from '@angular/router';\r\nimport { TiBaseComponent } from '../base/TiBaseModule';\r\nimport { TiLeftmenuLevel1Component } from './TiLeftmenuLevel1Component';\r\nimport { TiRenderer } from '../../services/renderer/TiRenderer';\r\n/**\r\n * 左侧菜单各项数据接口\r\n *\r\n * 是TiLeftmenuLevel1 和 TiLeftmenuLevel2 组件的 item 接口的数据类型\r\n */\r\nexport interface TiLeftmenuItem {\r\n    /**\r\n     * 设置当前菜单项对应的路由，与 Router.navigate方法的第一个参数一样\r\n     */\r\n    router?: Array<any>;\r\n    /**\r\n     * 设置当前菜单项对应路由的配置信息，与 Router.navigate方法的第二个参数一样\r\n     */\r\n    routerExtras?: NavigationExtras;\r\n    /**\r\n     * 设置一个router路由列表，当该列表中的路由被激活时，其对应的菜单项被激活处于高亮状态。\r\n     * 其使用场景为多个路由对应同一个左侧菜单项。\r\n     *\r\n     * routerList 数组中每一个元素与 Router.navigate方法的第一个参数一样\r\n     */\r\n    routerList?: Array<Array<any>>;\r\n    /**\r\n     * 链接地址，点击后路由激活项不变，在新页面打开配置地址。\r\n     *\r\n     * 10.0.1新增\r\n     *\r\n     * v10.0.1 ~ v10.1.3版本存在XSS攻击(url类型)风险和用户点击这个链接并进入一个新的标签，新标签中的页面如果存在恶意代码，就可以将原网站直接导航到一个虚假网站的安全风险。\r\n     *\r\n     * v10.1.4 版本做了安全处理，已不存在上述两种安全问题，建议业务尽快升级版本。\r\n     */\r\n    href?: string;\r\n    /**\r\n     * 设置分界线（只支持一级菜单），在设置该属性菜单项的底部生成一条区块分界线。\r\n     *\r\n     * 10.0.2新增\r\n     */\r\n    showDividingLine?: boolean;\r\n    /**\r\n     * 允许有多余的属性字段\r\n     */\r\n    [propName: string]: any;\r\n}\r\n/**\r\n * TiLeftmenu组件提供了一种方便灵活实现页面布局左侧菜单的方式，支持两级菜单。\r\n *\r\n * 其内部包含5个组件:\r\n *\r\n * TiLeftmenu : 左侧菜单最外层的指令；\r\n *\r\n * TiLeftmenuGroup: 菜单分组指令；\r\n *\r\n * TileftmenuGroupItem：分组文本内容指令；\r\n *\r\n * TiLeftmenuHead : 菜单头部内容指令；\r\n *\r\n * TiLeftmenuLevel1 ：一级菜单指令；\r\n *\r\n * TiLeftmenuItem ：一级菜单文本内容指令；\r\n *\r\n * TiLeftmenuLevel2 ：二级菜单指令。\r\n *\r\n * <example-url>../tiny3demo/#/leftmenu/leftmenu-all</example-url>\r\n */\r\nexport declare class TiLeftmenuComponent extends TiBaseComponent {\r\n    renderer2: Renderer2;\r\n    private router;\r\n    private activeRoute;\r\n    private tiRenderer;\r\n    private zone;\r\n    private document;\r\n    /**\r\n     * 设置激活菜单项。这个值应该是 TiLeftmenuLevel1 和 TiLeftmenuLevel2 组件的 item 接口传入的值的集合中的一个(item)\r\n     *\r\n     * 此接口是双向绑定的，设置时中括号“[]”和圆括号“()”要同时使用\r\n     */\r\n    active: TiLeftmenuItem;\r\n    /**\r\n     * 激活菜单项改变时向外通知\r\n     */\r\n    readonly activeChange: EventEmitter<TiLeftmenuItem>;\r\n    /**\r\n     * 控制右侧内容区的刷新\r\n     *\r\n     * 注意：当重复点击当前激活菜单项时，需要刷新右侧内容区，为了实现此功能设置了该接口；\r\n     * 该接口是双向绑定的，当重复点击当前激活菜单项时，reloadState的值会经历 true(上次的值) -> false -> true\r\n     * 的变化过程，开发者给改接口与其右侧区域容器上ngIf接口绑定的是同一个变量，所以ngIf的值也会经历同样的变化，\r\n     * 从而做到右侧内容区的刷新。\r\n     */\r\n    reloadState: boolean;\r\n    /**\r\n     * 右侧内容区是否需要刷新的状态值改变时向外通知\r\n     */\r\n    readonly reloadStateChange: EventEmitter<boolean>;\r\n    /**\r\n     * 10.0.1新增\r\n     *\r\n     * 设置是否使用路由来控制菜单对应内容显示/隐藏，默认使用路由。\r\n     */\r\n    routable: boolean;\r\n    /**\r\n     * 是否开启左侧菜单面板可折叠功能，默认开启。\r\n     */\r\n    toggleable: boolean;\r\n    /**\r\n     * 左侧菜单面板是否为收起状态，用于设置面板收起/展开状态，默认展开。\r\n     */\r\n    collapsed: boolean;\r\n    /**\r\n     * 左侧菜单面板收起/展开状态改变时向外通知\r\n     */\r\n    readonly collapsedChange: EventEmitter<boolean>;\r\n    /**\r\n     * @ignore\r\n     * tiLeftmenu中包含的 TiLeftmenuLevel1Component 实例集合\r\n     */\r\n    level1Items: Array<TiLeftmenuLevel1Component>;\r\n    private navigationSubscription;\r\n    /**\r\n     * @ignore\r\n     */\r\n    readonly resolvedPromise: Promise<any>;\r\n    /**\r\n     * 标志量，是否为url改变(需要去改变active)\r\n     */\r\n    private isUrlChange;\r\n    /**\r\n     * @ignore\r\n     */\r\n    private panelContainer;\r\n    /**\r\n     * 滚动条的宽度, 在 TiLeftmenuFoot中也有使用\r\n     * @ignore\r\n     */\r\n    scrollWidth: number;\r\n    constructor(elementRef: ElementRef, renderer2: Renderer2, router: Router, activeRoute: ActivatedRoute, tiRenderer: TiRenderer, zone: NgZone, document: any);\r\n    private static isDefaultActiveChildRoute;\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * @ignore\r\n     * 模板中使用\r\n     */\r\n    toggleClickFn(): void;\r\n    private getActiveItemByUrl;\r\n    private isActived;\r\n    private isMatchCurrentUrl;\r\n    private link;\r\n    /**\r\n     * @ignore\r\n     */\r\n    navigate(item: TiLeftmenuItem): void;\r\n    /**\r\n     * @ignore\r\n     * 点击当前选中项时，触发内容区重载\r\n     * @param item 当前点击项\r\n     */\r\n    triggerReload(item: TiLeftmenuItem): void;\r\n    private getNavigationExtras;\r\n    private getRelativeRoute;\r\n    /**\r\n * 得到浏览器滚动条的宽度和高度\r\n * 代表滚动条的方向，取值为X or Y\r\n */\r\n    private getScrollbarSize;\r\n}\r\n"]}