{"version":3,"file":"TiDatetimeComponent.d.ts","sources":["TiDatetimeComponent.d.ts"],"names":[],"mappingssourcesContent":["import { SimpleChanges } from '@angular/core';\r\nimport { TiDateBaseComponent, TiDatetimeFormat, TimeOptions } from '../datebase/TiDateBaseModule';\r\n/**\r\n * Datetime日期时间组件\r\n *\r\n * Datetime组件提供了一种方便的显示和设置日期时间的方式。\r\n *\r\n * <example-url>../tiny3demo/#/datetime/datetime-all</example-url>\r\n */\r\nexport declare class TiDatetimeComponent extends TiDateBaseComponent {\r\n    /**\r\n     * @ignore\r\n     * 配置time组件的接口\r\n     */\r\n    beginTime: TimeOptions;\r\n    /**\r\n     * @ignore\r\n     * 日期显示格式: Datetime组件的format为DatetimeFormat类型\r\n     */\r\n    format: TiDatetimeFormat;\r\n    /**\r\n     * @ignore\r\n     * 标记date/datetime的类型\r\n     */\r\n    isDatetime: boolean;\r\n    /**\r\n     * @ignore\r\n     * 用于标记是不是range\r\n     */\r\n    isRange: boolean;\r\n    /**\r\n     * @ignore\r\n     * placeholder提示文本\r\n     */\r\n    placeholder: string;\r\n    /**\r\n     * @ignore\r\n     * 旧时间值\r\n     */\r\n    oldValue: any;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    /**\r\n     * @ignore\r\n     * model值变化时的回调\r\n     */\r\n    ngOnModelChange(): void;\r\n    /**\r\n     * @ignore\r\n     * 确认按钮的点击事件处理\r\n     */\r\n    onOkClick(): void;\r\n    /**\r\n     * @ignore\r\n     * 设置下拉面板中datePanel组件接口\r\n     */\r\n    private setDatePanel;\r\n    private setBeginTime;\r\n    /**\r\n     * @ignore\r\n     * @param event\r\n     * @param val\r\n     */\r\n    onKeydownFn(event: KeyboardEvent, val: any): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    editBlur(val: any): void;\r\n    private setTime;\r\n    private setTimeValue;\r\n    private setTimeMaxValue;\r\n    private setTimeMinValue;\r\n    /**\r\n     * @ignore\r\n     */\r\n    isValidValue(value: Date): boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    setPickerDate(): void;\r\n    /**\r\n     * @ignore\r\n     * 设置确认按钮的状态\r\n     */\r\n    setOkBtnState(): void;\r\n    /**\r\n     * @ignore\r\n     * 将value转换为format接口格式的字符串\r\n     */\r\n    formatValue(): void;\r\n    /**\r\n     * @ignore\r\n     * 时间框失焦事件\r\n     */\r\n    timeBlur(): void;\r\n    /**\r\n     * @ignore\r\n     * 时间框enter事件\r\n     */\r\n    timeKeydown(event: KeyboardEvent): void;\r\n    /**\r\n     * @ignore\r\n     * time时间框输入内容处理\r\n     */\r\n    handleTimeValue(): void;\r\n    /**\r\n     * @description 判读字符串是否是合法的时间\r\n     * @param: time: 校验的时间\r\n     */\r\n    private isValidTime;\r\n}\r\n"]}