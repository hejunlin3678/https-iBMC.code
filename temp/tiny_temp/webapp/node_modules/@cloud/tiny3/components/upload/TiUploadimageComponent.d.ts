import { ElementRef, EventEmitter, NgZone, Renderer2 } from '@angular/core';
import { TiUploadService } from '../../services/upload/TiUploadService';
import { TiModalService } from '../../services/modal/TiModalService';
import { TiFilePreviewInfo } from '../imagepreview/TiImagepreviewComponent';
import { TiUploadbaseComponent } from './TiUploadbaseComponent';
import { DomSanitizer } from '@angular/platform-browser';
/**
 * 10.0.2版本新增
 *
 * 该组件基于TiUploadService和已设计好的交互规范，实现上传图片功能（但不限于上传图片），包含两种样式：
 *
 * 1.带上传结果展示的样式(type为block)
 *
 * 2.不展示上传结果的样式(type为drag)
 *
 * 负责人：谭莉
 * <example-url>../tiny3demo/#/uploadimage/uploadimage-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiUploadimageComponent extends TiUploadbaseComponent {
    private uploaderService;
    private tiModal;
    sanitizer: DomSanitizer;
    private zone;
    /**
     * 能够上传文件的最大数量，默认不限制
     */
    maxCount: number;
    /**
     * 设置上传成功后可以删除，默认可删除
     */
    deletable: boolean;
    /**
     * 上传按钮的样式，默认为block
     */
    type: 'block' | 'drag';
    /**
     * @ignore
     * 上传结果展示，目前只有一种，picture-card；
     * 当type设置为drag时无效
     */
    listType: string;
    /**
     * 文件上传达上限的回调
     * 参数是当前的文件预览信息列表
     */
    readonly uploadLimit: EventEmitter<Array<TiFilePreviewInfo>>;
    /**
     * @ignore 内部变量
     */
    uploadBtn: ElementRef;
    /**
     * @ignore
     * 上传组件对应的input元素
     */
    uploadInputEle: ElementRef;
    /**
     * 用户自定义上传的样式
     */
    uploadContainerTemplate: ElementRef;
    /**
     * 上传按钮的宽度，用于自定义样式，默认为100px，在type为drag下设置才生效
     */
    uploadBtnWidth: string;
    /**
     * 上传按钮的高度，用于自定义样式，默认为100px，在type为drag下设置才生效
     */
    uploadBtnHeight: string;
    /**
     * @ignore 需要展示的文件列表
     */
    fileList: Array<TiFilePreviewInfo>;
    constructor(uploaderService: TiUploadService, hostEle: ElementRef, renderer: Renderer2, tiModal: TiModalService, sanitizer: DomSanitizer, zone: NgZone);
    /**
     * @ignore
     */
    ngOnInit(): void;
    ngAfterViewChecked(): void;
    ngAfterContentChecked(): void;
    /**
     * 重新设置上传实例配置
     */
    private setUploadConfig;
    /**
     * 设置过滤条件
     */
    private setFilters;
    /**
     * 添加文件成功后，增加一个预览对象
     */
    private addPreviewList;
    /**
     * 删除时，将文件信息从预览列表中移除
     */
    private removePreviewList;
    /**
     * 上传成功后，更新预览地址
     */
    private setPreviewInfo;
    /**
     * @ignore 在弹框中预览上传的图片
     * 参数i: 表示被点击图片的索引
     */
    preview(i: number): void;
    /**
     * 判断是否是图片类型
     * 参数fileName: 文件名称
     * 参数previewUrl: 预览地址
     */
    private isImage;
    /**
     * @ignore 禁用上传时，阻止默认事件、停止冒泡
     */
    selectFile(event: any): void;
    onKeydown(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiUploadimageComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiUploadimageComponent, "ti-upload[type=\"block\"], ti-upload[type=\"drag\"]", never, { "maxCount": "maxCount"; "deletable": "deletable"; "type": "type"; "uploadBtnWidth": "uploadBtnWidth"; "uploadBtnHeight": "uploadBtnHeight"; }, { "uploadLimit": "uploadLimit"; }, ["uploadContainerTemplate"], never, false>;
}

//# sourceMappingURL=TiUploadimageComponent.d.ts.map