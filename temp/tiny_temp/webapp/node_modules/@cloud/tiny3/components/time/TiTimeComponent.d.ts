import { ElementRef, NgZone, Renderer2, SimpleChanges } from '@angular/core';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiDropComponent } from '../drop/TiDropModule';
import { TiListComponent } from '../list/TiListModule';
/**
 * @ignore
 */
import * as ɵngcc0 from '@angular/core';
export interface TimeField {
    hour: string;
    minute: string;
    second: string;
}
/**
 * @ignore
 */
export interface TiComputingParams {
    max: number;
    min: number;
    needAddZero: boolean;
}
/**
 * Time时间组件
 *
 * Time组件提供了一种方便的显示和设置时间的方式。
 *
 * <example-url>../tiny3demo/#/time/time-all</example-url>
 */
export declare class TiTimeComponent extends TiFormComponent {
    private zone;
    protected hostRef: ElementRef;
    protected renderer2: Renderer2;
    private document;
    /**
     * 设置时间显示格式。各个时间段格式规则; 默认值：'HH:mm:ss'
     *
     * 1.小时可以设置为：
     *
     * HH —— 24小时制,两位数字表示小时(00-23)
     *
     * H —— 24小时制，开头不补零数字表示小时(0-23)
     *
     * 2.分钟可以设置为：
     *
     * mm —— 两位数字表示分钟值（00-59）
     *
     * m —— 开头不补零数字表示分钟值（0-59）
     *
     * 3.秒可以设置为：
     *
     * ss —— 两位数字表示秒值(00-59)
     *
     * s —— 开头不补零数字表示秒值(0-59)
     *
     * 说明：开头补零是指当前时间是个位数字时，前边补零，始终保持两位数字
     */
    format: string;
    /**
     * 设置时间最大值 默认值：'23:59:59'
     */
    max: string;
    /**
     * 设置时间最小值 默认值：'00:00:00'
     */
    min: string;
    /**
     * 是否展示清除时间图标（默认显示）
     *
     * 10.1.2新增接口
     */
    clearIcon: boolean;
    /**
     * @ignore
     */
    private containerRef;
    /**
     * @ignore
     */
    dropCom: TiDropComponent;
    /**
     * @ignore
     */
    textCom: ElementRef;
    /**
     * @ignore
     */
    inputEle: ElementRef;
    /**
     * @ignore
     */
    buttonEle: ElementRef;
    private readonly localeWords;
    /**
     * @ignore
     * time编辑框内部value值
     */
    inputValue: string;
    /**
     * @ignore
     * dominator最终显示时间值
     */
    timeValue: String;
    /**
     * @ignore
     */
    dominatorCom: ElementRef;
    /**
     * @ignore
     * 时间下拉面板宽度，根据时间格式宽度各异
     */
    timePanelWidth: number;
    /**
     * @ignore
     * 底部确认按钮是否禁用
     */
    buttonDisabled: boolean;
    /**
     * @ignore
     * placeholder提示文本
     */
    placeholder: string;
    /**
     * @ignore
     */
    hourOptions: Array<any>;
    /**
     * @ignore
     */
    minuteOptions: Array<any>;
    /**
     * @ignore
     */
    secondOptions: Array<any>;
    /**
     * @ignore
     */
    selectedHour: any;
    /**
     * @ignore
     */
    selectedMinute: any;
    /**
     * @ignore
     */
    selectedSecond: any;
    /**
     * @ignore
     */
    hourScroll: number;
    /**
     * @ignore
     */
    minuteScroll: number;
    /**
     * @ignore
     */
    secondScroll: number;
    /**
     * @ignore
     * 只展示小时段
     */
    onlyHour: boolean;
    /**
     * @ignore
     * 只展示时分段
     */
    onlyHourMinute: boolean;
    /**
     * @ignore
     */
    oldInputValue: string;
    /**
     * @ignore
     * 面板与dominator的距离
     */
    dominatorSpace: string;
    /**
     * @ignore
     * 是否清除
     */
    isClearClick: boolean;
    private documentKeydownListener;
    constructor(zone: NgZone, hostRef: ElementRef, renderer2: Renderer2, document: any);
    /**
     * @description: 若时间字符串没有一个冒号时处理成合法的事件字符串（加冒号）
     * @param value 时间字符串
     */
    private static addColon;
    /**
     * @description 判读字符串是否是合法的时间
     * @param: time: 校验的时间
     */
    private static isValidTime;
    /**
     * @description: hh/HH/mm/ss 时间格式时，显示的值处理成2位，不足2位补0
     * @param: num : 各个时间显示框的数值
     * @param: length : 需要处理之后的长度
     */
    private static addZero;
    /**
     * @description newVal参数为合法值时返回newVal，否则返回defaultValue参数
     * @param: newVal:新值
     * @param: defaultValue:默认值
     */
    private static verifyTime;
    /**
     * @description 比较value1和value2两个时间值大小.value1 < value2时，返回true；否则返回false  ；
     * @param: value1:比较的前一个值
     * @param: value2:比较的后一个值
     */
    private static isSmaller;
    /**
     * @description 比较value1和value2两个时间值大小.value1 > value2时，返回true；否则返回false  ；
     * @param: value1:比较的前一个值
     * @param: value2:比较的后一个值
     */
    private static isBigger;
    /**
     * @description 比较value1和value2两个时间值大小.value1 <= value2时，返回true；否则返回false  ；
     * @param: value1:比较的前一个值
     * @param: value2:比较的后一个值
     */
    private static isSmallerOrEqual;
    /**
     * @description 比较value1和value2两个时间值大小.value1 >= value2时，返回true；否则返回false  ；
     * @param: value1:比较的前一个值
     * @param: value2:比较的后一个值
     */
    private static isBiggerOrEqual;
    ngOnInit(): void;
    private setTimeOptions;
    private showTimeWithFormat;
    private initVariable;
    private validateMaxAndMin;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    writeValue(value: any): void;
    /**
     * @ignore
     * @description: 组件整体失焦之后处理函数
     */
    onBlur(): void;
    private hidePanel;
    /**
     * @ignore
     * 点击dominator打开面板
     */
    onShowClick(): void;
    /**
     * @ignore
     * 点击确认按钮关闭面板
     */
    okClickFn(): void;
    /**
     * @ignore
     * 时间面板点击选择事件
     * @param val
     * @param title
     */
    onSelect(val: any, title: string): void;
    private setSelectVal;
    private keydownHandlerFn;
    /**
     * 组件快捷键处理tab键 enter键
     */
    onKeydown(event: KeyboardEvent): void;
    /**
     * @ignore
     * enter键的功能：如果面板展开不处理，面板收起则展开，设置datePanel指令的接口值
     */
    responseEnter(): void;
    /**
     * @ignore
     * 输入为中文冒号时，自动转换为英文冒号
     * @param val
     */
    onInputChangeFn(val: any): void;
    /**
     * @ignore
     * 时间框enter事件
     */
    timeKeydownFn(event: KeyboardEvent, val: string): void;
    timeBlur(val: string): void;
    private getScrollData;
    /**
     * @ignore
     * 清除
     */
    onIconClearClick(): void;
    private getSelectedVal;
    private setOptions;
    private setDisableData;
    /**
    * @ignore
    * 时间选择框部分鼠标移出时去除hover样式
    */
    onMouseleave(listCom: TiListComponent): void;
    /**
     * @description:最大值最小值检验
     */
    private validateValue;
    /**
     * @description: 时间格式化及时间各个框显示值设置
     */
    private formatValue;
    /**
     * @description: 校验动态更新的minValue是否是合法值
     * @param: minValue:动态更新的传入的minValue
     */
    private isValidMinValue;
    /**
     * @description: 校验动态更新的maxValue是否是合法值
     * @param: maxValue:动态更新的传入的maxValue
     */
    private isValidMaxValue;
    /**
     * @description: 判断动态更新写入组件的value值是否是一个合法值
     * @param: value 动态更新写入组件的value值
     */
    private isValidValue;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiTimeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiTimeComponent, "ti-time", never, { "clearIcon": "clearIcon"; "format": "format"; "max": "max"; "min": "min"; }, {}, never, never, false>;
}

//# sourceMappingURL=TiTimeComponent.d.ts.map