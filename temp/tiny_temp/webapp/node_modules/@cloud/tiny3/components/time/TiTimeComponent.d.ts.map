{"version":3,"file":"TiTimeComponent.d.ts","sources":["TiTimeComponent.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, NgZone, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { TiFormComponent } from '../base/TiBaseModule';\r\nimport { TiDropComponent } from '../drop/TiDropModule';\r\nimport { TiListComponent } from '../list/TiListModule';\r\n/**\r\n * @ignore\r\n */\r\nexport interface TimeField {\r\n    hour: string;\r\n    minute: string;\r\n    second: string;\r\n}\r\n/**\r\n * @ignore\r\n */\r\nexport interface TiComputingParams {\r\n    max: number;\r\n    min: number;\r\n    needAddZero: boolean;\r\n}\r\n/**\r\n * Time时间组件\r\n *\r\n * Time组件提供了一种方便的显示和设置时间的方式。\r\n *\r\n * <example-url>../tiny3demo/#/time/time-all</example-url>\r\n */\r\nexport declare class TiTimeComponent extends TiFormComponent {\r\n    private zone;\r\n    protected hostRef: ElementRef;\r\n    protected renderer2: Renderer2;\r\n    private document;\r\n    /**\r\n     * 设置时间显示格式。各个时间段格式规则; 默认值：'HH:mm:ss'\r\n     *\r\n     * 1.小时可以设置为：\r\n     *\r\n     * HH —— 24小时制,两位数字表示小时(00-23)\r\n     *\r\n     * H —— 24小时制，开头不补零数字表示小时(0-23)\r\n     *\r\n     * 2.分钟可以设置为：\r\n     *\r\n     * mm —— 两位数字表示分钟值（00-59）\r\n     *\r\n     * m —— 开头不补零数字表示分钟值（0-59）\r\n     *\r\n     * 3.秒可以设置为：\r\n     *\r\n     * ss —— 两位数字表示秒值(00-59)\r\n     *\r\n     * s —— 开头不补零数字表示秒值(0-59)\r\n     *\r\n     * 说明：开头补零是指当前时间是个位数字时，前边补零，始终保持两位数字\r\n     */\r\n    format: string;\r\n    /**\r\n     * 设置时间最大值 默认值：'23:59:59'\r\n     */\r\n    max: string;\r\n    /**\r\n     * 设置时间最小值 默认值：'00:00:00'\r\n     */\r\n    min: string;\r\n    /**\r\n     * 是否展示清除时间图标（默认显示）\r\n     *\r\n     * 10.1.2新增接口\r\n     */\r\n    clearIcon: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    private containerRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    dropCom: TiDropComponent;\r\n    /**\r\n     * @ignore\r\n     */\r\n    textCom: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    inputEle: ElementRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    buttonEle: ElementRef;\r\n    private readonly localeWords;\r\n    /**\r\n     * @ignore\r\n     * time编辑框内部value值\r\n     */\r\n    inputValue: string;\r\n    /**\r\n     * @ignore\r\n     * dominator最终显示时间值\r\n     */\r\n    timeValue: String;\r\n    /**\r\n     * @ignore\r\n     */\r\n    dominatorCom: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 时间下拉面板宽度，根据时间格式宽度各异\r\n     */\r\n    timePanelWidth: number;\r\n    /**\r\n     * @ignore\r\n     * 底部确认按钮是否禁用\r\n     */\r\n    buttonDisabled: boolean;\r\n    /**\r\n     * @ignore\r\n     * placeholder提示文本\r\n     */\r\n    placeholder: string;\r\n    /**\r\n     * @ignore\r\n     */\r\n    hourOptions: Array<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    minuteOptions: Array<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    secondOptions: Array<any>;\r\n    /**\r\n     * @ignore\r\n     */\r\n    selectedHour: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    selectedMinute: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    selectedSecond: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    hourScroll: number;\r\n    /**\r\n     * @ignore\r\n     */\r\n    minuteScroll: number;\r\n    /**\r\n     * @ignore\r\n     */\r\n    secondScroll: number;\r\n    /**\r\n     * @ignore\r\n     * 只展示小时段\r\n     */\r\n    onlyHour: boolean;\r\n    /**\r\n     * @ignore\r\n     * 只展示时分段\r\n     */\r\n    onlyHourMinute: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    oldInputValue: string;\r\n    /**\r\n     * @ignore\r\n     * 面板与dominator的距离\r\n     */\r\n    dominatorSpace: string;\r\n    /**\r\n     * @ignore\r\n     * 是否清除\r\n     */\r\n    isClearClick: boolean;\r\n    private documentKeydownListener;\r\n    constructor(zone: NgZone, hostRef: ElementRef, renderer2: Renderer2, document: any);\r\n    /**\r\n     * @description: 若时间字符串没有一个冒号时处理成合法的事件字符串（加冒号）\r\n     * @param value 时间字符串\r\n     */\r\n    private static addColon;\r\n    /**\r\n     * @description 判读字符串是否是合法的时间\r\n     * @param: time: 校验的时间\r\n     */\r\n    private static isValidTime;\r\n    /**\r\n     * @description: hh/HH/mm/ss 时间格式时，显示的值处理成2位，不足2位补0\r\n     * @param: num : 各个时间显示框的数值\r\n     * @param: length : 需要处理之后的长度\r\n     */\r\n    private static addZero;\r\n    /**\r\n     * @description newVal参数为合法值时返回newVal，否则返回defaultValue参数\r\n     * @param: newVal:新值\r\n     * @param: defaultValue:默认值\r\n     */\r\n    private static verifyTime;\r\n    /**\r\n     * @description 比较value1和value2两个时间值大小.value1 < value2时，返回true；否则返回false  ；\r\n     * @param: value1:比较的前一个值\r\n     * @param: value2:比较的后一个值\r\n     */\r\n    private static isSmaller;\r\n    /**\r\n     * @description 比较value1和value2两个时间值大小.value1 > value2时，返回true；否则返回false  ；\r\n     * @param: value1:比较的前一个值\r\n     * @param: value2:比较的后一个值\r\n     */\r\n    private static isBigger;\r\n    /**\r\n     * @description 比较value1和value2两个时间值大小.value1 <= value2时，返回true；否则返回false  ；\r\n     * @param: value1:比较的前一个值\r\n     * @param: value2:比较的后一个值\r\n     */\r\n    private static isSmallerOrEqual;\r\n    /**\r\n     * @description 比较value1和value2两个时间值大小.value1 >= value2时，返回true；否则返回false  ；\r\n     * @param: value1:比较的前一个值\r\n     * @param: value2:比较的后一个值\r\n     */\r\n    private static isBiggerOrEqual;\r\n    ngOnInit(): void;\r\n    private setTimeOptions;\r\n    private showTimeWithFormat;\r\n    private initVariable;\r\n    private validateMaxAndMin;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    writeValue(value: any): void;\r\n    /**\r\n     * @ignore\r\n     * @description: 组件整体失焦之后处理函数\r\n     */\r\n    onBlur(): void;\r\n    private hidePanel;\r\n    /**\r\n     * @ignore\r\n     * 点击dominator打开面板\r\n     */\r\n    onShowClick(): void;\r\n    /**\r\n     * @ignore\r\n     * 点击确认按钮关闭面板\r\n     */\r\n    okClickFn(): void;\r\n    /**\r\n     * @ignore\r\n     * 时间面板点击选择事件\r\n     * @param val\r\n     * @param title\r\n     */\r\n    onSelect(val: any, title: string): void;\r\n    private setSelectVal;\r\n    private keydownHandlerFn;\r\n    /**\r\n     * 组件快捷键处理tab键 enter键\r\n     */\r\n    onKeydown(event: KeyboardEvent): void;\r\n    /**\r\n     * @ignore\r\n     * enter键的功能：如果面板展开不处理，面板收起则展开，设置datePanel指令的接口值\r\n     */\r\n    responseEnter(): void;\r\n    /**\r\n     * @ignore\r\n     * 输入为中文冒号时，自动转换为英文冒号\r\n     * @param val\r\n     */\r\n    onInputChangeFn(val: any): void;\r\n    /**\r\n     * @ignore\r\n     * 时间框enter事件\r\n     */\r\n    timeKeydownFn(event: KeyboardEvent, val: string): void;\r\n    timeBlur(val: string): void;\r\n    private getScrollData;\r\n    /**\r\n     * @ignore\r\n     * 清除\r\n     */\r\n    onIconClearClick(): void;\r\n    private getSelectedVal;\r\n    private setOptions;\r\n    private setDisableData;\r\n    /**\r\n    * @ignore\r\n    * 时间选择框部分鼠标移出时去除hover样式\r\n    */\r\n    onMouseleave(listCom: TiListComponent): void;\r\n    /**\r\n     * @description:最大值最小值检验\r\n     */\r\n    private validateValue;\r\n    /**\r\n     * @description: 时间格式化及时间各个框显示值设置\r\n     */\r\n    private formatValue;\r\n    /**\r\n     * @description: 校验动态更新的minValue是否是合法值\r\n     * @param: minValue:动态更新的传入的minValue\r\n     */\r\n    private isValidMinValue;\r\n    /**\r\n     * @description: 校验动态更新的maxValue是否是合法值\r\n     * @param: maxValue:动态更新的传入的maxValue\r\n     */\r\n    private isValidMaxValue;\r\n    /**\r\n     * @description: 判断动态更新写入组件的value值是否是一个合法值\r\n     * @param: value 动态更新写入组件的value值\r\n     */\r\n    private isValidValue;\r\n}\r\n"]}