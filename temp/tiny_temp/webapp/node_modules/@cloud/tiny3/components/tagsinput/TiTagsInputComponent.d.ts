import { ElementRef, TemplateRef } from '@angular/core';
import { TiDominatorComponent } from '../dominator/TiDominatorModule';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiDropsearchComponent } from '../dropsearch/TiDropsearchModule';
/**
 * TagsInput标签输入组件
 *
 * TagsInput组件主要实现了一个可以输入标签、可以联想选择标签的功能组件。
 *
 * <example-url>../tiny3demo/#/tagsinput/tagsinput-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiTagsInputComponent extends TiFormComponent {
    /**
     * 设置联想词条列表的数据
     */
    suggestions: Array<any>;
    /**
     * 设置输入框提示,在设置提示内容，并且无选中项时显示
     */
    placeholder: string;
    /**
     * 设置下拉面板的宽度,默认与dominator对齐 'justified' | 'auto'| string
     */
    panelWidth: string;
    /**
     * 支持指定属性作为显示文本
     */
    labelKey: string;
    /**
     * @ignore
     * 内部的input标签
     */
    inputRef: ElementRef;
    /**
     * @ignore
     * 用户写的item模板
     */
    itemTemplate: TemplateRef<any>;
    /**
     * @ignore
     * 内部标签donimator组件
     */
    dominatorCom: TiDominatorComponent;
    /**
     * @ignore
     * 内部标签selectDrop组件
     */
    selectDrop: TiDropsearchComponent;
    /**
     * @ignore
     * input输入框的值
     */
    inputValue: string;
    ngAfterViewInit(): void;
    /**
     * @ignore
     * 处理select事件
     */
    onSelect(event: any): void;
    /**
     * @ignore
     * 处理点击Dominator事件
     */
    onClickDominator(): void;
    /**
     * @ignore
     * 点击选中项的叉号:从选中项中移除当前选中项
     */
    onDelete(event: {
        item: any;
        model: any;
    }): void;
    /**
     * @ignore
     * 输入框失焦时，面板隐藏，根据文本框内容处理是否添加到选中项
     */
    onInputBlur(): void;
    /**
     * @ignore
     * 处理input框聚焦事件
     */
    onInputFocus(event: FocusEvent): void;
    /**
     * @ignore
     * 处理input输入框keyup快捷键功能
     */
    onInputKeyup(event: KeyboardEvent): void;
    /**
     * @ignore
     * 处理input输入框keydown快捷键功能
     * 回删键只能在keydown中处理：因为回删时，在keydown时输入框为当前值，keyup时为删除后的值
     * 比如输入一个字符，回删，获取的应该是回删前的一个字符，而不是没有删除后的
     */
    onInputKeydown(event: KeyboardEvent): void;
    /**
     * @ignore
     * 输入框内容变化时的处理
     * @param inputValue
     */
    onInputChange(inputValue: string): void;
    /**
     * 处理input输入框enter键功能
     * @param event
     */
    private responseEnter;
    /**
     * 处理input输入框回删键功能
     * @param event
     */
    private responseBackspace;
    /**
     * 根据数组中属性找是否有匹配项
     * @param arr 需要匹配的数组
     * @param key 需要查找的属性
     * @param value 属性值
     * @returns
     */
    private findFirstIndex;
    /**
     * 将输入框内容添加到选中标签中
     * @param inputValue 输入框的内容
     */
    private addTagToSelected;
    /**
     * 从suggestions中删除选中项
     */
    private getSuggestions;
    /**
     * @ignore
     * 展开面板时设置下拉选中项和hoverOption
     */
    showSelectDrop(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiTagsInputComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiTagsInputComponent, "ti-tags-input", never, { "suggestions": "suggestions"; "placeholder": "placeholder"; "panelWidth": "panelWidth"; "labelKey": "labelKey"; }, {}, ["itemTemplate"], never, false>;
}

//# sourceMappingURL=TiTagsInputComponent.d.ts.map