{"version":3,"file":"TiTagsInputComponent.d.ts","sources":["TiTagsInputComponent.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, TemplateRef } from '@angular/core';\r\nimport { TiDominatorComponent } from '../dominator/TiDominatorModule';\r\nimport { TiFormComponent } from '../base/TiBaseModule';\r\nimport { TiDropsearchComponent } from '../dropsearch/TiDropsearchModule';\r\n/**\r\n * TagsInput标签输入组件\r\n *\r\n * TagsInput组件主要实现了一个可以输入标签、可以联想选择标签的功能组件。\r\n *\r\n * <example-url>../tiny3demo/#/tagsinput/tagsinput-all</example-url>\r\n */\r\nexport declare class TiTagsInputComponent extends TiFormComponent {\r\n    /**\r\n     * 设置联想词条列表的数据\r\n     */\r\n    suggestions: Array<any>;\r\n    /**\r\n     * 设置输入框提示,在设置提示内容，并且无选中项时显示\r\n     */\r\n    placeholder: string;\r\n    /**\r\n     * 设置下拉面板的宽度,默认与dominator对齐 'justified' | 'auto'| string\r\n     */\r\n    panelWidth: string;\r\n    /**\r\n     * 支持指定属性作为显示文本\r\n     */\r\n    labelKey: string;\r\n    /**\r\n     * @ignore\r\n     * 内部的input标签\r\n     */\r\n    inputRef: ElementRef;\r\n    /**\r\n     * @ignore\r\n     * 用户写的item模板\r\n     */\r\n    itemTemplate: TemplateRef<any>;\r\n    /**\r\n     * @ignore\r\n     * 内部标签donimator组件\r\n     */\r\n    dominatorCom: TiDominatorComponent;\r\n    /**\r\n     * @ignore\r\n     * 内部标签selectDrop组件\r\n     */\r\n    selectDrop: TiDropsearchComponent;\r\n    /**\r\n     * @ignore\r\n     * input输入框的值\r\n     */\r\n    inputValue: string;\r\n    ngAfterViewInit(): void;\r\n    /**\r\n     * @ignore\r\n     * 处理select事件\r\n     */\r\n    onSelect(event: any): void;\r\n    /**\r\n     * @ignore\r\n     * 处理点击Dominator事件\r\n     */\r\n    onClickDominator(): void;\r\n    /**\r\n     * @ignore\r\n     * 点击选中项的叉号:从选中项中移除当前选中项\r\n     */\r\n    onDelete(event: {\r\n        item: any;\r\n        model: any;\r\n    }): void;\r\n    /**\r\n     * @ignore\r\n     * 输入框失焦时，面板隐藏，根据文本框内容处理是否添加到选中项\r\n     */\r\n    onInputBlur(): void;\r\n    /**\r\n     * @ignore\r\n     * 处理input框聚焦事件\r\n     */\r\n    onInputFocus(event: FocusEvent): void;\r\n    /**\r\n     * @ignore\r\n     * 处理input输入框keyup快捷键功能\r\n     */\r\n    onInputKeyup(event: KeyboardEvent): void;\r\n    /**\r\n     * @ignore\r\n     * 处理input输入框keydown快捷键功能\r\n     * 回删键只能在keydown中处理：因为回删时，在keydown时输入框为当前值，keyup时为删除后的值\r\n     * 比如输入一个字符，回删，获取的应该是回删前的一个字符，而不是没有删除后的\r\n     */\r\n    onInputKeydown(event: KeyboardEvent): void;\r\n    /**\r\n     * @ignore\r\n     * 输入框内容变化时的处理\r\n     * @param inputValue\r\n     */\r\n    onInputChange(inputValue: string): void;\r\n    /**\r\n     * 处理input输入框enter键功能\r\n     * @param event\r\n     */\r\n    private responseEnter;\r\n    /**\r\n     * 处理input输入框回删键功能\r\n     * @param event\r\n     */\r\n    private responseBackspace;\r\n    /**\r\n     * 根据数组中属性找是否有匹配项\r\n     * @param arr 需要匹配的数组\r\n     * @param key 需要查找的属性\r\n     * @param value 属性值\r\n     * @returns\r\n     */\r\n    private findFirstIndex;\r\n    /**\r\n     * 将输入框内容添加到选中标签中\r\n     * @param inputValue 输入框的内容\r\n     */\r\n    private addTagToSelected;\r\n    /**\r\n     * 从suggestions中删除选中项\r\n     */\r\n    private getSuggestions;\r\n    /**\r\n     * @ignore\r\n     * 展开面板时设置下拉选中项和hoverOption\r\n     */\r\n    showSelectDrop(): void;\r\n}\r\n"]}