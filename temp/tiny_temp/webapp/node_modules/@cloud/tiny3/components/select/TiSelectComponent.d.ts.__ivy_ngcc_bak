import { EventEmitter, TemplateRef } from '@angular/core';
import { TiWholeComponent } from '../base/TiBaseModule';
import { TiDominatorComponent } from '../dominator/TiDominatorModule';
import { TiDropsearchComponent } from '../dropsearch/TiDropsearchModule';
import { TiPositionType } from '../../utils/Position';
/**
 * Select选择下拉组件
 *
 * 支持单选/多选，分组，搜索，懒加载。
 *
 * 单选主要功能为从一个数据集合中选择某一条数据，单选与RadioGroup功能相同，只是视觉呈现不同。
 *
 * 多选主要功能是从一个数据集合中任意选择多条数据，与checkboxGroup功能相同，只是视觉呈现不同。
 *
 * <example-url>../tiny3demo/#/select/select-all</example-url>
 */
export declare class TiSelectComponent extends TiWholeComponent {
    /**
     * @ignore
     * dominator 到drop的距离
     */
    dominatorSpace: string;
    /**
     * 是否多选
     */
    multiple: boolean;
    /**
     * 多选时, 选中项显示几行
     *
     * 版本 v9.0.4 添加
     */
    maxLine: number;
    /**
     * 选中项文本超出时tip展开方向
     *
     * 9.0.3 新增
     */
    selectedTipPosition: TiPositionType;
    /**
     * 预留文本
     */
    placeholder: string;
    /**
     * 下拉面板的最大显示宽度，该变量与下拉类组件保持一致
     *
     * 1."justified"(默认): 下拉框的宽度与Select组件的宽度保持一致；
     *
     * 2."auto": 下拉框的宽度根据下拉选项的内容自动撑开；
     *
     * 3.表示宽度的字符串: 设置固定的下拉框宽度(不小于Select组件的宽度)。例如："200px"
     */
    panelWidth: 'justified' | 'auto' | string;
    /**
     * 下拉面板的最大显示高度，溢出时则出滚动条。
     *
     *  缺省值 : 最大显示8条数据（有无searchbox都显示8条）
     */
    panelMaxHeight: string;
    /**
     * 无数据时的显示文本
     */
    noDataText: string;
    /**
     * 下拉选项的全部数据
     */
    options: Array<any>;
    /**
     * 要显示的字段
     */
    labelKey: string;
    /**
     * 要搜索的字段数组, 默认是[labelKey]
     */
    searchKeys: Array<string>;
    /**
     * 是否显示搜索框
     */
    searchable: boolean;
    /**
     * @ignore
     * 大小样式
     */
    size: 'default' | 'small';
    /**
     * 文字超长显示...，hover时tip弹出方向
     */
    tipPosition: TiPositionType;
    /**
     * 单选下拉选择框是否开启清除已选项功能
     *
     * 3.0.8新增
     */
    clearable: boolean;
    /**
     * 多选下拉选择框是否开启全选功能
     *
     * 3.1.2新增
     */
    selectAll: boolean;
    /**
     * 设置是否显示已选项的个数，默认不显示，multiple为true时生效
     *
     * 10.1.0新增
     */
    showSelectedNumber: boolean;
    /**
     * 用户想要打开面板的通知事件，一般用于数据懒加载。使用方式，见懒加载示例
     */
    readonly beforeOpen: EventEmitter<TiSelectComponent>;
    /**
     * 多选选中/取消选中事件，向外通知option数据，需要自行判断option数据是否选中。
     */
    readonly select: EventEmitter<any>;
    /**
     * 当单选下拉选择框开启清除已选项功能时，点击清除按钮时触发
     *
     * 3.0.8新增
     */
    readonly clear: EventEmitter<any>;
    /**
     * @ignore
     * 10.0.2新增
     *
     * 后台搜索，传出搜索框的值
     */
    readonly beforeSearch: EventEmitter<any>;
    /**
     * @ignore
     * 用户写的item模板，firstTemplate是第一个或者唯一的template
     */
    firstTemplate: TemplateRef<any>;
    itemTemplate: TemplateRef<any>;
    selectedTemplate: TemplateRef<any>;
    placeholderTemplate: TemplateRef<any>;
    footerTemplate: TemplateRef<any>;
    /**
     * @ignore
     * 内部标签donimator组件
     */
    dominatorCom: TiDominatorComponent;
    /**
     * @ignore
     * 内部标签Droplist组件
     */
    dropsearchCom: TiDropsearchComponent;
    protected oldSearchable: boolean;
    pagination: any;
    ngOnInit(): void;
    /**
     * 兼容旧版：
     * 3.1.2版select只能内嵌一个模板，无命名。
     * 新版可以内嵌四个模板，示例书写要求都命名。
     * 但需要兼容旧版无命名测试用例。
     */
    ngAfterContentInit(): void;
    ngAfterViewChecked(): void;
    /**
     * 切换面板开合状态
     */
    toggle(): void;
    /**
     * 打开面板
     */
    open(): void;
    /**
     * 闭合面板
     */
    close(): void;
    /**
     * @ignore
     * 处理点击Dominator事件
     */
    onClickDominator(): void;
    /**
     * @ignore
     * ti-select键盘事件处理：回车/空格情况下，展开面板
     * @param event 按键事件
     * @returns void
     */
    onKeydown(event: KeyboardEvent): void;
    /**
     * @ignore
     * 失焦情况下，仅关闭面板，不做聚焦等处理
     */
    onBlur(): void;
    /**
     *  点击或者toggle()，触发想要打开面板
     */
    protected wantOpen(): void;
    /**
     * @ignore
     * 多选带searchbox场景下，dominator中元素删除时，需要聚焦于searchbox
     */
    onDeleteDominator(): void;
    /**
     * @ignore
     * 触发select事件
     */
    onSelect(option: any): void;
    /**
     * @ignore
     * 单选点击清除按钮时触发clear事件, 如果下拉中有搜索,则需要聚焦于searchbox。
     */
    onClearDominator(): void;
    /**
     * @ignore
     */
    onBeforeSearch(): void;
    /**
     * @ignore
     * 10.0.2新增
     *
     * 获取可搜索场景下，搜索框的内容
     * @returns 搜索框的内容
     */
    getSearchWord(): string;
    /**
     * @ignore
     * 10.0.2新增
     *
     * 设置搜索结果
     * @params 业务搜索后的结果，组件不再进行数据处理
     */
    setSearchResult(searchResult: Array<any>): void;
}
