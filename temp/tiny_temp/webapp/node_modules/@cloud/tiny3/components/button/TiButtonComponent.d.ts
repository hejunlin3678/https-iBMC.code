import { Renderer2, ElementRef, NgZone, AfterViewInit } from '@angular/core';
import { TiAutofocusComponent } from '../base/TiBaseModule';
/**
 * Button按钮组件
 *
 * 尽管这是一个组件，但使用方法有点像属性指令。
 *
 * 按钮组件基于原生button组件进行扩展，原生button加tiButton属性即为tiny button，button的多种样式则通过为button设置不同的样式类来进行区分，具体用法见示例。
 *
 * <example-url>../tiny3demo/#/button/button-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiButtonComponent extends TiAutofocusComponent implements AfterViewInit {
    renderer: Renderer2;
    private hostEle;
    private zone;
    /**
     * 按钮颜色：默认按钮/强调色按钮/主题色按钮
     */
    color: 'default' | 'danger' | 'primary';
    /**
     * 是否含有icon
     */
    icon: boolean;
    /**
     * 是否为纯图标按钮
     */
    onlyIcon: boolean;
    /**
     * 样式大小：XS/S/M/L四个尺寸按钮 默认M尺寸
     */
    size: 'xs' | 'small' | 'middle' | 'large';
    /**
     * 10.1.4新增
     *
     * 是否处于加载状态，主要用于弹窗的异步任务提交场景
     */
    loading: boolean;
    constructor(renderer: Renderer2, hostEle: ElementRef, zone: NgZone);
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiButtonComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiButtonComponent, "[tiButton]", never, { "color": "color"; "icon": "icon"; "onlyIcon": "onlyIcon"; "size": "size"; "loading": "loading"; }, {}, never, ["*"], false>;
}

//# sourceMappingURL=TiButtonComponent.d.ts.map