import { ElementRef, Renderer2, SimpleChanges } from '@angular/core';
import { TiTableComponent } from './TiTableComponent';
import { TiColsToggleDropComponent } from './TiColsToggleDropComponent';
import { TiSelectComponent } from '../select/TiSelectModule';
import { TiPositionType } from '../../utils/Position';
/**
 * TiColsToggle 控制列动态隐藏/显示的组件
 *
 * ti-cols-toggle 用来显示列操作按钮，点击该按钮可在打开的下拉中设置各列的隐藏/显示；
 * 在 ti-table 标签内，开发者可灵活设置其位置。
 *
 * TiTable 上的 columns 接口传入值各项(列)的 show 和 title 属性值影响着各列的隐藏/显示状
 * 态,具体可参考 TiTableComponen t组件的 columns 输入接口说明。
 *
 * 开发者必须给需要动态显示/隐藏的列(th，td)使用 ngIf, 利用 ngIf 和 tiTable 上的 columns
 * 接口值中每列的show的值来控制当前列的显示或隐藏。
 *
 * ### 接口说明
 * **Inputs：**
 *
 * |     名称    |  类型   | 默认值   | 功能描述  |
 * | --------   | :-----   | :---- | :---- |
 * |  disabled   | boolean  | false | 设置列操作按钮是否禁用 |
 * | searchable   | boolean  | false | 是否显示搜索框 |
 * | selectAll   | boolean  | false | 是否开启全选功能。3.1.2新增 |
 * | panelWidth   |  string  | 'justified' | 下拉面板的宽度，可选值为'justified'(默认), 'auto'或自定义宽度，但宽度不能小于select面板的宽度 |
 * | noDataText   |  string  | '...' | 无数据时的显示文本。10.0.3版本新增 |
 * | select   | EventEmitter<TiTableColumns>  | 无 | 选中/取消选中事件，向外通知当前项数据，需要自行判断当前项是否选中。Tiny3.1.2 版本新增 |
 * | focus   | HTML事件  | 无 | 聚焦事件 |
 * | blur   | HTML事件  | 无 | 失焦事件 |
 *
 * <p><span style="color: red">以下说明不可用，不做参考。</span>该组件只有以上disabled、searchable、panelWidth、selectAll 这四个Input接口
 * 和foucs、blur、select 这三个事件接口可用，其余方法、Input、输出等(继承于TiSelectComponent,是供select的内部使用的)都不可用</p>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiColsToggleComponent extends TiSelectComponent {
    private static readonly DEFAULT_PANEL_WIDTH;
    private static readonly MAX_PANEL_WIDTH;
    private static readonly MIN_PANEL_WIDTH;
    /**
     * @ignore
     * 10.0.3版本之前服务使用tiTip指令自行实现提示
     *
     * 此处做兼容性处理，添加该接口判断服务是否使用指令实现
     *
     * 10.0.3新增
     */
    tiTip: string;
    /**
     * 设置tip提示内容，默认文本'自定义列表项'（国际化）
     *
     * 10.0.3新增
     */
    tipContent: string;
    /**
     * 设置tip提示方向
     *
     * 10.0.3新增
     */
    tipPosition: TiPositionType;
    /**
     * @ignore
     */
    toggleMenuEleRef: ElementRef;
    /**
     * @ignore
     */
    dropsearchCom: TiColsToggleDropComponent;
    /**
     * @ignore
     */
    table: TiTableComponent;
    private shouldUpdateFocusableElems;
    constructor(table: TiTableComponent, elementRef: ElementRef, renderer2: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * @ignore
     * 在失焦时，通知更新了表格的列数据，用于表格记忆上传列显示数据
     */
    onBlur(): void;
    private updateFocusableElems;
    private setDropPanelWidth;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiColsToggleComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiColsToggleComponent, "ti-cols-toggle", never, { "tipContent": "tipContent"; "tipPosition": "tipPosition"; "tiTip": "tiTip"; }, {}, never, never, false>;
}

//# sourceMappingURL=TiColsToggleComponent.d.ts.map