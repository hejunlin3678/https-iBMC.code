import { ApplicationRef, ElementRef, Renderer2, TemplateRef } from '@angular/core';
import { TiHostLayout } from '../../utils/Position';
import { TiBaseComponent } from '../base/TiBaseModule';
import { Subject } from 'rxjs';
/**
 * @ignore
 * 纯下拉面板组件，只有面板，没有内容。因为有时朝上弹，dropdown/dropup合称drop
 */
export declare class TiDropComponent extends TiBaseComponent {
    protected hostRef: ElementRef;
    protected renderer: Renderer2;
    private applicationRef;
    /**
     * 设置下拉距离dominator的距离：默认没有间距
     */
    static readonly DOMINATOR_SPACE: number;
    /**
     * 控制下拉框距离浏览器上下边沿的距离为5px，预留一个余量，防止显示不了边框
     */
    private static readonly BROWSER_SPACE;
    /**
     * 下拉面板的最大显示宽度，该变量与下拉类组件保持一致
     *
     * 1."justified"(默认): 下拉框的宽度与Select组件的宽度保持一致；
     *
     * 2."auto": 下拉框的宽度根据下拉选项的内容自动撑开；
     *
     * 3.表示宽度的字符串: 设置固定的下拉框宽度(不小于Select组件的宽度)。例如："200px"
     */
    panelWidth: string;
    /**
     * 面板最大高度
     */
    panelMaxHeight: string;
    /**
     * 10.0.4新增
     * 面板高度
     */
    panelHeight: string;
    /**
     * 参考位置元素
     */
    dominatorElem: any;
    /**
     * 空间不足时，依然保持固定高度。 select search等是可变最大高度，日历是固定最大高度。
     * 再就是上下空间都不足时，日历从下方弹出。
     */
    fixMaxHeight: boolean;
    /**
     * 主题样式控制
     */
    theme: 'border' | 'noborder';
    /**
     * 距离宿主元素距离，像素值
     */
    dominatorSpace: string;
    /**
     * 距离浏览器上或下边沿的距离，像素值
     */
    browserSpace: string;
    /**
     * 在定位基础上的水平方向的偏移，向左偏移为负值，向右偏移为正值，像素值
     */
    hOffset: number;
    /**
     * 准备去除
     */
    determinPositionFn: (layout: any) => string;
    /**
     * 面板对齐方式
     */
    panelAlign: 'left' | 'right';
    /**
     * @ignore
     */
    dropTemplateRef: TemplateRef<any>;
    /**
     * @ignore
     */
    isUp: Boolean;
    /**
     * @ignore
     */
    dropSubject: Subject<any>;
    private posHandles;
    constructor(hostRef: ElementRef, renderer: Renderer2, applicationRef: ApplicationRef);
    /**
     * 外部接口: 获取当前状态, 只读不写
     */
    get isShow(): boolean;
    ngOnDestroy(): void;
    /**
     * 切换面板状态：打开/关闭
     */
    toggle(): void;
    /**
     * 打开面板
     */
    show(): void;
    /**
     * 关闭面板
     */
    hide(): void;
    private appendToBodyFarAway;
    private setShow;
    /**
     * 监听位置变化, 并隐藏面板。打开面板时监听，关闭和销毁时取消监听。
     * TODO: 尝试hide改为rePosition
     */
    private listenPosition;
    private unlistenPosition;
    /**
     * 确定元素的显示样式，包括位置、最大高度、向上或向下
     * @returns 定位结果对象
     */
    setPosition(): TiHostLayout;
    resetPosition(): void;
    private setPanelWidth;
    private defaultDeterminPositionFn;
}
