{"version":3,"file":"TiAlertComponent.d.ts","sources":["TiAlertComponent.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ElementRef, Renderer2 } from '@angular/core';\r\nimport { TiBaseComponent } from '../base/TiBaseModule';\r\n/**\r\n * Alert组件用于消息提示，提供了四种类型\r\n *\r\n * <example-url>../tiny3demo/#/alert/alert-all</example-url>\r\n */\r\nexport declare class TiAlertComponent extends TiBaseComponent {\r\n    protected hostRef: ElementRef;\r\n    protected renderer: Renderer2;\r\n    private document;\r\n    /**\r\n     * 是否显示左侧提示类型图标\r\n     */\r\n    typeIcon: boolean;\r\n    /**\r\n     * 是否显示关闭按钮\r\n     */\r\n    closeIcon: boolean;\r\n    /**\r\n     * 显示多长时间后消失，默认不延迟消失，只在点击关闭按钮时消失\r\n     */\r\n    dismissOnTimeout: number;\r\n    /**\r\n     * 是否触发下拉类组件消失的事件，适用于alert的呈现状态影响页面下拉类组件位置的场景\r\n     */\r\n    triggerScroll: boolean;\r\n    /**\r\n     * 弹框类型\r\n     */\r\n    type: 'success' | 'error' | 'warn' | 'prompt' | 'simple';\r\n    /**\r\n     * 样式大小\r\n     */\r\n    size: 'normal' | 'small';\r\n    private isOpen;\r\n    /**\r\n     * 是否为深色背景提示框\r\n     */\r\n    darkTheme: boolean;\r\n    /**\r\n     * @ignore\r\n     * 是否设置阴影，组件规范定义无阴影（页面级及卡片内）\r\n     */\r\n    boxShadow: boolean;\r\n    /**\r\n     * 用于设置弹框是否弹出，可动态修改，默认值为true\r\n     *\r\n     * **请注意：动态修改情况下，需要设置为双向绑定，以确保组件延迟消失时open状态的正确感知**\r\n     *\r\n     * @type：boolean\r\n     *\r\n     */\r\n    get open(): boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    set open(value: boolean);\r\n    /**\r\n     * open状态变化事件，点击关闭按钮或延时消失时都会触发\r\n     */\r\n    readonly openChange: EventEmitter<Boolean>;\r\n    private timeoutId;\r\n    constructor(hostRef: ElementRef, renderer: Renderer2, document: any);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * @ignore\r\n     * alert呈现后，处理多长时间后消失\r\n     */\r\n    dismissOnTime(): void;\r\n    /**\r\n     * @ignore\r\n     * 关闭alert方法，供内部关闭调用\r\n     */\r\n    close(): void;\r\n    /**\r\n     * @ignore\r\n     * alert出现或者消失时，可能会触发页面滚动，此时需要触发tiScroll事件通知相关组件\r\n     */\r\n    triggerScrollEvent(): void;\r\n    private clearTimeout;\r\n}\r\n"]}