import { EventEmitter, ElementRef, Renderer2 } from '@angular/core';
import { TiBaseComponent } from '../base/TiBaseModule';
/**
 * Alert组件用于消息提示，提供了四种类型
 *
 * <example-url>../tiny3demo/#/alert/alert-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiAlertComponent extends TiBaseComponent {
    protected hostRef: ElementRef;
    protected renderer: Renderer2;
    private document;
    /**
     * 是否显示左侧提示类型图标
     */
    typeIcon: boolean;
    /**
     * 是否显示关闭按钮
     */
    closeIcon: boolean;
    /**
     * 显示多长时间后消失，默认不延迟消失，只在点击关闭按钮时消失
     */
    dismissOnTimeout: number;
    /**
     * 是否触发下拉类组件消失的事件，适用于alert的呈现状态影响页面下拉类组件位置的场景
     */
    triggerScroll: boolean;
    /**
     * 弹框类型
     */
    type: 'success' | 'error' | 'warn' | 'prompt' | 'simple';
    /**
     * 样式大小
     */
    size: 'normal' | 'small';
    private isOpen;
    /**
     * 是否为深色背景提示框
     */
    darkTheme: boolean;
    /**
     * @ignore
     * 是否设置阴影，组件规范定义无阴影（页面级及卡片内）
     */
    boxShadow: boolean;
    /**
     * 用于设置弹框是否弹出，可动态修改，默认值为true
     *
     * **请注意：动态修改情况下，需要设置为双向绑定，以确保组件延迟消失时open状态的正确感知**
     *
     * @type：boolean
     *
     */
    get open(): boolean;
    /**
     * @ignore
     */
    set open(value: boolean);
    /**
     * open状态变化事件，点击关闭按钮或延时消失时都会触发
     */
    readonly openChange: EventEmitter<Boolean>;
    private timeoutId;
    constructor(hostRef: ElementRef, renderer: Renderer2, document: any);
    ngOnInit(): void;
    ngOnDestroy(): void;
    /**
     * @ignore
     * alert呈现后，处理多长时间后消失
     */
    dismissOnTime(): void;
    /**
     * @ignore
     * 关闭alert方法，供内部关闭调用
     */
    close(): void;
    /**
     * @ignore
     * alert出现或者消失时，可能会触发页面滚动，此时需要触发tiScroll事件通知相关组件
     */
    triggerScrollEvent(): void;
    private clearTimeout;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiAlertComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiAlertComponent, "ti-alert", never, { "typeIcon": "typeIcon"; "closeIcon": "closeIcon"; "triggerScroll": "triggerScroll"; "type": "type"; "size": "size"; "darkTheme": "darkTheme"; "boxShadow": "boxShadow"; "open": "open"; "dismissOnTimeout": "dismissOnTimeout"; }, { "openChange": "openChange"; }, never, ["*"], false>;
}

//# sourceMappingURL=TiAlertComponent.d.ts.map