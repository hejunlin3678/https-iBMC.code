import { ElementRef, EventEmitter, NgZone, Renderer2, SimpleChanges, TemplateRef } from '@angular/core';
import { TiFormComponent } from '../base/TiBaseModule';
import { TiPositionType } from '../../utils/Position';
/**
 * @ignore
 *  列表组件，使用者有menu、droplist
 */
export declare class TiListComponent extends TiFormComponent {
    private zone;
    protected static readonly SCROLL_TOP_TIME: number;
    multiple: boolean;
    options: Array<any>;
    labelKey: string;
    tipPosition: TiPositionType;
    noDataText: string;
    hideEmptyOption: boolean;
    selectAll: boolean;
    /**
     * 10.0.4 版本新增，
     * 用于配置是否显示children字段数据，大部分场景需要显示children，cascader不需要
     */
    showChildren: boolean;
    /**
     * @ignore
     * 10.1.0新增
     * 适配内部time类组件，点选滚动效果,暂不开放。
     */
    scrollTop: number;
    /**
     * 选中事件，向外通知option数据
     */
    readonly select: EventEmitter<any>;
    readonly hover: EventEmitter<any>;
    itemTemplate: TemplateRef<any>;
    ulRef: ElementRef;
    /**
     *  需要阻止失焦标记: 点击面板时，会触发失焦，需要阻止失焦。
     *  IE兼容性问题: 点击滚动条，触发失焦，面板会收起
     *  修复方案：点击list面板区域（包含滚动条）后，给失焦元素强制获取焦点。修改Form基类不触发组件整体失焦。
     */
    private stopBlur;
    private unlistenIEScrollbarBugFns;
    selectAllState: boolean;
    selectAllText: string;
    optionSelectAll: string;
    private _hoverOption;
    get hoverOption(): any;
    set hoverOption(hoverOption: any);
    protected optionScrollTopLastTime: number;
    isDisabledFn: (item: any) => boolean;
    constructor(render: Renderer2, hostRef: ElementRef, zone: NgZone);
    onKeydown(event: KeyboardEvent): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    writeValue(model: any): void;
    private setScrollFn;
    onMousedownItem(event: MouseEvent, own: HTMLElement): void;
    onMouseupItem(event: MouseEvent, own: HTMLElement): void;
    onMouseleaveItem(event: MouseEvent, own: HTMLElement): void;
    removeClass(event: MouseEvent, own: HTMLElement): void;
    onClickItem(event: MouseEvent, option: any): void;
    private selectOption;
    private selectAllOptions;
    setSelectedAllState(): void;
    private getInsertIndex;
    onMouseenterItem(event: MouseEvent, option: any): void;
    nextOption(isUp: boolean): void;
    protected getListOptions(): Array<any>;
    scrollToSelected(): void;
    /**
     * 设置hoverOption
     * 用于数据更新时，非鼠标或快捷键操作时
     */
    private setHoverOption;
    /**
     * 单选有model的时候，单选的model不会是禁用项，hoverOption应当是model，
     * 多选有model的时候，hoverOption是第一个非禁用的model，如果model全部禁用，hoverOption是第一个禁用项往下的第一个可用项。
     */
    private getHoverOptionInModel;
    /**
     * 判断当前list中是否有选中项，过滤后的数据有可能不含有选中项
     */
    private hasSelectedinList;
    private getGroupHoverOption;
    private scrollToEle;
    private optionScollTop;
    isGroup(item: any): boolean;
    protected isSelectable(item: any): boolean;
    isSelected(item: any): boolean;
    /**
     * 修复点击IE滚动条，面板关闭。
     * 打开面板时监听，关闭和销毁面板时取消监听。
     */
    listenIESrollbarBug(): void;
    unlistenIESrollbarBug(): void;
}
