{"version":3,"file":"TiZoomComponent.d.ts","sources":["TiZoomComponent.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { TiRenderer } from '../../services/renderer/TiRenderer';\r\n/**\r\n * @ignore\r\n *\r\n * 10.0.3版本增加，暂时不对外开放\r\n *\r\n * 该指令可以实现图片放大镜功能，添加tiZoom后会创建放大区域选择器元素（div）和放大结果呈现元素（div）\r\n *\r\n * 通过设置放大结果的background-image、background-size和background-position来达到放大效果\r\n *\r\n * 10.1.0版本从指令调整为组件形式\r\n *\r\n * <example-url>../tiny3demo/#/zoom/zoom-all</example-url>\r\n */\r\nexport declare class TiZoomComponent implements OnInit, OnDestroy {\r\n    private renderer;\r\n    private tiRenderer;\r\n    private static readonly ZOOM_VIEWER_BORDER_WIDTH;\r\n    zoomSelectorLength: number;\r\n    zoomViewerLength: number;\r\n    private ratio;\r\n    private hostEle;\r\n    private parentEle;\r\n    private imgSrc;\r\n    private zoomSelectorEle;\r\n    private zoomViewerEle;\r\n    private selectorMouseMoveHandler;\r\n    private selectorMouseLeaveHandler;\r\n    constructor(hostRef: ElementRef, renderer: Renderer2, tiRenderer: TiRenderer);\r\n    ngOnInit(): void;\r\n    /**\r\n     * @ignore\r\n     * 图片加载成功事件处理\r\n     */\r\n    onHostLoad(event: any): void;\r\n    /**\r\n     * @ignore\r\n     * 鼠标进入宿主元素，创建放大效果相关元素\r\n     */\r\n    onHostMouseEnter(event: any): void;\r\n    /**\r\n     * @ignore\r\n     * 鼠标离开宿主元素，移除放大效果相关元素\r\n     */\r\n    onHostMouseLeave(event: any): void;\r\n    /**\r\n     * 设置父元素\r\n     */\r\n    private setParentEle;\r\n    /**\r\n     * 创建选择遮罩，初始化样式，增加事件监听\r\n     */\r\n    private createZoomSelector;\r\n    /**\r\n     * 创建放大结果呈现元素，初始化样式\r\n     */\r\n    private createZoomViewer;\r\n    private getCursorPos;\r\n    /**\r\n     * 计算选择遮罩偏移和放大区域\r\n     */\r\n    private reStyleResults;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * 移除选择遮罩和放大结果元素、解绑相关事件\r\n     */\r\n    private removeZoomEle;\r\n}\r\n"]}