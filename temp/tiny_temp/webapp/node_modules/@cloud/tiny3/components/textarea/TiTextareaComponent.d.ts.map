{"version":3,"file":"TiTextareaComponent.d.ts","sources":["TiTextareaComponent.d.ts"],"names":[],"mappingssourcesContent":["import { AfterViewChecked, AfterViewInit, DoCheck, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';\r\nimport { TiAutofocusComponent } from '../base/TiBaseModule';\r\nimport { NgControl } from '@angular/forms';\r\n/**\r\n * Textarea文本框组件\r\n *\r\n * 文本框组件基于原生textarea标签进行扩展，原生textarea加tiTextarea属性指令即为textarea组件。\r\n *\r\n * <example-url>../tiny3demo/#/textarea/textarea-all</example-url>\r\n */\r\nexport declare class TiTextareaComponent extends TiAutofocusComponent implements OnInit, AfterViewChecked, AfterViewInit, DoCheck, OnDestroy {\r\n    private zone;\r\n    private formControl;\r\n    private document;\r\n    /**\r\n     * 用来调整文本框大小，该属性提供了四个属性值:\r\n     *\r\n     * none(不可调整组件大小):\r\n     *\r\n     * vertical(仅可调整垂直方向的大小，即调整组件的高度)\r\n     *\r\n     * horizontal(仅可调节水平方向的大小，即调整组件的宽度)\r\n     *\r\n     * both(水平和垂直方向均可调节，宽高都可调节)\r\n     */\r\n    resize: 'none' | 'vertical' | 'horizontal' | 'both';\r\n    /**\r\n     * @ignore\r\n     */\r\n    private resizeIconRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    private eleCharacterRef;\r\n    /**\r\n     * @ignore\r\n     */\r\n    private charactersCountRef;\r\n    /**\r\n     * @ignore\r\n     * 是否设置maxlength属性\r\n     */\r\n    hasMaxlength: boolean;\r\n    /**\r\n     * @ignore\r\n     * 用户设置的最大值\r\n     */\r\n    maxLength: number;\r\n    /**\r\n     * @ignore\r\n     * 当前输入内容的长度\r\n     */\r\n    countLength: number;\r\n    private options;\r\n    private defaultStyle;\r\n    private element;\r\n    private attrs;\r\n    private container;\r\n    private textAreaMinWidth;\r\n    private textAreaMinHeight;\r\n    private textAreaMaxWidth;\r\n    private textAreaMaxHeight;\r\n    private isVisibleInit;\r\n    private isFirstFocus;\r\n    private documentMouseMoveListener;\r\n    private documentMouseUpListener;\r\n    constructor(elementRef: ElementRef, renderer: Renderer2, zone: NgZone, formControl: NgControl, document: any);\r\n    ngOnInit(): void;\r\n    ngAfterViewInit(): void;\r\n    ngAfterViewChecked(): void;\r\n    ngDoCheck(): void;\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    onFocus(): void;\r\n    private setContainerSize;\r\n    private setContainerClass;\r\n    private initFn;\r\n    private moveNode;\r\n    private setMaxLengthFn;\r\n    private resizeFn;\r\n    private setCountLength;\r\n    private mouseMove;\r\n    private stopResize;\r\n    private getSizeNumber;\r\n    private updateTextAreaSize;\r\n    private toggleTextSelection;\r\n    /**\r\n     * @ignore\r\n     * 绑定在document上的mouseMove事件\r\n     */\r\n    mouseMoveHandlerFn: ($event: MouseEvent) => void;\r\n    /**\r\n     * @ignore\r\n     * 绑定在document上的mouseUp事件\r\n     */\r\n    mouseUpHandlerFn: () => void;\r\n    private isResizing;\r\n}\r\n"]}