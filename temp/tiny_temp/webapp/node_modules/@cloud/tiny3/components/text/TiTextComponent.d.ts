import { DoCheck, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { NgControl } from '@angular/forms';
import { TiRenderer } from '../../services/renderer/TiRenderer';
import { TiAutofocusComponent } from '../base/TiBaseModule';
/**
 * 本组件基于原生input标签进行扩展，原生input加 tiText 属性即为text组件,
 * 原生input的所有属性以及 Angular 的各种属性指令都可以使用。
 *
 * <example-url>../tiny3demo/#/text/text-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiTextComponent extends TiAutofocusComponent implements OnInit, DoCheck, OnDestroy {
    private tiRenderer;
    private formControl;
    private zone;
    private static readonly CLEAR_WIDTH;
    private static readonly PASSWORD_WIDTH;
    /**
     * clear事件：当开启清除功能时(使用clearable属性)，点击删除按钮触发
     */
    readonly clear: EventEmitter<MouseEvent>;
    /**
     * @ignore
     *
     * autoComplete 也使用了该变量
     */
    isClearActive: boolean;
    /**
     * @ignore
     *
     * autoComplete 也使用了该变量
     */
    isShowClear: boolean;
    /**
     * @ignore
     */
    isNoBorder: boolean;
    /**
     * @ignore
     *
     * 初始获取文本框类型
     */
    isPassword: boolean;
    private isFirstFocus;
    private hasClear;
    private pwdHackEle;
    private lastIsHover;
    private lastDisabled;
    private isVisible;
    private isNoEye;
    constructor(elementRef: ElementRef, renderer: Renderer2, tiRenderer: TiRenderer, formControl: NgControl, zone: NgZone);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    /**
     * @ignore
     */
    handleFocus(): void;
    private initFn;
    /**
     * @ignore
     * 鼠标移入清除按钮区域时，给宿主元素添加ti-text-clear-active样式
     */
    handleMousemove: (event: MouseEvent) => void;
    /**
     * @ignore
     */
    handleMouseout: (event: MouseEvent) => void;
    /**
     * @ignore
     * 切换密码可见不可见时，输入框需处于失焦状态
     */
    handleMousedown: (event: MouseEvent) => void;
    /**
     *
     * @param isHover true标示悬浮，false标示非悬浮，null标示禁用，undefinded标示不画叉号。
     * @returns
     */
    setClearBackgroud(isHover: boolean): void;
    /**
     *  @ignore
     * 当在清除按钮区域点击时，清空输入框内容
     */
    handleClick: (event: MouseEvent) => void;
    private handlePassword;
    private controlClearShow;
    private controlEyeShow;
    private isIconField;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiTextComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiTextComponent, "[tiText]", never, {}, { "clear": "clear"; }, never, never, false>;
}

//# sourceMappingURL=TiTextComponent.d.ts.map