{"version":3,"file":"TiTreeselectComponent.d.ts","sources":["TiTreeselectComponent.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, SimpleChanges } from '@angular/core';\r\nimport { TiDominatorComponent } from '../dominator/TiDominatorModule';\r\nimport { TiDropComponent } from '../drop/TiDropModule';\r\nimport { TiSearchboxNotsearchComponent } from '../searchbox/TiSearchboxModule';\r\nimport { TiSelectComponent } from '../select/TiSelectModule';\r\n/**\r\n * Treeselect树选择下拉组件\r\n *\r\n * 支持单选/多选，全选，搜索，懒加载。\r\n *\r\n * 单选主要功能为从Tree组件数据中选择某一条数据，单选与Tree功能相同，只是视觉呈现不同。\r\n *\r\n * 多选主要功能是从Tree组件数据中任意选择多条数据，多选与Tree功能相同，只是视觉呈现不同。\r\n *\r\n * 该组件继承自TiSelectComponent，其中\r\n *\r\n * 输入属性：clearable、labelKey、searchKeys、tipPosition、panelMaxHeight和valueKey暂不支持；\r\n *\r\n * 输出属性：clear不支持（单选和多选都采用标签方式展示，所以不支持单选情况下的clear事件）\r\n *\r\n * <example-url>../tiny3demo/#/treeselect/treeselect-all</example-url>\r\n */\r\nexport declare class TiTreeselectComponent extends TiSelectComponent {\r\n    private static readonly SEARCHBOX_HEIGHT;\r\n    /**\r\n     * 下拉面板的高度，默认展示8条\r\n     */\r\n    dropMaxHeight: number;\r\n    /**\r\n     * @ignore 搜索结果\r\n     */\r\n    oldOptions: Array<any>;\r\n    /**\r\n     * @ignore 内部标签\r\n     */\r\n    dropCom: TiDropComponent;\r\n    /**\r\n     * @ignore 内部标签\r\n     */\r\n    dominatorCom: TiDominatorComponent;\r\n    /**\r\n     * @ignore 内部标签\r\n     */\r\n    searchboxCom: TiSearchboxNotsearchComponent;\r\n    /**\r\n     * @ignore 内部标签\r\n     */\r\n    dataTemplate: ElementRef;\r\n    /**\r\n     * @ignore 全选框的半选中状态\r\n     */\r\n    indeterminate: boolean;\r\n    /**\r\n     * @ignore 全选中\r\n     */\r\n    isAllSelected: boolean;\r\n    /**\r\n     * @ignore 搜索提示文本\r\n     */\r\n    searchPlaceholder: string;\r\n    /**\r\n     * @ignore 搜索内容\r\n     */\r\n    searchText: string;\r\n    /**\r\n     * @ignore 是否处于搜索状态\r\n     */\r\n    private isInSearch;\r\n    private static leafShallowClone;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewChecked(): void;\r\n    /**\r\n     * @ignore drop高度被压缩时，重新设置下拉面板的高度\r\n     */\r\n    private restyleDropMaxHeight;\r\n    ngOnModelChange(): void;\r\n    /**\r\n     * @ignore 设置下拉面板定位\r\n     */\r\n    setPosition(optionsChange?: boolean): void;\r\n    /**\r\n     * @ignore 关闭下拉面板并转移焦点\r\n     */\r\n    close(): void;\r\n    /**\r\n     * @ignore 仅仅关闭下拉面板\r\n     */\r\n    private closeWithoutFocus;\r\n    /**\r\n     * @ignore 打开下拉面板\r\n     */\r\n    open(): void;\r\n    /**\r\n     * 尝试打开下拉面板\r\n     */\r\n    wantOpen(): void;\r\n    /**\r\n     * @ignore 点击ti-dominator触发的事件\r\n     * 点击下拉面板，展开或者关闭面板\r\n     */\r\n    onClickDominator(): void;\r\n    /**\r\n     * @ignore 删除ti-dominator选中项时触发的事件\r\n     * 需要取消树节点的选中\r\n     */\r\n    onDeleteDominatorTag(item: any): void;\r\n    /**\r\n     * @ignore ti-searchbox-notsearch搜索框内容变化时触发的事件\r\n     */\r\n    searchTextChange(searchText: string): void;\r\n    /**\r\n     * @ignore 从model中获取option所在的索引\r\n     */\r\n    private getItemIndexFromModel;\r\n    /**\r\n     * @ignore 获取需要放到model中的节点，根据规范，如果子节点全部选中了，需要在model中放入父节点或者祖先节点。找到第一个checked为true的节点即可\r\n     * node: 树组件select事件中的参数\r\n     */\r\n    private getRealSelectedNode;\r\n    /**\r\n     * @ignore 获取需要从model移除的节点，根据规范，如果某个子节点取消选中了，那么可能是它的父节点或祖先节点或所有子节点从model中被移除\r\n     * node：树组件select事件的参数\r\n     */\r\n    private getRealUnselectedNode;\r\n    /**\r\n     * @ignore 取消选中时，获取被选中的子节点，根据规范，父节点或祖先节点被选中之后，如果取消了某个子节点的选中，那么需要把它的所有选中的子节点加入model中\r\n     * unselectedNode：需要从model中移除的节点\r\n     */\r\n    private getSelectedChildren;\r\n    /**\r\n     * @ignore 根据checked的值，设置option节点及其子节点和祖先节点的选中状态\r\n     * option: 选中的节点；checked：option.checked属性，true/false\r\n     */\r\n    private setSelectState;\r\n    /**\r\n     * @ignore 选中某个节点后，更新this.model\r\n     * option: 选中的节点\r\n     */\r\n    private setModelWhenSelected;\r\n    /**\r\n     * @ignore 取消选中某个节点后，更新this.model\r\n     * option: 被取消选中的节点\r\n     */\r\n    private setModelWhenUnselected;\r\n    /**\r\n     * @ignore 处于搜索状态下，更新model\r\n     */\r\n    private setModelWhenSearch;\r\n    /**\r\n     * @ignore 获取data里面选中或者未选中的全部叶子节点\r\n     * data：搜索范围，checked：true/false\r\n     */\r\n    private getLeafNodes;\r\n    /**\r\n     * @ignore 设置全选checkbox的状态\r\n     */\r\n    private setAllSelectCheckboxState;\r\n    /**\r\n     * @ignore ti-tree的select事件\r\n     */\r\n    onTreeSelect(option: any): void;\r\n    /**\r\n     * @ignore 全选复选框的按钮事件\r\n     */\r\n    onSelectAllChange(isAllSelected: any): void;\r\n    /**\r\n     * @ignore 全选复选框的点击事件\r\n     */\r\n    onClickSelectAll(event: any): void;\r\n    /**\r\n     * @ignore\r\n     * 失焦情况下，仅关闭面板，不做聚焦等处理\r\n     */\r\n    onBlur(): void;\r\n    /**\r\n     * @ignore\r\n     * 鼠标点击到空白，原本会失焦，此处通过阻止默认事件的方式进行了处理\r\n     */\r\n    onMouseDownDropOuter(event: any): void;\r\n    /**\r\n     * @ignore\r\n     * #datatemplate内部滚动条会引起外部滚动条事件触发，引起弹框内的树下拉组件无法使用鼠标拖动滚动条，因此此处阻止事件冒泡\r\n     */\r\n    onMouseWheel(event: any): void;\r\n}\r\n"]}