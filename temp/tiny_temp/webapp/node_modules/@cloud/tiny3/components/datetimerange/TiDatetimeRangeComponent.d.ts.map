{"version":3,"file":"TiDatetimeRangeComponent.d.ts","sources":["TiDatetimeRangeComponent.d.ts"],"names":[],"mappingssourcesContent":["import { SimpleChanges } from '@angular/core';\r\nimport { TiDateBaseComponent, TiDatetimeFormat, TiDateValue, TimeOptions } from '../datebase/TiDateBaseModule';\r\n/**\r\n * DatetimeRange日期时间范围组件\r\n *\r\n * Datetime组件提供了一种方便的显示和设置日期时间范围的方式。\r\n *\r\n * <example-url>../tiny3demo/#/datetimerange/datetimerange-all</example-url>\r\n */\r\nexport declare class TiDatetimeRangeComponent extends TiDateBaseComponent {\r\n    /**\r\n     * @ignore\r\n     * 保存model值\r\n     */\r\n    oldModel: TiDateValue;\r\n    /**\r\n     * @ignore\r\n     * 对应Time组件的接口属性\r\n     */\r\n    beginTime: TimeOptions;\r\n    /**\r\n     * @ignore\r\n     * 对应Time组件的接口属性\r\n     */\r\n    endTime: TimeOptions;\r\n    /**\r\n     * @ignore\r\n     */\r\n    beginTimeDisabled: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    endTimeDisabled: boolean;\r\n    /**\r\n     * @ignore\r\n     * 时间日期的format\r\n     */\r\n    dominatorFormat: string;\r\n    /**\r\n     * @ignore\r\n     * 日期显示格式: Datetime组件的format为DatetimeFormat类型\r\n     */\r\n    format: TiDatetimeFormat;\r\n    /**\r\n     * @ignore\r\n     * 标记date/datetime的类型\r\n     */\r\n    isDatetime: boolean;\r\n    /**\r\n     * @ignore\r\n     * 用于标记是不是range\r\n     */\r\n    isRange: boolean;\r\n    /**\r\n     * @ignore\r\n     */\r\n    oldBegintimeValue: any;\r\n    /**\r\n     * @ignore\r\n     */\r\n    oldEndtimeValue: any;\r\n    /**\r\n     * @ignore\r\n     * placeholder提示文本\r\n     */\r\n    placeholder: string;\r\n    ngOnInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    /**\r\n     * @ignore\r\n     * 确认按钮事件处理\r\n     */\r\n    onOkClick(): void;\r\n    /**\r\n     * @ignore\r\n     * model值的合法性判断\r\n     */\r\n    isValidValue(value: TiDateValue): boolean;\r\n    /**\r\n     * @ignore\r\n     * 将value转换成format接口格式的字符串\r\n     */\r\n    formatValue(): void;\r\n    /**\r\n     * @ignore\r\n     * 配置时间日期面板接口\r\n     */\r\n    setPickerDate(): void;\r\n    private setDatePanelOptions;\r\n    private validTime;\r\n    /**\r\n     * @ignore\r\n     *  时间框失焦事件\r\n     */\r\n    timeBlur(pos: string, val: string): void;\r\n    /**\r\n     * @ignore\r\n     * 时间框enter事件\r\n     */\r\n    timeKeydown(pos: string, val: string, event: KeyboardEvent): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    dateEditBlur(val: any, pos: string): void;\r\n    /**\r\n     * @ignore\r\n     */\r\n    onKeydownFn(event: KeyboardEvent, val: any, pos: string): void;\r\n    private setTimeOptions;\r\n    private setBeginTimeOptions;\r\n    private setBeginTimeValue;\r\n    /**\r\n     * @ignore\r\n     * time指令的起始面板的max接口设置\r\n     */\r\n    setBeginTimeMaxValue(): void;\r\n    /**\r\n     * @ignore\r\n     * time指令的起始面板的min接口设置\r\n     */\r\n    setBeginTimeMinValue(): void;\r\n    private setEndTimeOptions;\r\n    private setEndTimeValue;\r\n    /**\r\n     * @ignore\r\n     * time指令的结束面板的max接口设置\r\n     */\r\n    setEndTimeMaxValue(): void;\r\n    /**\r\n     * @ignore\r\n     * time指令的结束面板的min接口设置\r\n     */\r\n    setEndTimeMinValue(): void;\r\n    /**\r\n     * @ignore\r\n     * 设置确认按钮的状态\r\n     */\r\n    setOkBtnState(): void;\r\n    private isValidRange;\r\n    private isBeginSmallerThanEnd;\r\n}\r\n"]}