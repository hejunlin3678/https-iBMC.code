import { Directive, OnChanges, SimpleChanges, Type } from '@angular/core';
import { AbstractControl, ValidationErrors, Validator } from '@angular/forms';
/**
 * @ignore
 */
import * as ɵngcc0 from '@angular/core';
export declare class BaseValidator implements Validator, OnChanges {
    validatorStr: string;
    baseValue: string;
    enabled: boolean;
    private _validator;
    private _onChange?;
    /**
     * 获取各directive中的参数配置
     * @param validatorClass 校验实现类
     * @param name 校验指令名：由于该方法在类外部调用，无法使用BaseValidator中的参数，因此需要传入
     */
    static getDirectiveConfig(validatorClass: Type<any>, name: string): Directive;
    static getValidatorStr(name: string): any;
    ngOnChanges(changes: SimpleChanges): void;
    validate(c: AbstractControl): ValidationErrors | null;
    registerOnValidatorChange(fn: () => void): void;
    private _createValidator;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<BaseValidator, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<BaseValidator, "[BaseValidator]", never, {}, {}, never, never, false>;
}

//# sourceMappingURL=BaseValidator.d.ts.map