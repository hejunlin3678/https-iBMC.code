/**
 * @ignore
 */
export declare type TiValidationType = 'change' | 'blur' | 'password';
/**
 * tiValidation指令接口类型
 */
export interface TiValidationConfig {
    /**
     * 校验方式，包含：'change' | 'blur' | 'password'
     *
     * 当设置passwordConfig的情况下，默认为'password'类型
     *
     * @default 'change'
     */
    type?: TiValidationType;
    /**
     * 错误提示信息，适用于错误信息自定义场景
     *
     * 该属性定义形式为对象形式：
     *
     * errorMessage?: {string?: string}
     *
     * 其中，key为校验规则ruleKey值
     *
     * value为业务自定义校验词条，词条中可使用{number}方式代表校验规则中传递的参数，{}中的number代表参数次序，如{0}代表第0个参数，{1}代表第1个参数   *
     */
    errorMessage?: any;
    /**
     * 输入过程中的提示，当处于输入状态，在初次focus或输入正确时，会显示该提示
     */
    tip?: string;
    /**
     * 输入提示及错误提示位置
     *
     * @default 'right'
     */
    tipPosition?: 'top' | 'top-left' | 'top-right' | 'bottom' | 'bottom-left' | 'bottom-right' | 'left' | 'left-top' | 'left-bottom' | 'right' | 'right-top' | 'right-bottom' | 'center';
    /**
     * tip最大宽度
     *
     * @default '276px'
     */
    tipMaxWidth?: string;
    /**
     * blur校验时，错误信息存放位置
     *
     */
    errorMessageWrapper?: Element;
    /**
     * 密码校验配置项，对应的配置对象结构如下：
     *
     *    passwordConfig?: {
     *        validator?: TiPasswordValidator // 配置接口说明见下方
     *        levelFn?: (value:string, validator: TiPasswordValidator) => number; // 密码强度计算函数，返回值代表密码强度等级，0 1 2分别代表弱、中、强
     *    }
     *
     * 密码校验validators配置项，对应的对象结构如下：
     *
     *    TiPasswordValidator: {
     *        rule?: string; // 校验规则名定义
     *        params: { // 校验参数定义，其中key值为校验规则名
     *            string?: Array<any>;
     *        };
     *        message: { // 规则对应的提示信息定义,提示信息中
     *            string?: string;
     *        };
     *    }
     */
    passwordConfig?: {
        validator?: TiPasswordValidatorConfig;
        levelFn?(value: string, validator: TiPasswordValidatorConfig): number;
    };
}
/**
 * 密码校验规则定义接口
 */
export interface TiPasswordValidatorConfig {
    /**
     * 校验规则名定义
     */
    rule?: string;
    /**
     * 校验参数定义
     */
    params?: {
        [propName: string]: Array<any>;
    };
    /**
     * 规则对应的提示信息定义
     */
    message?: {
        [propName: string]: string;
    };
}
