import { ElementRef, Renderer2 } from '@angular/core';
import { DefaultValueAccessor } from '@angular/forms';
/**
 * TiMask 格式化数字指令
 *
 * 该指令主要用于输入框中，限制用户只能输入数字，可以通过设置tiMask属性接口设置其数字的格式：身份证，手机号码等形式输入。
 *
 * 输入框中呈现的是格式化后的数字，但是通过ngModel取得的值为纯数字的值，如输入框中呈现的值为'123 456 789'，通过ngModel取得的值为'123456789'
 *
 * <example-url>../tiny3demo/#/maskinput/maskinput-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiMaskDirective extends DefaultValueAccessor {
    private renderer;
    private elementRef;
    private static readonly NUM_SIGN;
    /**
     * 设置其数字的格式：身份证，手机号码等形式输入，例如手机号格式：'000 0000 0000'，
     * 其中 '0' 代表数字。
     */
    format: string;
    private element;
    private ctxPos;
    private valueCharPosOffset;
    private composing;
    private onChangeFn;
    private modelValue;
    constructor(renderer: Renderer2, elementRef: ElementRef);
    private static getClearValue;
    private static formatValue;
    /**
     * @ignore
     */
    writeValue(value: any): void;
    /**
     * @ignore
     */
    registerOnChange(fn: (value: any) => void): void;
    /**
     * @ignore
     * view => model
     */
    handleInput(value: any): void;
    /**
     * @ignore
     * 中文输入之前(在输入拼音前)
     */
    handleCompositionStart(): void;
    /**
     * @ignore
     * 文本段完成输入或取消输入
     */
    handleCompositionEnd(value: any): void;
    /**
     * @ignore
     */
    blur(): void;
    private parser;
    private getAntiFormatValue;
    private setCtxPos;
    private setCharPos;
    private setPosWithNum;
    private setPosWithoutNum;
    private initCtxPos;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiMaskDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<TiMaskDirective, "[tiMask]", never, { "format": "tiMask"; }, {}, never, never, false>;
}

//# sourceMappingURL=TiMaskDirective.d.ts.map