{"version":3,"file":"TiOverflowMaxlineDirective.d.ts","sources":["TiOverflowMaxlineDirective.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentChecked, AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { TiTipService } from '../../services/tip/TiTipService';\r\nimport { TiPositionType } from '../../utils/Position';\r\n/**\r\n * 多行文本超出情况下文本处理出...并tip提示\r\n *\r\n */\r\nexport declare class TiOverflowMaxlineDirective implements AfterViewInit, AfterContentChecked, OnChanges, OnDestroy {\r\n    private hostRef;\r\n    private renderer2;\r\n    private tipService;\r\n    private zone;\r\n    nativeElement: any;\r\n    constructor(hostRef: ElementRef, renderer2: Renderer2, tipService: TiTipService, zone: NgZone);\r\n    /**\r\n     * 文本最大行数，默认3行\r\n     */\r\n    maxLine: number;\r\n    /**\r\n     * 配置文本过长时显示的tip的最大宽度。\r\n     *\r\n     * 3.0.9新增\r\n     */\r\n    tiTipMaxWidth: string;\r\n    /**\r\n     * 文本被截断之后的tip方向\r\n     */\r\n    tiTipPosition: TiPositionType;\r\n    /**\r\n     * 文本被截断之后的tip内容\r\n     */\r\n    tiTipContent: string;\r\n    /**\r\n     * @ignore\r\n     * 文本被截断之后末尾图标展示\r\n     */\r\n    iconName: string;\r\n    /**\r\n     * 图标提示\r\n     */\r\n    iconTip: string;\r\n    /**\r\n     * 宿主文本\r\n     */\r\n    textContent: string;\r\n    /**\r\n     * @ignore\r\n     * 文本被截断之后的末尾填充符号\r\n     */\r\n    character: string;\r\n    /**\r\n     * @ignore\r\n     * 图标是否可以聚焦，默认不可聚焦。\r\n     */\r\n    iconFocusable: boolean;\r\n    /**\r\n     * @ignore\r\n     * 图标是否灰化，默认不灰化\r\n     */\r\n    iconDisabled: boolean;\r\n    /**\r\n     * @ignore\r\n     * 文本被截断之后末尾图标点击事件\r\n     */\r\n    readonly iconClick: EventEmitter<Event>;\r\n    private text;\r\n    private isShave;\r\n    private tipInstance;\r\n    private icontipInstance;\r\n    private listenFns;\r\n    private windowResizeListener;\r\n    private tipContent;\r\n    private shaveTextFn;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    ngAfterViewInit(): void;\r\n    ngAfterContentChecked(): void;\r\n    ngOnDestroy(): void;\r\n    setEvents(): void;\r\n}\r\n"]}