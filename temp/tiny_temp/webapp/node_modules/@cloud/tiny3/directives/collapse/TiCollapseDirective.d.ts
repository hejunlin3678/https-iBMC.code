import { ElementRef, EventEmitter, OnChanges, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { AnimationBuilder } from '@angular/animations';
/**
 * TiCollapseDirective指令主要功能为动态控制某一DOM节点的显示(展开)与隐藏(收起)
 *
 * <p><span style="color: red">使用此组件时需要开发者在项目模块(建议在根模块)
 * 中引入BrowserAnimationsModule。</span>这是因为此组件中使用了Angular动画，需要引入BrowserAnimationsModule，
 * 但是 BrowserAnimationsModule 不能在懒加载模块被重复引入，所以需要开发者来引入BrowserAnimationsModule，保证其引入一次。</p>
 *
 * <example-url>../tiny3demo/#/collapse/collapse-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiCollapseDirective implements OnInit, OnChanges {
    private elementRef;
    private renderer;
    private builder;
    private static ANIMATE_IN;
    private static ANIMATE_OUT;
    /**
     * 控制折叠面板的收起/展开
     */
    isCollapse: boolean;
    /**
     * 折叠面板在收起/展开结束后(即收起/展开动画结束后)的回调；
     * 回调的参数为布尔值，true: 收起结束后, false: 展开结束后
     */
    readonly toggleDone: EventEmitter<boolean>;
    private element;
    private expandPlayer;
    private collapsePlayer;
    constructor(elementRef: ElementRef, renderer: Renderer2, builder: AnimationBuilder);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    private expand;
    private collapse;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiCollapseDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<TiCollapseDirective, "[tiCollapse]", never, { "isCollapse": "tiCollapse"; }, { "toggleDone": "toggleDone"; }, never, never, false>;
}

//# sourceMappingURL=TiCollapseDirective.d.ts.map