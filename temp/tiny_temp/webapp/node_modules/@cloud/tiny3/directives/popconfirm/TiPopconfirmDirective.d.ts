import { ComponentRef, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { TiPositionType } from '../../utils/Position';
import { TiTipRef } from '../../services/tip/TiTipInterface';
import { TiTipService } from '../../services/tip/TiTipService';
import { TiTipDirective } from '../../directives/tip/TiTipDirective';
import * as ɵngcc0 from '@angular/core';
export interface TiPopconfirmConfig {
    /**
     * 设置确认框id
     */
    id?: string;
    /**
     * 设置确认框描述信息
     */
    content: string;
    /**
     * 自定义是按钮文本
     */
    yesText?: string;
    /**
     * 自定义否按钮文本
     */
    noText?: string;
    /**
     * 设置是按钮为强调按钮
     */
    yesPrimary?: boolean;
    /**
     * 设置确认框弹出方向
     */
    position?: TiPositionType;
    /**
     * 触发'是'按钮事件
     */
    close?(data?: any): void;
    /**
     * 触发'否'按钮事件
     */
    dismiss?(data?: any): void;
    /**
     * 允许有多余的属性字段
     */
    [propName: string]: any;
}
/**
 * TiPopconfirm 气泡确认框指令
 *
 * 一般用于操作执行后对用户业务不会有严重影响的轻量级场景。
 *
 * 10.0.3/9.0.7版本新增
 *
 * <example-url>../tiny3demo/#/popconfirm/popconfirm-all</example-url>
 */
export declare class TiPopconfirmDirective extends TiTipDirective implements OnInit, OnDestroy {
    private tiTipService;
    private hostEleRef;
    private zone;
    private render;
    private document;
    /**
     * 气泡确认框配置对象
     */
    tiPopconfirm: TiPopconfirmConfig;
    /**
     * 10.1.1新增
     *
     * 数据接口， 常常绑定表格本行数据。
     */
    data: any;
    protected tipInstance: TiTipRef;
    private hostElement;
    private popoverComponentRef;
    private unlistenClick;
    private focusableElementsString;
    constructor(tiTipService: TiTipService, hostEleRef: ElementRef, zone: NgZone, render: Renderer2, document: any);
    /**
     * tip组件配置
     */
    private tipConfig;
    private unListenDocumentKeydown;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private addClickEvent;
    clickTab(event: KeyboardEvent): void;
    /**
     * 打开气泡组件，并且把焦点转移到提示框内部，为后续把焦点限制在提示框内做准备。
     * @private
     */
    private showPopandFocus;
    /**
     * 显示气泡确认框
     * @ignore
     */
    show(): ComponentRef<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiPopconfirmDirective, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDeclaration<TiPopconfirmDirective, "[tiPopconfirm]", never, { "tiPopconfirm": "tiPopconfirm"; "data": "data"; }, {}, never, never, false>;
}

//# sourceMappingURL=TiPopconfirmDirective.d.ts.map