/**
 * @description
 * 该文件下定义组件less变量
 */
/* 基础样式 */
body {
  margin: var(--ti-default-body-margin);
  padding: var(--ti-default-body-padding);
  font-size: var(--ti-default-font-size);
  font-family: var(--ti-default-font-family);
  color: var(--ti-default-font-color);
  background-color: var(--ti-default-body-bg);
}
button,
blockquote,
div,
section,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
dl,
dt,
dd,
li,
pre,
code,
form,
fieldset,
legend,
input,
textarea,
th,
td,
p,
select {
  margin: 0;
  padding: 0;
}
/* 表单部分 */
input {
  vertical-align: middle;
}
fieldset,
img {
  border: 0;
}
button,
input,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
}
button {
  line-height: normal;
}
textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
address,
caption,
cite,
code,
dfn,
em,
var {
  font-style: normal;
  font-weight: 400;
}
ol,
ul {
  list-style: none;
}
q:before {
  content: '';
}
q:after {
  content: '';
}
abbr,
acronym {
  border: 0;
  font-variant: normal;
}
b,
strong {
  font-weight: 700;
}
sub {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
  bottom: -0.25em;
}
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
  top: -0.5em;
}
a {
  background-color: transparent;
}
label {
  margin-bottom: 0;
  font-weight: 400;
}
.clearfix {
  zoom: 1;
}
.clearfix:after,
.clearfix:before {
  display: block;
  clear: both;
  height: 0;
  font-size: 0;
  overflow: hidden;
  content: "";
}
/* 消除表格单元格直接空隙 */
table {
  border-spacing: 0 0;
  border-collapse: collapse;
  margin-bottom: 0;
}
/* H5新标签 */
figcaption,
figure,
hgroup,
article,
footer,
header,
nav,
section,
aside,
menu,
main,
details,
summary {
  display: block;
}
button::-moz-focus-inner {
  padding: 0;
  border: none;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
input::-ms-clear {
  width: 0;
  height: 0;
}
input[type=password]::-ms-reveal {
  width: 0;
  height: 0;
}
::-webkit-input-placeholder {
  color: var(--ti-input-placeholder-color);
  text-overflow: initial !important;
}
::-moz-placeholder {
  color: var(--ti-input-placeholder-color);
  opacity: 1;
  text-overflow: initial;
}
:-moz-placeholder {
  color: var(--ti-input-placeholder-color);
  opacity: 1;
}
input:-ms-input-placeholder,
textarea:-ms-input-placeholder {
  color: var(--ti-input-placeholder-color) !important;
}
input.ng-invalid.ng-touched[tiBlurCheck]:not([tiFocused]),
textarea.ng-invalid.ng-touched[tiBlurCheck]:not([tiFocused]),
[tiForm].ng-invalid.ng-touched[tiBlurCheck]:not([tiFocused]),
input.ng-invalid.ng-dirty[tiBlurCheck]:not([tiFocused]),
textarea.ng-invalid.ng-dirty[tiBlurCheck]:not([tiFocused]),
[tiForm].ng-invalid.ng-dirty[tiBlurCheck]:not([tiFocused]),
input.ng-invalid.ng-touched:not([tiBlurCheck]),
textarea.ng-invalid.ng-touched:not([tiBlurCheck]),
[tiForm].ng-invalid.ng-touched:not([tiBlurCheck]),
input.ng-invalid.ng-dirty:not([tiBlurCheck]),
textarea.ng-invalid.ng-dirty:not([tiBlurCheck]),
[tiForm].ng-invalid.ng-dirty:not([tiBlurCheck]) {
  border-color: var(--ti-input-border-color-error) !important;
  background-color: var(--ti-input-bg-color-error);
}
a[tiNavigation] {
  color: var(--ti-common-color-text-link);
  text-decoration: none;
}
a[tiNavigation]:hover {
  color: var(--ti-common-color-text-link-hover);
  text-decoration: underline;
}
a[tiNavigationDarkbg] {
  color: var(--ti-common-color-text-link-darkbg);
  text-decoration: none;
}
a[tiNavigationDarkbg]:hover {
  color: var(--ti-common-color-text-link-darkbg-hover);
  text-decoration: underline;
}
a[tiRichText] {
  color: var(--ti-common-color-text-primary);
  text-decoration: none;
}
a[tiRichText]:hover {
  color: var(--ti-common-color-text-link-hover);
  text-decoration: underline;
}
a[tiRichTextDarkbg] {
  color: var(--ti-common-color-text-darkbg);
  text-decoration: none;
}
a[tiRichTextDarkbg]:hover {
  color: var(--ti-common-color-text-link-darkbg-hover);
  text-decoration: underline;
}
