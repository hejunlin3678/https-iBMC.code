import { TiUploadConfig, TiUploadRef } from './TiFileInterface';
/**
 * 文件上传服务，通过该服务生成上传文件实例对象，一个实例对应一个上传文件队列
 *
 * 该服务适用于自定义文件上传实例方式，使用该服务时需要引入模块TiUploadServiceModule，与[tiFileSelect]{@link ../directives/TiFileSelectDirective.html}配合使用
 *
 * 除自定义使用方式外，Tiny还提供了两种已设计的上传样式供业务使用，具体见[TiUploadComponent]{@link ../components/TiUploadComponent.html}
 *
 * <example-url>../tiny3demo/#/upload/upload-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiUploadService {
    private static readonly filterRules;
    /**
     * 对单选进行过滤条件重置，单选去除maxCount条件，函数返回过滤后的生效规则
     */
    private static initFilter;
    /**
     * 根据用户配置的maxCount过滤条件，判断文件是否为单文件上传
     * 用户配置的过滤条件
     * 是否为单文件上传
     */
    private static isSingleFileFn;
    /**
     * 批量上传文件
     *   {Array} 上传文件items数组
     * 返回 无
     */
    private static uploadItems;
    /**
     * 批量取消上传文件
     * 返回 无
     */
    private static cancelItems;
    /**
     * 批量删除文件,只涉及上传队列的文件删除，具体的后台删除还需要产品向后台发送文件删除请求实现
     *   {Array} 上传文件items数组
     * 返回 无
     */
    private static removeItems;
    /**
     * 单个文件的有效性校验
     * 返回 {Array} 由不符合的规则name组成的数组
     */
    private static getInvalidRules;
    /**
     * 获取未上传文件队列
     */
    private static getNotUploadedItems;
    /**
     * 获取待上传文件，该方法用于文件批量上传时获取上传文件队列
     * 返回 {Array} 返回待上传文件，且文件队列返回值是根据文件点选次序排列
     */
    private static getReadyItems;
    /**
     * 获取上传失败文件，该方法用于文件批量上传时获取上传失败文件队列
     * 返回 {Array} 返回上传失败文件，且文件队列返回值是根据文件点选次序排列
     */
    private static getErrorItems;
    /**
     * 重新上传列表中所有先前上传错误文件
     * 返回 无
     */
    private static reloadAllError;
    /**
     * 重新上传列表中所有文件
     * 返回 无
     */
    private static reloadAll;
    /**
     * 上传列表中所有未上传过的文件
     * 返回 无
     */
    private static uploadAll;
    /**
     * 判断是否有未上传的
     * 返回 boolean
     */
    private static isUploadedAll;
    /**
     * 删除所有队列中的文件
     */
    private static removeAll;
    /**
     * 取消所有队列中的文件(未上传和待上传文件)
     */
    private static cancelAll;
    /**
     * 创建文件上传实例
     */
    create(config: TiUploadConfig): TiUploadRef;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiUploadService, never>;
}

//# sourceMappingURL=TiUploadService.d.ts.map