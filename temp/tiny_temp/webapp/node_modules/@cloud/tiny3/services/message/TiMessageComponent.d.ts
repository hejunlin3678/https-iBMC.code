import { OnInit } from '@angular/core';
import { TiMessageButtonConfig } from './TiMessageInterface';
/**
 * messge类型设置
 */
import * as ɵngcc0 from '@angular/core';
export declare type TiMessageType = 'prompt' | 'warn' | 'error' | 'confirm';
/**
 * @ignore
 * message模板组件定义
 */
export declare class TiMessageComponent implements OnInit {
    private CONST_CONFIG;
    id: string;
    title: string;
    type: TiMessageType;
    content: any;
    context: any;
    okButton: TiMessageButtonConfig;
    cancelButton: TiMessageButtonConfig;
    close: () => void;
    dismiss: () => void;
    contentConfig: any;
    private readonly localeWords;
    /**
     * 设置按钮属性（除primary和autofocus外）
     * @param options 外部配置属性
     * @param defaults 按钮text和click属性
     * @returns 合并后的属性
     */
    private static setBtn;
    ngOnInit(): void;
    private setType;
    private setTitle;
    /**
     * 设置按钮属性：
     * 对按钮的设置支持Object类型
     * 为Object类型时，覆盖和扩展默认设置
     */
    private setBtns;
    /**
     * 设置按钮属性，确保默认状态只在一个按钮生效
     * @param prop 按钮属性
     */
    private setBtnUniqueState;
    private setContent;
    setId(suffix: string): string;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiMessageComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<TiMessageComponent, "ti-message", never, { "type": "type"; "title": "title"; "okButton": "okButton"; "cancelButton": "cancelButton"; "id": "id"; "content": "content"; "context": "context"; "close": "close"; "dismiss": "dismiss"; }, {}, never, never, false>;
}

//# sourceMappingURL=TiMessageComponent.d.ts.map