import { TemplateRef } from '@angular/core';
import { TiPopupService } from '../popup/TiPopupService';
import { TiModalConfig, TiModalRef } from './TiModalInterface';
/**
 * 弹框组件提供服务方式供业务使用，使用该服务时需要引入模块TiModalModule，开发者通过调用TiModalService.open方法生成弹出框
 *
 * <p><span style="color: red">使用此组件时需要开发者在项目模块(建议在根模块)
 * 中引入BrowserAnimationsModule。</span>这是因为此组件中使用了Angular动画，需要引入BrowserAnimationsModule，
 * 但是 BrowserAnimationsModule 不能在懒加载模块被重复引入，所以需要开发者来引入BrowserAnimationsModule，保证其引入一次。</p>
 *
 * <example-url>../tiny3demo/#/modal/modal-all</example-url>
 */
export declare class TiModalService {
    private popService;
    /**
     * 页面中存在的所有弹框实例，用于处理业务中无法明确当前有多少有效弹窗场景
     */
    openedModals: Array<TiModalRef>;
    private backdropComponentRef;
    private defaultConfig;
    constructor(popService: TiPopupService<any>);
    /**
     * 生成弹框方法
     *
     * @param content 弹框内容，支持TemplateRef及组件形式，内容由ti-modal-header、ti-modal-body及ti-modal-footer组件构成弹框内容整体。
     *                不支持字符串形式，如果误传入字符串形式，不仅会有报错，还会存在XSS攻击风险，不过XSS攻击风险已在10.1.4版本已处理。
     * @param [config] 弹框配置信息
     * @returns 弹框实例信息，使用该实例信息可调用弹框的close等方法；弹框内容为component类型时，也可通过该实例信息的content属性获取弹框内容数据
     */
    open(content: TemplateRef<any> | any, config?: TiModalConfig): TiModalRef;
    private generateModal;
    private generateBackdrop;
}
