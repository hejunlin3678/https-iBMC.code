/**
 * 该类提供服务，用于管理Tip组件的创建和销毁
 * 服务中提供三个方法:
 * create(hostEle, config) 生成一个tip实例并返回对象，
 *   hostEle:宿主元素
 *   config:{
 *      position：tip元素位置
 *      maxWidth：最大宽度
 *      hasArrow：是否带箭头
 *      theme：tip色系 'black'/default
 *  }
 * 返回的实例对象中提供方法:
 * {
 *  show({ // 显示Tip组件
 *   content:弹出组件内容
 *   context:弹出组件上下文
 * })
 *  hide():隐藏并销毁Tip
 * }
 */
import { NgZone, RendererFactory2 } from '@angular/core';
import { TiContentType, TiPopUpRef, TiPopupService } from '../popup/TiPopupService';
import { TiRenderer } from '../renderer/TiRenderer';
import { TiTipContainerComponent } from './TiTipContainerComponent';
import { TiTipConfig, TiTipRef } from './TiTipInterface';
/**
 * @ignore
 */
import * as ɵngcc0 from '@angular/core';
export interface TiTipShowConfig {
    popInstance: TiPopUpRef;
    hostEle: Element;
    content: TiContentType;
    context: any;
    config: TiTipConfig;
}
/**
 * tip提供了两种使用方式:
 *
 * 1.服务方式（见如下说明），使用该服务时需要引入模块TiTipServiceModule
 *
 * 2.指令方式：[TiTipDirective]{@link ../directives/TiTipDirective.html}
 *
 * <example-url>../tiny3demo/#/tip/tip-all</example-url>
 */
export declare class TiTipService {
    private popService;
    private tiRenderer;
    private zone;
    private document;
    private static readonly DEFAULT_WIDTH;
    private static readonly SPACE;
    private render;
    constructor(popService: TiPopupService<TiTipContainerComponent>, rendererFactory: RendererFactory2, tiRenderer: TiRenderer, zone: NgZone, document: any);
    /**
     * 页面激活窗口改变事件处理，此处获取事件名称，该事件后续会在tip显示时注册，隐藏时销毁
     * 添加该事件用于解决的问题现象是：tip带链接，并且点击链接跳转至新开页面，因此，当返回先前页面时，tip不消失（因为未触发任何tip消失的事件），
     * 且移入其他出tip的元素，会出现页面有多个tip的现象
     */
    private getVisibleChangeEventName;
    create(hostEle: Element, config?: TiTipConfig): TiTipRef;
    /**
     * 创建Tip实例
     *
     * @param hostEle tip生成所依附的宿主元素
     *
     * @param config tip属性配置
     *
     * @returns 生成的Tip实例对象如下：
     *
     * ```
     * {
     *      // 显示tip方法
     *      // @param content {string | TemplateRef<any> | any} tip显示内容，可为字符串/ng-template/component，具体用法见示例
     *      // @param context {any} tip显示内容对应的上下文，content类型为templateRef或Component形式时会用到该参数
     *      show: (content: string | TemplateRef<any> | any, context?: any) => void;
     *
     *      // 隐藏tip方法
     *      hide: () => void;
     * }
     * ```
     */
    private createTip;
    private addTriggerEvent;
    private showTip;
    private setTipTheme;
    private setTipWidth;
    private setPosition;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiTipService, never>;
}

//# sourceMappingURL=TiTipService.d.ts.map