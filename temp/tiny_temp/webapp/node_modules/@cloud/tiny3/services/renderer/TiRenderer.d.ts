import { RendererFactory2 } from '@angular/core';
/**
 * @ignore
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiRenderer {
    private renderer;
    constructor(rendererFactory: RendererFactory2);
    /**
     * @description: 将节点插入某节点元素之后
     * @param: sourceEle 被插入节点
     * @param: targetEle 节点插入位置
     */
    insertAfter(sourceEle: any, targetEle: any): void;
    /**
     * @description: 判读一个元素上是否存在某个样式类名
     * @param: ele 被判断的元素
     * @param: className 样式类名
     */
    hasClass(element: any, className: any): boolean;
    /**
     * @description: 给指定元素设置属性
     * @param: element 被设置的元素
     * @param: attr Object 属性对象
     */
    setAttributes(element: any, attr: Object): void;
    /**
     * @description: 为元素添加多个样式
     * @param: ele 元素对象
     * @param: styles  Object 样式对象，如：{width: 100, height: 200}
     */
    setStyles(ele: any, styles: any): void;
    /**
     * @description: 将节点插入某父容器，作为第一个元素
     * @param: parentEle 父节点元素
     * @param: sourceEle 需要插入的节点元素
     */
    prepend(parentEle: any, sourceEle: any): void;
    /**
     * @description: 查找一个元素下有某个样式类的子元素
     * @param: element 被查找的元素
     * @param: className 子元素的样式类名
     */
    findChildrenByClassName(element: any, className: any): Array<any>;
    /**
     * @description: 查找一个元素下有某个样式类的子元素
     * @param: element 被查找的元素
     * @param: className 子元素的样式类名
     */
    findChildrenByTagName(element: any, tagName: string): Array<any>;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiRenderer, never>;
}

//# sourceMappingURL=TiRenderer.d.ts.map