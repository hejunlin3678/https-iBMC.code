import { RendererFactory2 } from '@angular/core';
import { TiModalService } from '../modal/TiModalService';
import { TiTipService } from '../tip/TiTipService';
import { TiIntroConfig, TiIntroRef } from './TiIntroInterface';
/**
 * 新手引导组件，适用于服务中内容（入口）新增和变动等指引提醒
 *
 * <p><span style="color: red">使用此组件时需要开发者在项目模块(建议在根模块)中引入BrowserAnimationsModule。</span>
 * 这是因为此组件中使用了 TiModalService，TiModalService需要BrowserAnimationsModule
 * （具体原因可以查看 [TiModalService]{@link ../injectables/TiModalService.html}），
 * 但是 BrowserAnimationsModule 不能在懒加载模块被重复引入，所以需要开发者来引入BrowserAnimationsModule，保证其引入一次。</p>
 *
 * <example-url>../tiny3demo/#/intro/intro-all</example-url>
 */
import * as ɵngcc0 from '@angular/core';
export declare class TiIntroService {
    private tipService;
    private modalService;
    private document;
    private render;
    private unListenWindowResize;
    private unListenWindowHashchange;
    private closeMultiTipEleClickListener;
    private unListenDocumentKeydown;
    private focusableElementsString;
    constructor(tipService: TiTipService, modalService: TiModalService, rendererFactory: RendererFactory2, document: any);
    /**
     * intro的公共配置，不是默认配置，不能修改
     */
    private commonConfig;
    private destroyBackdrop;
    private static clearCircle;
    private static scrollToViewport;
    /**
     * 创建intro实例
     */
    create(config: TiIntroConfig): TiIntroRef;
    clickTab(event: KeyboardEvent): void;
    private hidePreStep;
    private drawBackdrop;
    private highlight;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<TiIntroService, never>;
}

//# sourceMappingURL=TiIntroService.d.ts.map