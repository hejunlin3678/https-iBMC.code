/*******************************************************************************
 *
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 *
 * -------------------------------------------------------------------------------
 *
 * cml_error_code.h
 *
 * Project Code: DOPAI
 * Module Name: machine_learning
 * Date Created: 2020-02-24
 * Author:
 * Description: CML错误码定义
 *
 * -------------------------------------------------------------------------------
 * Modification History
 * DATE          NAME                       DESCRIPTION
 * -----------------------------------------------------------------------------
 *
 *******************************************************************************/
#ifndef DOPAI_CML_ERRORCODE_H
#define DOPAI_CML_ERRORCODE_H

#include "dopai_error_code.h"
#include "cml_error_type.h"

#ifdef __cplusplus
extern "C" {
#endif
/**
 * @ingroup CMLErrorCode
 *
 */
enum CMLErrorCode {
    CML_NO_ERROR = DOPAI_OK,                                           /**< 无错误 */
    CML_NOT_IMPLEMENTED = MAKE_ERRORCODE(MOD_CML, NOT_IMPLEMENTED, 0), /**< 算法不支持 */
    CML_NO_EXECUTION = MAKE_ERRORCODE(MOD_CML, NO_EXECUTION, 0),       /**< 算法不支持 */
    CML_CPU_ADABOOST_CHECKPARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_ADABOOST_CHECKPARAMS_ERROR, 0), /**< AdaBoost参数错误 */
    CML_CPU_ADABOOST_RESIZERESULT_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_ADABOOST_RESIZERESULT_ERROR, 0), /**< AdaBoost的scores内存申请失败 */
    CML_CPU_GBC_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_CHECKPARAMS_ERROR, 0), /**< GBC参数错误 */
    CML_CPU_GBC_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_RESIZERESULTS_ERROR, 0), /**< GBC输出resize错误 */
    CML_CPU_GBR_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBR_CHECKPARAMS_ERROR, 0), /**< GBR参数错误 */
    CML_CPU_GBR_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBR_RESIZERESULTS_ERROR, 0), /**< GBR输出resize错误 */
    CML_CPU_IFOREST_CHECKPARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_IFOREST_CHECKPARAMS_ERROR, 0), /**< iForest参数错误 */
    CML_CPU_IFOREST_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_IFOREST_RESIZERESULTS_ERROR, 0), /**< iForest输出resize错误 */
    CML_CPU_KMEANS_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANS_RESIZERESULTS_ERROR, 0), /**< KMeansPredict输出resize错误 */
    CML_CPU_KMEANS_CHECKPREDICTPARAS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANS_CHECKPREDICTPARAS_ERROR, 0), /**< KMeansPredict参数错误 */
    CML_CPU_KMEANSTRAIN_CHECKFITPARAS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_CHECKFITPARAS_ERROR, 0), /**< KMeansTrain参数错误 */
    CML_CPU_KMEANSTRAIN_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_RESIZERESULTS_ERROR, 0), /**< KMeansTrain输出resize错误 */
    CML_CPU_KMEANSTRAIN_GETTOLERANCE_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_GETTOLERANCE_ERROR, 0), /**< KMeansTrain计算阈值tolerance错误 */
    CML_CPU_KMEANSTRAIN_CREATEKMEANSPARA_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_CREATEKMEANSPARA_ERROR, 0), /**< KMeansTrain创建KMeansPara失败 */
    CML_CPU_KMEANSTRAIN_INITKMEANSTRAINPARA_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_INITKMEANSTRAINPARA_ERROR, 0), /**< KMeansTrain初始化KMeansPara失败 */
    CML_CPU_KMEANSTRAIN_INITCENTERS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_INITCENTERS_ERROR, 0), /**< KMeansTrain初始化中心点失败 */
    CML_CPU_KMEANSTRAIN_RUNITERATIONS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_RUNITERATIONS_ERROR, 0), /**< KMeansTrain聚类失败 */
    CML_CPU_KMEANSTRAIN_RECORDBESTRESULT_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KMEANSTRAIN_RECORDBESTRESULT_ERROR, 0), /**< KMeansTrain记录最好结果失败 */
    CML_CPU_LR_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LR_CHECKPARAMS_ERROR, 0),     /**< LR参数错误 */
    CML_CPU_LR_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LR_RESIZERESULTS_ERROR, 0), /**< LR输出resize错误 */
    CML_CPU_LR_COMPUTE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LR_COMPUTE_ERROR, 0),           /**< LR计算结果错误 */
    CML_CPU_RFC_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_RFC_CHECKPARAMS_ERROR, 0), /**< RFC参数错误 */
    CML_CPU_RFC_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_RFC_RESIZERESULTS_ERROR, 0), /**< RFC输出resize错误 */
    CML_CPU_RFC_INITPROBA_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_RFC_INITPROBA_ERROR, 0), /**< RFC初始化proba参数失败 */
    CML_CPU_RFR_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_RFR_CHECKPARAMS_ERROR, 0), /**< RFR参数错误 */
    CML_CPU_RFR_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_RFR_RESIZERESULTS_ERROR, 0), /**< RFR输出resize错误 */
    CML_CPU_SPC_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SPC_CHECKPARAMS_ERROR, 0), /**< SPC参数错误 */
    CML_CPU_SPC_GETLAPMAT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SPC_GETLAPMAT_ERROR, 0), /**< SPC获取拉普拉斯矩阵错误 */
    CML_CPU_SPC_GETLAMBDAK_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SPC_GETLAMBDAK_ERROR, 0), /**< SPC获取lambdak错误 */
    CML_CPU_SPC_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_SPC_RESIZERESULTS_ERROR, 0), /**< SPC获取signalSize错误 */
    CML_CPU_SPC_CALFLDRANDVEC_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_SPC_CALFLDRANDVEC_ERROR, 0), /**< SPC获取特征矩阵错误 */
    CML_CPU_PCAFIT_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PCAFIT_CHECKPARAMS_ERROR, 0), /**< PCAFit参数错误 */
    CML_CPU_PCAFIT_MEMORY_NULL = MAKE_ERRORCODE(MOD_CML, CPU_PCAFIT_MEMORY_NULL, 0), /**< PCAFit申请内存失败 */
    CML_CPU_PCAFIT_EIG_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PCAFIT_EIG_ERROR, 0),     /**< PCAFit特征分解错误 */
    CML_CPU_PCA_SGEMM_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PCA_SGEMM_ERROR, 0), /**< PCAFit降维矩阵乘计算错误 */
    CML_CPU_PCA_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_PCA_RESIZERESULTS_ERROR, 0), /**< PCAFit输出resize错误 */
    CML_CPU_PCATRANSFORM_CHECKPARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_PCATRANSFORM_CHECKPARAMS_ERROR, 0), /**< PCATransform参数错误 */
    CML_CPU_PCATRANSFORM_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_PCATRANSFORM_RESIZERESULTS_ERROR, 0), /**< PCATransform输出resize错误 */
    CML_CPU_DBSCAN_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_DBSCAN_CHECKPARAMS_ERROR, 0), /**< DBSCAN参数错误 */
    CML_CPU_DBSCAN_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_DBSCAN_RESIZERESULTS_ERROR, 0), /**< DBSCAN输出resize错误 */
    CML_CPU_DBSCAN_FITMETHOD_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_DBSCAN_FITMETHOD_ERROR, 0), /**< DBSCAN无效fitMethod */
    CML_CPU_SVC_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SVC_CHECKPARAMS_ERROR, 0), /**< SVC参数错误 */
    CML_CPU_SVC_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SVC_RESIZERESULTS_ERROR, 0), /**< SVC输出resize错误 */
    CML_CPU_SVC_GETCOMPUTESAMPLES_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_SVC_GETCOMPUTESAMPLES_ERROR, 0), /**< SVC分割数据错误 */
    CML_CPU_SVC_COMPUTEKERNEL_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SVC_COMPUTEKERNEL_ERROR, 0), /**< SVC核计算错误 */
    CML_CPU_SVC_GETRESULTLABEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_SVC_GETRESULTLABEL_ERROR, 0), /**< SVC结果标签计算错误 */
    CML_CPU_LINEARSVC_CHECKPARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LINEARSVC_CHECKPARAMS_ERROR, 0), /**< LinearSVC参数错误 */
    CML_CPU_LINEARSVC_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LINEARSVC_RESIZERESULTS_ERROR, 0), /**< LinearSVC输出resize错误 */
    CML_CPU_LINEARSVC_GETCOMPUTESAMPLES_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LINEARSVC_GETCOMPUTESAMPLES_ERROR, 0), /**< LinearSVC分割数据错误 */
    CML_CPU_LINEARSVC_COMPUTELINEARKERNEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LINEARSVC_COMPUTELINEARKERNEL_ERROR, 0), /**< LinearSVC线性核计算错误 */
    CML_CPU_LINEARSVC_GETRESULTLABEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LINEARSVC_GETRESULTLABEL_ERROR, 0),    /**< LinearSVC结果标签计算错误 */
    CML_FEED_DATA_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_FEED_DATA_ERROR, 0), /**< memcpy_s复制数据失败 */
    CML_CPU_SPC_RESIZE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SPC_RESIZE_ERROR, 0), /**< SPC输出resize错误 */
    CML_CPU_CWRAPPER_NULLPTR_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_NULLPTR_ERROR, 0), /**< CWrapper输入错误 */
    CML_CPU_CWRAPPER_CREATE_CONTEXT_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATE_CONTEXT_ERROR, 0), /**< CWrapper实例化Context错误 */
    CML_CPU_CWRAPPER_LOAD_MODEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_LOAD_MODEL_ERROR, 0), /**< CWrapper加载模型错误 */
    CML_CPU_CWRAPPER_MODEL_TYPE_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_MODEL_TYPE_ERROR, 0), /**< CWrapper模型类型错误 */
    CML_CPU_CWRAPPER_CREATE_NDDATA_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATE_NDDATA_ERROR, 0), /**< CWrapper实例化输入错误 */
    CML_CPU_CWRAPPER_RESIZE_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_RESIZE_ERROR, 0), /**< CWrapper输入resize错误 */
    CML_CPU_CWRAPPER_CREATESESSION_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATESESSION_ERROR, 0), /**< CWrapper创建会话错误 */
    CML_CPU_CWRAPPER_INPUTDIM_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_INPUTDIM_ERROR, 0), /**< CWrapper输入数据维度错误 */
    CML_CPU_CWRAPPER_CREATE_SESSIONOUTPUT_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATE_SESSIONOUTPUT_ERROR, 0), /**< CWrapper实例化输出错误 */
    CML_CPU_XGBOOST_INIT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_XGBOOST_INIT_ERROR, 0), /**< XGBoost Init Failed */
    CML_CPU_XGBOOST_PARAMETER_CHECK_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_XGBOOST_PARAMETER_CHECK_ERROR, 0), /**< XGBoost Parameter check Failed */
    CML_SAVE_FILEPATH_INVALID =
        MAKE_ERRORCODE(MOD_CML, CPU_XGBOOST_PATH_CHECK_ERROR, 0),                    /**< XGBoost Path check Failed */
    CML_CPU_XGBOOST_SAVE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_XGBOOST_SAVE_ERROR, 0), /**< XGBoost Model Save Failed */
    CML_CPU_KNNC_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_KNNC_CHECKPARAMS_ERROR, 0), /**< KNNC参数错误 */
    CML_CPU_KNNC_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KNNC_RESIZERESULTS_ERROR, 0), /**< KNNC输出resize错误 */
    CML_CPU_LOGISTR_CHECKPARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LOGISTR_CHECKPARAMS_ERROR, 0), /**< LogistR输出参数检测错误 */
    CML_CPU_LOGISTR_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LOGISTR_RESIZERESULTS_ERROR, 0), /**< LogistR输出resize错误 */
    CML_CPU_LOGISTR_COMPUTE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LOGISTR_COMPUTE_ERROR, 0), /**< LogistR计算结果错误 */
    CML_CPU_LOGISTR_THREAD_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LOGISTR_THREAD_ERROR, 0), /**< LogistR线程执行失败 */
    CML_CPU_LOGISTR_FIT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LOGISTR_FIT_ERROR, 0),       /**< LogistR训练失败 */
    CML_CPU_LOGISTR_SAVE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LOGISTR_SAVE_ERROR, 0),     /**< LogistR训练失败 */
    CML_CPU_LOGISTR_INIT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_LOGISTR_INIT_ERROR, 0),     /**< LogistR训练失败 */
    CML_CPU_XGBOOST_EVAL_DATA_CHECK_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_XGBOOST_EVAL_DATA_CHECK_ERROR, 0), /* XGBoost eval data check Failed */
    CML_CPU_XGBOOST_UPDATE_MODEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_XGBOOST_UPDATE_MODEL_ERROR, 0), /* XGBoost model update Failed */
    CML_CPU_XGBOOST_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_XGBOOST_RESIZERESULTS_ERROR, 0),                   /* XGBoost resize Failed */
    CML_CPU_DATA_FORMAT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_DATA_FORMAT_ERROR, 0),     /* data Formate error */
    CML_CPU_RFR_SERIALIZE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_RFR_SERIALIZE_ERROR, 0), /* RFR序列化模型错误 */
    CML_CPU_RFC_SERIALIZE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_RFC_SERIALIZE_ERROR, 0), /* RFR序列化模型错误 */
    CML_CPU_IFOREST_SERIALIZE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_IFOREST_SERIALIZE_ERROR, 0), /* RFR序列化模型错误 */
    CML_CPU_ELASTICNET_CHECKFITPARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_ELASTICNET_CHECKFITPARAMS_ERROR, 0), /* ElasticNet训练数据错误 */
    CML_CPU_OCSVC_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_OCSVC_CHECKPARAMS_ERROR, 0), /* OCSVC参数错误 */
    CML_CPU_OCSVC_RESIZERESULTS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_OCSVC_RESIZERESULTS_ERROR, 0), /* OCSVC输出resize错误 */
    CML_CPU_OCSVC_GETCOMPUTESAMPLES_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_OCSVC_GETCOMPUTESAMPLES_ERROR, 0), /* OCSVC分割数据错误 */
    CML_CPU_OCSVC_COMPUTERBFKERNEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_OCSVC_COMPUTERBFKERNEL_ERROR, 0), /* OCSVC高斯核计算错误 */
    CML_CPU_IFOREST_BUILD_FEATURE_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_IFOREST_BUILD_FEATURE_ERROR, 0),     /* IForest构造特征错误 */
    CML_SAVE_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, SAVE_MODEL_ERROR, 0), /* 保存模型错误 */
    CML_POLINOMIAL_FEATURES_CHECK_PARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, POLINOMIAL_FEATURES_CHECK_PARAMS_ERROR, 0), /* PolynomialFeatures参数检查失败 */
    CML_POLINOMIAL_FEATURES_CREATE_MEMORY_ERROR =
        MAKE_ERRORCODE(MOD_CML, POLINOMIAL_FEATURES_CREATE_MEMORY_ERROR, 0), /* PolynomialFeatures创建内存失败 */
    CML_DUMP_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, DUMP_MODEL_ERROR, 0),     /* 保存模型错误 */
    CML_STANDARD_SCALER_CHECK_PARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, STANDARD_SCALER_CHECK_PARAMS_ERROR, 0), /* StandardScaler参数检查失败 */
    CML_CPU_GMM_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GMM_CHECKPARAMS_ERROR, 0),     /* GMM参数错误 */
    CML_CPU_GMM_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GMM_RESIZERESULTS_ERROR, 0), /* GMM输出resize错误 */
    CML_CPU_BLAS_DGEMM_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_BLAS_DGEMM_ERROR, 0),               /* Dgemm接口失败 */
    CML_CPU_GMM_ESTIMATE_PROB_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GMM_ESTIMATE_PROB_ERROR, 0), /* GMM预测概率失败 */
    CML_CPU_GPR_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GPR_CHECKPARAMS_ERROR, 0),     /* GPR参数错误 */
    CML_CPU_GPR_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GPR_RESIZERESULTS_ERROR, 0), /* GPR输出resize错误 */
    CML_CPU_GPR_CREATE_KERNEL_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GPR_CREATE_KERNEL_ERROR, 0), /* GPR创建kernel错误 */
    CML_CPU_GPR_CHECK_FIT_PARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_GPR_CHECK_FIT_PARAMS_ERROR, 0),            /* GPR训练参数错误 */
    CML_CPU_GPR_TRAIN_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GPR_TRAIN_ERROR, 0), /* GPR训练错误 */
    CML_CPU_GPR_BLAS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GPR_BLAS_ERROR, 0),   /* GPR blas计算错误 */
    CML_CPU_RF_QUANTIZE_CREATE_MEMORY_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_RF_QUANTIZE_CREATE_MEMORY_ERROR, 0), /* RF量化分配内存失败 */
    CML_CPU_AHC_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_AHC_CHECKPARAMS_ERROR, 0),     /* AHC参数错误 */
    CML_CPU_AHC_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_AHC_RESIZERESULTS_ERROR, 0), /* AHC输出resize错误 */
    CML_CPU_KNNC_CHECK_FITPARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KNNC_CHECK_FITPARAMS_ERROR, 0), /* knnc训练数据校验错误 */
    CML_CPU_INIT_BINARYTREE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_INIT_BINARYTREE_ERROR, 0), /* 初始化binaryTree错误 */
    CML_CPU_KNNC_CHECK_FITMODEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_KNNC_CHECK_FITMODEL_ERROR, 0), /* knnc训练模型校验错误 */
    CML_CPU_CREATE_BINARYTREE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_CREATE_BINARYTREE_ERROR, 0), /* 创建binaryTree失败 */
    CML_CPU_CHMOD_FILE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_CHMOD_FILE_ERROR, 0), /* 设置文件权限失败 */
    CML_CPU_CWRAPPER_CREATE_TRAIN_DATA_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATE_TRAIN_DATA_ERROR, 0), /* 创建训练数据错误 */
    CML_CPU_CWRAPPER_CREATE_TRAIN_TARGET_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATE_TRAIN_TARGET_ERROR, 0), /* 创建训练目标错误 */
    CML_CPU_CWRAPPER_CREATE_EVAL_DATA_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATE_EVAL_DATA_ERROR, 0), /* 创建验证数据错误 */
    CML_CPU_CWRAPPER_CREATE_EVAL_TARGET_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_CREATE_EVAL_TARGET_ERROR, 0),           /* 创建验证目标错误 */
    CML_CPU_C_CREATE_GPR_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_C_CREATE_GPR_ERROR, 0), /* 创建GPR对象失败 */
    CML_CPU_C_GPR_LOAD_MODEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_C_GPR_LOAD_MODEL_ERROR, 0), /* GPR生成interpreter失败 */
    CML_CPU_C_GPR_CREATE_SESSION_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_C_GPR_CREATE_SESSION_ERROR, 0), /* GPR创建session失败 */
    CML_CPU_CWRAPPER_UNPACK_MODEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_UNPACK_MODEL_ERROR, 0), /* cwrapper从内存反序列化ModelT失败 */
    CML_CPU_CWRAPPER_INVALID_BUFFER = MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_INVALID_BUFFER, 0), /* cwrapper无效buffer */
    CML_CPU_CWRAPPER_MODEL_BUFFER_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_CWRAPPER_MODEL_BUFFER_ERROR, 0),             /* cwrapper创建模型buffer失败 */
    CML_CPU_GBC_INIT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_INIT_ERROR, 0),     /* GBC INIT 失败 */
    CML_CPU_GBC_MEMORY_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_MEMORY_ERROR, 0), /* GBC 内存操作失败 */
    CML_CPU_GBC_GET_RAW_PRED_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_GET_RAW_PRED_ERROR, 0), /* GBC 获取初始权值失败 */
    CML_CPU_GBC_WARM_START_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_WARM_START_ERROR, 0), /* GBC 热启动失败 */
    CML_CPU_GBC_TRAIN_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_TRAIN_ERROR, 0),           /* GBC 训练过程失败 */
    CML_CPU_GBC_GET_RESIDUAL_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBC_GET_RESIDUAL_ERROR, 0), /* GBC 获取残差失败 */
    CML_CPU_GBDT_COMPRESS_TREE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBDT_COMPRESS_TREE_ERROR, 0), /* GBC 获取残差失败 */
    CML_CPU_GBR_GET_RAW_PRED_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBR_GET_RAW_PRED_ERROR, 0), /* GBR 获取初始估值失败 */
    CML_CPU_GBR_WARM_START_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBR_WARM_START_ERROR, 0),     /* GBR 热启动失败 */
    CML_CPU_GBR_TRAIN_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBR_TRAIN_ERROR, 0),               /* GBR 训练失败 */
    CML_CPU_GBR_GET_RESIDUAL_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GBR_GET_RESIDUAL_ERROR, 0), /* GBR 获取残差失败 */
    CML_CPU_C_CREATE_XGBOOST_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_C_CREATE_XGBOOST_ERROR, 0), /* 创建XGBOOST对象失败 */
    CML_CPU_C_XGBOOST_LOAD_MODEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_C_XGBOOST_LOAD_MODEL_ERROR, 0), /* XGBOOST生成interpreter失败 */
    CML_CPU_C_XGBOOST_CREATE_SESSION_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_C_XGBOOST_CREATE_SESSION_ERROR, 0), /* XGBOOST创建session失败 */
    CML_CPU_GNB_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GNB_CHECKPARAMS_ERROR, 0),   /* GNB参数检验错误 */
    CML_CPU_GNB_RESIZERESULT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GNB_RESIZERESULT_ERROR, 0), /* GNB输出resize错误 */
    CML_CPU_GNB_SAVE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_GNB_SAVE_ERROR, 0),       /* GNB中间产物save错误 */
    CML_CPU_GNB_MEMORY_NULL = MAKE_ERRORCODE(MOD_CML, CPU_GNB_MEMORY_NULL, 0),     /* GNB申请内存失败 */
    CML_CPU_OCSVC_SOLVE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_OCSVC_SOLVE_ERROR, 0), /* OCSVC训练求解错误 */
    CML_CPU_VALUE_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_VALUE_ERROR, 0),             /* nan或inf错误 */
    CML_CPU_LOGIST_REG_LIBLINEAR_PARAM_ERR = MAKE_ERRORCODE(MOD_CML, 0x9B, 0), /* LogistReg-liblinear求解器参数错误 */
    CML_CPU_LOGIST_REG_LIBLINEAR_MEM_ERR = MAKE_ERRORCODE(MOD_CML, 0x9C, 0), /* LogistReg-liblinear求解时内存不足 */
    CML_CPU_LOGIST_REG_LIBLINEAR_SOLVER_TYPE_ERR =
        MAKE_ERRORCODE(MOD_CML, 0x9D, 0), /* LogistReg-liblinear求解器不支持 */
    CML_CPU_LOGIST_REG_LIBLINEAR_SOLVE_L1RLR_FAIL =
        MAKE_ERRORCODE(MOD_CML, 0x9E, 0), /* LogistReg-liblinear求解L1RLR失败 */
    CML_CPU_BONSAI_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0x9F, 0), /* Bonsai参数检查失败 */
    CML_CPU_BONSAI_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xA1, 0), /* Bonsai输出resize错误 */
    CML_CPU_BONSAI_SGEMM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xA0, 0), /* Bonsai矩阵乘矩阵计算错误 */
    CML_CPU_BONSAI_COMPUTELABEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xA2, 0), /* Bonsai label计算错误 */
    CML_CPU_BONSAI_ARMIJO_UPDATE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xA3, 0), /* Bonsai armijo计算错误 */
    CML_CPU_BONSAI_PRINT_TRAIN_INFO_ERROR = MAKE_ERRORCODE(MOD_CML, 0xA4, 0), /* Bonsai print trainInfo错误 */
    CML_CPU_BONSAI_COMPUTE_GRADL_ALL_PARAMS_ERROR =
        MAKE_ERRORCODE(MOD_CML, 0xA5, 0), /* Bonsai compute grad all params计算错误 */
    CML_CPU_SVR_CHECK_FITMODEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_SVR_CHECK_FITMODEL_ERROR, 0), /* svr训练模型校验错误 */
    CML_CPU_LINEARSVC_CREATE_KERNEL_ERROR =
        MAKE_ERRORCODE(MOD_CML, CPU_LINEARSVC_CREATE_KERNEL_ERROR, 0), /* linearSVC创建kernel失败 */
    CML_CPU_OCSVC_CREATE_KERNEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xA9, 0), /* OCSVC创建kernel失败 */
    CML_CPU_OCSVC_CREATE_SOLVER_ERROR = MAKE_ERRORCODE(MOD_CML, 0xAA, 0), /* OCSVC初始化kernel失败 */
    CML_CPU_SVC_CREATE_KERNEL_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_SVC_CREATE_KERNEL_ERROR, 0), /* SVC创建kernel失败 */
    CML_CPU_SVR_CREATE_KERNEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xAD, 0), /* SVR创建kernel失败 */
    CML_CPU_SVR_CREATE_SOLVER_ERROR = MAKE_ERRORCODE(MOD_CML, 0xAE, 0), /* SVR初始化kernel失败 */
    CML_CPU_SVR_SOLVE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xAF, 0),                 /* SVR求解失败 */
    CML_CPU_SVR_CHECK_FITPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB0, 0), /* SVR校验训练参数失败 */
    CML_CPU_SVR_GETCOMPUTESAMPLES_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB1, 0), /* SVR分割数据错误 */
    CML_CPU_SVR_COMPUTEKERNEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB2, 0), /* SVR计算kernel失败 */
    CML_CPU_SVR_CHECK_PARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB3, 0), /* SVR校验推理参数失败 */
    CML_CPU_SVR_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB4, 0), /* SVR输出resize失败 */
    CML_TRAIN_TEST_SPLIT_CHECK_INPUT_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB5, 0), /* TrainTestSplit数据错误 */
    CML_TRAIN_TEST_SPLIT_CHECK_PARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB6, 0), /* TrainTestSplit参数错误 */
    CML_TRAIN_TEST_SPLIT_RUNTIME_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB7, 0), /* TrainTestSplit动态数组申请错误 */
    CML_CPU_MINIBATCHKMEANS_CHECKFITPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB8, 0), /* MiniBatchKMeans训练数据校验失败 */
    CML_CPU_MINIBATCHKMEANS_INITCENTER_ERROR = MAKE_ERRORCODE(MOD_CML, 0xB9, 0), /* MiniBatchKMeans初始化中心点失败 */
    CML_CPU_MINIBATCHKMEANS_UPDATECENTER_ERROR = MAKE_ERRORCODE(MOD_CML, 0xBA, 0), /* MiniBatchKMeans更新中心点失败 */
    CML_CPU_MINIBATCHKMEANS_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xBB, 0), /* MiniBatchKMeans推理数据校验失败 */
    CML_CPU_MINIBATCHKMEANS_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xBC, 0), /* MiniBatchKMeans输出resize失败 */
    CML_CROSS_VALIDATION_CHECK_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xBD, 0), /* 交叉验证参数校验错误 */
    CML_CROSS_VALIDATION_TRAIN_TEST_SPLIT_ERROR = MAKE_ERRORCODE(MOD_CML, 0xBE, 0), /* 交叉验证数据切分错误 */
    CML_CROSS_VALIDATION_CALC_SCORES_ERROR = MAKE_ERRORCODE(MOD_CML, 0xBF, 0), /* 交叉验证训练推理错误 */
    CML_CROSS_VALIDATION_LOAD_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC0, 0), /* 交叉验证加载模型错误 */
    CML_SVR_GRID_SEARCH_CV_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC1, 0), /* svr网格搜索执行交叉验证错误 */
    CML_SVR_GRID_SEARCH_SET_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC2, 0), /* svr网格搜索设置参数错误 */
    CML_SVR_GRID_SEARCH_LOAD_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC3, 0), /* svr网格搜索加载模型错误 */
    CML_SVR_GRID_SEARCH_PROCESS_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC4, 0), /* svr网格搜索处理超参错误 */
    CML_SVR_GRID_SEARCH_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC5, 0), /* svr网格搜索参数错误 */
    CML_RFR_GRID_SEARCH_CV_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC6, 0), /* rfr网格搜索执行交叉验证错误 */
    CML_RFR_GRID_SEARCH_SET_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC7, 0), /* rfr网格搜索设置参数错误 */
    CML_RFR_GRID_SEARCH_LOAD_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC8, 0), /* rfr网格搜索加载模型错误 */
    CML_RFR_GRID_SEARCH_PROCESS_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xC9, 0), /* rfr网格搜索处理超参错误 */
    CML_RFR_GRID_SEARCH_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xCA, 0), /* rfr网格搜索参数错误 */
    CML_GBR_GET_SUBSAMPLE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xCC, 0), /* GBR获取subSample失败 */
    CML_RFR_FEATURE_IMPORTANCE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xCD, 0), /* RFR FeatureImportance求解失败 */
    CML_CPU_MINMAXSCALER_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xCE, 0), /* MinMaxScaler参数错误 */
    CML_GBR_GRID_SEARCH_CV_ERROR = MAKE_ERRORCODE(MOD_CML, 0xCF, 0), /* gbr网格搜索执行交叉验证错误 */
    CML_GBR_GRID_SEARCH_SET_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD0, 0), /* gbr网格搜索设置参数错误 */
    CML_GBR_GRID_SEARCH_LOAD_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD1, 0), /* gbr网格搜索加载模型错误 */
    CML_GBR_GRID_SEARCH_PROCESS_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD2, 0), /* gbr网格搜索处理超参错误 */
    CML_GBR_GRID_SEARCH_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD3, 0), /* gbr网格搜索参数错误 */
    CML_GBR_FEATURE_IMPORTANCE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD4, 0), /* GBR FeatureImportance求解失败 */
    CML_RIDGE_GRID_SEARCH_CV_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD5, 0), /* ridge网格搜索执行交叉验证错误 */
    CML_RIDGE_GRID_SEARCH_SET_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD6, 0), /* ridge网格搜索设置参数错误 */
    CML_RIDGE_GRID_SEARCH_LOAD_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD7, 0), /* ridge网格搜索加载模型错误 */
    CML_RIDGE_GRID_SEARCH_PROCESS_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD8, 0), /* ridge网格搜索处理超参错误 */
    CML_RIDGE_GRID_SEARCH_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xD9, 0), /* ridge网格搜索参数错误 */
    CML_CPU_RIDGE_CHECKFITPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xDA, 0), /* ridge训练数据错误 */
    CML_ENET_GRID_SEARCH_CV_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE0, 0), /* elasticNet网格搜索执行交叉验证错误 */
    CML_ENET_GRID_SEARCH_SET_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE1, 0), /* elasticNet网格搜索设置参数错误 */
    CML_ENET_GRID_SEARCH_LOAD_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE2, 0), /* elasticNet网格搜索加载模型错误 */
    CML_ENET_GRID_SEARCH_PROCESS_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE3, 0), /* elasticNet网格搜索处理超参错误 */
    CML_ENET_GRID_SEARCH_PARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE4, 0), /* elasticNet网格搜索参数错误 */
    CML_CPU_CT_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE5, 0), /* CompressedTree输出resize失败 */
    CML_CPU_CT_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE6, 0), /* CompressedTree检验参数失败 */
    CML_CPU_CT_DECODE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE7, 0), /* CompressedTree解码失败 */
    CML_CPU_CT_SET_DECODER_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE8, 0), /* CompressedTree设置CPU_CT_SET_DECODER_ERRORe失败 */
    CML_CPU_CT_CTTREE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xE9, 0), /* CompressedTree ctTree校验失败 */
    CML_CPU_CT_INPUTDATA_ERROR = MAKE_ERRORCODE(MOD_CML, 0xEA, 0), /* CompressedTree 输入数据校验失败 */
    CML_CPU_CT_CTREATE_COMPRESS_ALGORITHM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xEB, 0), /* CompressedTree 创建Decoder失败 */
    CML_CPU_KNNR_MEMORY_NULL = MAKE_ERRORCODE(MOD_CML, 0xEC, 0), /* knn回归申请内存失败 */
    CML_CPU_KNNR_CHECK_FITPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xED, 0), /* knn回归检查训练参数失败 */
    CML_CPU_KNNR_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xEE, 0), /* knn回归检查推理流程参数失败 */
    CML_CPU_KNNR_RESIZERESULTS_ERROR = MAKE_ERRORCODE(MOD_CML, 0xEF, 0), /* knn回归resizeresult失败 */
    CML_TREE_COMPRESSOR_MODEL_TYPE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF0, 0), /* TreeCompressor 创建Parser失败 */
    CML_TREE_COMPRESSOR_PARSE_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF1, 0), /* TreeCompressor Parse模型失败 */
    CML_TREE_COMPRESSOR_ENCODE_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF2, 0), /* TreeCompressor Encode模型失败 */
    CML_TREE_COMPRESSOR_GET_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF3, 0), /* TreeCompressor 获取模型失败 */
    CML_TREE_COMPRESSOR_CREATE_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF4, 0), /* TreeCompressor 获取模型失败 */
    CML_CPU_GRF_CHECKMODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF6, 0), /* GlobalRefinedForest检查模型失败 */
    CML_CPU_GRF_CHECKPARAM_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF7, 0), /* GlobalRefinedForest检查参数失败 */
    CML_CPU_PRUNING_CONTROLLER_UPDATEINFO_ERROR =
        MAKE_ERRORCODE(MOD_CML, 0xF8, 0), /* Pruning controller UpdateInfo校验失败 */
    CML_CPU_PRUNING_CONTROLLER_INIT_ERROR = MAKE_ERRORCODE(MOD_CML, 0xF9, 0), /* Pruning controller Init校验失败 */
    CML_CPU_PRUNING_CONTROLLER_PRUNING_IMPL_ERROR =
        MAKE_ERRORCODE(MOD_CML, 0xFB, 0), /* Pruning controller pruningImpl失败 */
    CML_CPU_PRUNING_CONTROLLER_UPDATE_ERROR = MAKE_ERRORCODE(MOD_CML, 0xFC, 0), /* Pruning controller update失败 */
    CML_CPU_PRUNING_CONTROLLER_CREATE_OUTPUT_ERROR =
        MAKE_ERRORCODE(MOD_CML, 0xFD, 0), /* Pruning controller create output失败 */
    CML_CPU_GRF_OPTIMIZER_INIT_ERROR = MAKE_ERRORCODE(MOD_CML, 0xFE, 0), /* GlobalRefinedForest optimizer init 失败 */
    CML_CPU_PRUNING_CONTROLLER_PRUNING_HELPER_ERROR =
        MAKE_ERRORCODE(MOD_CML, 0xFF, 0), /* Pruning controller PruningHelper失败 */
    CML_CPU_GRF_INVALID_MODEL_ERROR = MAKE_ERRORCODE(MOD_CML, 0x100, 0), /* GlobalRefinedForest初始化失败 */
    CML_CPU_RRCT_MEMORY_NULL = MAKE_ERRORCODE(MOD_CML, 0x101, 0), /* RRCT内存申请失败 */
    CML_CPU_RRCT_TREE_CREATE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x102, 0), /* RRCT树创建失败 */
    CML_CPU_RRCT_EXCEED_MAX_DEPTH_ERROR = MAKE_ERRORCODE(MOD_CML, 0x103, 0), /* RRCT超过最大递归深度 */
    CML_CPU_RRCT_INSERT_NODE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x104, 0), /* RRCT节点插入失败 */
    CML_CPU_RRCT_NODE_ATTR_ERROR = MAKE_ERRORCODE(MOD_CML, 0x105, 0), /* RRCT节点属性错误 */
    CML_CPU_RRCT_FORGET_NODE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x106, 0), /* RRCT节点删除失败 */
    CML_CPU_RRCT_BEHAVIOR_ERROR = MAKE_ERRORCODE(MOD_CML, 0x107, 0), /* RRCTbehavior参数错误 */
    CML_CPU_RRCT_LOAD_ERROR = MAKE_ERRORCODE(MOD_CML, 0x108, 0), /* RRCT算法模型加载失败 */
    CML_CPU_RRCT_SAVE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x109, 0), /* RRCT算法模型保存失败 */
    CML_CPU_RRCT_INPUT_ERROR = MAKE_ERRORCODE(MOD_CML, 0x10A, 0), /* RRCT算法输入错误 */
    CML_CPU_RRCT_RESIZE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x10B, 0), /* RRCT算法数据Resize错误 */
    CML_CPU_CATBOOSTREG_RESIZE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x10C, 0),
    CML_CPU_CATBOOSTREG_CHECK_DATA_ERROR = MAKE_ERRORCODE(MOD_CML, 0x10D, 0),
    CML_CPU_NORMALIZER_CHECKINPUT_ERROR = MAKE_ERRORCODE(MOD_CML, 0x10E, 0), /* Normalizer输入数据错误 */
    CML_CPU_OBF_MEMORY_NULL = MAKE_ERRORCODE(MOD_CML, 0x10F, 0), /* Obfuscator内存申请失败 */
    CML_CPU_OBF_OBFUSCATE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x110, 0), /* Obfuscator混淆失败 */
    CML_CPU_OBF_DEOBFUSCATE_ERROR = MAKE_ERRORCODE(MOD_CML, 0x111, 0), /* Obfuscator解混淆失败 */
    CML_CPU_MAXABSSCALER_CHECKPARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, 0x112, 0), /* MaxAbsScaler参数错误 */
    CML_CPU_MAXABSSCALER_INPUTDATA_ERROR = MAKE_ERRORCODE(MOD_CML, 0x113, 0), /* MaxAbsScaler输入数据错误 */
    CML_CPU_BRR_PARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_BRR_PARAMS_ERROR, 0), /* BRR参数校验错误 */
    CML_CPU_BRR_RESULT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_BRR_RESULT_ERROR, 0), /* BRR结果错误 */
    CML_CPU_BRR_MEMORY_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_BRR_MEMORY_ERROR, 0), /* BRR内存错误 */
    CML_CPU_BRR_INITIAL_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_BRR_INITIAL_ERROR, 0), /* BRR初始化错误 */
    CML_CPU_BRR_FIT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_BRR_FIT_ERROR, 0), /* BRR运行错误 */
    CML_CPU_BRR_PREDICT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_BRR_PREDICT_ERROR, 0), /* BRR运行错误 */
    CML_RFC_FEATURE_IMPORTANCE_ERROR =
        MAKE_ERRORCODE(MOD_CML, RFC_FEATURE_IMPORTANCE_ERROR, 0), /* RFC FeatureImportance求解失败 */
    CML_CPU_PLSR_PARAMS_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PLSR_PARAMS_ERROR, 0), /* PLSR 参数错误 */
    CML_CPU_PLSR_FIT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PLSR_FIT_ERROR, 0), /* PLSR 运行错误 */
    CML_CPU_PLSR_PREDICT_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PLSR_PREDICT_ERROR, 0), /* PLSR 推理错误 */
    CML_CPU_PLSR_TRANSFORM_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PLSR_TRANSFORM_ERROR, 0), /* PLSR 转换错误 */
    CML_CPU_PLSR_INITIAL_ERROR = MAKE_ERRORCODE(MOD_CML, CPU_PLSR_INITIAL_ERROR, 0), /* PLSR 初始化错误 */
};
#ifdef __cplusplus
}
#endif
#endif